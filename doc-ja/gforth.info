This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306274
gforth.info-3: 603777
gforth.info-4: 909049
gforth.info-5: 1231676

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17670
Ref: Goals-Footnote-119871
Node: Stability Goals20072
Node: Gforth Environment22032
Node: Invoking Gforth22928
Node: Leaving Gforth38638
Node: Help on Gforth39307
Node: Command-line editing40603
Ref: Command-line editing-Footnote-144045
Node: Environment variables44136
Node: Gforth Files46469
Node: Gforth in pipes47445
Node: Startup speed50025
Node: Tutorial54934
Node: Starting Gforth Tutorial57839
Node: Syntax Tutorial58395
Node: Crash Course Tutorial59668
Node: Stack Tutorial60905
Node: Arithmetics Tutorial61795
Ref: Arithmetics Tutorial-Footnote-163132
Node: Stack Manipulation Tutorial63257
Node: Using files for Forth code Tutorial65053
Node: Comments Tutorial67241
Ref: Comments Tutorial-Footnote-168801
Node: Colon Definitions Tutorial68904
Node: Decompilation Tutorial71008
Node: Stack-Effect Comments Tutorial71659
Node: Types Tutorial76320
Node: Factoring Tutorial78879
Node: Designing the stack effect Tutorial80747
Node: Local Variables Tutorial84159
Node: Conditional execution Tutorial86165
Node: Flags and Comparisons Tutorial87926
Node: General Loops Tutorial91619
Node: Counted loops Tutorial94223
Node: Recursion Tutorial95959
Node: Leaving definitions or loops Tutorial97375
Node: Return Stack Tutorial98426
Node: Memory Tutorial101148
Node: Characters and Strings Tutorial105208
Node: Alignment Tutorial107248
Node: Floating Point Tutorial109025
Node: Files Tutorial113902
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118205
Node: Execution Tokens Tutorial121658
Node: Exceptions Tutorial125837
Node: Defining Words Tutorial128206
Node: Arrays and Records Tutorial131807
Node: POSTPONE Tutorial133735
Node: Literal Tutorial136411
Node: Advanced macros Tutorial137497
Node: Compilation Tokens Tutorial140141
Node: Wordlists and Search Order Tutorial141656
Node: Introduction145594
Node: Introducing the Text Interpreter148362
Ref: Introducing the Text Interpreter-Footnote-1155577
Node: Stacks and Postfix notation155840
Node: Your first definition168822
Ref: Your first definition-Footnote-1173654
Node: How does that work?173856
Node: Forth is written in Forth186193
Ref: Forth is written in Forth-Footnote-1188657
Ref: Forth is written in Forth-Footnote-2188757
Node: Review - elements of a Forth system188811
Node: Where to go next191269
Node: Exercises193703
Node: Literals in source code194114
Node: Words202610
Node: Notation203429
Node: Case insensitivity209741
Node: Comments212177
Node: Boolean Flags213750
Node: Arithmetic214919
Node: Single precision216165
Node: Double precision217500
Node: Mixed precision219355
Node: Integer division219650
Node: Two-stage integer division227199
Node: Bitwise operations233683
Node: Numeric comparison238454
Node: Floating Point241470
Ref: Floating Point-Footnote-1248977
Node: Stack Manipulation249216
Node: Data stack250081
Node: Floating point stack251648
Node: Return stack252533
Node: Locals stack253872
Node: Stack pointer manipulation254212
Node: Memory255435
Node: Memory model255919
Ref: Memory model-Footnote-1257662
Node: Dictionary allocation257944
Node: Heap Allocation263964
Node: Memory Access268753
Node: Special Memory Accesses270574
Node: Address arithmetic277010
Node: Memory Blocks284396
Node: Strings and Characters288144
Node: Characters288450
Node: String representations290501
Node: String and character literals292310
Node: String words298347
Node: $tring words306274
Node: Counted string words316350
Node: Control Structures318251
Ref: Control Structures-Footnote-1319067
Node: Selection319216
Node: Simple Loops322957
Node: Counted Loops323895
Ref: Counted Loops-Footnote-1337997
Node: BEGIN loops with multiple exits338083
Node: General control structures with CASE340493
Ref: General control structures with CASE-Footnote-1344233
Node: Arbitrary control structures344484
Node: Calls and returns352576
Node: Exception Handling355489
Node: Defining Words370868
Node: CREATE371702
Node: Variables374640
Node: Constants377314
Ref: Constants-Footnote-1381519
Node: Values381898
Node: Varues383754
Node: Colon Definitions385442
Node: Anonymous Definitions389561
Node: Quotations391735
Node: Supplying names393164
Node: User-defined Defining Words394058
Node: User-defined defining words with colon definitions394849
Ref: User-defined defining words with colon definitions-Footnote-1398109
Node: User-defined defining words using CREATE398461
Ref: User-defined defining words using CREATE-Footnote-1404740
Ref: User-defined defining words using CREATE-Footnote-2404833
Node: CREATE..DOES> applications405100
Node: CREATE..DOES> details406910
Node: Advanced does> usage example410011
Node: User-defined TO and DEFER@415931
Node: User-defined compile-comma419375
Node: Creating from a prototype425602
Node: Making a word current428641
Node: Const-does>429779
Node: Deferred Words431318
Node: Forward438021
Node: Aliases439010
Node: Interpretation and Compilation Semantics441150
Ref: Interpretation and Compilation Semantics-Footnote-1445438
Ref: Interpretation and Compilation Semantics-Footnote-2445523
Node: Combined words445753
Ref: state-smartness448023
Ref: Combined words-Footnote-1449333
Node: Tokens for Words449572
Node: Execution token450130
Ref: Execution token-Footnote-1455681
Node: Name token456214
Node: Compilation token463154
Ref: Compilation token-Footnote-1465643
Node: Compiling words465986
Node: Literals466901
Node: Macros471141
Ref: Macros-Footnote-1482715
Node: The Text Interpreter483031
Ref: The Text Interpreter-Footnote-1491980
Ref: The Text Interpreter-Footnote-2492086
Ref: The Text Interpreter-Footnote-3492432
Ref: The Text Interpreter-Footnote-4492666
Ref: The Text Interpreter-Footnote-5492723
Node: Input Sources492817
Node: Number Conversion496085
Node: Interpret/Compile states499420
Node: Interpreter Directives500562
Node: Recognizers506303
Node: Default Recognizers507426
Node: Dealing with existing Recognizers512631
Node: Defining Recognizers521929
Node: Text Interpreter Hooks522172
Node: The Input Stream523031
Node: Word Lists528892
Node: Vocabularies540298
Node: Why use word lists?541728
Node: Word list example545224
Node: Environmental Queries545981
Node: Files557087
Node: Forth source files557805
Node: General files562279
Node: Redirection568084
Node: Directories570731
Node: Search Paths575517
Node: Source Search Paths578587
Node: General Search Paths579715
Node: Blocks582680
Ref: Blocks-Footnote-1597925
Node: Other I/O598510
Node: Simple numeric output599296
Node: Formatted numeric output603777
Node: Floating-point output610495
Node: Miscellaneous output615256
Node: Displaying characters and strings618352
Node: Terminal output619057
Node: Single-key input621643
Node: Line input and conversion628435
Node: Pipes632068
Node: Xchars and Unicode633054
Node: i18n and l10n639101
Node: Substitute642401
Node: CSV Reader644517
Node: OS command line arguments645019
Node: Locals647284
Node: Gforth locals648234
Node: Locals definition words653494
Node: Where are locals visible by name?657391
Ref: Where are locals visible by name?-Footnote-1664630
Node: How long do locals live?664729
Node: Locals programming style665591
Node: Locals implementation668303
Node: Closures675562
Node: Standard Forth locals680049
Node: Structures681600
Node: Why explicit structure support?682450
Node: Structure Usage685024
Ref: Structure Usage-Footnote-1688004
Node: Structure Naming Convention688288
Node: Structure Implementation689491
Node: Structure Glossary690820
Node: Forth200x Structures692846
Node: Object-oriented Forth695461
Node: Why object-oriented programming?696208
Node: Object-Oriented Terminology697571
Node: Objects699430
Node: Properties of the Objects model700575
Node: Basic Objects Usage702366
Node: The Objects base class704775
Node: Creating objects705265
Node: Object-Oriented Programming Style706067
Node: Class Binding707063
Node: Method conveniences709317
Ref: Method conveniences-Footnote-1711473
Node: Classes and Scoping711671
Node: Dividing classes713151
Node: Object Interfaces714405
Node: Objects Implementation716421
Ref: Objects Implementation-Footnote-1721288
Node: Objects Glossary721366
Node: OOF728213
Node: Properties of the OOF model728925
Node: Basic OOF Usage729981
Node: The OOF base class732291
Node: Class Declaration735814
Node: Class Implementation736911
Node: Mini-OOF737058
Node: Basic Mini-OOF Usage737549
Node: Mini-OOF Example738817
Node: Mini-OOF Implementation740364
Node: Mini-OOF2744428
Node: Comparison with other object models745696
Ref: Comparison with other object models-Footnote-1749374
Node: Regular Expressions749532
Node: Programming Tools756047
Node: Locating source code definitions756922
Node: Locating uses of a word760051
Node: Locating exception source762609
Node: Examining compiled code762939
Node: Examining data768616
Node: Forgetting words770984
Node: Debugging772331
Node: Assertions775571
Node: Singlestep Debugger779014
Node: Code Coverage782164
Node: Multitasker784991
Node: Pthreads785869
Node: Basic multi-tasking786669
Node: Task-local data790822
Node: Semaphores792640
Node: Hardware operations for multi-tasking794008
Node: Message queues795538
Node: Cilk796862
Node: C Interface798936
Node: Calling C Functions800530
Ref: Calling C Functions-Footnote-1803600
Node: Declaring C Functions803812
Node: Calling C function pointers807443
Node: Defining library interfaces809009
Node: Declaring OS-level libraries811779
Node: Callbacks813993
Node: C interface internals815702
Node: Low-Level C Interface Words817046
Node: Automated interface generation using SWIG817783
Node: Migrating the C interface from earlier Gforth820152
Node: Assembler and Code Words820842
Node: Assembler Definitions821570
Node: Common Assembler829859
Node: Common Disassembler832557
Node: 386 Assembler834252
Node: AMD64 Assembler838703
Node: Alpha Assembler846655
Node: MIPS assembler847620
Node: PowerPC assembler851045
Node: ARM Assembler852057
Node: Other assemblers856996
Node: Carnal words858298
Node: Header fields858692
Node: Header methods861724
Node: Threading Words869313
Node: Passing Commands to the OS875196
Node: Keeping track of Time876854
Node: Miscellaneous Words878265
Node: Error messages878863
Node: Tools882098
Node: Standard Report882451
Node: Stack depth changes884350
Node: Standard conformance886328
Node: The Core Words889246
Node: core-idef889617
Node: core-ambcond898002
Node: core-other909049
Node: The optional Block word set910376
Node: block-idef910788
Node: block-ambcond911216
Node: block-other912164
Node: The optional Double Number word set912525
Node: double-ambcond912835
Node: The optional Exception word set913109
Node: exception-idef913423
Node: The optional Facility word set914157
Node: facility-idef914518
Node: facility-ambcond915697
Node: The optional File-Access word set916098
Node: file-idef916470
Node: file-ambcond918857
Node: The optional Floating-Point word set920168
Node: floating-idef920544
Node: floating-ambcond921688
Node: The optional Locals word set924859
Node: locals-idef925225
Node: locals-ambcond925768
Node: The optional Memory-Allocation word set926271
Node: memory-idef926611
Node: The optional Programming-Tools word set927076
Node: programming-idef927475
Node: programming-ambcond928407
Node: The optional Search-Order word set929742
Node: search-idef930083
Node: search-ambcond930461
Node: Standard vs Extensions931227
Node: Model934574
Node: Integrating Gforth934806
Node: Emacs and Gforth938439
Node: Installing gforth.el940363
Node: Emacs Tags941150
Node: Hilighting942059
Node: Auto-Indentation943931
Node: Blocks Files945348
Node: Image Files946740
Node: Image Licensing Issues947691
Node: Image File Background948881
Ref: Image File Background-Footnote-1953173
Node: Non-Relocatable Image Files953289
Node: Data-Relocatable Image Files954280
Node: Fully Relocatable Image Files955189
Node: gforthmi956061
Node: cross.fs958791
Node: Stack and Dictionary Sizes959501
Node: Running Image Files960591
Ref: Running Image Files-Footnote-1963532
Node: Modifying the Startup Sequence963903
Node: Engine966570
Node: Portability967315
Node: Threading969994
Node: Scheduling971233
Node: Direct or Indirect Threaded?973035
Node: Dynamic Superinstructions975892
Node: DOES>980675
Node: Primitives981781
Node: Automatic Generation981979
Ref: Automatic Generation-Footnote-1985486
Node: TOS Optimization985657
Node: Produced code988358
Node: Performance988777
Node: Cross Compiler994179
Node: Using the Cross Compiler994694
Node: How the Cross Compiler Works999339
Node: MINOS2999520
Node: MINOS2 object framework999711
Node: actor methods1000206
Node: widget methods1001971
Node: MINOS2 tutorial1008630
Node: Bugs1009487
Node: Origin1010534
Node: Forth-related information1013690
Node: Licenses1014288
Node: GNU Free Documentation License1014606
Node: Copying1037187
Node: Word Index1074942
Node: Concept Index1231676

End Tag Table


Local Variables:
coding: utf-8
End:
