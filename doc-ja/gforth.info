This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306874
gforth.info-3: 602058
gforth.info-4: 902047
gforth.info-5: 1347231

Tag Table:
(Indirect)
Node: Top1457
Node: Goals18300
Ref: Goals-Footnote-120501
Node: Stability Goals20702
Node: Gforth Environment22662
Node: Invoking Gforth23558
Node: Leaving Gforth39268
Node: Help on Gforth39937
Node: Command-line editing41233
Ref: Command-line editing-Footnote-144675
Node: Environment variables44766
Node: Gforth Files47099
Node: Gforth in pipes48075
Node: Startup speed50655
Node: Tutorial55564
Node: Starting Gforth Tutorial58469
Node: Syntax Tutorial59025
Node: Crash Course Tutorial60298
Node: Stack Tutorial61535
Node: Arithmetics Tutorial62425
Ref: Arithmetics Tutorial-Footnote-163762
Node: Stack Manipulation Tutorial63887
Node: Using files for Forth code Tutorial65683
Node: Comments Tutorial67871
Ref: Comments Tutorial-Footnote-169431
Node: Colon Definitions Tutorial69534
Node: Decompilation Tutorial71638
Node: Stack-Effect Comments Tutorial72289
Node: Types Tutorial76950
Node: Factoring Tutorial79509
Node: Designing the stack effect Tutorial81377
Node: Local Variables Tutorial84789
Node: Conditional execution Tutorial86795
Node: Flags and Comparisons Tutorial88556
Node: General Loops Tutorial92249
Node: Counted loops Tutorial94853
Node: Recursion Tutorial96589
Node: Leaving definitions or loops Tutorial98005
Node: Return Stack Tutorial99056
Node: Memory Tutorial101778
Node: Characters and Strings Tutorial105838
Node: Alignment Tutorial107878
Node: Floating Point Tutorial109655
Node: Files Tutorial114528
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118831
Node: Execution Tokens Tutorial122284
Node: Exceptions Tutorial126463
Node: Defining Words Tutorial128832
Node: Arrays and Records Tutorial132433
Node: POSTPONE Tutorial134364
Node: Literal Tutorial137040
Node: Advanced macros Tutorial138126
Node: Compilation Tokens Tutorial140770
Node: Wordlists and Search Order Tutorial142285
Node: Introduction146226
Node: Introducing the Text Interpreter148994
Ref: Introducing the Text Interpreter-Footnote-1156246
Node: Stacks and Postfix notation156509
Node: Your first definition169491
Ref: Your first definition-Footnote-1174323
Node: How does that work?174525
Node: Forth is written in Forth186862
Ref: Forth is written in Forth-Footnote-1189326
Ref: Forth is written in Forth-Footnote-2189426
Node: Review - elements of a Forth system189480
Node: Where to go next191938
Node: Exercises194372
Node: Literals in source code194783
Node: Words203254
Node: Notation204073
Node: Case insensitivity210385
Node: Comments212821
Node: Boolean Flags214394
Node: Arithmetic215563
Node: Single precision216809
Node: Double precision218140
Node: Mixed precision219982
Node: Integer division220277
Node: Two-stage integer division227791
Node: Bitwise operations234275
Node: Numeric comparison239046
Node: Floating Point242062
Ref: Floating Point-Footnote-1249569
Node: Stack Manipulation249808
Node: Data stack250673
Node: Floating point stack252240
Node: Return stack253125
Node: Locals stack254464
Node: Stack pointer manipulation254804
Node: Memory256027
Node: Memory model256511
Ref: Memory model-Footnote-1258254
Node: Dictionary allocation258536
Node: Heap Allocation264556
Node: Memory Access269347
Node: Special Memory Accesses271168
Node: Address arithmetic277604
Node: Memory Blocks284990
Node: Strings and Characters288738
Node: Characters289046
Node: String representations291097
Node: String and character literals292908
Node: String words298945
Node: ＄tring words306874
Node: Counted string words317025
Node: Control Structures318928
Ref: Control Structures-Footnote-1319744
Node: Selection319893
Node: Simple Loops323634
Node: Counted Loops324572
Ref: Counted Loops-Footnote-1338921
Node: BEGIN loops with multiple exits339007
Node: General control structures with CASE341417
Ref: General control structures with CASE-Footnote-1345157
Node: Arbitrary control structures345408
Node: Calls and returns353819
Node: Exception Handling356734
Node: Defining Words372113
Node: CREATE372947
Node: Variables375885
Node: Constants378557
Ref: Constants-Footnote-1382762
Node: Values383141
Node: Varues384997
Node: Colon Definitions386685
Node: Anonymous Definitions390804
Node: Quotations392978
Node: Supplying names394417
Node: User-defined Defining Words395311
Node: User-defined defining words with colon definitions396102
Ref: User-defined defining words with colon definitions-Footnote-1399362
Node: User-defined defining words using CREATE399714
Ref: User-defined defining words using CREATE-Footnote-1405987
Ref: User-defined defining words using CREATE-Footnote-2406080
Node: CREATE..DOES> applications406347
Node: CREATE..DOES> details408157
Node: Advanced does> usage example411258
Node: User-defined TO and DEFER@417184
Node: User-defined compile-comma420628
Node: Creating from a prototype426855
Node: Making a word current429894
Node: Const-does>431032
Node: Deferred Words432571
Node: Forward439274
Node: Aliases440263
Node: Interpretation and Compilation Semantics442403
Ref: Interpretation and Compilation Semantics-Footnote-1446691
Ref: Interpretation and Compilation Semantics-Footnote-2446776
Node: Combined words447006
Ref: state-smartness449276
Ref: Combined words-Footnote-1450586
Node: Tokens for Words450825
Node: Execution token451383
Ref: Execution token-Footnote-1456934
Node: Name token457467
Node: Compilation token464407
Ref: Compilation token-Footnote-1466896
Node: Compiling words467239
Node: Literals468154
Node: Macros472394
Ref: Macros-Footnote-1483968
Node: The Text Interpreter484284
Ref: The Text Interpreter-Footnote-1493244
Ref: The Text Interpreter-Footnote-2493350
Ref: The Text Interpreter-Footnote-3493696
Ref: The Text Interpreter-Footnote-4493930
Ref: The Text Interpreter-Footnote-5493987
Node: Input Sources494081
Node: Number Conversion497343
Node: Interpret/Compile states500678
Node: Interpreter Directives501820
Node: Recognizers507564
Node: Default Recognizers508687
Node: Dealing with existing Recognizers513892
Node: Defining Recognizers523190
Node: Text Interpreter Hooks523433
Node: The Input Stream524292
Node: Word Lists530154
Node: Vocabularies541567
Node: Why use word lists?542997
Node: Word list example546493
Node: Environmental Queries547250
Node: Files558362
Node: Forth source files559080
Node: General files563554
Node: Redirection569384
Node: Directories572031
Node: Search Paths576817
Node: Source Search Paths579887
Node: General Search Paths581015
Node: Blocks583980
Ref: Blocks-Footnote-1599230
Node: Other I/O599815
Node: Simple numeric output602058
Node: Formatted numeric output605082
Node: Floating-point output613255
Node: Miscellaneous output619005
Node: Displaying characters and strings623079
Node: Terminal output623991
Node: Single-key input627308
Node: Line input and conversion636002
Node: Pipes641702
Node: Xchars and Unicode642997
Node: i18n and l10n651607
Node: Substitute656175
Node: CSV Reader658792
Node: OS command line arguments659548
Node: Locals662346
Node: Gforth locals663296
Node: Locals definition words670121
Node: Where are locals visible by name?675148
Ref: Where are locals visible by name?-Footnote-1684887
Node: How long do locals live?685020
Node: Locals programming style686372
Node: Locals implementation689821
Node: Closures699429
Node: Standard Forth locals705477
Node: Structures707725
Node: Why explicit structure support?708751
Node: Structure Usage712277
Ref: Structure Usage-Footnote-1716579
Node: Structure Naming Convention717031
Node: Structure Implementation718472
Node: Structure Glossary720197
Node: Forth200x Structures723209
Node: Object-oriented Forth726358
Node: Why object-oriented programming?727293
Node: Object-Oriented Terminology729405
Node: Objects732063
Node: Properties of the Objects model733460
Node: Basic Objects Usage736126
Node: The Objects base class739352
Node: Creating objects740100
Node: Object-Oriented Programming Style741741
Node: Class Binding743120
Node: Method conveniences746472
Ref: Method conveniences-Footnote-1749606
Node: Classes and Scoping749896
Node: Dividing classes751932
Node: Object Interfaces753510
Node: Objects Implementation756610
Ref: Objects Implementation-Footnote-1763878
Node: Objects Glossary764024
Node: OOF773769
Node: Properties of the OOF model774683
Node: Basic OOF Usage776225
Node: The OOF base class779431
Node: Class Declaration784020
Node: Class Implementation785418
Node: Mini-OOF785565
Node: Basic Mini-OOF Usage786132
Node: Mini-OOF Example787794
Node: Mini-OOF Implementation789727
Node: Mini-OOF2794972
Node: Comparison with other object models796822
Ref: Comparison with other object models-Footnote-1802070
Node: Regular Expressions802240
Node: Programming Tools812776
Node: Locating source code definitions813651
Node: Locating uses of a word817826
Node: Locating exception source821774
Node: Examining compiled code822385
Node: Examining data830574
Node: Forgetting words833699
Node: Debugging835700
Node: Assertions840658
Node: Singlestep Debugger845231
Node: Code Coverage848471
Node: Multitasker852697
Node: Pthreads853575
Node: Basic multi-tasking854714
Node: Task-local data861018
Node: Semaphores863518
Node: Hardware operations for multi-tasking865399
Node: Message queues867448
Node: Cilk869365
Node: C Interface872270
Node: Calling C Functions873864
Ref: Calling C Functions-Footnote-1877172
Node: Declaring C Functions877535
Node: Calling C function pointers882277
Node: Defining library interfaces884367
Node: Declaring OS-level libraries888329
Node: Callbacks891182
Node: C interface internals893514
Node: Low-Level C Interface Words895277
Node: Automated interface generation using SWIG896659
Node: Migrating the C interface from earlier Gforth899708
Node: Assembler and Code Words902047
Node: Assembler Definitions902775
Node: Common Assembler912328
Node: Common Disassembler915951
Node: 386 Assembler918120
Node: AMD64 Assembler923980
Node: Alpha Assembler931931
Node: MIPS assembler933114
Node: PowerPC assembler937548
Node: ARM Assembler938803
Node: Other assemblers944533
Node: Carnal words946288
Node: Header fields946806
Node: Header methods951021
Node: Threading Words960641
Node: Passing Commands to the OS968555
Node: Keeping track of Time970804
Node: Miscellaneous Words973049
Node: Error messages974240
Node: Tools979173
Node: Standard Report979547
Node: Stack depth changes982295
Node: Standard conformance984974
Node: The Core Words988710
Node: core-idef989143
Node: core-ambcond1000980
Node: core-other1014931
Node: The optional Block word set1016746
Node: block-idef1017220
Node: block-ambcond1017757
Node: block-other1018870
Node: The optional Double Number word set1019316
Node: double-ambcond1019626
Node: The optional Exception word set1019925
Node: exception-idef1020301
Node: The optional Facility word set1021250
Node: facility-idef1021673
Node: facility-ambcond1023145
Node: The optional File-Access word set1023622
Node: file-idef1024056
Node: file-ambcond1027536
Node: The optional Floating-Point word set1029524
Node: floating-idef1029962
Node: floating-ambcond1031483
Node: The optional Locals word set1036124
Node: locals-idef1036552
Node: locals-ambcond1037294
Node: The optional Memory-Allocation word set1037973
Node: memory-idef1038375
Node: The optional Programming-Tools word set1038980
Node: programming-idef1039441
Node: programming-ambcond1040623
Node: The optional Search-Order word set1042368
Node: search-idef1042771
Node: search-ambcond1043224
Node: Standard vs Extensions1044109
Node: Model1048581
Node: Integrating Gforth1048848
Node: Emacs and Gforth1053513
Node: Installing gforth.el1055437
Node: Emacs Tags1056538
Node: Hilighting1057447
Node: Auto-Indentation1059319
Node: Blocks Files1060736
Node: Image Files1062128
Node: Image Licensing Issues1063079
Node: Image File Background1064269
Ref: Image File Background-Footnote-11068561
Node: Non-Relocatable Image Files1068677
Node: Data-Relocatable Image Files1069668
Node: Fully Relocatable Image Files1070577
Node: gforthmi1071449
Node: cross.fs1074179
Node: Stack and Dictionary Sizes1074889
Node: Running Image Files1075979
Ref: Running Image Files-Footnote-11078920
Node: Modifying the Startup Sequence1079291
Node: Engine1081958
Node: Portability1082703
Node: Threading1085382
Node: Scheduling1086621
Node: Direct or Indirect Threaded?1088423
Node: Dynamic Superinstructions1091280
Node: DOES>1096063
Node: Primitives1097169
Node: Automatic Generation1097367
Ref: Automatic Generation-Footnote-11100874
Node: TOS Optimization1101045
Node: Produced code1103746
Node: Performance1104165
Node: Cross Compiler1109567
Node: Using the Cross Compiler1110082
Node: How the Cross Compiler Works1114727
Node: MINOS21114908
Node: MINOS2 object framework1115099
Node: actor methods1115594
Node: widget methods1117359
Node: MINOS2 tutorial1124018
Node: Bugs1124875
Node: Origin1125922
Node: Forth-related information1129078
Node: Licenses1129676
Node: GNU Free Documentation License1129994
Node: Copying1152575
Node: Word Index1190330
Node: Concept Index1347231

End Tag Table


Local Variables:
coding: utf-8
End:
