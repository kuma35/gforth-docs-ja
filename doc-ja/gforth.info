This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306194
gforth.info-3: 603466
gforth.info-4: 901961
gforth.info-5: 1213469

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17670
Ref: Goals-Footnote-119871
Node: Stability Goals20072
Node: Gforth Environment22032
Node: Invoking Gforth22928
Node: Leaving Gforth38638
Node: Help on Gforth39307
Node: Command-line editing40603
Ref: Command-line editing-Footnote-144045
Node: Environment variables44136
Node: Gforth Files46469
Node: Gforth in pipes47445
Node: Startup speed50025
Node: Tutorial54934
Node: Starting Gforth Tutorial57839
Node: Syntax Tutorial58395
Node: Crash Course Tutorial59668
Node: Stack Tutorial60905
Node: Arithmetics Tutorial61795
Ref: Arithmetics Tutorial-Footnote-163132
Node: Stack Manipulation Tutorial63257
Node: Using files for Forth code Tutorial65053
Node: Comments Tutorial67241
Ref: Comments Tutorial-Footnote-168801
Node: Colon Definitions Tutorial68904
Node: Decompilation Tutorial71008
Node: Stack-Effect Comments Tutorial71659
Node: Types Tutorial76320
Node: Factoring Tutorial78879
Node: Designing the stack effect Tutorial80747
Node: Local Variables Tutorial84159
Node: Conditional execution Tutorial86165
Node: Flags and Comparisons Tutorial87926
Node: General Loops Tutorial91619
Node: Counted loops Tutorial94223
Node: Recursion Tutorial95959
Node: Leaving definitions or loops Tutorial97375
Node: Return Stack Tutorial98426
Node: Memory Tutorial101148
Node: Characters and Strings Tutorial105208
Node: Alignment Tutorial107248
Node: Floating Point Tutorial109025
Node: Files Tutorial113902
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118202
Node: Execution Tokens Tutorial121655
Node: Exceptions Tutorial125834
Node: Defining Words Tutorial128203
Node: Arrays and Records Tutorial131804
Node: POSTPONE Tutorial133732
Node: Literal Tutorial136408
Node: Advanced macros Tutorial137494
Node: Compilation Tokens Tutorial140138
Node: Wordlists and Search Order Tutorial141653
Node: Introduction145565
Node: Introducing the Text Interpreter148333
Ref: Introducing the Text Interpreter-Footnote-1155548
Node: Stacks and Postfix notation155811
Node: Your first definition168793
Ref: Your first definition-Footnote-1173625
Node: How does that work?173827
Node: Forth is written in Forth186164
Ref: Forth is written in Forth-Footnote-1188628
Ref: Forth is written in Forth-Footnote-2188728
Node: Review - elements of a Forth system188782
Node: Where to go next191240
Node: Exercises193674
Node: Literals in source code194085
Node: Words202581
Node: Notation203400
Node: Case insensitivity209712
Node: Comments212148
Node: Boolean Flags213721
Node: Arithmetic214890
Node: Single precision216136
Node: Double precision217471
Node: Mixed precision219326
Node: Integer division219621
Node: Two-stage integer division227170
Node: Bitwise operations233627
Node: Numeric comparison238398
Node: Floating Point241414
Ref: Floating Point-Footnote-1248921
Node: Stack Manipulation249160
Node: Data stack250025
Node: Floating point stack251592
Node: Return stack252477
Node: Locals stack253816
Node: Stack pointer manipulation254156
Node: Memory255379
Node: Memory model255863
Ref: Memory model-Footnote-1257606
Node: Dictionary allocation257888
Node: Heap Allocation263908
Node: Memory Access268682
Node: Special Memory Accesses270503
Node: Address arithmetic276939
Node: Memory Blocks284325
Node: Strings and Characters288067
Node: Characters288373
Node: String representations290424
Node: String and character literals292233
Node: String words298267
Node: $tring words306194
Node: Counted string words316263
Node: Control Structures318164
Ref: Control Structures-Footnote-1318980
Node: Selection319129
Node: Simple Loops322870
Node: Counted Loops323808
Ref: Counted Loops-Footnote-1337910
Node: BEGIN loops with multiple exits337996
Node: General control structures with CASE340406
Ref: General control structures with CASE-Footnote-1344146
Node: Arbitrary control structures344397
Node: Calls and returns352489
Node: Exception Handling355402
Node: Defining Words370781
Node: CREATE371615
Node: Variables374550
Node: Constants377221
Ref: Constants-Footnote-1381426
Node: Values381805
Node: Varues383661
Node: Colon Definitions385349
Node: Anonymous Definitions389468
Node: Quotations391642
Node: Supplying names393071
Node: User-defined Defining Words393965
Node: User-defined defining words with colon definitions394756
Ref: User-defined defining words with colon definitions-Footnote-1398016
Node: User-defined defining words using CREATE398368
Ref: User-defined defining words using CREATE-Footnote-1404647
Ref: User-defined defining words using CREATE-Footnote-2404740
Node: CREATE..DOES> applications405007
Node: CREATE..DOES> details406817
Node: Advanced does> usage example409918
Node: User-defined TO and DEFER@415829
Node: User-defined compile-comma419273
Node: Creating from a prototype425500
Node: Making a word current428539
Node: Const-does>429677
Node: Deferred Words431216
Node: Forward437919
Node: Aliases438908
Node: Interpretation and Compilation Semantics441048
Ref: Interpretation and Compilation Semantics-Footnote-1445336
Ref: Interpretation and Compilation Semantics-Footnote-2445421
Node: Combined words445651
Ref: state-smartness447921
Ref: Combined words-Footnote-1449231
Node: Tokens for Words449470
Node: Execution token450028
Ref: Execution token-Footnote-1455579
Node: Name token456112
Node: Compilation token463034
Ref: Compilation token-Footnote-1465523
Node: Compiling words465866
Node: Literals466781
Node: Macros471021
Ref: Macros-Footnote-1482595
Node: The Text Interpreter482911
Ref: The Text Interpreter-Footnote-1491802
Ref: The Text Interpreter-Footnote-2491908
Ref: The Text Interpreter-Footnote-3492251
Ref: The Text Interpreter-Footnote-4492482
Ref: The Text Interpreter-Footnote-5492539
Node: Input Sources492633
Node: Number Conversion495894
Node: Interpret/Compile states499183
Node: Interpreter Directives500325
Node: Recognizers505989
Node: Default Recognizers507112
Node: Dealing with existing Recognizers511900
Node: Defining Recognizers521198
Node: Text Interpreter Hooks521441
Node: The Input Stream522300
Node: Word Lists528148
Node: Vocabularies539393
Node: Why use word lists?540681
Node: Word list example543237
Node: Environmental Queries543938
Node: Files552675
Node: Forth source files553239
Node: General files556632
Node: Redirection560892
Node: Directories562934
Node: Search Paths565578
Node: Source Search Paths567492
Node: General Search Paths568430
Node: Blocks570539
Ref: Blocks-Footnote-1580621
Node: Other I/O581020
Node: Simple numeric output581806
Node: Formatted numeric output584143
Node: Floating-point output590861
Node: Miscellaneous output595622
Node: Displaying characters and strings598718
Node: Terminal output599423
Node: Single-key input603466
Node: Line input and conversion610258
Node: Pipes613891
Node: Xchars and Unicode614877
Node: i18n and l10n620924
Node: Substitute624224
Node: CSV Reader626340
Node: OS command line arguments626842
Node: Locals629107
Node: Gforth locals630057
Node: Locals definition words635317
Node: Where are locals visible by name?639214
Ref: Where are locals visible by name?-Footnote-1646453
Node: How long do locals live?646552
Node: Locals programming style647414
Node: Locals implementation650126
Node: Closures657385
Node: Standard Forth locals661872
Node: Structures663423
Node: Why explicit structure support?664273
Node: Structure Usage666847
Ref: Structure Usage-Footnote-1669827
Node: Structure Naming Convention670111
Node: Structure Implementation671314
Node: Structure Glossary672643
Node: Forth200x Structures674669
Node: Object-oriented Forth677284
Node: Why object-oriented programming?678031
Node: Object-Oriented Terminology679394
Node: Objects681253
Node: Properties of the Objects model682398
Node: Basic Objects Usage684189
Node: The Objects base class686598
Node: Creating objects687088
Node: Object-Oriented Programming Style687890
Node: Class Binding688886
Node: Method conveniences691140
Ref: Method conveniences-Footnote-1693296
Node: Classes and Scoping693494
Node: Dividing classes694974
Node: Object Interfaces696228
Node: Objects Implementation698244
Ref: Objects Implementation-Footnote-1703111
Node: Objects Glossary703189
Node: OOF710036
Node: Properties of the OOF model710748
Node: Basic OOF Usage711804
Node: The OOF base class714114
Node: Class Declaration717637
Node: Class Implementation718734
Node: Mini-OOF718881
Node: Basic Mini-OOF Usage719372
Node: Mini-OOF Example720640
Node: Mini-OOF Implementation722187
Node: Mini-OOF2726251
Node: Comparison with other object models727519
Ref: Comparison with other object models-Footnote-1731197
Node: Regular Expressions731355
Node: Programming Tools737870
Node: Locating source code definitions738745
Node: Locating uses of a word741874
Node: Locating exception source744432
Node: Examining compiled code744762
Node: Examining data750439
Node: Forgetting words752807
Node: Debugging754154
Node: Assertions757394
Node: Singlestep Debugger760837
Node: Code Coverage763987
Node: Multitasker766814
Node: Pthreads767692
Node: Basic multi-tasking768492
Node: Task-local data772645
Node: Semaphores774463
Node: Hardware operations for multi-tasking775831
Node: Message queues777361
Node: Cilk778685
Node: C Interface780759
Node: Calling C Functions782353
Ref: Calling C Functions-Footnote-1785423
Node: Declaring C Functions785635
Node: Calling C function pointers789266
Node: Defining library interfaces790832
Node: Declaring OS-level libraries793602
Node: Callbacks795816
Node: C interface internals797525
Node: Low-Level C Interface Words798869
Node: Automated interface generation using SWIG799606
Node: Migrating the C interface from earlier Gforth801975
Node: Assembler and Code Words802665
Node: Assembler Definitions803393
Node: Common Assembler811652
Node: Common Disassembler814350
Node: 386 Assembler816045
Node: AMD64 Assembler820496
Node: Alpha Assembler828448
Node: MIPS assembler829413
Node: PowerPC assembler832838
Node: ARM Assembler833850
Node: Other assemblers838789
Node: Carnal words840091
Node: Header fields840485
Node: Header methods843517
Node: Threading Words851106
Node: Passing Commands to the OS856989
Node: Keeping track of Time858647
Node: Miscellaneous Words860058
Node: Error messages860656
Node: Tools863891
Node: Standard Report864244
Node: Stack depth changes866143
Node: Standard conformance868121
Node: The Core Words871039
Node: core-idef871410
Node: core-ambcond879795
Node: core-other889385
Node: The optional Block word set890712
Node: block-idef891124
Node: block-ambcond891552
Node: block-other892500
Node: The optional Double Number word set892861
Node: double-ambcond893171
Node: The optional Exception word set893445
Node: exception-idef893759
Node: The optional Facility word set894493
Node: facility-idef894854
Node: facility-ambcond896033
Node: The optional File-Access word set896434
Node: file-idef896806
Node: file-ambcond899193
Node: The optional Floating-Point word set901961
Node: floating-idef902337
Node: floating-ambcond903481
Node: The optional Locals word set906652
Node: locals-idef907018
Node: locals-ambcond907561
Node: The optional Memory-Allocation word set908064
Node: memory-idef908404
Node: The optional Programming-Tools word set908869
Node: programming-idef909268
Node: programming-ambcond910200
Node: The optional Search-Order word set911535
Node: search-idef911876
Node: search-ambcond912254
Node: Standard vs Extensions913020
Node: Model916367
Node: Integrating Gforth916599
Node: Emacs and Gforth920232
Node: Installing gforth.el922156
Node: Emacs Tags922943
Node: Hilighting923852
Node: Auto-Indentation925724
Node: Blocks Files927141
Node: Image Files928533
Node: Image Licensing Issues929484
Node: Image File Background930674
Ref: Image File Background-Footnote-1934966
Node: Non-Relocatable Image Files935082
Node: Data-Relocatable Image Files936073
Node: Fully Relocatable Image Files936982
Node: gforthmi937854
Node: cross.fs940584
Node: Stack and Dictionary Sizes941294
Node: Running Image Files942384
Ref: Running Image Files-Footnote-1945325
Node: Modifying the Startup Sequence945696
Node: Engine948363
Node: Portability949108
Node: Threading951787
Node: Scheduling953026
Node: Direct or Indirect Threaded?954828
Node: Dynamic Superinstructions957685
Node: DOES>962468
Node: Primitives963574
Node: Automatic Generation963772
Ref: Automatic Generation-Footnote-1967279
Node: TOS Optimization967450
Node: Produced code970151
Node: Performance970570
Node: Cross Compiler975972
Node: Using the Cross Compiler976487
Node: How the Cross Compiler Works981132
Node: MINOS2981313
Node: MINOS2 object framework981504
Node: actor methods981999
Node: widget methods983764
Node: MINOS2 tutorial990423
Node: Bugs991280
Node: Origin992327
Node: Forth-related information995483
Node: Licenses996081
Node: GNU Free Documentation License996399
Node: Copying1018980
Node: Word Index1056735
Node: Concept Index1213469

End Tag Table


Local Variables:
coding: utf-8
End:
