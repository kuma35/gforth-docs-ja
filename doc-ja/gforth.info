This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306246
gforth.info-3: 603888
gforth.info-4: 902187
gforth.info-5: 1280516

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17672
Ref: Goals-Footnote-119873
Node: Stability Goals20074
Node: Gforth Environment22034
Node: Invoking Gforth22930
Node: Leaving Gforth38640
Node: Help on Gforth39309
Node: Command-line editing40605
Ref: Command-line editing-Footnote-144047
Node: Environment variables44138
Node: Gforth Files46471
Node: Gforth in pipes47447
Node: Startup speed50027
Node: Tutorial54936
Node: Starting Gforth Tutorial57841
Node: Syntax Tutorial58397
Node: Crash Course Tutorial59670
Node: Stack Tutorial60907
Node: Arithmetics Tutorial61797
Ref: Arithmetics Tutorial-Footnote-163134
Node: Stack Manipulation Tutorial63259
Node: Using files for Forth code Tutorial65055
Node: Comments Tutorial67243
Ref: Comments Tutorial-Footnote-168803
Node: Colon Definitions Tutorial68906
Node: Decompilation Tutorial71010
Node: Stack-Effect Comments Tutorial71661
Node: Types Tutorial76322
Node: Factoring Tutorial78881
Node: Designing the stack effect Tutorial80749
Node: Local Variables Tutorial84161
Node: Conditional execution Tutorial86167
Node: Flags and Comparisons Tutorial87928
Node: General Loops Tutorial91621
Node: Counted loops Tutorial94225
Node: Recursion Tutorial95961
Node: Leaving definitions or loops Tutorial97377
Node: Return Stack Tutorial98428
Node: Memory Tutorial101150
Node: Characters and Strings Tutorial105210
Node: Alignment Tutorial107250
Node: Floating Point Tutorial109027
Node: Files Tutorial113900
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118203
Node: Execution Tokens Tutorial121656
Node: Exceptions Tutorial125835
Node: Defining Words Tutorial128204
Node: Arrays and Records Tutorial131805
Node: POSTPONE Tutorial133736
Node: Literal Tutorial136412
Node: Advanced macros Tutorial137498
Node: Compilation Tokens Tutorial140142
Node: Wordlists and Search Order Tutorial141657
Node: Introduction145598
Node: Introducing the Text Interpreter148366
Ref: Introducing the Text Interpreter-Footnote-1155618
Node: Stacks and Postfix notation155881
Node: Your first definition168863
Ref: Your first definition-Footnote-1173695
Node: How does that work?173897
Node: Forth is written in Forth186234
Ref: Forth is written in Forth-Footnote-1188698
Ref: Forth is written in Forth-Footnote-2188798
Node: Review - elements of a Forth system188852
Node: Where to go next191310
Node: Exercises193744
Node: Literals in source code194155
Node: Words202626
Node: Notation203445
Node: Case insensitivity209757
Node: Comments212193
Node: Boolean Flags213766
Node: Arithmetic214935
Node: Single precision216181
Node: Double precision217512
Node: Mixed precision219354
Node: Integer division219649
Node: Two-stage integer division227163
Node: Bitwise operations233647
Node: Numeric comparison238418
Node: Floating Point241434
Ref: Floating Point-Footnote-1248941
Node: Stack Manipulation249180
Node: Data stack250045
Node: Floating point stack251612
Node: Return stack252497
Node: Locals stack253836
Node: Stack pointer manipulation254176
Node: Memory255399
Node: Memory model255883
Ref: Memory model-Footnote-1257626
Node: Dictionary allocation257908
Node: Heap Allocation263928
Node: Memory Access268719
Node: Special Memory Accesses270540
Node: Address arithmetic276976
Node: Memory Blocks284362
Node: Strings and Characters288110
Node: Characters288418
Node: String representations290469
Node: String and character literals292280
Node: String words298317
Node: ＄tring words306246
Node: Counted string words316397
Node: Control Structures318300
Ref: Control Structures-Footnote-1319116
Node: Selection319265
Node: Simple Loops323006
Node: Counted Loops323944
Ref: Counted Loops-Footnote-1338046
Node: BEGIN loops with multiple exits338132
Node: General control structures with CASE340542
Ref: General control structures with CASE-Footnote-1344282
Node: Arbitrary control structures344533
Node: Calls and returns352625
Node: Exception Handling355540
Node: Defining Words370919
Node: CREATE371753
Node: Variables374691
Node: Constants377363
Ref: Constants-Footnote-1381568
Node: Values381947
Node: Varues383803
Node: Colon Definitions385491
Node: Anonymous Definitions389610
Node: Quotations391784
Node: Supplying names393223
Node: User-defined Defining Words394117
Node: User-defined defining words with colon definitions394908
Ref: User-defined defining words with colon definitions-Footnote-1398168
Node: User-defined defining words using CREATE398520
Ref: User-defined defining words using CREATE-Footnote-1404793
Ref: User-defined defining words using CREATE-Footnote-2404886
Node: CREATE..DOES> applications405153
Node: CREATE..DOES> details406963
Node: Advanced does> usage example410064
Node: User-defined TO and DEFER@415990
Node: User-defined compile-comma419434
Node: Creating from a prototype425661
Node: Making a word current428700
Node: Const-does>429838
Node: Deferred Words431377
Node: Forward438080
Node: Aliases439069
Node: Interpretation and Compilation Semantics441209
Ref: Interpretation and Compilation Semantics-Footnote-1445497
Ref: Interpretation and Compilation Semantics-Footnote-2445582
Node: Combined words445812
Ref: state-smartness448082
Ref: Combined words-Footnote-1449392
Node: Tokens for Words449631
Node: Execution token450189
Ref: Execution token-Footnote-1455740
Node: Name token456273
Node: Compilation token463213
Ref: Compilation token-Footnote-1465702
Node: Compiling words466045
Node: Literals466960
Node: Macros471200
Ref: Macros-Footnote-1482774
Node: The Text Interpreter483090
Ref: The Text Interpreter-Footnote-1492050
Ref: The Text Interpreter-Footnote-2492156
Ref: The Text Interpreter-Footnote-3492502
Ref: The Text Interpreter-Footnote-4492736
Ref: The Text Interpreter-Footnote-5492793
Node: Input Sources492887
Node: Number Conversion496149
Node: Interpret/Compile states499484
Node: Interpreter Directives500626
Node: Recognizers506370
Node: Default Recognizers507493
Node: Dealing with existing Recognizers512698
Node: Defining Recognizers521996
Node: Text Interpreter Hooks522239
Node: The Input Stream523098
Node: Word Lists528960
Node: Vocabularies540373
Node: Why use word lists?541803
Node: Word list example545299
Node: Environmental Queries546056
Node: Files557168
Node: Forth source files557886
Node: General files562360
Node: Redirection568190
Node: Directories570837
Node: Search Paths575623
Node: Source Search Paths578693
Node: General Search Paths579821
Node: Blocks582786
Ref: Blocks-Footnote-1598036
Node: Other I/O598621
Node: Simple numeric output599407
Node: Formatted numeric output603888
Node: Floating-point output612061
Node: Miscellaneous output617811
Node: Displaying characters and strings621885
Node: Terminal output622797
Node: Single-key input626114
Node: Line input and conversion634808
Node: Pipes640508
Node: Xchars and Unicode641803
Node: i18n and l10n650413
Node: Substitute654981
Node: CSV Reader657598
Node: OS command line arguments658354
Node: Locals661152
Node: Gforth locals662102
Node: Locals definition words668927
Node: Where are locals visible by name?673954
Ref: Where are locals visible by name?-Footnote-1683693
Node: How long do locals live?683826
Node: Locals programming style685178
Node: Locals implementation688627
Node: Closures698235
Node: Standard Forth locals704283
Node: Structures706531
Node: Why explicit structure support?707557
Node: Structure Usage711083
Ref: Structure Usage-Footnote-1715385
Node: Structure Naming Convention715837
Node: Structure Implementation717278
Node: Structure Glossary719003
Node: Forth200x Structures722015
Node: Object-oriented Forth725164
Node: Why object-oriented programming?726099
Node: Object-Oriented Terminology728211
Node: Objects730815
Node: Properties of the Objects model732212
Node: Basic Objects Usage734878
Node: The Objects base class738104
Node: Creating objects738762
Node: Object-Oriented Programming Style740403
Node: Class Binding741782
Node: Method conveniences745134
Ref: Method conveniences-Footnote-1748244
Node: Classes and Scoping748534
Node: Dividing classes750570
Node: Object Interfaces752136
Node: Objects Implementation755157
Ref: Objects Implementation-Footnote-1762251
Node: Objects Glossary762397
Node: OOF771744
Node: Properties of the OOF model772658
Node: Basic OOF Usage774200
Node: The OOF base class777406
Node: Class Declaration781965
Node: Class Implementation783376
Node: Mini-OOF783523
Node: Basic Mini-OOF Usage784090
Node: Mini-OOF Example785740
Node: Mini-OOF Implementation787674
Node: Mini-OOF2792930
Node: Comparison with other object models794369
Ref: Comparison with other object models-Footnote-1798047
Node: Regular Expressions798205
Node: Programming Tools804720
Node: Locating source code definitions805595
Node: Locating uses of a word808724
Node: Locating exception source811282
Node: Examining compiled code811612
Node: Examining data817289
Node: Forgetting words819657
Node: Debugging821004
Node: Assertions824244
Node: Singlestep Debugger827687
Node: Code Coverage830837
Node: Multitasker833664
Node: Pthreads834542
Node: Basic multi-tasking835342
Node: Task-local data839495
Node: Semaphores841313
Node: Hardware operations for multi-tasking842681
Node: Message queues844211
Node: Cilk845535
Node: C Interface847609
Node: Calling C Functions849203
Ref: Calling C Functions-Footnote-1852273
Node: Declaring C Functions852485
Node: Calling C function pointers856116
Node: Defining library interfaces857682
Node: Declaring OS-level libraries860452
Node: Callbacks862666
Node: C interface internals864375
Node: Low-Level C Interface Words865719
Node: Automated interface generation using SWIG866456
Node: Migrating the C interface from earlier Gforth868825
Node: Assembler and Code Words869515
Node: Assembler Definitions870243
Node: Common Assembler878532
Node: Common Disassembler881230
Node: 386 Assembler882925
Node: AMD64 Assembler887376
Node: Alpha Assembler895328
Node: MIPS assembler896293
Node: PowerPC assembler899718
Node: ARM Assembler902187
Node: Other assemblers907126
Node: Carnal words908428
Node: Header fields908822
Node: Header methods911854
Node: Threading Words919443
Node: Passing Commands to the OS925326
Node: Keeping track of Time926984
Node: Miscellaneous Words928395
Node: Error messages928993
Node: Tools932228
Node: Standard Report932581
Node: Stack depth changes934480
Node: Standard conformance936458
Node: The Core Words939376
Node: core-idef939747
Node: core-ambcond948132
Node: core-other957722
Node: The optional Block word set959049
Node: block-idef959461
Node: block-ambcond959889
Node: block-other960837
Node: The optional Double Number word set961198
Node: double-ambcond961508
Node: The optional Exception word set961782
Node: exception-idef962096
Node: The optional Facility word set962830
Node: facility-idef963191
Node: facility-ambcond964370
Node: The optional File-Access word set964771
Node: file-idef965143
Node: file-ambcond967530
Node: The optional Floating-Point word set968841
Node: floating-idef969217
Node: floating-ambcond970361
Node: The optional Locals word set973532
Node: locals-idef973898
Node: locals-ambcond974441
Node: The optional Memory-Allocation word set974944
Node: memory-idef975284
Node: The optional Programming-Tools word set975749
Node: programming-idef976148
Node: programming-ambcond977080
Node: The optional Search-Order word set978415
Node: search-idef978756
Node: search-ambcond979134
Node: Standard vs Extensions979900
Node: Model983247
Node: Integrating Gforth983479
Node: Emacs and Gforth987112
Node: Installing gforth.el989036
Node: Emacs Tags989823
Node: Hilighting990732
Node: Auto-Indentation992604
Node: Blocks Files994021
Node: Image Files995413
Node: Image Licensing Issues996364
Node: Image File Background997554
Ref: Image File Background-Footnote-11001846
Node: Non-Relocatable Image Files1001962
Node: Data-Relocatable Image Files1002953
Node: Fully Relocatable Image Files1003862
Node: gforthmi1004734
Node: cross.fs1007464
Node: Stack and Dictionary Sizes1008174
Node: Running Image Files1009264
Ref: Running Image Files-Footnote-11012205
Node: Modifying the Startup Sequence1012576
Node: Engine1015243
Node: Portability1015988
Node: Threading1018667
Node: Scheduling1019906
Node: Direct or Indirect Threaded?1021708
Node: Dynamic Superinstructions1024565
Node: DOES>1029348
Node: Primitives1030454
Node: Automatic Generation1030652
Ref: Automatic Generation-Footnote-11034159
Node: TOS Optimization1034330
Node: Produced code1037031
Node: Performance1037450
Node: Cross Compiler1042852
Node: Using the Cross Compiler1043367
Node: How the Cross Compiler Works1048012
Node: MINOS21048193
Node: MINOS2 object framework1048384
Node: actor methods1048879
Node: widget methods1050644
Node: MINOS2 tutorial1057303
Node: Bugs1058160
Node: Origin1059207
Node: Forth-related information1062363
Node: Licenses1062961
Node: GNU Free Documentation License1063279
Node: Copying1085860
Node: Word Index1123615
Node: Concept Index1280516

End Tag Table


Local Variables:
coding: utf-8
End:
