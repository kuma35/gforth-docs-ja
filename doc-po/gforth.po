# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: gforth-docs-ja 0.0\n"
"POT-Creation-Date: 2024-05-30 17:53+0900\n"
"PO-Revision-Date: 2024-06-10 17:12+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: include
#: ../doc/gforth.texi:39
#, no-wrap
msgid "version.texi"
msgstr "version.texi"

#. type: settitle
#: ../doc/gforth.texi:40
#, no-wrap
msgid "Gforth Manual"
msgstr "Gforth マニュアル"

#. type: Plain text
#: ../doc/gforth.texi:46
msgid "@documentencoding UTF-8"
msgstr "@documentencoding UTF-8"

#. type: macro
#: ../doc/gforth.texi:50
msgid "Programming style note:"
msgstr "Programming style note:"

#. type: item
#: ../doc/gforth.texi:55
#, no-wrap
msgid "Assignment:"
msgstr "Assignment:"

#. type: iftex
#: ../doc/gforth.texi:65
msgid "@ninerm"
msgstr "@ninerm"

#. type: iftex
#: ../doc/gforth.texi:71
msgid "@rm"
msgstr "@rm"

#. type: copying
#: ../doc/gforth.texi:80
msgid ""
"This manual is for Gforth (version @value{VERSION}, @value{UPDATED}), a fast "
"and portable implementation of the Standard Forth language.  It serves as "
"reference manual, but it also contains an introduction to Forth and a Forth "
"tutorial."
msgstr ""
"このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バー"
"ジョン @value{VERSION}, @value{UPDATED})用です。 これはリファレンス・マニュア"
"ルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれています。"

#. type: copying
#: ../doc/gforth.texi:83
msgid ""
"Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright @copyright{} 1995, "
"1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, "
"2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free "
"Software Foundation, Inc."
msgstr ""
"Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright @copyright{} 1995, "
"1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, "
"2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free "
"Software Foundation, Inc."

#. type: quotation
#: ../doc/gforth.texi:92
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.1 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, with the Front-Cover texts being ``A GNU Manual,'' and with the "
"Back-Cover Texts as in (a) below.  A copy of the license is included in the "
"section entitled ``GNU Free Documentation License.''"
msgstr ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.1 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, with the Front-Cover texts being ``A GNU Manual,'' and with the "
"Back-Cover Texts as in (a) below.  A copy of the license is included in the "
"section entitled ``GNU Free Documentation License.''"

#. type: quotation
#: ../doc/gforth.texi:96
msgid ""
"(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify this "
"GNU Manual, like GNU software.  Copies published by the Free Software "
"Foundation raise funds for GNU development.''"
msgstr ""
"(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify this "
"GNU Manual, like GNU software.  Copies published by the Free Software "
"Foundation raise funds for GNU development.''"

#. type: dircategory
#: ../doc/gforth.texi:99
#, no-wrap
msgid "Software development"
msgstr "Software development"

#. type: menuentry
#: ../doc/gforth.texi:102
msgid "Gforth: (gforth)"
msgstr "Gforth: (gforth)"

#. type: menuentry
#: ../doc/gforth.texi:102
msgid "A fast interpreter for the Forth language."
msgstr "forth言語のための高速インタプリタ"

#. type: top
#: ../doc/gforth.texi:111 ../doc/gforth.texi:128
#, no-wrap
msgid "Gforth"
msgstr "Gforth"

#. type: subtitle
#: ../doc/gforth.texi:112
#, no-wrap
msgid "for version @value{VERSION}, @value{UPDATED}"
msgstr "for version @value{VERSION}, @value{UPDATED}"

#. type: author
#: ../doc/gforth.texi:113
#, no-wrap
msgid "Neal Crook"
msgstr "Neal Crook"

#. type: author
#: ../doc/gforth.texi:114
#, no-wrap
msgid "Anton Ertl"
msgstr "Anton Ertl"

#. type: author
#: ../doc/gforth.texi:115
#, no-wrap
msgid "David Kuehling"
msgstr "David Kuehling"

#. type: author
#: ../doc/gforth.texi:116
#, no-wrap
msgid "Bernd Paysan"
msgstr "Bernd Paysan"

#. type: author
#: ../doc/gforth.texi:117
#, no-wrap
msgid "Jens Wilke"
msgstr "Jens Wilke"

#. type: author
#: ../doc/gforth.texi:118
#, no-wrap
msgid "Gerald Wodni"
msgstr "Gerald Wodni"

#. type: node
#: ../doc/gforth.texi:127 ../doc/gforth.texi:680 ../doc/gforth.texi:762
#: ../doc/gforth.texi:1421 ../doc/gforth.texi:3704 ../doc/gforth.texi:4621
#: ../doc/gforth.texi:4817 ../doc/gforth.texi:28435 ../doc/gforth.texi:28512
#: ../doc/gforth.texi:28624 ../doc/gforth.texi:30016 ../doc/gforth.texi:30101
#: ../doc/gforth.texi:30108 ../doc/gforth.texi:30208 ../doc/gforth.texi:30441
#: ../doc/gforth.texi:30972 ../doc/gforth.texi:31639 ../doc/gforth.texi:31781
#: ../doc/gforth.texi:32547 ../doc/gforth.texi:32580 ../doc/gforth.texi:32649
#: ../doc/gforth.texi:32669 ../doc/gforth.texi:32688 ../doc/gforth.texi:32708
#, no-wrap
msgid "Top"
msgstr "Top"

#. type: node
#: ../doc/gforth.texi:127 ../doc/gforth.texi:156 ../doc/gforth.texi:680
#: ../doc/gforth.texi:732 ../doc/gforth.texi:762
#, no-wrap
msgid "Goals"
msgstr "Goals"

#. type: node
#: ../doc/gforth.texi:127
#, no-wrap
msgid "(dir)"
msgstr "(dir)"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "About the Gforth Project"
msgstr "Gforthプロジェクトについて"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:165 ../doc/gforth.texi:680
#: ../doc/gforth.texi:762 ../doc/gforth.texi:763 ../doc/gforth.texi:783
#: ../doc/gforth.texi:1069 ../doc/gforth.texi:1083 ../doc/gforth.texi:1125
#: ../doc/gforth.texi:1203 ../doc/gforth.texi:1270 ../doc/gforth.texi:1300
#: ../doc/gforth.texi:1352 ../doc/gforth.texi:1421
#, no-wrap
msgid "Gforth Environment"
msgstr "Gforth Environment"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Starting (and exiting) Gforth"
msgstr "Gforthの開始(と終了)"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:762 ../doc/gforth.texi:1421
#: ../doc/gforth.texi:1423 ../doc/gforth.texi:1497 ../doc/gforth.texi:1511
#: ../doc/gforth.texi:1541 ../doc/gforth.texi:1566 ../doc/gforth.texi:1596
#: ../doc/gforth.texi:1649 ../doc/gforth.texi:1711 ../doc/gforth.texi:1759
#: ../doc/gforth.texi:1793 ../doc/gforth.texi:1836 ../doc/gforth.texi:1860
#: ../doc/gforth.texi:1946 ../doc/gforth.texi:1998 ../doc/gforth.texi:2026
#: ../doc/gforth.texi:2084 ../doc/gforth.texi:2128 ../doc/gforth.texi:2187
#: ../doc/gforth.texi:2292 ../doc/gforth.texi:2372 ../doc/gforth.texi:2434
#: ../doc/gforth.texi:2480 ../doc/gforth.texi:2519 ../doc/gforth.texi:2581
#: ../doc/gforth.texi:2695 ../doc/gforth.texi:2759 ../doc/gforth.texi:2798
#: ../doc/gforth.texi:2881 ../doc/gforth.texi:3002 ../doc/gforth.texi:3087
#: ../doc/gforth.texi:3190 ../doc/gforth.texi:3265 ../doc/gforth.texi:3380
#: ../doc/gforth.texi:3409 ../doc/gforth.texi:3478 ../doc/gforth.texi:3518
#: ../doc/gforth.texi:3583 ../doc/gforth.texi:3626 ../doc/gforth.texi:3704
#, no-wrap
msgid "Tutorial"
msgstr "Tutorial"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Hands-on Forth Tutorial"
msgstr "実践的な Forth チュートリアル"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:1421 ../doc/gforth.texi:3704
#: ../doc/gforth.texi:3753 ../doc/gforth.texi:3895 ../doc/gforth.texi:4121
#: ../doc/gforth.texi:4209 ../doc/gforth.texi:4459 ../doc/gforth.texi:4496
#: ../doc/gforth.texi:4544 ../doc/gforth.texi:4597 ../doc/gforth.texi:4621
#, no-wrap
msgid "Introduction"
msgstr "Introduction"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "An introduction to Standard Forth"
msgstr "標準Forth(Standard Forth)の紹介"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Literals in source code::"
msgstr "Literals in source code::"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:4621 ../doc/gforth.texi:4817
#: ../doc/gforth.texi:4857 ../doc/gforth.texi:5013 ../doc/gforth.texi:5046
#: ../doc/gforth.texi:5092 ../doc/gforth.texi:5148 ../doc/gforth.texi:6890
#: ../doc/gforth.texi:7353 ../doc/gforth.texi:8607 ../doc/gforth.texi:9542
#: ../doc/gforth.texi:11159 ../doc/gforth.texi:13067 ../doc/gforth.texi:13250
#: ../doc/gforth.texi:13681 ../doc/gforth.texi:14123 ../doc/gforth.texi:15336
#: ../doc/gforth.texi:15489 ../doc/gforth.texi:16008 ../doc/gforth.texi:16433
#: ../doc/gforth.texi:17278 ../doc/gforth.texi:17662 ../doc/gforth.texi:19700
#: ../doc/gforth.texi:19809 ../doc/gforth.texi:20920 ../doc/gforth.texi:21520
#: ../doc/gforth.texi:23683 ../doc/gforth.texi:24166 ../doc/gforth.texi:25407
#: ../doc/gforth.texi:26020 ../doc/gforth.texi:26675 ../doc/gforth.texi:27607
#: ../doc/gforth.texi:28271 ../doc/gforth.texi:28338 ../doc/gforth.texi:28406
#: ../doc/gforth.texi:28435
#, no-wrap
msgid "Words"
msgstr "Words"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Forth words available in Gforth"
msgstr "Gforth で使用可能な Forth ワード"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:4817 ../doc/gforth.texi:28435
#: ../doc/gforth.texi:28436 ../doc/gforth.texi:28512
#, no-wrap
msgid "Error messages"
msgstr "Error messages"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "How to interpret them"
msgstr "エラーメッセージをどのように読み解けばいいのか"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:526 ../doc/gforth.texi:28435
#: ../doc/gforth.texi:28512 ../doc/gforth.texi:28513 ../doc/gforth.texi:28522
#: ../doc/gforth.texi:28572 ../doc/gforth.texi:28624
#, no-wrap
msgid "Tools"
msgstr "Tools"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Programming tools"
msgstr "プログラム作成支援ツール"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:531 ../doc/gforth.texi:28512
#: ../doc/gforth.texi:28624 ../doc/gforth.texi:28625 ../doc/gforth.texi:28705
#: ../doc/gforth.texi:29259 ../doc/gforth.texi:29347 ../doc/gforth.texi:29374
#: ../doc/gforth.texi:29405 ../doc/gforth.texi:29472 ../doc/gforth.texi:29610
#: ../doc/gforth.texi:29773 ../doc/gforth.texi:29829 ../doc/gforth.texi:29858
#: ../doc/gforth.texi:29954 ../doc/gforth.texi:30016
#, no-wrap
msgid "Standard conformance"
msgstr "Standard conformance"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Implementation-defined options etc."
msgstr "Gforth実装用に定義されたオプションなど"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:28624 ../doc/gforth.texi:30016
#: ../doc/gforth.texi:30101
#, no-wrap
msgid "Standard vs Extensions"
msgstr "Standard vs Extensions"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Should I use extensions?"
msgstr "拡張機能を使用する必要ある?"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:30016 ../doc/gforth.texi:30101
#: ../doc/gforth.texi:30102 ../doc/gforth.texi:30108
#, no-wrap
msgid "Model"
msgstr "Model"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "The abstract machine of Gforth"
msgstr "Gforth の抽象マシン"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:30101 ../doc/gforth.texi:30108
#: ../doc/gforth.texi:30208
#, no-wrap
msgid "Integrating Gforth"
msgstr "Integrating Gforth"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Forth as scripting language for applications"
msgstr "アプリのスクリプト言語としてのForth"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:599 ../doc/gforth.texi:30108
#: ../doc/gforth.texi:30208 ../doc/gforth.texi:30209 ../doc/gforth.texi:30210
#: ../doc/gforth.texi:30275 ../doc/gforth.texi:30299 ../doc/gforth.texi:30320
#: ../doc/gforth.texi:30363 ../doc/gforth.texi:30406 ../doc/gforth.texi:30441
#, no-wrap
msgid "Emacs and Gforth"
msgstr "Emacs and Gforth"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "The Gforth Mode"
msgstr "The Gforth Mode"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:607 ../doc/gforth.texi:30208
#: ../doc/gforth.texi:30441 ../doc/gforth.texi:30442 ../doc/gforth.texi:30464
#: ../doc/gforth.texi:30488 ../doc/gforth.texi:30586 ../doc/gforth.texi:30616
#: ../doc/gforth.texi:30638 ../doc/gforth.texi:30749 ../doc/gforth.texi:30776
#: ../doc/gforth.texi:30876 ../doc/gforth.texi:30972
#, no-wrap
msgid "Image Files"
msgstr "Image Files"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "@code{.fi} files contain compiled code"
msgstr "@code{.fi} ファイルはコンパイル済のコード"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:623 ../doc/gforth.texi:30441
#: ../doc/gforth.texi:30972 ../doc/gforth.texi:30973 ../doc/gforth.texi:30996
#: ../doc/gforth.texi:31051 ../doc/gforth.texi:31361 ../doc/gforth.texi:31527
#: ../doc/gforth.texi:31639
#, no-wrap
msgid "Engine"
msgstr "Engine"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "The inner interpreter and the primitives"
msgstr "内部インタプリタとプリミティブ・ワード"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:643 ../doc/gforth.texi:30972
#: ../doc/gforth.texi:31639 ../doc/gforth.texi:31640 ../doc/gforth.texi:31657
#: ../doc/gforth.texi:31778 ../doc/gforth.texi:31781
#, no-wrap
msgid "Cross Compiler"
msgstr "Cross Compiler"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "The Cross Compiler"
msgstr "The Cross Compiler"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:31639 ../doc/gforth.texi:31781
#: ../doc/gforth.texi:31789 ../doc/gforth.texi:32515 ../doc/gforth.texi:32547
#, no-wrap
msgid "MINOS2"
msgstr "MINOS2"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "The GUI library"
msgstr "The GUI library"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:31781 ../doc/gforth.texi:32547
#: ../doc/gforth.texi:32548 ../doc/gforth.texi:32580
#, no-wrap
msgid "Bugs"
msgstr "Bugs"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "How to report them"
msgstr "バグの報告方法について"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:32547 ../doc/gforth.texi:32580
#: ../doc/gforth.texi:32649
#, no-wrap
msgid "Origin"
msgstr "Origin"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Authors and ancestors of Gforth"
msgstr "Gforthの作者とGforthの祖先"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:32580 ../doc/gforth.texi:32649
#: ../doc/gforth.texi:32651 ../doc/gforth.texi:32669
#, no-wrap
msgid "Forth-related information"
msgstr "Forth-related information"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Books and places to look on the WWW"
msgstr "書籍とWeb上の情報"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "Licenses::"
msgstr "Licenses::"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:32669 ../doc/gforth.texi:32688
#: ../doc/gforth.texi:32689 ../doc/gforth.texi:32708
#, no-wrap
msgid "Word Index"
msgstr "Word Index"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "An item for each Forth word"
msgstr "Forth ワードのインデックス"

#. type: node
#: ../doc/gforth.texi:156 ../doc/gforth.texi:32688 ../doc/gforth.texi:32708
#, no-wrap
msgid "Concept Index"
msgstr "Concept Index"

#. type: menuentry
#: ../doc/gforth.texi:156
msgid "A menu covering many topics"
msgstr "多くのトピックを網羅したインデックス"

#. type: menuentry
#: ../doc/gforth.texi:159
msgid "--- The Detailed Node Listing ---"
msgstr "--- The Detailed Node Listing ---"

#. type: chapter
#: ../doc/gforth.texi:161 ../doc/gforth.texi:682
#, no-wrap
msgid "Goals of Gforth"
msgstr "Goals of Gforth"

#. type: section
#: ../doc/gforth.texi:163 ../doc/gforth.texi:729 ../doc/gforth.texi:732
#: ../doc/gforth.texi:733
#, no-wrap
msgid "Stability Goals"
msgstr "Stability Goals"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:783
#: ../doc/gforth.texi:784 ../doc/gforth.texi:1069
#, no-wrap
msgid "Invoking Gforth"
msgstr "Invoking Gforth"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "Getting in"
msgstr "Gforth を起動"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:783
#: ../doc/gforth.texi:1069 ../doc/gforth.texi:1070 ../doc/gforth.texi:1083
#, no-wrap
msgid "Leaving Gforth"
msgstr "Leaving Gforth"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "Getting out"
msgstr "Gforth を終了"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:1069
#: ../doc/gforth.texi:1083 ../doc/gforth.texi:1084 ../doc/gforth.texi:1125
#, no-wrap
msgid "Help on Gforth"
msgstr "Help on Gforth"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "Getting help"
msgstr "Gforth内のヘルプ"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:1083
#: ../doc/gforth.texi:1125 ../doc/gforth.texi:1126 ../doc/gforth.texi:1203
#, no-wrap
msgid "Command-line editing"
msgstr "Command-line editing"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "Gforth's command-line editor"
msgstr "Gforth内のラインエディタ"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:1125
#: ../doc/gforth.texi:1203 ../doc/gforth.texi:1204 ../doc/gforth.texi:1270
#, no-wrap
msgid "Environment variables"
msgstr "Environment variables"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "that affect how Gforth starts up"
msgstr "Gforth起動に影響する環境変数"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:1203
#: ../doc/gforth.texi:1270 ../doc/gforth.texi:1300
#, no-wrap
msgid "Gforth Files"
msgstr "Gforth Files"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "What gets installed and where"
msgstr "何が何処にインストールされるか"

#. type: node
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:1270
#: ../doc/gforth.texi:1300 ../doc/gforth.texi:1301 ../doc/gforth.texi:1352
#, no-wrap
msgid "Gforth in pipes"
msgstr "Gforth in pipes"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "Piping into or out of Gforth"
msgstr "Gforth とのパイプライン入出力"

#. type: cindex
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778 ../doc/gforth.texi:1300
#: ../doc/gforth.texi:1352 ../doc/gforth.texi:1353 ../doc/gforth.texi:1354
#, no-wrap
msgid "Startup speed"
msgstr "Startup speed"

#. type: menuentry
#: ../doc/gforth.texi:174 ../doc/gforth.texi:778
msgid "When 14ms is not fast enough ..."
msgstr "14msが満足な速度ではない場合…"

#. type: cindex
#: ../doc/gforth.texi:176 ../doc/gforth.texi:1422 ../doc/gforth.texi:1424
#, no-wrap
msgid "Forth Tutorial"
msgstr "Forth Tutorial"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Starting Gforth Tutorial::"
msgstr "Starting Gforth Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Syntax Tutorial::"
msgstr "Syntax Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Crash Course Tutorial::"
msgstr "Crash Course Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Stack Tutorial::"
msgstr "Stack Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Arithmetics Tutorial::"
msgstr "Arithmetics Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Stack Manipulation Tutorial::"
msgstr "Stack Manipulation Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Using files for Forth code Tutorial::"
msgstr "Using files for Forth code Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Comments Tutorial::"
msgstr "Comments Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Colon Definitions Tutorial::"
msgstr "Colon Definitions Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Decompilation Tutorial::"
msgstr "Decompilation Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Stack-Effect Comments Tutorial::"
msgstr "Stack-Effect Comments Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Types Tutorial::"
msgstr "Types Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Factoring Tutorial::"
msgstr "Factoring Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Designing the stack effect Tutorial::"
msgstr "Designing the stack effect Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Local Variables Tutorial::"
msgstr "Local Variables Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Conditional execution Tutorial::"
msgstr "Conditional execution Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Flags and Comparisons Tutorial::"
msgstr "Flags and Comparisons Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "General Loops Tutorial::"
msgstr "General Loops Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Counted loops Tutorial::"
msgstr "Counted loops Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Recursion Tutorial::"
msgstr "Recursion Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Leaving definitions or loops Tutorial::"
msgstr "Leaving definitions or loops Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Return Stack Tutorial::"
msgstr "Return Stack Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Memory Tutorial::"
msgstr "Memory Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Characters and Strings Tutorial::"
msgstr "Characters and Strings Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Alignment Tutorial::"
msgstr "Alignment Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Floating Point Tutorial::"
msgstr "Floating Point Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Files Tutorial::"
msgstr "Files Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Interpretation and Compilation Semantics and Immediacy Tutorial::"
msgstr "Interpretation and Compilation Semantics and Immediacy Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Execution Tokens Tutorial::"
msgstr "Execution Tokens Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Exceptions Tutorial::"
msgstr "Exceptions Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Defining Words Tutorial::"
msgstr "Defining Words Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Arrays and Records Tutorial::"
msgstr "Arrays and Records Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "POSTPONE Tutorial::"
msgstr "POSTPONE Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Literal Tutorial::"
msgstr "Literal Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Advanced macros Tutorial::"
msgstr "Advanced macros Tutorial::"

#. type: menuentry
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495
msgid "Compilation Tokens Tutorial::"
msgstr "Compilation Tokens Tutorial::"

#. type: node
#: ../doc/gforth.texi:214 ../doc/gforth.texi:1495 ../doc/gforth.texi:3583
#: ../doc/gforth.texi:3626
#, no-wrap
msgid "Wordlists and Search Order Tutorial"
msgstr "Wordlists and Search Order Tutorial"

#. type: chapter
#: ../doc/gforth.texi:216 ../doc/gforth.texi:3706
#, no-wrap
msgid "An Introduction to Standard Forth"
msgstr "An Introduction to Standard Forth"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "Introducing the Text Interpreter::"
msgstr "Introducing the Text Interpreter::"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "Stacks and Postfix notation::"
msgstr "Stacks and Postfix notation::"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "Your first definition::"
msgstr "Your first definition::"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "How does that work?::"
msgstr "How does that work?::"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "Forth is written in Forth::"
msgstr "Forth is written in Forth::"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "Review - elements of a Forth system::"
msgstr "Review - elements of a Forth system::"

#. type: menuentry
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750
msgid "Where to go next::"
msgstr "Where to go next::"

#. type: section
#: ../doc/gforth.texi:225 ../doc/gforth.texi:3750 ../doc/gforth.texi:4544
#: ../doc/gforth.texi:4597 ../doc/gforth.texi:4598
#, no-wrap
msgid "Exercises"
msgstr "Exercises"

#. type: chapter
#: ../doc/gforth.texi:227 ../doc/gforth.texi:4818
#, no-wrap
msgid "Forth Words"
msgstr "Forth Words"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Notation::"
msgstr "Notation::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Case insensitivity::"
msgstr "Case insensitivity::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Comments::"
msgstr "Comments::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Boolean Flags::"
msgstr "Boolean Flags::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Arithmetic::"
msgstr "Arithmetic::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Stack Manipulation::"
msgstr "Stack Manipulation::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Memory::"
msgstr "Memory::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Strings and Characters::"
msgstr "Strings and Characters::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Control Structures::"
msgstr "Control Structures::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Defining Words::"
msgstr "Defining Words::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Interpretation and Compilation Semantics::"
msgstr "Interpretation and Compilation Semantics::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Tokens for Words::"
msgstr "Tokens for Words::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Compiling words::"
msgstr "Compiling words::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "The Text Interpreter::"
msgstr "The Text Interpreter::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "The Input Stream::"
msgstr "The Input Stream::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Word Lists::"
msgstr "Word Lists::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Environmental Queries::"
msgstr "Environmental Queries::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Files::"
msgstr "Files::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Blocks::"
msgstr "Blocks::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Other I/O::"
msgstr "Other I/O::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "OS command line arguments::"
msgstr "OS command line arguments::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Locals::"
msgstr "Locals::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Structures::"
msgstr "Structures::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Object-oriented Forth::"
msgstr "Object-oriented Forth::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Regular Expressions::"
msgstr "Regular Expressions::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Programming Tools::"
msgstr "Programming Tools::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Multitasker::"
msgstr "Multitasker::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "C Interface::"
msgstr "C Interface::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Assembler and Code Words::"
msgstr "Assembler and Code Words::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Carnal words::"
msgstr "Carnal words::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Passing Commands to the OS::"
msgstr "Passing Commands to the OS::"

#. type: menuentry
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855
msgid "Keeping track of Time::"
msgstr "Keeping track of Time::"

#. type: section
#: ../doc/gforth.texi:261 ../doc/gforth.texi:4855 ../doc/gforth.texi:28338
#: ../doc/gforth.texi:28406 ../doc/gforth.texi:28407
#, no-wrap
msgid "Miscellaneous Words"
msgstr "Miscellaneous Words"

#. type: node
#: ../doc/gforth.texi:263 ../doc/gforth.texi:5092 ../doc/gforth.texi:5148
#: ../doc/gforth.texi:5149 ../doc/gforth.texi:5174 ../doc/gforth.texi:5275
#: ../doc/gforth.texi:5352 ../doc/gforth.texi:5378 ../doc/gforth.texi:5675
#: ../doc/gforth.texi:5861 ../doc/gforth.texi:6102 ../doc/gforth.texi:6361
#: ../doc/gforth.texi:6890
#, no-wrap
msgid "Arithmetic"
msgstr "Arithmetic"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Single precision::"
msgstr "Single precision::"

#. type: node
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172 ../doc/gforth.texi:5174
#: ../doc/gforth.texi:5275 ../doc/gforth.texi:5276 ../doc/gforth.texi:5352
#, no-wrap
msgid "Double precision"
msgstr "Double precision"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Double-cell integer arithmetic"
msgstr "2倍長整数演算"

#. type: node
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172 ../doc/gforth.texi:5275
#: ../doc/gforth.texi:5352 ../doc/gforth.texi:5353 ../doc/gforth.texi:5378
#, no-wrap
msgid "Mixed precision"
msgstr "Mixed precision"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Operations with single and double-cell integers"
msgstr "1倍長整数と2倍長整数の操作"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Integer division::"
msgstr "Integer division::"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Two-stage integer division::"
msgstr "Two-stage integer division::"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Bitwise operations::"
msgstr "Bitwise operations::"

#. type: menuentry
#: ../doc/gforth.texi:272 ../doc/gforth.texi:5172
msgid "Numeric comparison::"
msgstr "Numeric comparison::"

#. type: subsection
#: ../doc/gforth.texi:272 ../doc/gforth.texi:2799 ../doc/gforth.texi:5172
#: ../doc/gforth.texi:6102 ../doc/gforth.texi:6361 ../doc/gforth.texi:6362
#, no-wrap
msgid "Floating Point"
msgstr "Floating Point"

#. type: node
#: ../doc/gforth.texi:274 ../doc/gforth.texi:1650 ../doc/gforth.texi:5148
#: ../doc/gforth.texi:6890 ../doc/gforth.texi:6891 ../doc/gforth.texi:6926
#: ../doc/gforth.texi:7077 ../doc/gforth.texi:7162 ../doc/gforth.texi:7247
#: ../doc/gforth.texi:7253 ../doc/gforth.texi:7353
#, no-wrap
msgid "Stack Manipulation"
msgstr "Stack Manipulation"

#. type: menuentry
#: ../doc/gforth.texi:280 ../doc/gforth.texi:6924
msgid "Data stack::"
msgstr "Data stack::"

#. type: menuentry
#: ../doc/gforth.texi:280 ../doc/gforth.texi:6924
msgid "Floating point stack::"
msgstr "Floating point stack::"

#. type: menuentry
#: ../doc/gforth.texi:280 ../doc/gforth.texi:6924
msgid "Return stack::"
msgstr "Return stack::"

#. type: menuentry
#: ../doc/gforth.texi:280 ../doc/gforth.texi:6924
msgid "Locals stack::"
msgstr "Locals stack::"

#. type: subsection
#: ../doc/gforth.texi:280 ../doc/gforth.texi:6924 ../doc/gforth.texi:7247
#: ../doc/gforth.texi:7253 ../doc/gforth.texi:7254
#, no-wrap
msgid "Stack pointer manipulation"
msgstr "Stack pointer manipulation"

#. type: node
#: ../doc/gforth.texi:282 ../doc/gforth.texi:2582 ../doc/gforth.texi:6890
#: ../doc/gforth.texi:7353 ../doc/gforth.texi:7354 ../doc/gforth.texi:7371
#: ../doc/gforth.texi:7401 ../doc/gforth.texi:7628 ../doc/gforth.texi:7771
#: ../doc/gforth.texi:7883 ../doc/gforth.texi:8135 ../doc/gforth.texi:8487
#: ../doc/gforth.texi:8607
#, no-wrap
msgid "Memory"
msgstr "Memory"

#. type: menuentry
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365
msgid "Memory model::"
msgstr "Memory model::"

#. type: menuentry
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365
msgid "Dictionary allocation::"
msgstr "Dictionary allocation::"

#. type: menuentry
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365
msgid "Heap Allocation::"
msgstr "Heap Allocation::"

#. type: menuentry
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365
msgid "Memory Access::"
msgstr "Memory Access::"

#. type: menuentry
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365
msgid "Special Memory Accesses::"
msgstr "Special Memory Accesses::"

#. type: menuentry
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365
msgid "Address arithmetic::"
msgstr "Address arithmetic::"

#. type: subsection
#: ../doc/gforth.texi:290 ../doc/gforth.texi:7365 ../doc/gforth.texi:8135
#: ../doc/gforth.texi:8487 ../doc/gforth.texi:8488
#, no-wrap
msgid "Memory Blocks"
msgstr "Memory Blocks"

#. type: node
#: ../doc/gforth.texi:292 ../doc/gforth.texi:7353 ../doc/gforth.texi:8607
#: ../doc/gforth.texi:8608 ../doc/gforth.texi:8619 ../doc/gforth.texi:8658
#: ../doc/gforth.texi:8685 ../doc/gforth.texi:8879 ../doc/gforth.texi:9087
#: ../doc/gforth.texi:9494 ../doc/gforth.texi:9542
#, no-wrap
msgid "Strings and Characters"
msgstr "Strings and Characters"

#. type: menuentry
#: ../doc/gforth.texi:299 ../doc/gforth.texi:8617
msgid "Characters::"
msgstr "Characters::"

#. type: menuentry
#: ../doc/gforth.texi:299 ../doc/gforth.texi:8617
msgid "String representations::"
msgstr "String representations::"

#. type: menuentry
#: ../doc/gforth.texi:299 ../doc/gforth.texi:8617
msgid "String and character literals::"
msgstr "String and character literals::"

#. type: menuentry
#: ../doc/gforth.texi:299 ../doc/gforth.texi:8617
msgid "String words::"
msgstr "String words::"

#. type: menuentry
#: ../doc/gforth.texi:299 ../doc/gforth.texi:8617
msgid "$tring words::"
msgstr "$tring words::"

#. type: subsection
#: ../doc/gforth.texi:299 ../doc/gforth.texi:8617 ../doc/gforth.texi:9087
#: ../doc/gforth.texi:9494 ../doc/gforth.texi:9495
#, no-wrap
msgid "Counted string words"
msgstr "Counted string words"

#. type: node
#: ../doc/gforth.texi:301 ../doc/gforth.texi:8607 ../doc/gforth.texi:9542
#: ../doc/gforth.texi:9543 ../doc/gforth.texi:9563 ../doc/gforth.texi:9667
#: ../doc/gforth.texi:9711 ../doc/gforth.texi:10196 ../doc/gforth.texi:10259
#: ../doc/gforth.texi:10346 ../doc/gforth.texi:10659 ../doc/gforth.texi:10752
#: ../doc/gforth.texi:11159
#, no-wrap
msgid "Control Structures"
msgstr "Control Structures"

#. type: node
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561 ../doc/gforth.texi:9563
#: ../doc/gforth.texi:9564 ../doc/gforth.texi:9667
#, no-wrap
msgid "Selection"
msgstr "Selection"

#. type: menuentry
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561
msgid "IF ... ELSE ... ENDIF"
msgstr "IF ... ELSE ... ENDIF"

#. type: node
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561 ../doc/gforth.texi:9563
#: ../doc/gforth.texi:9667 ../doc/gforth.texi:9668 ../doc/gforth.texi:9711
#, no-wrap
msgid "Simple Loops"
msgstr "Simple Loops"

#. type: menuentry
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561
msgid "BEGIN ..."
msgstr "BEGIN ..."

#. type: node
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561 ../doc/gforth.texi:9667
#: ../doc/gforth.texi:9711 ../doc/gforth.texi:9712 ../doc/gforth.texi:10196
#, no-wrap
msgid "Counted Loops"
msgstr "Counted Loops"

#. type: kindex
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561 ../doc/gforth.texi:10058
#: ../doc/gforth.texi:10059
#, no-wrap
msgid "DO"
msgstr "DO"

#. type: menuentry
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561
msgid "BEGIN loops with multiple exits::"
msgstr "BEGIN loops with multiple exits::"

#. type: menuentry
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561
msgid "General control structures with CASE::"
msgstr "General control structures with CASE::"

#. type: menuentry
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561
msgid "Arbitrary control structures::"
msgstr "Arbitrary control structures::"

#. type: menuentry
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561
msgid "Calls and returns::"
msgstr "Calls and returns::"

#. type: subsection
#: ../doc/gforth.texi:310 ../doc/gforth.texi:9561 ../doc/gforth.texi:10659
#: ../doc/gforth.texi:10752 ../doc/gforth.texi:10753
#, no-wrap
msgid "Exception Handling"
msgstr "Exception Handling"

#. type: node
#: ../doc/gforth.texi:312 ../doc/gforth.texi:3266 ../doc/gforth.texi:9542
#: ../doc/gforth.texi:11159 ../doc/gforth.texi:11160 ../doc/gforth.texi:11181
#: ../doc/gforth.texi:11251 ../doc/gforth.texi:11338 ../doc/gforth.texi:11458
#: ../doc/gforth.texi:11536 ../doc/gforth.texi:11587 ../doc/gforth.texi:11702
#: ../doc/gforth.texi:11781 ../doc/gforth.texi:11833 ../doc/gforth.texi:11870
#: ../doc/gforth.texi:12794 ../doc/gforth.texi:12974 ../doc/gforth.texi:13004
#: ../doc/gforth.texi:13067
#, no-wrap
msgid "Defining Words"
msgstr "Defining Words"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "CREATE::"
msgstr "CREATE::"

#. type: section
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:11181
#: ../doc/gforth.texi:11251 ../doc/gforth.texi:11252 ../doc/gforth.texi:11338
#: ../doc/gforth.texi:30173
#, no-wrap
msgid "Variables"
msgstr "Variables"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Variables and user variables"
msgstr "Variables and user variables"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Constants::"
msgstr "Constants::"

#. type: node
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:11338
#: ../doc/gforth.texi:11458 ../doc/gforth.texi:11459 ../doc/gforth.texi:11536
#, no-wrap
msgid "Values"
msgstr "Values"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Initialised variables"
msgstr "Initialised variables"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Varues::"
msgstr "Varues::"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Colon Definitions::"
msgstr "Colon Definitions::"

#. type: node
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:11587
#: ../doc/gforth.texi:11702 ../doc/gforth.texi:11703 ../doc/gforth.texi:11781
#, no-wrap
msgid "Anonymous Definitions"
msgstr "Anonymous Definitions"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Definitions without names"
msgstr "名前無しのワード定義"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Quotations::"
msgstr "Quotations::"

#. type: node
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:11781
#: ../doc/gforth.texi:11833 ../doc/gforth.texi:11870
#, no-wrap
msgid "Supplying names"
msgstr "Supplying names"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Passing definition names as strings"
msgstr "定義ワードの名前を文字列として渡す"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "User-defined Defining Words::"
msgstr "User-defined Defining Words::"

#. type: node
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:11870
#: ../doc/gforth.texi:12794 ../doc/gforth.texi:12795 ../doc/gforth.texi:12974
#, no-wrap
msgid "Deferred Words"
msgstr "Deferred Words"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Allow forward references"
msgstr "前方参照の許容"

#. type: node
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:12794
#: ../doc/gforth.texi:12974 ../doc/gforth.texi:12975 ../doc/gforth.texi:13004
#, no-wrap
msgid "Forward"
msgstr "Forward"

#. type: menuentry
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179
msgid "Auto-resolved forward references"
msgstr "自動解決される前方参照"

#. type: subsection
#: ../doc/gforth.texi:326 ../doc/gforth.texi:11179 ../doc/gforth.texi:12974
#: ../doc/gforth.texi:13004 ../doc/gforth.texi:13005
#, no-wrap
msgid "Aliases"
msgstr "Aliases"

#. type: node
#: ../doc/gforth.texi:328 ../doc/gforth.texi:11833 ../doc/gforth.texi:11870
#: ../doc/gforth.texi:11871 ../doc/gforth.texi:11894 ../doc/gforth.texi:11973
#: ../doc/gforth.texi:12124 ../doc/gforth.texi:12173 ../doc/gforth.texi:12282
#: ../doc/gforth.texi:12407 ../doc/gforth.texi:12501 ../doc/gforth.texi:12637
#: ../doc/gforth.texi:12718 ../doc/gforth.texi:12743 ../doc/gforth.texi:12794
#, no-wrap
msgid "User-defined Defining Words"
msgstr "User-defined Defining Words"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "User-defined defining words with colon definitions::"
msgstr "User-defined defining words with colon definitions::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "User-defined defining words using CREATE::"
msgstr "User-defined defining words using CREATE::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "CREATE..DOES> applications::"
msgstr "CREATE..DOES> applications::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "CREATE..DOES> details::"
msgstr "CREATE..DOES> details::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "Advanced does> usage example::"
msgstr "Advanced does> usage example::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "User-defined TO and DEFER@@::"
msgstr "User-defined TO and DEFER@@::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "User-defined compile-comma::"
msgstr "User-defined compile-comma::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "Creating from a prototype::"
msgstr "Creating from a prototype::"

#. type: menuentry
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892
msgid "Making a word current::"
msgstr "Making a word current::"

#. type: code{#1}
#: ../doc/gforth.texi:339 ../doc/gforth.texi:11892 ../doc/gforth.texi:12718
#: ../doc/gforth.texi:12743 ../doc/gforth.texi:12744
#, no-wrap
msgid "Const-does>"
msgstr "Const-does>"

#. type: node
#: ../doc/gforth.texi:341 ../doc/gforth.texi:11159 ../doc/gforth.texi:13067
#: ../doc/gforth.texi:13068 ../doc/gforth.texi:13170 ../doc/gforth.texi:13250
#, no-wrap
msgid "Interpretation and Compilation Semantics"
msgstr "Interpretation and Compilation Semantics"

#. type: node
#: ../doc/gforth.texi:343 ../doc/gforth.texi:13167 ../doc/gforth.texi:13170
#, no-wrap
msgid "Combined words"
msgstr "Combined words"

#. type: node
#: ../doc/gforth.texi:345 ../doc/gforth.texi:13067 ../doc/gforth.texi:13250
#: ../doc/gforth.texi:13251 ../doc/gforth.texi:13263 ../doc/gforth.texi:13418
#: ../doc/gforth.texi:13618 ../doc/gforth.texi:13681
#, no-wrap
msgid "Tokens for Words"
msgstr "Tokens for Words"

#. type: node
#: ../doc/gforth.texi:349 ../doc/gforth.texi:13261 ../doc/gforth.texi:13263
#: ../doc/gforth.texi:13264 ../doc/gforth.texi:13418
#, no-wrap
msgid "Execution token"
msgstr "Execution token"

#. type: menuentry
#: ../doc/gforth.texi:349 ../doc/gforth.texi:13261
msgid "represents execution/interpretation semantics"
msgstr "実行時(execution/interpretation semantics)"

#. type: node
#: ../doc/gforth.texi:349 ../doc/gforth.texi:13261 ../doc/gforth.texi:13263
#: ../doc/gforth.texi:13418 ../doc/gforth.texi:13419 ../doc/gforth.texi:13618
#, no-wrap
msgid "Name token"
msgstr "Name token"

#. type: menuentry
#: ../doc/gforth.texi:349 ../doc/gforth.texi:13261
msgid "represents named words"
msgstr "名前付きワード"

#. type: subsection
#: ../doc/gforth.texi:349 ../doc/gforth.texi:13261 ../doc/gforth.texi:13418
#: ../doc/gforth.texi:13618 ../doc/gforth.texi:13619
#, no-wrap
msgid "Compilation token"
msgstr "Compilation token"

#. type: menuentry
#: ../doc/gforth.texi:349 ../doc/gforth.texi:13261
msgid "represents compilation semantics"
msgstr "コンパイル時(compilation semantics)"

#. type: node
#: ../doc/gforth.texi:351 ../doc/gforth.texi:354 ../doc/gforth.texi:13250
#: ../doc/gforth.texi:13681 ../doc/gforth.texi:13682 ../doc/gforth.texi:13697
#: ../doc/gforth.texi:13699 ../doc/gforth.texi:13842 ../doc/gforth.texi:14123
#, no-wrap
msgid "Compiling words"
msgstr "Compiling words"

#. type: node
#: ../doc/gforth.texi:354 ../doc/gforth.texi:13697 ../doc/gforth.texi:13699
#: ../doc/gforth.texi:13700 ../doc/gforth.texi:13701 ../doc/gforth.texi:13842
#, no-wrap
msgid "Literals"
msgstr "Literals"

#. type: menuentry
#: ../doc/gforth.texi:354 ../doc/gforth.texi:13697
msgid "Compiling data values"
msgstr "データ値をコンパイルします"

#. type: cindex
#: ../doc/gforth.texi:354 ../doc/gforth.texi:13697 ../doc/gforth.texi:13699
#: ../doc/gforth.texi:13842 ../doc/gforth.texi:13843 ../doc/gforth.texi:13844
#, no-wrap
msgid "Macros"
msgstr "Macros"

#. type: node
#: ../doc/gforth.texi:356 ../doc/gforth.texi:13681 ../doc/gforth.texi:14123
#: ../doc/gforth.texi:14124 ../doc/gforth.texi:14369 ../doc/gforth.texi:14471
#: ../doc/gforth.texi:14567 ../doc/gforth.texi:14640 ../doc/gforth.texi:14877
#: ../doc/gforth.texi:15303 ../doc/gforth.texi:15336
#, no-wrap
msgid "The Text Interpreter"
msgstr "The Text Interpreter"

#. type: menuentry
#: ../doc/gforth.texi:363 ../doc/gforth.texi:14367
msgid "Input Sources::"
msgstr "Input Sources::"

#. type: menuentry
#: ../doc/gforth.texi:363 ../doc/gforth.texi:14367
msgid "Number Conversion::"
msgstr "Number Conversion::"

#. type: menuentry
#: ../doc/gforth.texi:363 ../doc/gforth.texi:14367
msgid "Interpret/Compile states::"
msgstr "Interpret/Compile states::"

#. type: menuentry
#: ../doc/gforth.texi:363 ../doc/gforth.texi:14367
msgid "Interpreter Directives::"
msgstr "Interpreter Directives::"

#. type: menuentry
#: ../doc/gforth.texi:363 ../doc/gforth.texi:14367
msgid "Recognizers::"
msgstr "Recognizers::"

#. type: subsection
#: ../doc/gforth.texi:363 ../doc/gforth.texi:14367 ../doc/gforth.texi:14877
#: ../doc/gforth.texi:15303 ../doc/gforth.texi:15304
#, no-wrap
msgid "Text Interpreter Hooks"
msgstr "Text Interpreter Hooks"

#. type: node
#: ../doc/gforth.texi:365 ../doc/gforth.texi:14640 ../doc/gforth.texi:14877
#: ../doc/gforth.texi:14878 ../doc/gforth.texi:14898 ../doc/gforth.texi:15012
#: ../doc/gforth.texi:15298 ../doc/gforth.texi:15303
#, no-wrap
msgid "Recognizers"
msgstr "Recognizers"

#. type: menuentry
#: ../doc/gforth.texi:369 ../doc/gforth.texi:14896
msgid "Default Recognizers::"
msgstr "Default Recognizers::"

#. type: menuentry
#: ../doc/gforth.texi:369 ../doc/gforth.texi:14896
msgid "Dealing with existing Recognizers::"
msgstr "Dealing with existing Recognizers::"

#. type: subsubsection
#: ../doc/gforth.texi:369 ../doc/gforth.texi:14896 ../doc/gforth.texi:15012
#: ../doc/gforth.texi:15298 ../doc/gforth.texi:15299
#, no-wrap
msgid "Defining Recognizers"
msgstr "Defining Recognizers"

#. type: node
#: ../doc/gforth.texi:371 ../doc/gforth.texi:15336 ../doc/gforth.texi:15489
#: ../doc/gforth.texi:15490 ../doc/gforth.texi:15868 ../doc/gforth.texi:15910
#: ../doc/gforth.texi:15988 ../doc/gforth.texi:16008
#, no-wrap
msgid "Word Lists"
msgstr "Word Lists"

#. type: menuentry
#: ../doc/gforth.texi:375 ../doc/gforth.texi:15866
msgid "Vocabularies::"
msgstr "Vocabularies::"

#. type: menuentry
#: ../doc/gforth.texi:375 ../doc/gforth.texi:15866
msgid "Why use word lists?::"
msgstr "Why use word lists?::"

#. type: subsection
#: ../doc/gforth.texi:375 ../doc/gforth.texi:15866 ../doc/gforth.texi:15910
#: ../doc/gforth.texi:15988 ../doc/gforth.texi:15989
#, no-wrap
msgid "Word list example"
msgstr "Word list example"

#. type: node
#: ../doc/gforth.texi:377 ../doc/gforth.texi:2882 ../doc/gforth.texi:16008
#: ../doc/gforth.texi:16433 ../doc/gforth.texi:16434 ../doc/gforth.texi:16458
#: ../doc/gforth.texi:16620 ../doc/gforth.texi:16885 ../doc/gforth.texi:16962
#: ../doc/gforth.texi:17077 ../doc/gforth.texi:17278
#, no-wrap
msgid "Files"
msgstr "Files"

#. type: menuentry
#: ../doc/gforth.texi:383 ../doc/gforth.texi:16455
msgid "Forth source files::"
msgstr "Forth source files::"

#. type: menuentry
#: ../doc/gforth.texi:383 ../doc/gforth.texi:16455
msgid "General files::"
msgstr "General files::"

#. type: menuentry
#: ../doc/gforth.texi:383 ../doc/gforth.texi:16455
msgid "Redirection::"
msgstr "Redirection::"

#. type: menuentry
#: ../doc/gforth.texi:383 ../doc/gforth.texi:16455
msgid "Directories::"
msgstr "Directories::"

#. type: node
#: ../doc/gforth.texi:383 ../doc/gforth.texi:385 ../doc/gforth.texi:16455
#: ../doc/gforth.texi:16962 ../doc/gforth.texi:17077 ../doc/gforth.texi:17078
#: ../doc/gforth.texi:17131 ../doc/gforth.texi:17183
#, no-wrap
msgid "Search Paths"
msgstr "Search Paths"

#. type: menuentry
#: ../doc/gforth.texi:388 ../doc/gforth.texi:17128
msgid "Source Search Paths::"
msgstr "Source Search Paths::"

#. type: subsubsection
#: ../doc/gforth.texi:388 ../doc/gforth.texi:17128 ../doc/gforth.texi:17131
#: ../doc/gforth.texi:17183 ../doc/gforth.texi:17184
#, no-wrap
msgid "General Search Paths"
msgstr "General Search Paths"

#. type: node
#: ../doc/gforth.texi:390 ../doc/gforth.texi:17278 ../doc/gforth.texi:17662
#: ../doc/gforth.texi:17663 ../doc/gforth.texi:17682 ../doc/gforth.texi:17811
#: ../doc/gforth.texi:18036 ../doc/gforth.texi:18210 ../doc/gforth.texi:18340
#: ../doc/gforth.texi:18385 ../doc/gforth.texi:18574 ../doc/gforth.texi:19022
#: ../doc/gforth.texi:19169 ../doc/gforth.texi:19209 ../doc/gforth.texi:19447
#: ../doc/gforth.texi:19593 ../doc/gforth.texi:19681 ../doc/gforth.texi:19700
#, no-wrap
msgid "Other I/O"
msgstr "Other I/O"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:17682
#: ../doc/gforth.texi:17683 ../doc/gforth.texi:17811
#, no-wrap
msgid "Simple numeric output"
msgstr "Simple numeric output"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Predefined formats"
msgstr "定義済みの書式"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:17682
#: ../doc/gforth.texi:17811 ../doc/gforth.texi:17812 ../doc/gforth.texi:18036
#, no-wrap
msgid "Formatted numeric output"
msgstr "Formatted numeric output"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Formatted (pictured) output"
msgstr "書式化された(目に見える)出力"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Floating-point output::"
msgstr "Floating-point output::"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Miscellaneous output::"
msgstr "Miscellaneous output::"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:18210
#: ../doc/gforth.texi:18340 ../doc/gforth.texi:18341 ../doc/gforth.texi:18385
#, no-wrap
msgid "Displaying characters and strings"
msgstr "Displaying characters and strings"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Other stuff"
msgstr "その他もろもろ"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:18340
#: ../doc/gforth.texi:18385 ../doc/gforth.texi:18386 ../doc/gforth.texi:18574
#, no-wrap
msgid "Terminal output"
msgstr "Terminal output"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Cursor positioning etc."
msgstr "カーソル移動等"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Single-key input::"
msgstr "Single-key input::"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Line input and conversion::"
msgstr "Line input and conversion::"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:19022
#: ../doc/gforth.texi:19169 ../doc/gforth.texi:19170 ../doc/gforth.texi:19209
#, no-wrap
msgid "Pipes"
msgstr "Pipes"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "How to create your own pipes"
msgstr "あなた独自のパイプラインの作り方"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:19169
#: ../doc/gforth.texi:19209 ../doc/gforth.texi:19210 ../doc/gforth.texi:19447
#, no-wrap
msgid "Xchars and Unicode"
msgstr "Xchars and Unicode"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Non-ASCII characters"
msgstr "非ASCII文字"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:19209
#: ../doc/gforth.texi:19447 ../doc/gforth.texi:19593
#, no-wrap
msgid "i18n and l10n"
msgstr "i18n and l10n"

#. type: subsection
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:19448
#, no-wrap
msgid "Internationalization and Localization"
msgstr "国際化(I18n)とローカライズ"

#. type: node
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:19447
#: ../doc/gforth.texi:19593 ../doc/gforth.texi:19594 ../doc/gforth.texi:19681
#, no-wrap
msgid "Substitute"
msgstr "Substitute"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Text macro substitution"
msgstr "テキストマクロ置換"

#. type: subsection
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680 ../doc/gforth.texi:19593
#: ../doc/gforth.texi:19681 ../doc/gforth.texi:19682
#, no-wrap
msgid "CSV Reader"
msgstr "CSV Reader"

#. type: menuentry
#: ../doc/gforth.texi:404 ../doc/gforth.texi:17680
msgid "Data import facility"
msgstr "データ・インポート機能"

#. type: node
#: ../doc/gforth.texi:406 ../doc/gforth.texi:19700 ../doc/gforth.texi:19809
#: ../doc/gforth.texi:19810 ../doc/gforth.texi:19828 ../doc/gforth.texi:20874
#: ../doc/gforth.texi:20920
#, no-wrap
msgid "Locals"
msgstr "Locals"

#. type: menuentry
#: ../doc/gforth.texi:409 ../doc/gforth.texi:19826
msgid "Gforth locals::"
msgstr "Gforth locals::"

#. type: subsection
#: ../doc/gforth.texi:409 ../doc/gforth.texi:19826 ../doc/gforth.texi:19828
#: ../doc/gforth.texi:20874 ../doc/gforth.texi:20875
#, no-wrap
msgid "Standard Forth locals"
msgstr "Standard Forth locals"

#. type: node
#: ../doc/gforth.texi:411 ../doc/gforth.texi:19828 ../doc/gforth.texi:19829
#: ../doc/gforth.texi:19830 ../doc/gforth.texi:20005 ../doc/gforth.texi:20206
#: ../doc/gforth.texi:20429 ../doc/gforth.texi:20445 ../doc/gforth.texi:20517
#: ../doc/gforth.texi:20716 ../doc/gforth.texi:20874
#, no-wrap
msgid "Gforth locals"
msgstr "Gforth locals"

#. type: menuentry
#: ../doc/gforth.texi:418 ../doc/gforth.texi:20003
msgid "Locals definition words::"
msgstr "Locals definition words::"

#. type: menuentry
#: ../doc/gforth.texi:418 ../doc/gforth.texi:20003
msgid "Where are locals visible by name?::"
msgstr "Where are locals visible by name?::"

#. type: menuentry
#: ../doc/gforth.texi:418 ../doc/gforth.texi:20003
msgid "How long do locals live?::"
msgstr "How long do locals live?::"

#. type: menuentry
#: ../doc/gforth.texi:418 ../doc/gforth.texi:20003
msgid "Locals programming style::"
msgstr "Locals programming style::"

#. type: menuentry
#: ../doc/gforth.texi:418 ../doc/gforth.texi:20003
msgid "Locals implementation::"
msgstr "Locals implementation::"

#. type: subsubsection
#: ../doc/gforth.texi:418 ../doc/gforth.texi:20003 ../doc/gforth.texi:20517
#: ../doc/gforth.texi:20716 ../doc/gforth.texi:20717
#, no-wrap
msgid "Closures"
msgstr "Closures"

#. type: node
#: ../doc/gforth.texi:420 ../doc/gforth.texi:19809 ../doc/gforth.texi:20920
#: ../doc/gforth.texi:20921 ../doc/gforth.texi:20944 ../doc/gforth.texi:21031
#: ../doc/gforth.texi:21142 ../doc/gforth.texi:21176 ../doc/gforth.texi:21212
#: ../doc/gforth.texi:21354 ../doc/gforth.texi:21520
#, no-wrap
msgid "Structures"
msgstr "Structures"

#. type: menuentry
#: ../doc/gforth.texi:427 ../doc/gforth.texi:20942
msgid "Why explicit structure support?::"
msgstr "Why explicit structure support?::"

#. type: menuentry
#: ../doc/gforth.texi:427 ../doc/gforth.texi:20942
msgid "Structure Usage::"
msgstr "Structure Usage::"

#. type: menuentry
#: ../doc/gforth.texi:427 ../doc/gforth.texi:20942
msgid "Structure Naming Convention::"
msgstr "Structure Naming Convention::"

#. type: menuentry
#: ../doc/gforth.texi:427 ../doc/gforth.texi:20942
msgid "Structure Implementation::"
msgstr "Structure Implementation::"

#. type: menuentry
#: ../doc/gforth.texi:427 ../doc/gforth.texi:20942
msgid "Structure Glossary::"
msgstr "Structure Glossary::"

#. type: subsection
#: ../doc/gforth.texi:427 ../doc/gforth.texi:20942 ../doc/gforth.texi:21212
#: ../doc/gforth.texi:21354 ../doc/gforth.texi:21355
#, no-wrap
msgid "Forth200x Structures"
msgstr "Forth200x Structures"

#. type: node
#: ../doc/gforth.texi:429 ../doc/gforth.texi:20920 ../doc/gforth.texi:21520
#: ../doc/gforth.texi:21521 ../doc/gforth.texi:21541 ../doc/gforth.texi:21572
#: ../doc/gforth.texi:21643 ../doc/gforth.texi:22754 ../doc/gforth.texi:23246
#: ../doc/gforth.texi:23556 ../doc/gforth.texi:23602 ../doc/gforth.texi:23683
#, no-wrap
msgid "Object-oriented Forth"
msgstr "Object-oriented Forth"

#. type: menuentry
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538
msgid "Why object-oriented programming?::"
msgstr "Why object-oriented programming?::"

#. type: menuentry
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538
msgid "Object-Oriented Terminology::"
msgstr "Object-Oriented Terminology::"

#. type: menuentry
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538
msgid "Objects::"
msgstr "Objects::"

#. type: menuentry
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538
msgid "OOF::"
msgstr "OOF::"

#. type: menuentry
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538
msgid "Mini-OOF::"
msgstr "Mini-OOF::"

#. type: menuentry
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538
msgid "Mini-OOF2::"
msgstr "Mini-OOF2::"

#. type: subsection
#: ../doc/gforth.texi:437 ../doc/gforth.texi:21538 ../doc/gforth.texi:23556
#: ../doc/gforth.texi:23602 ../doc/gforth.texi:23603
#, no-wrap
msgid "Comparison with other object models"
msgstr "Comparison with other object models"

#. type: subsection
#: ../doc/gforth.texi:439 ../doc/gforth.texi:21644
#, no-wrap
msgid "The @file{objects.fs} model"
msgstr "The @file{objects.fs} model"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Properties of the Objects model::"
msgstr "Properties of the Objects model::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Basic Objects Usage::"
msgstr "Basic Objects Usage::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "The Objects base class::"
msgstr "The Objects base class::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Creating objects::"
msgstr "Creating objects::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Object-Oriented Programming Style::"
msgstr "Object-Oriented Programming Style::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Class Binding::"
msgstr "Class Binding::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Method conveniences::"
msgstr "Method conveniences::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Classes and Scoping::"
msgstr "Classes and Scoping::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Dividing classes::"
msgstr "Dividing classes::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Object Interfaces::"
msgstr "Object Interfaces::"

#. type: menuentry
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679
msgid "Objects Implementation::"
msgstr "Objects Implementation::"

#. type: node
#: ../doc/gforth.texi:452 ../doc/gforth.texi:21679 ../doc/gforth.texi:22171
#: ../doc/gforth.texi:22311
#, no-wrap
msgid "Objects Glossary"
msgstr "Objects Glossary"

#. type: subsection
#: ../doc/gforth.texi:454 ../doc/gforth.texi:22755
#, no-wrap
msgid "The @file{oof.fs} model"
msgstr "The @file{oof.fs} model"

#. type: menuentry
#: ../doc/gforth.texi:460 ../doc/gforth.texi:22778
msgid "Properties of the OOF model::"
msgstr "Properties of the OOF model::"

#. type: menuentry
#: ../doc/gforth.texi:460 ../doc/gforth.texi:22778
msgid "Basic OOF Usage::"
msgstr "Basic OOF Usage::"

#. type: menuentry
#: ../doc/gforth.texi:460 ../doc/gforth.texi:22778
msgid "The OOF base class::"
msgstr "The OOF base class::"

#. type: menuentry
#: ../doc/gforth.texi:460 ../doc/gforth.texi:22778
msgid "Class Declaration::"
msgstr "Class Declaration::"

#. type: subsubsection
#: ../doc/gforth.texi:460 ../doc/gforth.texi:22778 ../doc/gforth.texi:23122
#: ../doc/gforth.texi:23241 ../doc/gforth.texi:23242
#, no-wrap
msgid "Class Implementation"
msgstr "Class Implementation"

#. type: subsection
#: ../doc/gforth.texi:462 ../doc/gforth.texi:23247
#, no-wrap
msgid "The @file{mini-oof.fs} model"
msgstr "The @file{mini-oof.fs} model"

#. type: menuentry
#: ../doc/gforth.texi:466 ../doc/gforth.texi:23259
msgid "Basic Mini-OOF Usage::"
msgstr "Basic Mini-OOF Usage::"

#. type: menuentry
#: ../doc/gforth.texi:466 ../doc/gforth.texi:23259
msgid "Mini-OOF Example::"
msgstr "Mini-OOF Example::"

#. type: node
#: ../doc/gforth.texi:466 ../doc/gforth.texi:23259 ../doc/gforth.texi:23349
#: ../doc/gforth.texi:23413
#, no-wrap
msgid "Mini-OOF Implementation"
msgstr "Mini-OOF Implementation"

#. type: node
#: ../doc/gforth.texi:468 ../doc/gforth.texi:23683 ../doc/gforth.texi:24166
#: ../doc/gforth.texi:24167 ../doc/gforth.texi:24185 ../doc/gforth.texi:24323
#: ../doc/gforth.texi:24454 ../doc/gforth.texi:24482 ../doc/gforth.texi:24662
#: ../doc/gforth.texi:24798 ../doc/gforth.texi:24849 ../doc/gforth.texi:25029
#: ../doc/gforth.texi:25159 ../doc/gforth.texi:25251 ../doc/gforth.texi:25407
#, no-wrap
msgid "Programming Tools"
msgstr "Programming Tools"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24185
#: ../doc/gforth.texi:24186 ../doc/gforth.texi:24323
#, no-wrap
msgid "Locating source code definitions"
msgstr "Locating source code definitions"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "and editing"
msgstr "and editing"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24185
#: ../doc/gforth.texi:24323 ../doc/gforth.texi:24324 ../doc/gforth.texi:24454
#, no-wrap
msgid "Locating uses of a word"
msgstr "Locating uses of a word"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "@code{where}."
msgstr "@code{where}."

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24323
#: ../doc/gforth.texi:24454 ../doc/gforth.texi:24455 ../doc/gforth.texi:24482
#, no-wrap
msgid "Locating exception source"
msgstr "Locating exception source"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "Examining backtraces."
msgstr "バックトレースの検証(examing)"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24454
#: ../doc/gforth.texi:24482 ../doc/gforth.texi:24483 ../doc/gforth.texi:24662
#, no-wrap
msgid "Examining compiled code"
msgstr "Examining compiled code"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "@code{see} and friends."
msgstr "@code{see} and friends."

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24482
#: ../doc/gforth.texi:24662 ../doc/gforth.texi:24798
#, no-wrap
msgid "Examining data"
msgstr "Examining data"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "Stacks and Memory."
msgstr "スタック と メモリ"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24662
#: ../doc/gforth.texi:24798 ../doc/gforth.texi:24799 ../doc/gforth.texi:24849
#, no-wrap
msgid "Forgetting words"
msgstr "Forgetting words"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "Usually before reloading."
msgstr "通常、再ロード前に使われます"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24798
#: ../doc/gforth.texi:24849 ../doc/gforth.texi:24850 ../doc/gforth.texi:25029
#, no-wrap
msgid "Debugging"
msgstr "Debugging"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "By inserting @code{~~} tracers."
msgstr "トレーサー @code{~~} を適宜挿入することによって"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:24849
#: ../doc/gforth.texi:25029 ../doc/gforth.texi:25030 ../doc/gforth.texi:25159
#, no-wrap
msgid "Assertions"
msgstr "Assertions"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "Making your programs self-checking."
msgstr "あなたのプログラムを自己チェックさせます"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:25029
#: ../doc/gforth.texi:25159 ../doc/gforth.texi:25160 ../doc/gforth.texi:25251
#, no-wrap
msgid "Singlestep Debugger"
msgstr "Singlestep Debugger"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "Executing your program word by word."
msgstr "あなたのプログラムをワート単位で実行します"

#. type: node
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183 ../doc/gforth.texi:25159
#: ../doc/gforth.texi:25251
#, no-wrap
msgid "Code Coverage"
msgstr "Code Coverage"

#. type: menuentry
#: ../doc/gforth.texi:479 ../doc/gforth.texi:24183
msgid "Measure execution frequency."
msgstr "実行頻度を測定します"

#. type: node
#: ../doc/gforth.texi:481 ../doc/gforth.texi:24166 ../doc/gforth.texi:25407
#: ../doc/gforth.texi:25408 ../doc/gforth.texi:25423 ../doc/gforth.texi:25926
#: ../doc/gforth.texi:26020
#, no-wrap
msgid "Multitasker"
msgstr "Multitasker"

#. type: node
#: ../doc/gforth.texi:484 ../doc/gforth.texi:486 ../doc/gforth.texi:25414
#: ../doc/gforth.texi:25423 ../doc/gforth.texi:25424 ../doc/gforth.texi:25448
#: ../doc/gforth.texi:25654 ../doc/gforth.texi:25754 ../doc/gforth.texi:25813
#: ../doc/gforth.texi:25864 ../doc/gforth.texi:25926
#, no-wrap
msgid "Pthreads"
msgstr "Pthreads"

#. type: menuentry
#: ../doc/gforth.texi:484 ../doc/gforth.texi:25414
msgid "Native Unix multitasker"
msgstr "ネイティブ Unix 用マルチタスカー"

#. type: subsection
#: ../doc/gforth.texi:484 ../doc/gforth.texi:25414 ../doc/gforth.texi:25423
#: ../doc/gforth.texi:25926 ../doc/gforth.texi:25927
#, no-wrap
msgid "Cilk"
msgstr "Cilk"

#. type: menuentry
#: ../doc/gforth.texi:484 ../doc/gforth.texi:25414
msgid "Implements Cilk-like spawn+sync"
msgstr "Cilk風の spawn+sync 実装"

#. type: menuentry
#: ../doc/gforth.texi:492 ../doc/gforth.texi:25446
msgid "Basic multi-tasking::"
msgstr "Basic multi-tasking::"

#. type: menuentry
#: ../doc/gforth.texi:492 ../doc/gforth.texi:25446
msgid "Task-local data::"
msgstr "Task-local data::"

#. type: menuentry
#: ../doc/gforth.texi:492 ../doc/gforth.texi:25446
msgid "Semaphores::"
msgstr "Semaphores::"

#. type: menuentry
#: ../doc/gforth.texi:492 ../doc/gforth.texi:25446
msgid "Hardware operations for multi-tasking::"
msgstr "Hardware operations for multi-tasking::"

#. type: subsubsection
#: ../doc/gforth.texi:492 ../doc/gforth.texi:25446 ../doc/gforth.texi:25813
#: ../doc/gforth.texi:25864 ../doc/gforth.texi:25865
#, no-wrap
msgid "Message queues"
msgstr "Message queues"

#. type: node
#: ../doc/gforth.texi:494 ../doc/gforth.texi:25407 ../doc/gforth.texi:26020
#: ../doc/gforth.texi:26021 ../doc/gforth.texi:26052 ../doc/gforth.texi:26120
#: ../doc/gforth.texi:26260 ../doc/gforth.texi:26306 ../doc/gforth.texi:26383
#: ../doc/gforth.texi:26483 ../doc/gforth.texi:26553 ../doc/gforth.texi:26582
#: ../doc/gforth.texi:26618 ../doc/gforth.texi:26659 ../doc/gforth.texi:26675
#, no-wrap
msgid "C Interface"
msgstr "C Interface"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Calling C Functions::"
msgstr "Calling C Functions::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Declaring C Functions::"
msgstr "Declaring C Functions::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Calling C function pointers::"
msgstr "Calling C function pointers::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Defining library interfaces::"
msgstr "Defining library interfaces::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Declaring OS-level libraries::"
msgstr "Declaring OS-level libraries::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Callbacks::"
msgstr "Callbacks::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "C interface internals::"
msgstr "C interface internals::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Low-Level C Interface Words::"
msgstr "Low-Level C Interface Words::"

#. type: menuentry
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050
msgid "Automated interface generation using SWIG::"
msgstr "Automated interface generation using SWIG::"

#. type: node
#: ../doc/gforth.texi:505 ../doc/gforth.texi:26050 ../doc/gforth.texi:26618
#: ../doc/gforth.texi:26659
#, no-wrap
msgid "Migrating the C interface from earlier Gforth"
msgstr "Migrating the C interface from earlier Gforth"

#. type: node
#: ../doc/gforth.texi:507 ../doc/gforth.texi:26020 ../doc/gforth.texi:26675
#: ../doc/gforth.texi:26676 ../doc/gforth.texi:26693 ../doc/gforth.texi:26907
#: ../doc/gforth.texi:26960 ../doc/gforth.texi:27007 ../doc/gforth.texi:27115
#: ../doc/gforth.texi:27328 ../doc/gforth.texi:27356 ../doc/gforth.texi:27440
#: ../doc/gforth.texi:27465 ../doc/gforth.texi:27578 ../doc/gforth.texi:27607
#, no-wrap
msgid "Assembler and Code Words"
msgstr "Assembler and Code Words"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:26693
#: ../doc/gforth.texi:26907
#, no-wrap
msgid "Assembler Definitions"
msgstr "Assembler Definitions"

#. type: subsection
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:26694
#, no-wrap
msgid "Definitions in assembly language"
msgstr "Definitions in assembly language"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:26693
#: ../doc/gforth.texi:26907 ../doc/gforth.texi:26908 ../doc/gforth.texi:26960
#, no-wrap
msgid "Common Assembler"
msgstr "Common Assembler"

#. type: menuentry
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691
msgid "Assembler Syntax"
msgstr "アセンブラ文法"

#. type: menuentry
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691
msgid "Common Disassembler::"
msgstr "Common Disassembler::"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:26960
#: ../doc/gforth.texi:27007 ../doc/gforth.texi:27008 ../doc/gforth.texi:27115
#, no-wrap
msgid "386 Assembler"
msgstr "386 Assembler"

#. type: menuentry
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691
msgid "Deviations and special cases"
msgstr "逸脱(deviations)と特殊ケース"

#. type: menuentry
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691
msgid "AMD64 Assembler::"
msgstr "AMD64 Assembler::"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:27115
#: ../doc/gforth.texi:27328 ../doc/gforth.texi:27329 ../doc/gforth.texi:27356
#, no-wrap
msgid "Alpha Assembler"
msgstr "Alpha Assembler"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:27328
#: ../doc/gforth.texi:27356 ../doc/gforth.texi:27357 ../doc/gforth.texi:27440
#, no-wrap
msgid "MIPS assembler"
msgstr "MIPS assembler"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:27356
#: ../doc/gforth.texi:27440 ../doc/gforth.texi:27441 ../doc/gforth.texi:27465
#, no-wrap
msgid "PowerPC assembler"
msgstr "PowerPC assembler"

#. type: node
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:27440
#: ../doc/gforth.texi:27465 ../doc/gforth.texi:27466 ../doc/gforth.texi:27578
#, no-wrap
msgid "ARM Assembler"
msgstr "ARM Assembler"

#. type: subsection
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691 ../doc/gforth.texi:27465
#: ../doc/gforth.texi:27578 ../doc/gforth.texi:27579
#, no-wrap
msgid "Other assemblers"
msgstr "Other assemblers"

#. type: menuentry
#: ../doc/gforth.texi:518 ../doc/gforth.texi:26691
msgid "How to write them"
msgstr "アセンブラ自体の書き方"

#. type: node
#: ../doc/gforth.texi:520 ../doc/gforth.texi:26675 ../doc/gforth.texi:27607
#: ../doc/gforth.texi:27608 ../doc/gforth.texi:27620 ../doc/gforth.texi:27707
#: ../doc/gforth.texi:27959 ../doc/gforth.texi:28271
#, no-wrap
msgid "Carnal words"
msgstr "Carnal words"

#. type: menuentry
#: ../doc/gforth.texi:524 ../doc/gforth.texi:27618
msgid "Header fields::"
msgstr "Header fields::"

#. type: menuentry
#: ../doc/gforth.texi:524 ../doc/gforth.texi:27618
msgid "Header methods::"
msgstr "Header methods::"

#. type: subsection
#: ../doc/gforth.texi:524 ../doc/gforth.texi:27618 ../doc/gforth.texi:27707
#: ../doc/gforth.texi:27959 ../doc/gforth.texi:27960
#, no-wrap
msgid "Threading Words"
msgstr "Threading Words"

#. type: node
#: ../doc/gforth.texi:529 ../doc/gforth.texi:28518 ../doc/gforth.texi:28522
#: ../doc/gforth.texi:28572
#, no-wrap
msgid "Standard Report"
msgstr "Standard Report"

#. type: menuentry
#: ../doc/gforth.texi:529 ../doc/gforth.texi:28518
msgid "Report the words used, sorted by wordset."
msgstr "使用されたワードをワードセットごとにソートして報告します"

#. type: node
#: ../doc/gforth.texi:529 ../doc/gforth.texi:28518 ../doc/gforth.texi:28522
#: ../doc/gforth.texi:28572
#, no-wrap
msgid "Stack depth changes"
msgstr "Stack depth changes"

#. type: menuentry
#: ../doc/gforth.texi:529 ../doc/gforth.texi:28518
msgid "Where does this stack item come from?"
msgstr "このスタック値はどこから来たのか?"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The Core Words::"
msgstr "The Core Words::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Block word set::"
msgstr "The optional Block word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Double Number word set::"
msgstr "The optional Double Number word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Exception word set::"
msgstr "The optional Exception word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Facility word set::"
msgstr "The optional Facility word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional File-Access word set::"
msgstr "The optional File-Access word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Floating-Point word set::"
msgstr "The optional Floating-Point word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Locals word set::"
msgstr "The optional Locals word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Memory-Allocation word set::"
msgstr "The optional Memory-Allocation word set::"

#. type: menuentry
#: ../doc/gforth.texi:543 ../doc/gforth.texi:28701
msgid "The optional Programming-Tools word set::"
msgstr "The optional Programming-Tools word set::"

#. type: node
#: ../doc/gforth.texi:543 ../doc/gforth.texi:594 ../doc/gforth.texi:28701
#: ../doc/gforth.texi:29858 ../doc/gforth.texi:29954 ../doc/gforth.texi:29955
#: ../doc/gforth.texi:29967 ../doc/gforth.texi:29987
#, no-wrap
msgid "The optional Search-Order word set"
msgstr "The optional Search-Order word set"

#. type: node
#: ../doc/gforth.texi:545 ../doc/gforth.texi:28705 ../doc/gforth.texi:28707
#: ../doc/gforth.texi:28719 ../doc/gforth.texi:28966 ../doc/gforth.texi:29215
#: ../doc/gforth.texi:29259
#, no-wrap
msgid "The Core Words"
msgstr "The Core Words"

#. type: node
#: ../doc/gforth.texi:549 ../doc/gforth.texi:28716 ../doc/gforth.texi:28719
#: ../doc/gforth.texi:28966
#, no-wrap
msgid "core-idef"
msgstr "core-idef"

#. type: subsection
#: ../doc/gforth.texi:549 ../doc/gforth.texi:555 ../doc/gforth.texi:563
#: ../doc/gforth.texi:568 ../doc/gforth.texi:573 ../doc/gforth.texi:578
#: ../doc/gforth.texi:583 ../doc/gforth.texi:587 ../doc/gforth.texi:592
#: ../doc/gforth.texi:597 ../doc/gforth.texi:28716 ../doc/gforth.texi:28720
#: ../doc/gforth.texi:29269 ../doc/gforth.texi:29274 ../doc/gforth.texi:29382
#: ../doc/gforth.texi:29387 ../doc/gforth.texi:29414 ../doc/gforth.texi:29419
#: ../doc/gforth.texi:29481 ../doc/gforth.texi:29485 ../doc/gforth.texi:29619
#: ../doc/gforth.texi:29624 ../doc/gforth.texi:29782 ../doc/gforth.texi:29787
#: ../doc/gforth.texi:29837 ../doc/gforth.texi:29842 ../doc/gforth.texi:29867
#: ../doc/gforth.texi:29872 ../doc/gforth.texi:29963 ../doc/gforth.texi:29968
#, no-wrap
msgid "Implementation Defined Options"
msgstr "Implementation Defined Options"

#. type: node
#: ../doc/gforth.texi:549 ../doc/gforth.texi:28716 ../doc/gforth.texi:28719
#: ../doc/gforth.texi:28966 ../doc/gforth.texi:29215
#, no-wrap
msgid "core-ambcond"
msgstr "core-ambcond"

#. type: menuentry
#: ../doc/gforth.texi:549 ../doc/gforth.texi:555 ../doc/gforth.texi:559
#: ../doc/gforth.texi:568 ../doc/gforth.texi:573 ../doc/gforth.texi:578
#: ../doc/gforth.texi:583 ../doc/gforth.texi:592 ../doc/gforth.texi:597
#: ../doc/gforth.texi:28716 ../doc/gforth.texi:29269 ../doc/gforth.texi:29355
#: ../doc/gforth.texi:29414 ../doc/gforth.texi:29481 ../doc/gforth.texi:29619
#: ../doc/gforth.texi:29782 ../doc/gforth.texi:29867 ../doc/gforth.texi:29963
msgid "Ambiguous Conditions"
msgstr "あいまいな条件"

#. type: node
#: ../doc/gforth.texi:549 ../doc/gforth.texi:28716 ../doc/gforth.texi:28966
#: ../doc/gforth.texi:29215
#, no-wrap
msgid "core-other"
msgstr "core-other"

#. type: menuentry
#: ../doc/gforth.texi:549 ../doc/gforth.texi:555 ../doc/gforth.texi:28716
#: ../doc/gforth.texi:29269
msgid "Other System Documentation"
msgstr "その他のシステム・ドキュメント"

#. type: node
#: ../doc/gforth.texi:551 ../doc/gforth.texi:28705 ../doc/gforth.texi:29259
#: ../doc/gforth.texi:29260 ../doc/gforth.texi:29273 ../doc/gforth.texi:29293
#: ../doc/gforth.texi:29330 ../doc/gforth.texi:29347
#, no-wrap
msgid "The optional Block word set"
msgstr "The optional Block word set"

#. type: node
#: ../doc/gforth.texi:555 ../doc/gforth.texi:29269 ../doc/gforth.texi:29273
#: ../doc/gforth.texi:29293
#, no-wrap
msgid "block-idef"
msgstr "block-idef"

#. type: node
#: ../doc/gforth.texi:555 ../doc/gforth.texi:29269 ../doc/gforth.texi:29273
#: ../doc/gforth.texi:29293 ../doc/gforth.texi:29330
#, no-wrap
msgid "block-ambcond"
msgstr "block-ambcond"

#. type: node
#: ../doc/gforth.texi:555 ../doc/gforth.texi:29269 ../doc/gforth.texi:29293
#: ../doc/gforth.texi:29330
#, no-wrap
msgid "block-other"
msgstr "block-other"

#. type: node
#: ../doc/gforth.texi:557 ../doc/gforth.texi:29259 ../doc/gforth.texi:29347
#: ../doc/gforth.texi:29348 ../doc/gforth.texi:29359 ../doc/gforth.texi:29374
#, no-wrap
msgid "The optional Double Number word set"
msgstr "The optional Double Number word set"

#. type: node
#: ../doc/gforth.texi:559 ../doc/gforth.texi:29355 ../doc/gforth.texi:29359
#, no-wrap
msgid "double-ambcond"
msgstr "double-ambcond"

#. type: node
#: ../doc/gforth.texi:561 ../doc/gforth.texi:29347 ../doc/gforth.texi:29374
#: ../doc/gforth.texi:29375 ../doc/gforth.texi:29386 ../doc/gforth.texi:29405
#, no-wrap
msgid "The optional Exception word set"
msgstr "The optional Exception word set"

#. type: node
#: ../doc/gforth.texi:563 ../doc/gforth.texi:29382 ../doc/gforth.texi:29386
#, no-wrap
msgid "exception-idef"
msgstr "exception-idef"

#. type: node
#: ../doc/gforth.texi:565 ../doc/gforth.texi:29374 ../doc/gforth.texi:29405
#: ../doc/gforth.texi:29406 ../doc/gforth.texi:29418 ../doc/gforth.texi:29455
#: ../doc/gforth.texi:29472
#, no-wrap
msgid "The optional Facility word set"
msgstr "The optional Facility word set"

#. type: node
#: ../doc/gforth.texi:568 ../doc/gforth.texi:29414 ../doc/gforth.texi:29418
#: ../doc/gforth.texi:29455
#, no-wrap
msgid "facility-idef"
msgstr "facility-idef"

#. type: node
#: ../doc/gforth.texi:568 ../doc/gforth.texi:29414 ../doc/gforth.texi:29418
#: ../doc/gforth.texi:29455
#, no-wrap
msgid "facility-ambcond"
msgstr "facility-ambcond"

#. type: node
#: ../doc/gforth.texi:570 ../doc/gforth.texi:29405 ../doc/gforth.texi:29472
#: ../doc/gforth.texi:29473 ../doc/gforth.texi:29484 ../doc/gforth.texi:29564
#: ../doc/gforth.texi:29610
#, no-wrap
msgid "The optional File-Access word set"
msgstr "The optional File-Access word set"

#. type: node
#: ../doc/gforth.texi:573 ../doc/gforth.texi:29481 ../doc/gforth.texi:29484
#: ../doc/gforth.texi:29564
#, no-wrap
msgid "file-idef"
msgstr "file-idef"

#. type: node
#: ../doc/gforth.texi:573 ../doc/gforth.texi:29481 ../doc/gforth.texi:29484
#: ../doc/gforth.texi:29564
#, no-wrap
msgid "file-ambcond"
msgstr "file-ambcond"

#. type: node
#: ../doc/gforth.texi:575 ../doc/gforth.texi:29472 ../doc/gforth.texi:29610
#: ../doc/gforth.texi:29611 ../doc/gforth.texi:29623 ../doc/gforth.texi:29663
#: ../doc/gforth.texi:29773
#, no-wrap
msgid "The optional Floating-Point word set"
msgstr "The optional Floating-Point word set"

#. type: node
#: ../doc/gforth.texi:578 ../doc/gforth.texi:29619 ../doc/gforth.texi:29623
#: ../doc/gforth.texi:29663
#, no-wrap
msgid "floating-idef"
msgstr "floating-idef"

#. type: node
#: ../doc/gforth.texi:578 ../doc/gforth.texi:29619 ../doc/gforth.texi:29623
#: ../doc/gforth.texi:29663
#, no-wrap
msgid "floating-ambcond"
msgstr "floating-ambcond"

#. type: node
#: ../doc/gforth.texi:580 ../doc/gforth.texi:29610 ../doc/gforth.texi:29773
#: ../doc/gforth.texi:29774 ../doc/gforth.texi:29786 ../doc/gforth.texi:29805
#: ../doc/gforth.texi:29829
#, no-wrap
msgid "The optional Locals word set"
msgstr "The optional Locals word set"

#. type: node
#: ../doc/gforth.texi:583 ../doc/gforth.texi:29782 ../doc/gforth.texi:29786
#: ../doc/gforth.texi:29805
#, no-wrap
msgid "locals-idef"
msgstr "locals-idef"

#. type: node
#: ../doc/gforth.texi:583 ../doc/gforth.texi:29782 ../doc/gforth.texi:29786
#: ../doc/gforth.texi:29805
#, no-wrap
msgid "locals-ambcond"
msgstr "locals-ambcond"

#. type: node
#: ../doc/gforth.texi:585 ../doc/gforth.texi:29773 ../doc/gforth.texi:29829
#: ../doc/gforth.texi:29830 ../doc/gforth.texi:29841 ../doc/gforth.texi:29858
#, no-wrap
msgid "The optional Memory-Allocation word set"
msgstr "The optional Memory-Allocation word set"

#. type: node
#: ../doc/gforth.texi:587 ../doc/gforth.texi:29837 ../doc/gforth.texi:29841
#, no-wrap
msgid "memory-idef"
msgstr "memory-idef"

#. type: node
#: ../doc/gforth.texi:589 ../doc/gforth.texi:29829 ../doc/gforth.texi:29858
#: ../doc/gforth.texi:29859 ../doc/gforth.texi:29871 ../doc/gforth.texi:29904
#: ../doc/gforth.texi:29954
#, no-wrap
msgid "The optional Programming-Tools word set"
msgstr "The optional Programming-Tools word set"

#. type: node
#: ../doc/gforth.texi:592 ../doc/gforth.texi:29867 ../doc/gforth.texi:29871
#: ../doc/gforth.texi:29904
#, no-wrap
msgid "programming-idef"
msgstr "programming-idef"

#. type: node
#: ../doc/gforth.texi:592 ../doc/gforth.texi:29867 ../doc/gforth.texi:29871
#: ../doc/gforth.texi:29904
#, no-wrap
msgid "programming-ambcond"
msgstr "programming-ambcond"

#. type: node
#: ../doc/gforth.texi:597 ../doc/gforth.texi:29963 ../doc/gforth.texi:29967
#: ../doc/gforth.texi:29987
#, no-wrap
msgid "search-idef"
msgstr "search-idef"

#. type: node
#: ../doc/gforth.texi:597 ../doc/gforth.texi:29963 ../doc/gforth.texi:29967
#: ../doc/gforth.texi:29987
#, no-wrap
msgid "search-ambcond"
msgstr "search-ambcond"

#. type: node
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272 ../doc/gforth.texi:30275
#: ../doc/gforth.texi:30276 ../doc/gforth.texi:30299
#, no-wrap
msgid "Installing gforth.el"
msgstr "Installing gforth.el"

#. type: menuentry
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272
msgid "Making Emacs aware of Forth."
msgstr "Emacs に Forth を認識させる"

#. type: node
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272 ../doc/gforth.texi:30275
#: ../doc/gforth.texi:30299 ../doc/gforth.texi:30300 ../doc/gforth.texi:30320
#, no-wrap
msgid "Emacs Tags"
msgstr "Emacs Tags"

#. type: menuentry
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272
msgid "Viewing the source of a word in Emacs."
msgstr "ワードのソースを Emacs で閲覧"

#. type: node
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272 ../doc/gforth.texi:30299
#: ../doc/gforth.texi:30320 ../doc/gforth.texi:30321 ../doc/gforth.texi:30363
#, no-wrap
msgid "Hilighting"
msgstr "Hilighting"

#. type: menuentry
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272
msgid "Making Forth code look prettier."
msgstr "Forth コードの見栄えを良くします"

#. type: node
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272 ../doc/gforth.texi:30320
#: ../doc/gforth.texi:30363 ../doc/gforth.texi:30364 ../doc/gforth.texi:30406
#, no-wrap
msgid "Auto-Indentation"
msgstr "Auto-Indentation"

#. type: menuentry
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272
msgid "Customizing auto-indentation."
msgstr "自動インデントのカスタマイズ"

#. type: section
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272 ../doc/gforth.texi:30363
#: ../doc/gforth.texi:30406 ../doc/gforth.texi:30407
#, no-wrap
msgid "Blocks Files"
msgstr "Blocks Files"

#. type: menuentry
#: ../doc/gforth.texi:605 ../doc/gforth.texi:30272
msgid "Reading and writing blocks files."
msgstr "ブロック・ファイルの読み書き"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30464
#: ../doc/gforth.texi:30465 ../doc/gforth.texi:30488
#, no-wrap
msgid "Image Licensing Issues"
msgstr "Image Licensing Issues"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "Distribution terms for images."
msgstr "イメージの配布条件"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30464
#: ../doc/gforth.texi:30488 ../doc/gforth.texi:30489 ../doc/gforth.texi:30586
#, no-wrap
msgid "Image File Background"
msgstr "Image File Background"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "Why have image files?"
msgstr "なぜイメージ・ファイルがあるのですか?"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30488
#: ../doc/gforth.texi:30586 ../doc/gforth.texi:30587 ../doc/gforth.texi:30616
#, no-wrap
msgid "Non-Relocatable Image Files"
msgstr "Non-Relocatable Image Files"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "don't always work."
msgstr "※これは常に機能するとは限りません"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30586
#: ../doc/gforth.texi:30616 ../doc/gforth.texi:30617 ../doc/gforth.texi:30638
#, no-wrap
msgid "Data-Relocatable Image Files"
msgstr "Data-Relocatable Image Files"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "are better."
msgstr "※こちらの方がよいです"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:618 ../doc/gforth.texi:30462
#: ../doc/gforth.texi:30616 ../doc/gforth.texi:30638 ../doc/gforth.texi:30639
#: ../doc/gforth.texi:30660 ../doc/gforth.texi:30730 ../doc/gforth.texi:30749
#, no-wrap
msgid "Fully Relocatable Image Files"
msgstr "Fully Relocatable Image Files"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "better yet."
msgstr "※こちらの方がもっといいです"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30638
#: ../doc/gforth.texi:30749 ../doc/gforth.texi:30750 ../doc/gforth.texi:30776
#, no-wrap
msgid "Stack and Dictionary Sizes"
msgstr "Stack and Dictionary Sizes"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "Setting the default sizes for an image."
msgstr "イメージでのデフォルト・サイズを設定"

#. type: node
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30749
#: ../doc/gforth.texi:30776 ../doc/gforth.texi:30777 ../doc/gforth.texi:30876
#, no-wrap
msgid "Running Image Files"
msgstr "Running Image Files"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "@code{gforth -i @i{file}} or @i{file}."
msgstr "@code{gforth -i @i{file}} or @i{file}."

#. type: section
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462 ../doc/gforth.texi:30776
#: ../doc/gforth.texi:30876 ../doc/gforth.texi:30877
#, no-wrap
msgid "Modifying the Startup Sequence"
msgstr "Modifying the Startup Sequence"

#. type: menuentry
#: ../doc/gforth.texi:616 ../doc/gforth.texi:30462
msgid "and turnkey applications."
msgstr "ターンキー・アプリケーションにする事もできる"

#. type: node
#: ../doc/gforth.texi:621 ../doc/gforth.texi:30658 ../doc/gforth.texi:30660
#: ../doc/gforth.texi:30661 ../doc/gforth.texi:30663 ../doc/gforth.texi:30730
#, no-wrap
msgid "gforthmi"
msgstr "gforthmi"

#. type: menuentry
#: ../doc/gforth.texi:621 ../doc/gforth.texi:30658
msgid "The normal way"
msgstr "通常の方法"

#. type: file{#1}
#: ../doc/gforth.texi:621 ../doc/gforth.texi:30658 ../doc/gforth.texi:30660
#: ../doc/gforth.texi:30730 ../doc/gforth.texi:30731 ../doc/gforth.texi:30732
#: ../doc/gforth.texi:31641
#, no-wrap
msgid "cross.fs"
msgstr "cross.fs"

#. type: menuentry
#: ../doc/gforth.texi:621 ../doc/gforth.texi:30658
msgid "The hard way"
msgstr "困難な方法"

#. type: menuentry
#: ../doc/gforth.texi:628 ../doc/gforth.texi:30994
msgid "Portability::"
msgstr "Portability::"

#. type: menuentry
#: ../doc/gforth.texi:628 ../doc/gforth.texi:30994
msgid "Threading::"
msgstr "Threading::"

#. type: menuentry
#: ../doc/gforth.texi:628 ../doc/gforth.texi:30994
msgid "Primitives::"
msgstr "Primitives::"

#. type: section
#: ../doc/gforth.texi:628 ../doc/gforth.texi:30994 ../doc/gforth.texi:31361
#: ../doc/gforth.texi:31527 ../doc/gforth.texi:31528
#, no-wrap
msgid "Performance"
msgstr "Performance"

#. type: node
#: ../doc/gforth.texi:630 ../doc/gforth.texi:30996 ../doc/gforth.texi:31051
#: ../doc/gforth.texi:31052 ../doc/gforth.texi:31100 ../doc/gforth.texi:31145
#: ../doc/gforth.texi:31204 ../doc/gforth.texi:31336 ../doc/gforth.texi:31361
#, no-wrap
msgid "Threading"
msgstr "Threading"

#. type: menuentry
#: ../doc/gforth.texi:635 ../doc/gforth.texi:31098
msgid "Scheduling::"
msgstr "Scheduling::"

#. type: menuentry
#: ../doc/gforth.texi:635 ../doc/gforth.texi:31098
msgid "Direct or Indirect Threaded?::"
msgstr "Direct or Indirect Threaded?::"

#. type: menuentry
#: ../doc/gforth.texi:635 ../doc/gforth.texi:31098
msgid "Dynamic Superinstructions::"
msgstr "Dynamic Superinstructions::"

#. type: subsection
#: ../doc/gforth.texi:635 ../doc/gforth.texi:12178 ../doc/gforth.texi:12179
#: ../doc/gforth.texi:31098 ../doc/gforth.texi:31204 ../doc/gforth.texi:31336
#: ../doc/gforth.texi:31337
#, no-wrap
msgid "DOES>"
msgstr "DOES>"

#. type: node
#: ../doc/gforth.texi:637 ../doc/gforth.texi:31051 ../doc/gforth.texi:31361
#: ../doc/gforth.texi:31362 ../doc/gforth.texi:31372 ../doc/gforth.texi:31459
#: ../doc/gforth.texi:31517 ../doc/gforth.texi:31527
#, no-wrap
msgid "Primitives"
msgstr "Primitives"

#. type: menuentry
#: ../doc/gforth.texi:641 ../doc/gforth.texi:31370
msgid "Automatic Generation::"
msgstr "Automatic Generation::"

#. type: menuentry
#: ../doc/gforth.texi:641 ../doc/gforth.texi:31370
msgid "TOS Optimization::"
msgstr "TOS Optimization::"

#. type: subsection
#: ../doc/gforth.texi:641 ../doc/gforth.texi:31370 ../doc/gforth.texi:31459
#: ../doc/gforth.texi:31517 ../doc/gforth.texi:31518
#, no-wrap
msgid "Produced code"
msgstr "Produced code"

#. type: menuentry
#: ../doc/gforth.texi:646 ../doc/gforth.texi:31655
msgid "Using the Cross Compiler::"
msgstr "Using the Cross Compiler::"

#. type: section
#: ../doc/gforth.texi:646 ../doc/gforth.texi:31655 ../doc/gforth.texi:31657
#: ../doc/gforth.texi:31778 ../doc/gforth.texi:31779
#, no-wrap
msgid "How the Cross Compiler Works"
msgstr "How the Cross Compiler Works"

#. type: chapter
#: ../doc/gforth.texi:648 ../doc/gforth.texi:31782
#, no-wrap
msgid "MINOS2, a GUI library"
msgstr "MINOS2, a GUI library"

#. type: menuentry
#: ../doc/gforth.texi:651 ../doc/gforth.texi:31787
msgid "MINOS2 object framework::"
msgstr "MINOS2 object framework::"

#. type: section
#: ../doc/gforth.texi:651 ../doc/gforth.texi:31787 ../doc/gforth.texi:31789
#: ../doc/gforth.texi:32515 ../doc/gforth.texi:32516
#, no-wrap
msgid "MINOS2 tutorial"
msgstr "MINOS2 tutorial"

#. type: node
#: ../doc/gforth.texi:653 ../doc/gforth.texi:31789 ../doc/gforth.texi:31790
#: ../doc/gforth.texi:31819 ../doc/gforth.texi:31994 ../doc/gforth.texi:32515
#, no-wrap
msgid "MINOS2 object framework"
msgstr "MINOS2 object framework"

#. type: menuentry
#: ../doc/gforth.texi:656 ../doc/gforth.texi:31795
msgid "actor methods::"
msgstr "actor methods::"

#. type: node
#: ../doc/gforth.texi:656 ../doc/gforth.texi:31795 ../doc/gforth.texi:31819
#: ../doc/gforth.texi:31994
#, no-wrap
msgid "widget methods"
msgstr "widget methods"

#. type: node
#: ../doc/gforth.texi:658 ../doc/gforth.texi:32649 ../doc/gforth.texi:32669
#: ../doc/gforth.texi:32670 ../doc/gforth.texi:32677 ../doc/gforth.texi:32681
#: ../doc/gforth.texi:32688
#, no-wrap
msgid "Licenses"
msgstr "Licenses"

#. type: node
#: ../doc/gforth.texi:661 ../doc/gforth.texi:32675 ../doc/gforth.texi:32677
#: ../doc/gforth.texi:32678 ../doc/gforth.texi:32681
#, no-wrap
msgid "GNU Free Documentation License"
msgstr "GNU Free Documentation License"

#. type: menuentry
#: ../doc/gforth.texi:661 ../doc/gforth.texi:32675
msgid "License for copying this manual."
msgstr "このマニュアルのコピー時のライセンス"

#. type: node
#: ../doc/gforth.texi:661 ../doc/gforth.texi:32675 ../doc/gforth.texi:32677
#: ../doc/gforth.texi:32681
#, no-wrap
msgid "Copying"
msgstr "Copying"

#. type: menuentry
#: ../doc/gforth.texi:661 ../doc/gforth.texi:32675
msgid "GPL (for copying this software)."
msgstr "GPL (このソフトウェアのコピー用)"

#. type: cindex
#: ../doc/gforth.texi:669 ../doc/gforth.texi:670
#, no-wrap
msgid "Preface"
msgstr "Preface"

#. type: iftex
#: ../doc/gforth.texi:675
msgid ""
"This manual documents Gforth. Some introductory material is provided for "
"readers who are unfamiliar with Forth or who are migrating to Gforth from "
"other Forth compilers. However, this manual is primarily a reference manual."
msgstr ""
"このマニュアルは Gforth について説明します。 Forth に慣れていない読者、 また"
"は他の Forth コンパイラから Gforth に移行する読者向けに、 いくつかの入門資料"
"が提供されています。 ただし、 このマニュアルの主体はリファレンス・マニュアル"
"です。"

#. type: cindex
#: ../doc/gforth.texi:683
#, no-wrap
msgid "goals of the Gforth project"
msgstr "goals of the Gforth project"

#. type: table
#: ../doc/gforth.texi:686
msgid ""
"The goal of the Gforth Project is to develop a standard model for Standard "
"Forth. This can be split into several subgoals:"
msgstr ""
"Gforth プロジェクトの目標(goal)は 標準Forth(Standard Forth)のための標準の模範"
"(model)を開発することです。 これは以下のように、 幾つかの副目標に落とし込めま"
"す:"

#. type: itemize
#: ../doc/gforth.texi:690
msgid "Gforth should conform to the Forth Standard."
msgstr "Gforth は Forth 標準(Forth Standard)に準拠すべきです。"

#. type: itemize
#: ../doc/gforth.texi:693
msgid ""
"It should be a model, i.e. it should define all the implementation-dependent "
"things."
msgstr ""
"これは模範(model)になるべきです。 つまり、 実装に依存するものをすべて定義する"
"必要があります。"

#. type: itemize
#: ../doc/gforth.texi:696
msgid ""
"It should become standard, i.e. widely accepted and used. This goal is the "
"most difficult one."
msgstr ""
"これは標準、つまり、広く受け入れられ、使用されるべきです。 この目標は最も難し"
"い目標です。"

#. type: table
#: ../doc/gforth.texi:699
msgid "To achieve these goals Gforth should be"
msgstr "上記の目標を達成するには Gforth は以下のようにするべきです"

#. type: itemize
#: ../doc/gforth.texi:702
msgid "Similar to previous models (fig-Forth, F83)"
msgstr "以前の模範(model)(fig-Forth, F83)に似にせること。"

#. type: itemize
#: ../doc/gforth.texi:705
msgid ""
"Powerful. It should provide for all the things that are considered necessary "
"today and even some that are not yet considered necessary."
msgstr ""
"強力であること。 今日必要であると考えられているすべてのものと、 まだ必要であ"
"ると考えられていないものさえも提供する必要があります。"

#. type: itemize
#: ../doc/gforth.texi:708
msgid ""
"Efficient. It should not get the reputation of being exceptionally slow."
msgstr "効率的であること。 異常に遅いという評判を得るべきではありません。"

#. type: itemize
#: ../doc/gforth.texi:710
msgid "Free."
msgstr "無料であること。"

#. type: itemize
#: ../doc/gforth.texi:712
msgid "Available on many machines/easy to port."
msgstr "多くのマシンで利用可能かつ移植も簡単であること。"

#. type: table
#: ../doc/gforth.texi:725
msgid ""
"Have we achieved these goals? Gforth conforms to the Forth-94 (ANS Forth) "
"and Forth-2012 standards.  We have changed some of the internal data "
"structures (in particular, the headers) over time, so Gforth cannot be "
"considered a stable model.  It certainly has not yet become a de facto "
"standard, but it appears to be quite popular. It has some similarities to "
"and some differences from previous models. It has some powerful features, "
"but not yet everything that we envisioned. We certainly have achieved our "
"execution speed goals (@pxref{Performance})@footnote{However, in 1998 the "
"bar was raised when the major commercial Forth vendors switched to native "
"code compilers.}.  It is free and available on many machines."
msgstr ""
"私達はこれらの目標を達成できているでしょうか？ Gforth は、 Forth-94 (ANS "
"Forth) と Forth-2012 標準に準拠しています。 内部データ構造の一部 (特にヘッ"
"ダー) は時間の経過とともに変更されているため、 Gforth は安定しているモデルと"
"は見なさていません。 確かにまだ事実上​​の標準にはなっていませんが、 かなり人気"
"があるようです。 以前のモデルとの類似点と相違点がいくつかあります。 いくつか"
"の強力な機能がありますが、 まだ私たちが想像していたもの全てを備えているわけで"
"はありません。 私たちは確かに実行速度の目標を達成しました"
"(@pxref{Performance})@footnote{ただし、 1998 年に主要な商用 Forth ベンダーが"
"ネイティブ・コード・コンパイラに切り替えたとき、 その基準は引き上げられてしま"
"いました。 }。 Gforth は無料で、多くのマシンで利用できます。"

#. type: cindex
#: ../doc/gforth.texi:734
#, no-wrap
msgid "Gforth stability"
msgstr "Gforth stability"

#. type: cindex
#: ../doc/gforth.texi:735
#, no-wrap
msgid "stability of Gforth"
msgstr "stability of Gforth"

#. type: table
#: ../doc/gforth.texi:739
msgid ""
"Programs that work on earlier versions of Gforth should also work on newer "
"versions.  However, there are some caveats:"
msgstr ""
"(Gforthの安定性)Gforth の以前のバージョンで動作するプログラムは、 新しいバー"
"ジョンでも動作するはずです。 ただし、 以下のようないくつかの注意点があります:"

#. type: table
#: ../doc/gforth.texi:742
msgid ""
"Internal data structures (including the representation of code) of Gforth "
"may change between versions, unless they are documented."
msgstr ""
"Gforth の内部データ構造 (コンパイル済みコードの表現を含む) は、 文書化されて"
"いない限り、 バージョン間で変更される可能性があります。"

#. type: table
#: ../doc/gforth.texi:748
msgid ""
"Moreover, we only feel obliged to keep standard words (i.e., with standard "
"wordset names) and words documented as permanent Gforth extensions (with "
"wordset name @code{gforth} or @code{gforth-@i{<version>}}, "
"@pxref{Notation}).  Other words may be removed in newer releases."
msgstr ""
"さらに、 私達は、 標準のワード (つまり、 標準のワードセットにある名前のワー"
"ド)と、 永続的な Gforth 拡張機能として文書化されたワード(ワードセット名が "
"@code{gforth} または @code{gforth-@i{<version>}} であるワード)"
"(@pxref{Notation} 参照)は、 保持する義務があると考えています。 他のワードは新"
"しいリリースでは削除される可能性があります。"

#. type: table
#: ../doc/gforth.texi:756
msgid ""
"In particular, you may find a word by using @code{locate} or otherwise "
"inspecting Gforth's source code.  You can see the wordset in a comment right "
"after the stack-effect comment.  If there is no wordset for a word, it is an "
"internal factor and may be removed in a future version.  If the wordset is "
"@code{gforth-experimental}, @code{gforth-internal}, or @code{gforth-"
"obsolete}, the word may also be removed in a future version."
msgstr ""
"とりわけ、 あなたは @code{locate} を使用するか、 または、 Gforth のソース・"
"コードを調べることでワードを見つけることができ、 スタック効果コメントの直後の"
"コメントでワードセットを確認できます。 そのワードにワードセットがない場合、 "
"それは内部実装であり、 将来のバージョンでは削除される可能性があります。 ワー"
"ドセットが @code{gforth-experimental} または @code{gforth-internal} または "
"@code{gforth-obsolete} の場合、 そのワードは将来のバージョンで削除される可能"
"性があります。"

#. type: table
#: ../doc/gforth.texi:760
msgid ""
"If you want to use a particular word that is not marked as permanent, please "
"let us know, and we will consider to add the word as permanent word (or we "
"may suggest an alternative to using this word)."
msgstr ""
"あなたが永続的としてマークされていない特定のワードを使用したい場合、 私達にご"
"連絡ください。 そのワードを永続的ワードとして追加することを検討します(また"
"は、このワードに代わる代替案を提案する場合もあります)。"

#. type: cindex
#: ../doc/gforth.texi:764
#, no-wrap
msgid "Gforth environment"
msgstr "Gforth environment"

#. type: table
#: ../doc/gforth.texi:768
msgid ""
"Note: ultimately, the Gforth man page will be auto-generated from the "
"material in this chapter."
msgstr ""
"メモ: Gforth のマニュアル・ページ(man page)は、 結局のところ、 この章の内容か"
"ら自動生成されています。"

#. type: table
#: ../doc/gforth.texi:781
msgid ""
"For related information about the creation of images see @ref{Image Files}."
msgstr ""
"イメージの作成に関する関連情報については @ref{Image Files} を参照してくださ"
"い。"

#. type: cindex
#: ../doc/gforth.texi:785
#, no-wrap
msgid "invoking Gforth"
msgstr "invoking Gforth"

#. type: cindex
#: ../doc/gforth.texi:786
#, no-wrap
msgid "running Gforth"
msgstr "running Gforth"

#. type: cindex
#: ../doc/gforth.texi:787
#, no-wrap
msgid "command-line options"
msgstr "command-line options"

#. type: cindex
#: ../doc/gforth.texi:788
#, no-wrap
msgid "options on the command line"
msgstr "options on the command line"

#. type: cindex
#: ../doc/gforth.texi:789
#, no-wrap
msgid "flags on the command line"
msgstr "flags on the command line"

#. type: table
#: ../doc/gforth.texi:796
msgid ""
"Gforth is made up of two parts; an executable ``engine'' (named "
"@command{gforth} or @command{gforth-fast}) and an image file. To start it, "
"you will usually just say @code{gforth} -- this automatically loads the "
"default image file @file{gforth.fi}. In many other cases the default Gforth "
"image will be invoked like this:"
msgstr ""
"Gforth は 2 つの部分から成ります。 実行可能「エンジン」(@command{gforth} また"
"は @command{gforth-fast} という名前)と、イメージ・ファイルです。 Gforth を開"
"始するには、 通常は @code{gforth} とするだけです。 これにより、 デフォルトの"
"イメージ・ファイル @file{gforth.fi} が自動的にロードされます。 他の多くの場"
"合、 デフォルトの Gforth イメージは以下のように呼び出されます:"

#. type: example
#: ../doc/gforth.texi:798
#, no-wrap
msgid "gforth [file | -e forth-code] ...\n"
msgstr "gforth [file | -e forth-code] ...\n"

#. type: table
#: ../doc/gforth.texi:802
msgid ""
"This interprets the contents of the files and the Forth code in the order "
"they are given."
msgstr ""
"これにより、 ファイルの内容や、 (訳注:コマンドラインに記述された、) Forth "
"コードが、 指定の順序で解釈(interpret)されます。"

#. type: table
#: ../doc/gforth.texi:809
msgid ""
"In addition to the @command{gforth} engine, there is also an engine called "
"@command{gforth-fast}, which is faster, but gives less informative error "
"messages (@pxref{Error messages}) and may catch some errors (in particular, "
"stack underflows and integer division errors)  later or not at all.  You "
"should use it for debugged, performance-critical programs."
msgstr ""
"@command{gforth} エンジンに加えて、 @command{gforth-fast} というエンジンもあ"
"ります。 これは高速ですが、 表示されるエラー・メッセージ(@pxref{Error "
"messages})の情報が少なく、 そして、 一部のエラーのキャッチ(特に、 スタック・"
"アンダーフローや整数除算エラーなど)が遅れて発生するか、 あるいはまったく発生"
"しません。 デバッグ済みの、 パフォーマンスが重要なプログラムに対して使用する"
"べきです。"

#. type: table
#: ../doc/gforth.texi:813
msgid ""
"Moreover, there is an engine called @command{gforth-itc}, which is useful in "
"some backwards-compatibility situations (@pxref{Direct or Indirect "
"Threaded?})."
msgstr ""
"さらに、 @command{gforth-itc} というエンジンがあり、 下位互換性が必要な状況"
"(@pxref{Direct or Indirect Threaded?})で役に立ちます。"

#. type: table
#: ../doc/gforth.texi:815
msgid "In general, the command line looks like this:"
msgstr "一般に、 コマンドラインは以下のようになります:"

#. type: example
#: ../doc/gforth.texi:818
#, no-wrap
msgid "gforth[-fast] [engine options] [image options]\n"
msgstr "gforth[-fast] [engine options] [image options]\n"

#. type: table
#: ../doc/gforth.texi:822
msgid ""
"The engine options must come before the rest of the command line. They are:"
msgstr ""
"エンジン・オプションは、 コマンド・ラインの他の部分より前に指定する必要があり"
"ます。 それらは以下のとおりです:"

#. type: cindex
#: ../doc/gforth.texi:825
#, no-wrap
msgid "-i, command-line option"
msgstr "-i, command-line option"

#. type: cindex
#: ../doc/gforth.texi:826
#, no-wrap
msgid "--image-file, command-line option"
msgstr "--image-file, command-line option"

#. type: item
#: ../doc/gforth.texi:827
#, no-wrap
msgid "--image-file @i{file}"
msgstr "--image-file @i{file}"

#. type: itemx
#: ../doc/gforth.texi:828
#, no-wrap
msgid "-i @i{file}"
msgstr "-i @i{file}"

#. type: table
#: ../doc/gforth.texi:831
msgid ""
"Loads the Forth image @i{file} instead of the default @file{gforth.fi} "
"(@pxref{Image Files})."
msgstr ""
"デフォルトの @file{gforth.fi} の代わりに、 指定の Forth イメージ・ファイルを"
"ロードします(@pxref{Image Files})。"

#. type: cindex
#: ../doc/gforth.texi:832
#, no-wrap
msgid "--appl-image, command-line option"
msgstr "--appl-image, command-line option"

#. type: item
#: ../doc/gforth.texi:833
#, no-wrap
msgid "--appl-image @i{file}"
msgstr "--appl-image @i{file}"

#. type: table
#: ../doc/gforth.texi:838
msgid ""
"Loads the image @i{file} and leaves all further command-line arguments to "
"the image (instead of processing them as engine options).  This is useful "
"for building executable application images on Unix, built with "
"@code{gforthmi --application ...}."
msgstr ""
"指定のイメージ・ファイルをロードし、 これ以降のコマンドライン引数は(エンジン"
"のオプションとして処理するのではなく)、 すべてそのイメージが処理する為に残し"
"ます。 これは、 @code{gforthmi --application ...} で構築された、 Unix 上で実"
"行可能なアプリケーション・イメージを構築する場合に便利です。"

#. type: cindex
#: ../doc/gforth.texi:839
#, no-wrap
msgid "--path, command-line option"
msgstr "--path, command-line option"

#. type: cindex
#: ../doc/gforth.texi:840
#, no-wrap
msgid "-p, command-line option"
msgstr "-p, command-line option"

#. type: item
#: ../doc/gforth.texi:841
#, no-wrap
msgid "--path @i{path}"
msgstr "--path @i{path}"

#. type: itemx
#: ../doc/gforth.texi:842
#, no-wrap
msgid "-p @i{path}"
msgstr "-p @i{path}"

#. type: table
#: ../doc/gforth.texi:851
msgid ""
"Uses @i{path} for searching the image file and Forth source code files "
"instead of the default in the environment variable @code{GFORTHPATH} or the "
"path specified at installation time and the working directory @code{.} (e."
"g., @file{/usr/local/share/gforth/0.2.0:.}). A path is given as a list of "
"directories, separated by @samp{:} (previous versions had @samp{;} for other "
"OSes, but since Cygwin now only accepts @code{/cygdrive/<letter>}, and we "
"dropped support for OS/2 and MS-DOS, it is @samp{:} everywhere)."
msgstr ""
"デフォルトである環境変数 @code{GFORTHPATH} 、 またはインストール時に指定され"
"たパス(例: @file{/usr/local/share/gforth/0.2.0:.})と作業ディレクトリ "
"@code{.} の代わりに、 指定のパスを使用してイメージ・ファイルと Forth ソース・"
"コード・ファイルを検索します。 パスは @samp{:} で区切られたディレクトリのリス"
"トとして指定されます(以前のバージョンには他の OS 用に @samp{;} がありました"
"が、 Cygwin は現在は @code{/cygdrive/<letter>} のみを受け入れ、 かつ、 私達"
"は OS/2 や MS-DOS のサポートは終了してしまったため、 どこでも全部 @samp{:} に"
"なりました)。"

#. type: cindex
#: ../doc/gforth.texi:852
#, no-wrap
msgid "--dictionary-size, command-line option"
msgstr "--dictionary-size, command-line option"

#. type: cindex
#: ../doc/gforth.texi:853
#, no-wrap
msgid "-m, command-line option"
msgstr "-m, command-line option"

#. type: cindex
#: ../doc/gforth.texi:854
#, no-wrap
msgid "@i{size} parameters for command-line options"
msgstr "@i{size} parameters for command-line options"

#. type: cindex
#: ../doc/gforth.texi:855
#, no-wrap
msgid "size of the dictionary and the stacks"
msgstr "size of the dictionary and the stacks"

#. type: item
#: ../doc/gforth.texi:856
#, no-wrap
msgid "--dictionary-size @i{size}"
msgstr "--dictionary-size @i{size}"

#. type: itemx
#: ../doc/gforth.texi:857
#, no-wrap
msgid "-m @i{size}"
msgstr "-m @i{size}"

#. type: table
#: ../doc/gforth.texi:866
msgid ""
"Allocate @i{size} space for the Forth dictionary space instead of using the "
"default specified in the image (typically 256K). The @i{size} specification "
"for this and subsequent options consists of an integer and a unit (e.g., "
"@code{4M}). The unit can be one of @code{b} (bytes), @code{e} (element size, "
"in this case Cells), @code{k} (kilobytes), @code{M} (Megabytes), @code{G} "
"(Gigabytes), and @code{T} (Terabytes). If no unit is specified, @code{e} is "
"used."
msgstr ""
"イメージで指定されているデフォルト(通常は 256K)を使用する代わりに、 Forth "
"ディクショナリ用のスペースに指定サイズ(@i{size})のスペースを割り当てます。 こ"
"のオプションと、下記のオプションのサイズ(@i{size})指定は整数と単位で構成され"
"ます(例: @code{4M})。 単位は @code{b} (バイト)、 @code{e} (elementの略。セル"
"単位)、 @code{k} (キロバイト)、 @code{M} (メガバイト)、 @code{G} (ギガバイ"
"ト)、 @code{T} (テラバイト)のいずれかになります。 単位が指定されていない場合 "
"@code{e} が使用されます。"

#. type: cindex
#: ../doc/gforth.texi:867
#, no-wrap
msgid "--data-stack-size, command-line option"
msgstr "--data-stack-size, command-line option"

#. type: cindex
#: ../doc/gforth.texi:868
#, no-wrap
msgid "-d, command-line option"
msgstr "-d, command-line option"

#. type: item
#: ../doc/gforth.texi:869
#, no-wrap
msgid "--data-stack-size @i{size}"
msgstr "--data-stack-size @i{size}"

#. type: itemx
#: ../doc/gforth.texi:870
#, no-wrap
msgid "-d @i{size}"
msgstr "-d @i{size}"

#. type: table
#: ../doc/gforth.texi:873
msgid ""
"Allocate @i{size} space for the data stack instead of using the default "
"specified in the image (typically 16K)."
msgstr ""
"イメージで指定されているデフォルト(通常は 16K) を使用する代わりに、 データ・"
"スタックに指定のサイズ(@i{size})のスペースを割り当てます。サイズ(@i{size})指"
"定は整数と単位で構成されます(例: @code{4M})。 単位は @code{b} (バイト)、 "
"@code{e} (elementの略。セル単位)、 @code{k} (キロバイト)、 @code{M} (メガバイ"
"ト)、 @code{G} (ギガバイト)、 @code{T} (テラバイト)のいずれかになります。 単"
"位が指定されていない場合 @code{e} が使用されます。"

#. type: cindex
#: ../doc/gforth.texi:874
#, no-wrap
msgid "--return-stack-size, command-line option"
msgstr "--return-stack-size, command-line option"

#. type: cindex
#: ../doc/gforth.texi:875
#, no-wrap
msgid "-r, command-line option"
msgstr "-r, command-line option"

#. type: item
#: ../doc/gforth.texi:876
#, no-wrap
msgid "--return-stack-size @i{size}"
msgstr "--return-stack-size @i{size}"

#. type: itemx
#: ../doc/gforth.texi:877
#, no-wrap
msgid "-r @i{size}"
msgstr "-r @i{size}"

#. type: table
#: ../doc/gforth.texi:880
msgid ""
"Allocate @i{size} space for the return stack instead of using the default "
"specified in the image (typically 15K)."
msgstr ""
"イメージで指定されたデフォルト(通常は 15K)を使用する代わりに、 リターン・ス"
"タックに指定のサイズ(@i{size})のスペースを割り当てます。 サイズ(@i{size})指定"
"は整数と単位で構成されます(例: @code{4M})。 単位は @code{b} (バイト)、 "
"@code{e} (elementの略。セル単位)、 @code{k} (キロバイト)、 @code{M} (メガバイ"
"ト)、 @code{G} (ギガバイト)、 @code{T} (テラバイト)のいずれかになります。 単"
"位が指定されていない場合 @code{e} が使用されます。"

#. type: cindex
#: ../doc/gforth.texi:881
#, no-wrap
msgid "--fp-stack-size, command-line option"
msgstr "--fp-stack-size, command-line option"

#. type: cindex
#: ../doc/gforth.texi:882
#, no-wrap
msgid "-f, command-line option"
msgstr "-f, command-line option"

#. type: item
#: ../doc/gforth.texi:883
#, no-wrap
msgid "--fp-stack-size @i{size}"
msgstr "--fp-stack-size @i{size}"

#. type: itemx
#: ../doc/gforth.texi:884
#, no-wrap
msgid "-f @i{size}"
msgstr "-f @i{size}"

#. type: table
#: ../doc/gforth.texi:888
msgid ""
"Allocate @i{size} space for the floating point stack instead of using the "
"default specified in the image (typically 15.5K). In this case the unit "
"specifier @code{e} refers to floating point numbers."
msgstr ""
"イメージで指定されているデフォルト(通常は 15.5K)を使用する代わりに、 浮動小数"
"点スタックに指定のサイズ(@i{size})のスペースを割り当てます。この場合、単位指"
"定子 @code{e} は浮動小数点数を参照します。 サイズ(@i{size})指定は整数と単位で"
"構成されます(例: @code{4M})。 単位は @code{b} (バイト)、 @code{e} (elementの"
"略。セル単位)、 @code{k} (キロバイト)、 @code{M} (メガバイト)、 @code{G} (ギ"
"ガバイト)、 @code{T} (テラバイト)のいずれかになります。 単位が指定されていな"
"い場合 @code{e} が使用されます。"

#. type: cindex
#: ../doc/gforth.texi:889
#, no-wrap
msgid "--locals-stack-size, command-line option"
msgstr "--locals-stack-size, command-line option"

#. type: cindex
#: ../doc/gforth.texi:890
#, no-wrap
msgid "-l, command-line option"
msgstr "-l, command-line option"

#. type: item
#: ../doc/gforth.texi:891
#, no-wrap
msgid "--locals-stack-size @i{size}"
msgstr "--locals-stack-size @i{size}"

#. type: itemx
#: ../doc/gforth.texi:892
#, no-wrap
msgid "-l @i{size}"
msgstr "-l @i{size}"

#. type: table
#: ../doc/gforth.texi:895
msgid ""
"Allocate @i{size} space for the locals stack instead of using the default "
"specified in the image (typically 14.5K)."
msgstr ""
"イメージで指定されているデフォルト(通常は 14.5K)を使用する代わりに、 ローカ"
"ル・スタック(locals stack)に指定サイズ(@i{size})のスペースを割り当てます。 サ"
"イズ(@i{size})指定は整数と単位で構成されます(例: @code{4M})。 単位は "
"@code{b} (バイト)、 @code{e} (elementの略。セル単位)、 @code{k} (キロバイ"
"ト)、 @code{M} (メガバイト)、 @code{G} (ギガバイト)、 @code{T} (テラバイト)の"
"いずれかになります。 単位が指定されていない場合 @code{e} が使用されます。"

#. type: cindex
#: ../doc/gforth.texi:896
#, no-wrap
msgid "--vm-commit, command-line option"
msgstr "--vm-commit, command-line option"

#. type: cindex
#: ../doc/gforth.texi:897
#, no-wrap
msgid "overcommit memory for dictionary and stacks"
msgstr "overcommit memory for dictionary and stacks"

#. type: cindex
#: ../doc/gforth.texi:898
#, no-wrap
msgid "memory overcommit for dictionary and stacks"
msgstr "memory overcommit for dictionary and stacks"

#. type: item
#: ../doc/gforth.texi:899
#, no-wrap
msgid "--vm-commit"
msgstr "--vm-commit"

#. type: table
#: ../doc/gforth.texi:910
msgid ""
"Normally, Gforth tries to start up even if there is not enough virtual "
"memory for the dictionary and the stacks (using @code{MAP_NORESERVE} on OSs "
"that support it); so you can ask for a really big dictionary and/or stacks, "
"and as long as you don't use more virtual memory than is available, "
"everything will be fine (but if you use more, processes get killed).  With "
"this option you just use the default allocation policy of the OS; for OSs "
"that don't overcommit (e.g., Solaris), this means that you cannot and should "
"not ask for as big dictionary and stacks, but once Gforth successfully "
"starts up, out-of-memory won't kill it."
msgstr ""
"通常 Gforth は、 ディクショナリとスタックに十分な仮想メモリ(virtual memory)が"
"ない場合でも起動しようとします(OS がサポートしていれば @code{MAP_NORESERVE} "
"を使用します)。 したがって、 あなたは非常に大きなディクショナリやスタックを要"
"求することができ、 利用可能なのを超える仮想メモリを使用しない限り、 すべて問"
"題ありません(ただし、それを超えて使用すると、 プロセスが強制終了(kill)されま"
"す)。 このオプションを使用すると、 OS のデフォルトの割り当てポリシーを使用す"
"るようになります。 とりわけ、 オーバーコミットしない OS (Solaris など) の場"
"合、 これは、 大きなディクショナリやスタックを要求することはできませんし、 要"
"求すべきではないことを意味しますが、 しかし、 Gforth が正常に起動する事に成功"
"したならば、 メモリ不足によって強制終了(kill)させられることはありません。"

#. type: cindex
#: ../doc/gforth.texi:911
#, no-wrap
msgid "-h, command-line option"
msgstr "-h, command-line option"

#. type: cindex
#: ../doc/gforth.texi:912
#, no-wrap
msgid "--help, command-line option"
msgstr "--help, command-line option"

#. type: item
#: ../doc/gforth.texi:913
#, no-wrap
msgid "--help"
msgstr "--help"

#. type: itemx
#: ../doc/gforth.texi:914
#, no-wrap
msgid "-h"
msgstr "-h"

#. type: table
#: ../doc/gforth.texi:916
msgid "Print a message about the command-line options"
msgstr "コマンドライン・オプションに関するメッセージを出力します"

#. type: cindex
#: ../doc/gforth.texi:917
#, no-wrap
msgid "-v, command-line option"
msgstr "-v, command-line option"

#. type: cindex
#: ../doc/gforth.texi:918
#, no-wrap
msgid "--version, command-line option"
msgstr "--version, command-line option"

#. type: item
#: ../doc/gforth.texi:919
#, no-wrap
msgid "--version"
msgstr "--version"

#. type: itemx
#: ../doc/gforth.texi:920
#, no-wrap
msgid "-v"
msgstr "-v"

#. type: table
#: ../doc/gforth.texi:922
msgid "Print version and exit"
msgstr "バージョンを出力して終了(exit)"

#. type: cindex
#: ../doc/gforth.texi:923
#, no-wrap
msgid "--debug, command-line option"
msgstr "--debug, command-line option"

#. type: item
#: ../doc/gforth.texi:924
#, no-wrap
msgid "--debug"
msgstr "--debug"

#. type: table
#: ../doc/gforth.texi:926
msgid "Print some information useful for debugging on startup."
msgstr "起動時のデバッグに役立ついくつかの情報を出力します。"

#. type: cindex
#: ../doc/gforth.texi:927
#, no-wrap
msgid "--offset-image, command-line option"
msgstr "--offset-image, command-line option"

#. type: item
#: ../doc/gforth.texi:928
#, no-wrap
msgid "--offset-image"
msgstr "--offset-image"

#. type: table
#: ../doc/gforth.texi:932
msgid ""
"Start the dictionary at a slightly different position than would be used "
"otherwise (useful for creating data-relocatable images, @pxref{Data-"
"Relocatable Image Files})."
msgstr ""
"それ以外の場合に使用される位置とはわずかに異なる位置でディクショナリを開始し"
"ます (データ再配置可能イメージ(data-relocatable images)の作成に役立ちます "
"@pxref{Data-Relocatable Image Files})。"

#. type: cindex
#: ../doc/gforth.texi:933
#, no-wrap
msgid "--no-offset-im, command-line option"
msgstr "--no-offset-im, command-line option"

#. type: item
#: ../doc/gforth.texi:934
#, no-wrap
msgid "--no-offset-im"
msgstr "--no-offset-im"

#. type: table
#: ../doc/gforth.texi:936
msgid "Start the dictionary at the normal position."
msgstr "ディクショナリを通常の位置で開始します。"

#. type: cindex
#: ../doc/gforth.texi:937
#, no-wrap
msgid "--clear-dictionary, command-line option"
msgstr "--clear-dictionary, command-line option"

#. type: item
#: ../doc/gforth.texi:938
#, no-wrap
msgid "--clear-dictionary"
msgstr "--clear-dictionary"

#. type: table
#: ../doc/gforth.texi:941
msgid ""
"Initialize all bytes in the dictionary to 0 before loading the image "
"(@pxref{Data-Relocatable Image Files})."
msgstr ""
"イメージをロードする前に、 ディクショナリ内の全てのバイトを 0 に初期化します"
"(@pxref{Data-Relocatable Image Files})。"

#. type: cindex
#: ../doc/gforth.texi:942
#, no-wrap
msgid "--die-on-signal, command-line-option"
msgstr "--die-on-signal, command-line-option"

#. type: item
#: ../doc/gforth.texi:943
#, no-wrap
msgid "--die-on-signal"
msgstr "--die-on-signal"

#. type: table
#: ../doc/gforth.texi:950
msgid ""
"Normally Gforth handles most signals (e.g., the user interrupt SIGINT, or "
"the segmentation violation SIGSEGV) by translating it into a Forth "
"@code{THROW}. With this option, Gforth exits if it receives such a signal. "
"This option is useful when the engine and/or the image might be severely "
"broken (such that it causes another signal before recovering from the "
"first); this option avoids endless loops in such cases."
msgstr ""
"通常、 Gforth はほとんどのシグナル(例えば、 ユーザー割り込みの SIGINT や、 セ"
"グメンテーション違反 SIGSEGV)を Forth の @code{THROW} に変換することで処理し"
"ます。 このオプションを使用すると、 Gforth はそのようなシグナルを受信すると終"
"了(exit)します。 このオプションは、 (最初のシグナルから回復する前に別のシグナ"
"ルが発生するなど、)エンジンやイメージがひどく壊れている可能性がある場合に役立"
"ちます。 このオプションは、 そのような場合の無限ループを回避します。"

#. type: cindex
#: ../doc/gforth.texi:951
#, no-wrap
msgid "--no-dynamic, command-line option"
msgstr "--no-dynamic, command-line option"

#. type: cindex
#: ../doc/gforth.texi:952
#, no-wrap
msgid "--dynamic, command-line option"
msgstr "--dynamic, command-line option"

#. type: item
#: ../doc/gforth.texi:953
#, no-wrap
msgid "--no-dynamic"
msgstr "--no-dynamic"

#. type: item
#: ../doc/gforth.texi:954
#, no-wrap
msgid "--dynamic"
msgstr "--dynamic"

#. type: table
#: ../doc/gforth.texi:957
msgid ""
"Disable or enable dynamic superinstructions with replication (@pxref{Dynamic "
"Superinstructions})."
msgstr ""
"レプリケーション(replication)を伴う動的スーパー命令(dynamic "
"superinstructions)を無効または有効にします(@pxref{Dynamic "
"Superinstructions})。"

#. type: cindex
#: ../doc/gforth.texi:958
#, no-wrap
msgid "--no-super, command-line option"
msgstr "--no-super, command-line option"

#. type: item
#: ../doc/gforth.texi:959
#, no-wrap
msgid "--no-super"
msgstr "--no-super"

#. type: table
#: ../doc/gforth.texi:963
msgid ""
"Disable dynamic superinstructions, use just dynamic replication; this is "
"useful if you want to patch threaded code (@pxref{Dynamic "
"Superinstructions})."
msgstr ""
"動的スーパー命令(dynamic superinstructions)を無効にし、 動的レプリケーション"
"(dynamic replication)のみを使用します。 これは、 スレッド化コード(threaded "
"code)にパッチを適用する場合に便利です(@pxref{Dynamic Superinstructions})。"

#. type: cindex
#: ../doc/gforth.texi:964
#, no-wrap
msgid "--ss-number, command-line option"
msgstr "--ss-number, command-line option"

#. type: item
#: ../doc/gforth.texi:965
#, no-wrap
msgid "--ss-number=@var{N}"
msgstr "--ss-number=@var{N}"

#. type: table
#: ../doc/gforth.texi:970
msgid ""
"Use only the first @var{N} static superinstructions compiled into the engine "
"(default: use them all; note that only @code{gforth-fast} has any).  This "
"option is useful for measuring the performance impact of static "
"superinstructions."
msgstr ""
"エンジンにコンパイル済みの最初の @var{N} 個の静的スーパー命令(static "
"superinstructions)のみを使用します(デフォルトでは全てを使用します。 注意: "
"@code{gforth-fast} のみのオプションです)。 このオプションは、 静的スーパー命"
"令(static superinstructions)のパフォーマンスへの影響を測定するのに役立ちま"
"す。"

#. type: cindex
#: ../doc/gforth.texi:971
#, no-wrap
msgid "--ss-min-..., command-line options"
msgstr "--ss-min-..., command-line options"

#. type: item
#: ../doc/gforth.texi:972
#, no-wrap
msgid "--ss-min-codesize"
msgstr "--ss-min-codesize"

#. type: item
#: ../doc/gforth.texi:973
#, no-wrap
msgid "--ss-min-ls"
msgstr "--ss-min-ls"

#. type: item
#: ../doc/gforth.texi:974
#, no-wrap
msgid "--ss-min-lsu"
msgstr "--ss-min-lsu"

#. type: item
#: ../doc/gforth.texi:975
#, no-wrap
msgid "--ss-min-nexts"
msgstr "--ss-min-nexts"

#. type: table
#: ../doc/gforth.texi:985
msgid ""
"Use specified metric for determining the cost of a primitive or static "
"superinstruction for static superinstruction selection.  @code{Codesize} is "
"the native code size of the primive or static superinstruction, @code{ls} is "
"the number of loads and stores, @code{lsu} is the number of loads, stores, "
"and updates, and @code{nexts} is the number of dispatches (not taking "
"dynamic superinstructions into account), i.e. every primitive or static "
"superinstruction has cost 1. Default: @code{codesize} if you use dynamic "
"code generation, otherwise @code{nexts}."
msgstr ""
"指定のメトリックを使用して、 静的スーパー命令の選択(static superinstruction "
"selection)をするためにプリミティブまたは静的スーパー命令のコストを決定しま"
"す。 @code{Codesize} はプリミティブまたは静的スーパー命令のネイティブ・コー"
"ド・サイズ、 そして、 @code{ls} はロードとストアの数、 そして、 @code{lsu} は"
"ロードとストアと更新の数、 そして、 @code{nexts} は(動的スーパー命令を考慮し"
"ない)ディスパッチの数です。 ここで、 すべてのプリミティブまたは静的スーパー命"
"令のコストは 1 です。 デフォルトでは、 動的コード生成を使用する場合は "
"@code{codesize}、 それ以外の場合は @code{nexts} です。"

#. type: cindex
#: ../doc/gforth.texi:986
#, no-wrap
msgid "--ss-greedy, command-line option"
msgstr "--ss-greedy, command-line option"

#. type: item
#: ../doc/gforth.texi:987
#, no-wrap
msgid "--ss-greedy"
msgstr "--ss-greedy"

#. type: table
#: ../doc/gforth.texi:998
msgid ""
"This option is useful for measuring the performance impact of static "
"superinstructions.  By default, an optimal shortest-path algorithm is used "
"for selecting static superinstructions.  With @option{--ss-greedy} this "
"algorithm is modified to assume that anything after the static "
"superinstruction currently under consideration is not combined into static "
"superinstructions.  With @option{--ss-min-nexts} this produces the same "
"result as a greedy algorithm that always selects the longest "
"superinstruction available at the moment.  E.g., if there are "
"superinstructions AB and BCD, then for the sequence A B C D the optimal "
"algorithm will select A BCD and the greedy algorithm will select AB C D."
msgstr ""
"このオプションは、 静的スーパー命令のパフォーマンスへの影響を測定するのに役立"
"ちます。 デフォルトでは、 静的スーパー命令の選択には最適な最短パス・アルゴリ"
"ズム(shortest-path algorithm)が使用されます。 @option{--ss-greedy} を使用する"
"と、 そのアルゴリズムは、 現在検討中の静的スーパー命令以降は静的スーパー命令"
"に結合されないと想定するように変更されます。 @option{--ss-min-nexts} を使用す"
"ると、 その時点で利用可能な最長のスーパー命令を常に選択する貪欲なアルゴリズム"
"と同じ結果が生成されます。 たとえば、スーパー命令 AB と BCD がある場合、 シー"
"ケンス A B C D に対して、 最適アルゴリズムは A BCD を選択し、 貪欲アルゴリズ"
"ムは AB C D を選択します。"

#. type: cindex
#: ../doc/gforth.texi:999
#, no-wrap
msgid "--print-metrics, command-line option"
msgstr "--print-metrics, command-line option"

#. type: item
#: ../doc/gforth.texi:1000
#, no-wrap
msgid "--print-metrics"
msgstr "--print-metrics"

#. type: table
#: ../doc/gforth.texi:1010
msgid ""
"Prints some metrics used during static superinstruction selection: "
"@code{code size} is the actual size of the dynamically generated code.  "
"@code{Metric codesize} is the sum of the codesize metrics as seen by static "
"superinstruction selection; there is a difference from @code{code size}, "
"because not all primitives and static superinstructions are compiled into "
"dynamically generated code, and because of markers.  The other metrics "
"correspond to the @option{ss-min-...} options.  This option is useful for "
"evaluating the effects of the @option{--ss-...} options."
msgstr ""
"静的スーパー命令の選択中に使用されるいくつかのメトリックを出力します。 "
"@code{code size} は、 動的に生成されたコードの実際のサイズです。  "
"@code{Metric codesize} は、静的スーパー命令の選択によって確認できるコードサイ"
"ズ・メトリック(codesize metrics)の合計で、 @code{code size} とは異なります。 "
"これは、 すべてのプリミティブと静的スーパー命令が動的に生成されるコードにコン"
"パイルされるわけではないことと、 マーカーがあるためです。 他のメトリクスは "
"@option{ss-min-...} オプションに対応します。 このオプションは、@option{--"
"ss-...} オプションの効果を評価するのに役立ちます。"

#. type: cindex
#: ../doc/gforth.texi:1013
#, no-wrap
msgid "loading files at startup"
msgstr "loading files at startup"

#. type: cindex
#: ../doc/gforth.texi:1014
#, no-wrap
msgid "executing code on startup"
msgstr "executing code on startup"

#. type: cindex
#: ../doc/gforth.texi:1015
#, no-wrap
msgid "batch processing with Gforth"
msgstr "batch processing with Gforth"

#. type: table
#: ../doc/gforth.texi:1027
msgid ""
"As explained above, the image-specific command-line arguments for the "
"default image @file{gforth.fi} consist of a sequence of filenames and @code{-"
"e @var{forth-code}} options that are interpreted in the sequence in which "
"they are given. The @code{-e @var{forth-code}} or @code{--evaluate "
"@var{forth-code}} option evaluates the Forth code. This option takes only "
"one argument; if you want to evaluate more Forth words, you have to quote "
"them or use @code{-e} several times. To exit after processing the command "
"line (instead of entering interactive mode)  append @code{-e bye} to the "
"command line.  You can also process the command-line arguments with a Forth "
"program (@pxref{OS command line arguments})."
msgstr ""
"上記にて説明したように、 デフォルト・イメージである @file{gforth.fi} のイメー"
"ジ固有のコマンドライン引数は、 一連のファイル名と、 指定した順序で解釈"
"(interpret)される @code{-e @var{forth-code}} オプションで構成されます。 "
"@code{-e @var{forth-code}} または @code{--evaluate @var{forth-code}} オプショ"
"ンは Forth コードを評価(evaluate)します。 このオプションは引数を 1 つだけ取り"
"ます。 あなたが、もし、 さらに多くの Forth ワードを評価したい場合は、 ワード"
"を引用符で囲むか、 @code{-e} を複数回使用する必要があります。 コマンド・ライ"
"ンの処理後に(対話モードに入るのではなく、)終了(exit)するには、 コマンド・ライ"
"ンに @code{-e bye} を追加します。 Forth プログラムではコマンド・ライン引数を"
"処理することもできます(@pxref{OS command line arguments})。"

#. type: cindex
#: ../doc/gforth.texi:1028
#, no-wrap
msgid "versions, invoking other versions of Gforth"
msgstr "versions, invoking other versions of Gforth"

#. type: table
#: ../doc/gforth.texi:1034
msgid ""
"If you have several versions of Gforth installed, @code{gforth} will invoke "
"the version that was installed last. @code{gforth-@i{<version>}} invokes a "
"specific version. If your environment contains the variable "
"@code{GFORTHPATH}, you may want to override it by using the @code{--path} "
"option."
msgstr ""
"複数のバージョンの Gforth がインストールされている場合、 @code{gforth} は最後"
"にインストールされたバージョンを呼び出します。 @code{gforth-@i{<version>}} は"
"特定のバージョンを呼び出します。 あなたの環境に環境変数 @code{GFORTHPATH} が"
"ある場合、 @code{--path} オプションを使用してこの環境変数をオーバーライドでき"
"ます。"

#. type: table
#: ../doc/gforth.texi:1043
msgid ""
"On startup, before processing any of the image option, the user "
"initialization file either specified in the environment variable "
"@code{GFORTH_ENV} or, if not set, @file{~/.config/gforthrc0} is included, if "
"it exists.  If @code{GFORTH_ENV} is ``@code{off},'' nothing is included.  "
"After processing all the image options and just before printing the boot "
"message, the user initialization file @file{~/.config/gforthrc} from your "
"home directory is included, unless the option @code{--no-rc} is given."
msgstr ""
"起動時、 イメージ・オプションを処理する前に、 環境変数 @code{GFORTH_ENV} で指"
"定されたユーザー初期化ファイル、 またはその環境変数が設定されていない場合は"
"(存在する場合、) @file{~/.config/gforthrc0} がインクルードされます。 "
"@code{GFORTH_ENV} が「@code{off}」の場合は何もインクルードしません。 すべての"
"イメージ・オプションを処理した後、 ブート・メッセージを出力する直前に、 オプ"
"ション @code{--no-rc} が指定されていない限り、 ホーム・ディレクトリのユーザー"
"初期化ファイル @file{~/.config/gforthrc} がインクルードされます。"

#. type: table
#: ../doc/gforth.texi:1045
msgid "Warning levels can be set with"
msgstr "警告レベルは以下のように設定できます"

#. type: cindex
#: ../doc/gforth.texi:1047
#, no-wrap
msgid "-W, command-line option"
msgstr "-W, command-line option"

#. type: item
#: ../doc/gforth.texi:1048
#, no-wrap
msgid "-W"
msgstr "-W"

#. type: table
#: ../doc/gforth.texi:1050
msgid "Turn off warnings"
msgstr "警告(warnings)をオフにする"

#. type: cindex
#: ../doc/gforth.texi:1051
#, no-wrap
msgid "-Won, command-line option"
msgstr "-Won, command-line option"

#. type: item
#: ../doc/gforth.texi:1052
#, no-wrap
msgid "-Won"
msgstr "-Won"

#. type: table
#: ../doc/gforth.texi:1054
msgid "Turn on warnings (level 1)"
msgstr "警告(warnings)をオンにする(レベル 1)"

#. type: cindex
#: ../doc/gforth.texi:1055
#, no-wrap
msgid "-Wall, command-line option"
msgstr "-Wall, command-line option"

#. type: item
#: ../doc/gforth.texi:1056
#, no-wrap
msgid "-Wall"
msgstr "-Wall"

#. type: table
#: ../doc/gforth.texi:1058
msgid "Turn on beginner warnings (level 2)"
msgstr "初心者向け警告をオンにする(レベル 2)"

#. type: cindex
#: ../doc/gforth.texi:1059
#, no-wrap
msgid "-Wpedantic, command-line option"
msgstr "-Wpedantic, command-line option"

#. type: item
#: ../doc/gforth.texi:1060
#, no-wrap
msgid "-Wpedantic"
msgstr "-Wpedantic"

#. type: table
#: ../doc/gforth.texi:1062
msgid "Turn on pedantic warnings (level 3)"
msgstr "細かい構文的な警告(pedantic warnings)をオンにする(レベル 3)"

#. type: cindex
#: ../doc/gforth.texi:1063
#, no-wrap
msgid "-Werror, command-line option"
msgstr "-Werror, command-line option"

#. type: item
#: ../doc/gforth.texi:1064
#, no-wrap
msgid "-Werror"
msgstr "-Werror"

#. type: table
#: ../doc/gforth.texi:1066
msgid "Turn warnings into errors (level 4)"
msgstr "警告をエラーとして出す(レベル 4)"

#. type: cindex
#: ../doc/gforth.texi:1071
#, no-wrap
msgid "Gforth - leaving"
msgstr "Gforth - leaving"

#. type: cindex
#: ../doc/gforth.texi:1072
#, no-wrap
msgid "leaving Gforth"
msgstr "leaving Gforth"

#. type: table
#: ../doc/gforth.texi:1079
msgid ""
"You can leave Gforth by typing @code{bye} or @kbd{Ctrl-d} (at the start of a "
"line) or (if you invoked Gforth with the @code{--die-on-signal} option) "
"@kbd{Ctrl-c}. When you leave Gforth, all of your definitions and data are "
"discarded.  For ways of saving the state of the system before leaving Gforth "
"see @ref{Image Files}."
msgstr ""
"@code{bye} または (行の先頭で、) @kbd{Ctrl-d} または (@code{--die-on-signal} "
"オプションを指定して Gforth を起動した場合、) @kbd{Ctrl+C} を入力すると、 "
"Gforth を終了できます。 Gforth を終了すると、 あなたの定義とデータはすべて破"
"棄されます。 Gforth を終了する前にシステムの状態を保存する方法については、 "
"@ref{Image Files} を参照してください。"

# 2024/05/11 全く意味不明だがこのままにしておく
#. type: table
#: ../doc/gforth.texi:1081
msgid "doc-bye"
msgstr "doc-bye"

#. type: kindex
#: ../doc/gforth.texi:1085 ../doc/gforth.texi:1090 ../doc/gforth.texi:1091
#, no-wrap
msgid "help"
msgstr "help"

#. type: table
#: ../doc/gforth.texi:1088
msgid "Gforth has a simple, text-based online help system."
msgstr ""
"Gforth には、 シンプルなテキストベースのオンライン・ヘルプ・システムがありま"
"す。"

#. type: findex
#: ../doc/gforth.texi:1089
#, no-wrap
msgid "help ( @var{ \"rest-of-line\" --   } ) gforth-1.0"
msgstr "help ( @var{ \"rest-of-line\" --   } ) gforth-1.0"

#. type: format
#: ../doc/gforth.texi:1094
#, no-wrap
msgid "@code{help} ( @i{\"rest-of-line\" --  }) gforth-1.0 ``help''\n"
msgstr "@code{help} ( @i{\"rest-of-line\" --  }) gforth-1.0 ``help''\n"

#. type: table
#: ../doc/gforth.texi:1103
msgid ""
"If no name is given, show basic help.  If a documentation node name is given "
"followed by \"::\", show the start of the node.  If the name of a word is "
"given, show the documentation of the word if it exists, or its source code "
"if not.  Use @code{g} to enter the editor at the point shown by "
"@code{help}.  @code{Help} sets the current location, so you can use @code{n} "
"and @code{b} to show more of the text, or @code{g} to visit the "
"documentation in an editor (@pxref{Locating source code definitions})."
msgstr ""
"名前が指定されていない場合は、 基礎的なヘルプが表示されます。 ドキュメント・"
"ノード名に `::` が続く場合、 ノードの最初を表示します。 ワードの名前が指定さ"
"れている場合、 そのワードのドキュメントが存在する場合はそのドキュメントを、 "
"存在しない場合はソース・コードを表示します。 @code{g} を使用して、 "
"@code{help} で表示された場所でエディタに入ります。 @code{Help} は現在の位置を"
"マークするため、 @code{n} と @code{b} を使用してテキストの詳細を表示したり、 "
"@code{g} を使用してエディターでドキュメントにアクセスしたりできます"
"(@pxref{Locating source code definitions})。"

#. type: findex
#: ../doc/gforth.texi:1105
#, no-wrap
msgid "authors ( @var{ --   } ) gforth-1.0"
msgstr "authors ( @var{ --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:1106 ../doc/gforth.texi:1107
#, no-wrap
msgid "authors"
msgstr "authors"

#. type: format
#: ../doc/gforth.texi:1110
#, no-wrap
msgid "@code{authors} ( @i{--  }) gforth-1.0 ``authors''\n"
msgstr "@code{authors} ( @i{--  }) gforth-1.0 ``authors''\n"

#. type: table
#: ../doc/gforth.texi:1112
msgid "show the list of authors"
msgstr "著者のリストを表示"

#. type: findex
#: ../doc/gforth.texi:1114
#, no-wrap
msgid "license ( @var{ --   } ) gforth-0.2"
msgstr "license ( @var{ --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:1115 ../doc/gforth.texi:1116
#, no-wrap
msgid "license"
msgstr "license"

#. type: format
#: ../doc/gforth.texi:1119
#, no-wrap
msgid "@code{license} ( @i{--  }) gforth-0.2 ``license''\n"
msgstr "@code{license} ( @i{--  }) gforth-0.2 ``license''\n"

#. type: table
#: ../doc/gforth.texi:1121
msgid "print the license statement"
msgstr "ライセンス声明を出力します"

#. type: cindex
#: ../doc/gforth.texi:1127
#, no-wrap
msgid "command-line editing"
msgstr "command-line editing"

#. type: table
#: ../doc/gforth.texi:1134
msgid ""
"Gforth maintains a history file that records every line that you type to the "
"text interpreter. This file is preserved between sessions, and is used to "
"provide a command-line recall facility; if you type @kbd{Ctrl-P} repeatedly "
"you can recall successively older commands from this (or previous) "
"session(s). The full list of command-line editing facilities is:"
msgstr ""
"Gforth は、 テキスト・インタプリタに入力したすべての行を記録するヒストリ・"
"ファイルを維持しています。 このファイルはセッションをまたいで保存され、 コマ"
"ンドラインの再呼び出し機能を提供するために使用されます。 @kbd{Ctrl-P} を繰り"
"返し入力すると、このセッション(または前のセッション)から古いコマンドを連続し"
"て呼び出すことができます。 コマンドライン編集機能の完全なリストは以下のとおり"
"です:"

#. type: itemize
#: ../doc/gforth.texi:1139
msgid ""
"@kbd{Ctrl-p} (``previous'') (or up-arrow) to recall successively older lines "
"from the history buffer."
msgstr ""
"@kbd{Ctrl-p} (``previous'') (または「↑」上矢印)を使用して、 ヒストリ・バッ"
"ファーから古い行を順に呼び出します。"

#. type: itemize
#: ../doc/gforth.texi:1145
msgid ""
"@kbd{Ctrl-n} (``next'') (or down-arrow) to recall successively newer lines "
"from the history buffer.  If you moved to an older line earlier and gave it "
"to Gforth for text-interpretation, asking for the next line as the first "
"editing command gives you the next line after the one you selected last time."
msgstr ""
"@kbd{Ctrl-n} (``next'')(または「↓」下矢印)を押すと、 ヒストリ・バッファーから"
"より新しい行を連続して呼び出します。 以前に古い行に移動し、 それをテキスト解"
"釈(text-interpretation)のために Gforth に与えた場合、 最初の編集コマンドとし"
"て「nextコマンド」を要求すると、 最後に選択した行の次の行が表示されます。"

#. type: itemize
#: ../doc/gforth.texi:1147
msgid ""
"@kbd{Ctrl-f} (or right-arrow) to move the cursor right, non-destructively."
msgstr ""
"@kbd{Ctrl-f} (または「→」右矢印)を使用して、 非破壊的にカーソルを右に移動しま"
"す。"

#. type: itemize
#: ../doc/gforth.texi:1149
msgid ""
"@kbd{Ctrl-b} (or left-arrow) to move the cursor left, non-destructively."
msgstr ""
"@kbd{Ctrl-b} (または「←」左矢印)を使用して、 非破壊的にカーソルを左に移動しま"
"す。"

#. type: itemize
#: ../doc/gforth.texi:1152
msgid ""
"@kbd{Ctrl-h} (backspace) to delete the character to the left of the cursor, "
"closing up the line."
msgstr "@kbd{Ctrl-h} (backspace) カーソルの左側の文字を削除し、 桁を詰めます。"

#. type: itemize
#: ../doc/gforth.texi:1154
msgid ""
"@kbd{Ctrl-k} to delete (``kill'') from the cursor to the end of the line."
msgstr "@kbd{Ctrl-k} カーソルから行末までを削除 (``kill'') します。"

#. type: itemize
#: ../doc/gforth.texi:1156
msgid "@kbd{Ctrl-a} to move the cursor to the start of the line."
msgstr "@kbd{Ctrl-a} カーソルを行頭に移動します。"

#. type: itemize
#: ../doc/gforth.texi:1158
msgid "@kbd{Ctrl-e} to move the cursor to the end of the line."
msgstr "@kbd{Ctrl-e} カーソルを行末に移動します。"

#. type: itemize
#: ../doc/gforth.texi:1161
msgid ""
"@key{RET} (@kbd{Ctrl-m}) or @key{LFD} (@kbd{Ctrl-j}) to submit the current "
"line."
msgstr ""
"@key{RET} (@kbd{Ctrl-m}) または @key{LFD} (@kbd{Ctrl-j}) 現在行を gforth へ送"
"ります"

#. type: itemize
#: ../doc/gforth.texi:1164
msgid ""
"@key{TAB} to step through all possible full-word completions of the word "
"currently being typed."
msgstr ""
"@key{TAB} 現在入力中のワードの、 可能なすべての全ワード補完をステップ実行しま"
"す。"

#. type: itemize
#: ../doc/gforth.texi:1167
msgid ""
"@kbd{Ctrl-d} on an empty line line to terminate Gforth (gracefully, using "
"@code{bye})."
msgstr ""
"@kbd{Ctrl-d} 空行で押すと Gforth を終了(terminate)します。 (@code{bye} 使用す"
"ると正常に終了します)。"

#. type: itemize
#: ../doc/gforth.texi:1170
msgid ""
"@kbd{Ctrl-x} (or @code{Ctrl-d} on a non-empty line) to delete the character "
"under the cursor."
msgstr ""
"@kbd{Ctrl-x} (空行以外では @code{Ctrl-d} も使えます) カーソル位置の文字を削除"
"します。"

#. type: table
#: ../doc/gforth.texi:1175
msgid ""
"When editing, displayable characters are inserted to the left of the cursor "
"position; the line is always in ``insert'' (as opposed to ``overstrike'') "
"mode."
msgstr ""
"編集中、 表示可能な文字はカーソル位置の左側に挿入されます。 行は常に(「上書き"
"モード」(overstrike)ではなく、)「挿入モード」(insert)です。"

#. type: cindex
#: ../doc/gforth.texi:1176
#, no-wrap
msgid "history file"
msgstr "history file"

#. type: file{#1}
#: ../doc/gforth.texi:1177
#, no-wrap
msgid ".gforth-history"
msgstr ".gforth-history"

#. type: table
#: ../doc/gforth.texi:1182
msgid ""
"On Unix systems, the history file is @file{$HOME/.local/share/gforth/"
"history} by default@footnote{i.e. it is stored in the user's home "
"directory.}. You can find out the name and location of your history file "
"using:"
msgstr ""
"Unix システムでは、 ヒストリ・ファイルは デフォルトでは @file{$HOME/.local/"
"share/gforth/history}です@footnote{つまり、 ユーザーのホーム・ディレクトリに"
"保存されます。}。 以下のコマンドを使用して、 ヒストリ・ファイルの名前と場所を"
"確認できます:"

#. type: example
#: ../doc/gforth.texi:1185
#, no-wrap
msgid ""
"history-file type \\ Unix-class systems\n"
"\n"
msgstr ""
"history-file type \\ Unix-class systems\n"
"\n"

#. type: example
#: ../doc/gforth.texi:1188
#, no-wrap
msgid ""
"history-file type \\ Other systems\n"
"history-dir  type\n"
msgstr ""
"history-file type \\ Other systems\n"
"history-dir  type\n"

#. type: table
#: ../doc/gforth.texi:1193
msgid ""
"If you enter long definitions by hand, you can use a text editor to paste "
"them out of the history file into a Forth source file for reuse at a later "
"time."
msgstr ""
"あなたが長い定義を手入力した場合、 テキスト・エディターを使用してヒストリ・"
"ファイルから Forth ソース・ファイルに貼り付け、 後で再利用できます。"

#. type: table
#: ../doc/gforth.texi:1196
msgid ""
"Gforth never trims the size of the history file, so you should do this "
"periodically, if necessary."
msgstr ""
"Gforth はヒストリ・ファイルのサイズを決して削減しないため、 あなたは必要に応"
"じて定期的にヒストリ・ファイルのサイズを削減する必要があります。"

#. type: cindex
#: ../doc/gforth.texi:1205 ../doc/gforth.texi:30713
#, no-wrap
msgid "environment variables"
msgstr "environment variables"

#. type: table
#: ../doc/gforth.texi:1208
msgid "Gforth uses these environment variables:"
msgstr "Gforth は以下の環境変数を使用します:"

#. type: cindex
#: ../doc/gforth.texi:1211
#, no-wrap
msgid "@code{GFORTHHIST} -- environment variable"
msgstr "@code{GFORTHHIST} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1215
msgid ""
"@code{GFORTHHIST} -- (Unix systems only) specifies the path for the history "
"file @file{.gforth-history}. Default: @code{$HOME/.local/share/gforth/"
"history}."
msgstr ""
"@code{GFORTHHIST} -- (Unix系のみ) ヒストリ・ファイル @file{.gforth-history} "
"のパスを指定。 デフォルト: @code{$HOME/.local/share/gforth/history}."

#. type: cindex
#: ../doc/gforth.texi:1217
#, no-wrap
msgid "@code{GFORTHPATH} -- environment variable"
msgstr "@code{GFORTHPATH} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1222
msgid ""
"@code{GFORTHPATH} -- specifies the path used when searching for the gforth "
"image file and for Forth source-code files (usually @samp{.}, the current "
"working directory).  Path separator is @samp{:}, a typical path would be "
"@file{/usr/local/share/gforth/1.0:.}."
msgstr ""
"@code{GFORTHPATH} -- gforth イメージ・ファイルと Forth ソースコード・ファイ"
"ル を検索するときに使用するパスを指定(通常 @samp{.} 、現在の作業ディレクト"
"リ)。 パス区切り文字は @samp{:} です。 @file{/usr/local/share/gforth/1.0:.} "
"みたいなのが典型です。"

#. type: cindex
#: ../doc/gforth.texi:1224
#, no-wrap
msgid "@code{LANG} -- environment variable"
msgstr "@code{LANG} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1226
msgid "@code{LANG} -- see @code{LC_CTYPE}"
msgstr "@code{LANG} -- @code{LC_CTYPE} 参照"

#. type: cindex
#: ../doc/gforth.texi:1228
#, no-wrap
msgid "@code{LC_ALL} -- environment variable"
msgstr "@code{LC_ALL} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1230
msgid "@code{LC_ALL} -- see @code{LC_CTYPE}"
msgstr "@code{LC_ALL} -- @code{LC_CTYPE} 参照"

#. type: cindex
#: ../doc/gforth.texi:1232
#, no-wrap
msgid "@code{LC_CTYPE} -- environment variable"
msgstr "@code{LC_CTYPE} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1239
msgid ""
"@code{LC_CTYPE} -- If this variable contains ``UTF-8'' on Gforth startup, "
"Gforth uses the UTF-8 encoding for strings internally and expects its input "
"and produces its output in UTF-8 encoding, otherwise the encoding is 8bit "
"(see @pxref{Xchars and Unicode}).  If this environment variable is unset, "
"Gforth looks in @code{LC_ALL}, and if that is unset, in @code{LANG}."
msgstr ""
"@code{LC_CTYPE} -- Gforth の起動時にこの環境変数が ``UTF-8'' を含んでいる場"
"合、 Gforth は内部で文字列に UTF-8 エンコーディングを使用し、 UTF-8 エンコー"
"ディングでの入力を期待し、 UTF-8 エンコーディングで出力を生成します。 それ以"
"外の場合、 エンコーディングは 8 ビットです(@pxref{Xchars and Unicode})。 この"
"環境変数が設定されていない場合、 Gforth は @code{LC_ALL} を調べ、 それも設定"
"されていない場合は @code{LANG} を調べます。"

#. type: cindex
#: ../doc/gforth.texi:1241
#, no-wrap
msgid "@code{GFORTHSYSTEMPREFIX} -- environment variable"
msgstr "@code{GFORTHSYSTEMPREFIX} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1247
msgid ""
"@code{GFORTHSYSTEMPREFIX} -- specifies what to prepend to the argument of "
"@code{system} before passing it to C's @code{system()}.  Default: @code{\"./"
"$COMSPEC /c \"} on Windows, @code{\"\"} on other OSs.  The prefix and the "
"command are directly concatenated, so if a space between them is necessary, "
"append it to the prefix."
msgstr ""
"@code{GFORTHSYSTEMPREFIX} -- C言語 の @code{system()} に渡す前に "
"@code{system} の引数に何を付加するかを指定します。 デフォルト: Windows では "
"@code{\"./$COMSPEC /c \"}で、他の OS では @code{\"\"} です。 このプレフィック"
"スとコマンドは直接連結されるため、 間にスペースが必要な場合はプレフィックスに"
"追加してください。"

#. type: cindex
#: ../doc/gforth.texi:1249 ../doc/gforth.texi:30715
#, no-wrap
msgid "@code{GFORTH} -- environment variable"
msgstr "@code{GFORTH} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1251
msgid "@code{GFORTH} -- used by @file{gforthmi}, @xref{gforthmi}."
msgstr ""
"@code{GFORTH} -- @file{gforthmi} によって使用されます(@xref{gforthmi})。"

#. type: cindex
#: ../doc/gforth.texi:1253 ../doc/gforth.texi:30714
#, no-wrap
msgid "@code{GFORTHD} -- environment variable"
msgstr "@code{GFORTHD} -- environment variable"

#. type: itemize
#: ../doc/gforth.texi:1255
msgid "@code{GFORTHD} -- used by @file{gforthmi}, @xref{gforthmi}."
msgstr ""
"@code{GFORTHD} -- @file{gforthmi} によって使用されます(@xref{gforthmi})。"

#. type: cindex
#: ../doc/gforth.texi:1257
#, no-wrap
msgid "@code{TMP}, @code{TEMP} - environment variable"
msgstr "@code{TMP}, @code{TEMP} - environment variable"

#. type: itemize
#: ../doc/gforth.texi:1260
msgid ""
"@code{TMP}, @code{TEMP} - (non-Unix systems only) used as a potential "
"location for the history file."
msgstr ""
"@code{TMP}, @code{TEMP} - (Unix系以外) ヒストリ・ファイルの場所として暗黙に使"
"用されます。"

#. type: table
#: ../doc/gforth.texi:1267
msgid ""
"All the Gforth environment variables default to sensible values if they are "
"not set."
msgstr ""
"すべての Gforth 環境変数は、 設定されていない場合、 デフォルトで適切な値にな"
"ります。"

#. type: cindex
#: ../doc/gforth.texi:1271 ../doc/gforth.texi:1272
#, no-wrap
msgid "Gforth files"
msgstr "Gforth files"

#. type: table
#: ../doc/gforth.texi:1276
msgid ""
"When you install Gforth on a Unix system, it installs files in these "
"locations by default:"
msgstr ""
"Gforth を Unix系にインストールすると、 デフォルトでは以下の場所にファイルがイ"
"ンストールされます:"

#. type: file{#1}
#: ../doc/gforth.texi:1280
msgid "/usr/local/bin/gforth"
msgstr "/usr/local/bin/gforth"

#. type: file{#1}
#: ../doc/gforth.texi:1282
msgid "/usr/local/bin/gforthmi"
msgstr "/usr/local/bin/gforthmi"

#. type: itemize
#: ../doc/gforth.texi:1284
msgid "@file{/usr/local/man/man1/gforth.1} - man page."
msgstr "@file{/usr/local/man/man1/gforth.1} - man page."

#. type: itemize
#: ../doc/gforth.texi:1286
msgid "@file{/usr/local/info} - the Info version of this manual."
msgstr "@file{/usr/local/info} - the Info version of this manual."

#. type: itemize
#: ../doc/gforth.texi:1288
msgid "@file{/usr/local/lib/gforth/<version>/...} - Gforth @file{.fi} files."
msgstr "@file{/usr/local/lib/gforth/<version>/...} - Gforth @file{.fi} files."

#. type: itemize
#: ../doc/gforth.texi:1290
msgid "@file{/usr/local/share/gforth/<version>/TAGS} - Emacs TAGS file."
msgstr "@file{/usr/local/share/gforth/<version>/TAGS} - Emacs TAGS file."

#. type: itemize
#: ../doc/gforth.texi:1292
msgid "@file{/usr/local/share/gforth/<version>/...} - Gforth source files."
msgstr "@file{/usr/local/share/gforth/<version>/...} - Gforth source files."

#. type: itemize
#: ../doc/gforth.texi:1294
msgid "@file{.../emacs/site-lisp/gforth.el} - Emacs gforth mode."
msgstr "@file{.../emacs/site-lisp/gforth.el} - Emacs gforth mode."

#. type: table
#: ../doc/gforth.texi:1298
msgid ""
"You can select different places for installation by using @code{configure} "
"options (listed with @code{configure --help})."
msgstr ""
"@code{configure} のオプションを使用すると、 インストール先に違う場所を選択で"
"きます(どんなオプションがあるかは @code{configure --help} してください)。"

#. type: cindex
#: ../doc/gforth.texi:1302
#, no-wrap
msgid "pipes, Gforth as part of"
msgstr "pipes, Gforth as part of"

#. type: table
#: ../doc/gforth.texi:1306
msgid ""
"Gforth can be used in pipes created elsewhere (described in the following).  "
"It can also create pipes on its own (@pxref{Pipes})."
msgstr ""
"Gforth は、他の場所で作成されたパイプラインを使用できます(以下で説明しま"
"す)。 独自にパイプラインを作成することもできます(@pxref{Pipes})。"

#. type: cindex
#: ../doc/gforth.texi:1307
#, no-wrap
msgid "input from pipes"
msgstr "input from pipes"

#. type: table
#: ../doc/gforth.texi:1315
msgid ""
"If you pipe into Gforth, your program should read with @code{read-file} or "
"@code{read-line} from @code{stdin} (@pxref{General files}).  @code{Key} does "
"not recognize the end of input.  Words like @code{accept} echo the input and "
"are therefore usually not useful for reading from a pipe.  You have to "
"invoke the Forth program with an OS command-line option, as you have no "
"chance to use the Forth command line (the text interpreter would try to "
"interpret the pipe input)."
msgstr ""
"Gforth にパイプライン入力する場合、 プログラムは @code{stdin} から "
"@code{read-file} または @code{read-line} を使用して読み取る必要があります"
"(@pxref{General files})。 @code{Key} は入力の終わりを認識しません。  "
"@code{accept} のようなワードは入力をエコーするため、 通常はパイプラインからの"
"読み取りには役に立ちません。 あなたは、 (Forthのテキスト・インタープリタはパ"
"イプライン入力を解釈(interpret)しようとしてしまうため、)Forth内のコマンド・ラ"
"インを使用する機会はなく、 OSのコマンド・ライン・オプションを使用して Forth "
"プログラムを呼び出す必要があります。"

#. type: cindex
#: ../doc/gforth.texi:1316
#, no-wrap
msgid "output in pipes"
msgstr "output in pipes"

#. type: table
#: ../doc/gforth.texi:1318
msgid "You can output to a pipe with @code{type}, @code{emit}, @code{cr} etc."
msgstr ""
"あなたは @code{type}、 @code{emit}、 @code{cr} などでパイプラインへ出力できま"
"す。"

#. type: cindex
#: ../doc/gforth.texi:1319
#, no-wrap
msgid "silent exiting from Gforth"
msgstr "silent exiting from Gforth"

#. type: table
#: ../doc/gforth.texi:1327
msgid ""
"When you write to a pipe that has been closed at the other end, Gforth "
"receives a SIGPIPE signal (``pipe broken'').  Gforth translates this into "
"the exception @code{broken-pipe-error}.  If your application does not catch "
"that exception, the system catches it and exits, usually silently (unless "
"you were working on the Forth command line; then it prints an error message "
"and exits).  This is usually the desired behaviour."
msgstr ""
"もう一方の端で既に閉じられているパイプラインに書き込むと、 Gforth は SIGPIPE "
"シグナル(「パイプが壊れた」シグナル)を受け取ります。 Gforth はこれを例外 "
"@code{broken-pipe-error} に変換します。 あなたのアプリケーションがその例外を"
"キャッチしない場合、 システムはその例外をキャッチして、 通常は黙って終了"
"(exit)します(Forth コマンド・ラインで作業している場合を除き、 エラー・メッ"
"セージを出力して終了します)。 これは通常、 望ましい動作です。"

#. type: table
#: ../doc/gforth.texi:1330
msgid ""
"If you do not like this behaviour, you have to catch the exception yourself, "
"and react to it."
msgstr ""
"この振る舞いが気に入らない場合は、 自分で例外をキャッチし、 対応する必要があ"
"ります。"

#. type: table
#: ../doc/gforth.texi:1332
msgid "Here's an example of an invocation of Gforth that is usable in a pipe:"
msgstr ""
"ここで、 パイプライン内で使用できる Gforth の呼び出しの例を以下に示します:"

#. type: example
#: ../doc/gforth.texi:1336
#, no-wrap
msgid ""
"gforth -e \": foo begin pad dup 10 stdin read-file throw dup while \\\n"
" type repeat ; foo bye\"\n"
msgstr ""
"gforth -e \": foo begin pad dup 10 stdin read-file throw dup while \\\n"
" type repeat ; foo bye\"\n"

#. type: table
#: ../doc/gforth.texi:1340
msgid ""
"This example just copies the input verbatim to the output.  A very simple "
"pipe containing this example looks like this:"
msgstr ""
"この例では、 入力をそのまま出力にコピーするだけです。 この例を含む非常に単純"
"なパイプラインは以下のようになります:"

#. type: example
#: ../doc/gforth.texi:1346
#, no-wrap
msgid ""
"cat startup.fs |\n"
"gforth -e \": foo begin pad dup 80 stdin read-file throw dup while \\\n"
" type repeat ; foo bye\"|\n"
"head\n"
msgstr ""
"cat startup.fs |\n"
"gforth -e \": foo begin pad dup 80 stdin read-file throw dup while \\\n"
" type repeat ; foo bye\"|\n"
"head\n"

#. type: cindex
#: ../doc/gforth.texi:1348
#, no-wrap
msgid "stderr and pipes"
msgstr "stderr and pipes"

#. type: table
#: ../doc/gforth.texi:1350
msgid "Pipes involving Gforth's @code{stderr} output do not work."
msgstr "Gforth の @code{stderr} 出力に関連するパイプラインは機能しません。"

#. type: cindex
#: ../doc/gforth.texi:1355
#, no-wrap
msgid "speed, startup"
msgstr "speed, startup"

#. type: table
#: ../doc/gforth.texi:1363
msgid ""
"If Gforth is used for CGI scripts or in shell scripts, its startup speed may "
"become a problem.  On a 3GHz Core 2 Duo E8400 under 64-bit Linux 2.6.27.8 "
"with libc-2.7, @code{gforth-fast -e bye} takes 13.1ms user and 1.2ms system "
"time (@code{gforth -e bye} is faster on startup with about 3.4ms user time "
"and 1.2ms system time, because it subsumes some of the options discussed "
"below)."
msgstr ""
"Gforth を CGI スクリプトやシェルスクリプトで使用する場合、 起動速度が問題にな"
"る場合があります。 libc-2.7 を搭載した 64 ビット Linux 2.6.27.8 上の 3GHz "
"Core 2 Duo E8400 では、 @code{gforth-fast -e bye} でユーザー時間は 13.1 ミリ"
"秒、システム時間は 1.2 ミリ秒かかります(@code{gforth -e bye} は、 下記で説明"
"するオプションの一部を組み込んでいるため、 ユーザー時間は約 3.4 ミリ秒、 シス"
"テム時間は 1.2 ミリ秒で起動がより高速になります)。"

#. type: table
#: ../doc/gforth.texi:1370
msgid ""
"If startup speed is a problem, you may consider the following ways to "
"improve it; or you may consider ways to reduce the number of startups (for "
"example, by using Fast-CGI).  Note that the first steps below improve the "
"startup time at the cost of run-time (including compile-time), so whether "
"they are profitable depends on the balance of these times in your "
"application."
msgstr ""
"起動速度が問題になる場合は、 以下の改善方法を検討してください。 または、 起動"
"の数を減らす方法(Fast-CGI の使用など)を検討することもできます。 以下の最初の"
"手順では、 (コンパイル時間を含む)実行時間を犠牲にして起動時間を短縮するた"
"め、 それで利益が得られるかどうかはあなたのアプリケーションでのこれらの時間の"
"バランスによって決まることに注意してください。"

#. type: table
#: ../doc/gforth.texi:1374
msgid ""
"An easy step that influences Gforth startup speed is the use of a number of "
"options that increase run-time, but decrease image-loading time."
msgstr ""
"Gforth の起動速度に影響を及ぼす簡単な手順は、 実行時間(run-time)を増加させな"
"がらイメージの読み込み時間(image-loading time)を短縮する多数のオプションを使"
"用してみることです。"

#. type: table
#: ../doc/gforth.texi:1380
msgid ""
"The first of these that you should try is @code{--ss-number=0 --ss-states=1} "
"because this option buys relatively little run-time speedup and costs quite "
"a bit of time at startup.  @code{gforth-fast --ss-number=0 --ss-states=1 -e "
"bye} takes about 2.8ms user and 1.5ms system time."
msgstr ""
"最初に試す必要があるのは @code{--ss-number=0 --ss-states=1} です。 このオプ"
"ションは実行時の高速化が比較的わずかなのに、 起動時にかなりの時間がかかるため"
"です。 @code{gforth-fast --ss-number=0 --ss-states=1 -e bye} には、 ユーザー"
"時間が約 2.8 ミリ秒、 システム時間が約 1.5 ミリ秒かかります。"

#. type: table
#: ../doc/gforth.texi:1386
msgid ""
"The next option is @code{--no-dynamic} which has a substantial impact on run-"
"time (about a factor of 2 on several platforms), but still makes startup "
"speed a little faster: @code{gforth-fast --ss-number=0 --ss-states=1 --no-"
"dynamic -e bye} consumes about 2.6ms user and 1.2ms system time."
msgstr ""
"次のオプションは @code{--no-dynamic} です。 これは実行時間に大きな影響を及ぼ"
"します(いくつかのプラットフォームでは約 2 倍です)が、 それでも起動速度が若干"
"速くなります。 @code{gforth-fast -- ss-number=0 --ss-states=1 --no-dynamic -"
"e bye} は、 約 2.6 ミリ秒のユーザー時間と 1.2 ミリ秒のシステム時間を消費しま"
"す。"

#. type: table
#: ../doc/gforth.texi:1401
msgid ""
"The next step to improve startup speed is to use a data-relocatable image "
"(@pxref{Data-Relocatable Image Files}).  This avoids the relocation cost for "
"the code in the image (but not for the data).  Note that the image is then "
"specific to the particular binary you are using (i.e., whether it is "
"@code{gforth}, @code{gforth-fast}, and even the particular build).  You "
"create the data-relocatable image that works with @code{./gforth-fast} with "
"@code{GFORTHD=\"./gforth-fast --no-dynamic\" gforthmi gforthdr.fi} (the "
"@code{--no-dynamic} is required here or the image will not work).  And you "
"run it with @code{gforth-fast -i gforthdr.fi ... -e bye} (the flags "
"discussed above don't matter here, because they only come into play on "
"relocatable code).  @code{gforth-fast -i gforthdr.fi -e bye} takes about "
"1.1ms user and 1.2ms system time."
msgstr ""
"起動速度を向上させるための次のステップは、 データ再配置可能イメージ(data-"
"relocatable image)を使用することです(@pxref{Data-Relocatable Image Files})。 "
"これにより、 イメージ内のコードの再配置コストが回避されます(ただし、 データの"
"再配置コストは回避されません)。 イメージは、 使用している特定のバイナリ(つま"
"り、 @code{gforth}、 @code{gforth-fast}、さらには特定のビルド)に固有であるこ"
"とに注意してください。 @code{./gforth-fast} で動作するデータ再配置可能イメー"
"ジを作成するには、 @code{GFORTHD=\"./gforth-fast --no-dynamic\" gforthmi "
"gforthdr.fi} とします(これには @code{--no-dynamic} が必要です。そうしないとこ"
"のイメージは機能しません)。 そして、 @code{gforth-fast -i gforthdr.fi ... -e "
"bye} で実行します(上記で説明したフラグは、 再配置可能なコードでのみ機能するた"
"め、ここでは重要ではありません)。  @code{gforth-fast -i gforthdr.fi -e bye} "
"では、 ユーザー時間は約 1.1 ミリ秒、 システム時間は約 1.2 ミリ秒かかります。"

#. type: table
#: ../doc/gforth.texi:1415
msgid ""
"One step further is to avoid all relocation cost and part of the copy-on-"
"write cost through using a non-relocatable image (@pxref{Non-Relocatable "
"Image Files}).  However, this has the disadvantage that it does not work on "
"operating systems with address space randomization (the default in, e.g., "
"Linux nowadays), or if the dictionary moves for any other reason (e.g., "
"because of a change of the OS kernel or an updated library), so we cannot "
"really recommend it.  You create a non-relocatable image with @code{gforth-"
"fast --no-dynamic -e \"savesystem gforthnr.fi bye\"} (the @code{--no-"
"dynamic} is required here, too).  And you run it with @code{gforth-fast -i "
"gforthnr.fi ... -e bye} (again the flags discussed above don't matter).  "
"@code{gforth-fast -i gforthdr.fi -e bye} takes about 0.9ms user and 0.9ms "
"system time."
msgstr ""
"さらにもう 1 つのステップは、 再配置不可イメージ(non-relocatable image)を使用"
"することで、 すべての再配置コストと書き換え時コピー(copy-on-write;COW)コスト"
"の一部を回避することです(@pxref{Non-Relocatable Image Files})。ただし、 アド"
"レス空間のランダム化が行われているオペレーティング・システム(最近の Linux 等"
"ではこれがデフォルト)や、 その他の理由でディクショナリが移動した場合(OS カー"
"ネルの変更や、 ライブラリ更新などの場合)には機能しないという欠点があるため、 "
"あまりお勧めできません。再配置不可イメージ(non-relocatable image)を作成するた"
"めに @code{gforth-fast --no-dynamic -e \"savesystem gforthnr.fi bye\"} としま"
"す(ここでも @code{--no-dynamic} が必要です)。  そして、  @code{gforth-fast -"
"i gforthnr.fi ... -e bye} として実行します(ここでも、 上記で説明したフラグは"
"重要ではありません)。  @code{gforth-fast -i gforthdr.fi -e bye} はユーザー時"
"間は約 0.9 ミリ秒、 システム時間は約 0.9 ミリ秒かかります。"

#. type: table
#: ../doc/gforth.texi:1419
msgid ""
"If the script you want to execute contains a significant amount of code, it "
"may be profitable to compile it into the image to avoid the cost of "
"compiling it at startup time."
msgstr ""
"実行するスクリプトに大量のコードが含まれている場合は、 起動時のコンパイルのコ"
"ストを避けるために、 それをイメージにコンパイルすると有益な場合があります。"

#. type: table
#: ../doc/gforth.texi:1437
msgid ""
"The difference of this chapter from the Introduction (@pxref{Introduction}) "
"is that this tutorial is more fast-paced, should be used while sitting in "
"front of a computer, and covers much more material, but does not explain how "
"the Forth system works."
msgstr ""
"この章と Introduction(@pxref{Introduction}) の違いは、 このチュートリアルの方"
"がハイペースで、 かつ、 あなたがコンピューターをさわれるときに読む必要があ"
"り、 かつ、 より多くの内容をカバーしていますが、 しかし、 Forth システムがど"
"のように機能するかについては説明してい無いことです。"

#. type: table
#: ../doc/gforth.texi:1444
msgid ""
"This tutorial can be used with any Standard-compliant Forth; any Gforth-"
"specific features are marked as such and you can skip them if you work with "
"another Forth.  This tutorial does not explain all features of Forth, just "
"enough to get you started and give you some ideas about the facilities "
"available in Forth.  Read the rest of the manual when you are through this."
msgstr ""
"このチュートリアルは、 標準に準拠した任意の Forth でご利用できます。 Gforth "
"固有の機能はすべてその旨の目印が付けられており、 別の Forth を使用する場合は"
"その部分はスキップできます。 このチュートリアルでは、 Forth のすべての機能に"
"ついて説明するわけではありませんが、 あなたが Forth を使い始めて、 Forth で使"
"用できる機能についていくつかのアイデアを得るには十分です。 このチュートリアル"
"が終わったら、 マニュアルの残りの部分をお読みください。"

#. type: table
#: ../doc/gforth.texi:1451
msgid ""
"The intended way to use this tutorial is that you work through it while "
"sitting in front of the console, take a look at the examples and predict "
"what they will do, then try them out; if the outcome is not as expected, "
"find out why (e.g., by trying out variations of the example), so you "
"understand what's going on.  There are also some assignments that you should "
"solve."
msgstr ""
"このチュートリアルの使用目的は、 あなたがコンソールの前に座って作業を進め、 "
"例を見てその結果を予測してから、 自分で試してみるというものです。 結果が期待"
"どおりでない場合は、 何が起こっているのかを理解できるように(類似の例を試すな"
"どして)理由を調べます。 いくつか課題も出題してあります。"

#. type: table
#: ../doc/gforth.texi:1454
msgid ""
"This tutorial assumes that you have programmed before and know what, e.g., a "
"loop is."
msgstr ""
"このチュートリアルでは、 あなたが以前にプログラミングをしたことがあり、 例え"
"ば、 ループとは何か、とかを理解していることを前提としています。"

#. type: node
#: ../doc/gforth.texi:1497 ../doc/gforth.texi:1511
#, no-wrap
msgid "Starting Gforth Tutorial"
msgstr "Starting Gforth Tutorial"

#. type: node
#: ../doc/gforth.texi:1497 ../doc/gforth.texi:1511 ../doc/gforth.texi:1541
#, no-wrap
msgid "Syntax Tutorial"
msgstr "Syntax Tutorial"

#. type: section
#: ../doc/gforth.texi:1498
#, no-wrap
msgid "Starting Gforth"
msgstr "Starting Gforth"

#. type: cindex
#: ../doc/gforth.texi:1499
#, no-wrap
msgid "starting Gforth tutorial"
msgstr "starting Gforth tutorial"

#. type: table
#: ../doc/gforth.texi:1501
msgid "You can start Gforth by typing its name:"
msgstr "あなたが Gforth を開始するには、その名前をタイプします:"

#. type: example
#: ../doc/gforth.texi:1504
#, no-wrap
msgid "gforth\n"
msgstr "gforth\n"

#. type: table
#: ../doc/gforth.texi:1509
msgid ""
"That puts you into interactive mode; you can leave Gforth by typing "
"@code{bye}.  While in Gforth, you can edit the command line and access the "
"command line history with cursor keys, similar to bash."
msgstr ""
"これにより、 対話モードに入ります。 @code{bye} と入力すると Gforth を終了でき"
"ます。 Gforth では、 bash と同様に、 コマンド・ラインを編集し、 カーソル・"
"キーを使用してコマンド・ライン・ヒストリ(履歴)にアクセスできます。"

#. type: node
#: ../doc/gforth.texi:1511 ../doc/gforth.texi:1541 ../doc/gforth.texi:1566
#, no-wrap
msgid "Crash Course Tutorial"
msgstr "Crash Course Tutorial"

#. type: section
#: ../doc/gforth.texi:1512
#, no-wrap
msgid "Syntax"
msgstr "Syntax"

#. type: cindex
#: ../doc/gforth.texi:1513
#, no-wrap
msgid "syntax tutorial"
msgstr "syntax tutorial"

#. type: table
#: ../doc/gforth.texi:1518
msgid ""
"A @dfn{word} is a sequence of arbitrary characters (except white space).  "
"Words are separated by white space.  E.g., each of the following lines "
"contains exactly one word:"
msgstr ""
"@dfn{word} は、任意の文字のシーケンスです(空白(white space)を除く)。 ワードは"
"空白(white space)で区切られます。 たとえば、 以下の各行には正確にただ 1 つの"
"ワードが含まれています:"

#. type: example
#: ../doc/gforth.texi:1524
#, no-wrap
msgid ""
"word\n"
"!@@#$%^&*()\n"
"1234567890\n"
"5!a\n"
msgstr ""
"word\n"
"!@@#$%^&*()\n"
"1234567890\n"
"5!a\n"

#. type: table
#: ../doc/gforth.texi:1529
msgid ""
"A frequent beginner's error is to leave out necessary white space, resulting "
"in an error like @samp{Undefined word}; so if you see such an error, check "
"if you have put spaces wherever necessary."
msgstr ""
"初心者によくある間違いは、 必要な空白を省略することです。 その結果、 "
"@samp{Undefined word} のようなエラーが発生します。そのため、 このようなエラー"
"が表示された場合は、 必要な場所に空白を入れてあるかどうかを確認してください。"

#. type: example
#: ../doc/gforth.texi:1533
#, no-wrap
msgid ""
".\" hello, world\" \\ correct\n"
".\"hello, world\"  \\ gives an \"Undefined word\" error\n"
msgstr ""
".\" hello, world\" \\ correct\n"
".\"hello, world\"  \\ gives an \"Undefined word\" error\n"

#. type: table
#: ../doc/gforth.texi:1539
msgid ""
"Gforth and most other Forth systems ignore differences in case (they are "
"case-insensitive), i.e., @samp{word} is the same as @samp{Word}.  If your "
"system is case-sensitive, you may have to type all the examples given here "
"in upper case."
msgstr ""
"Gforth および他のほとんどの Forth システムは、 大文字と小文字の違いを無視しま"
"す(大文字と小文字は区別されません)。 つまり、 @samp{word} は @samp{Word} と同"
"一です。 あなたのシステムで大文字と小文字が区別される場合は、 ここに示されて"
"いるすべての例を大文字で入力する必要がある場合があります。"

#. type: node
#: ../doc/gforth.texi:1541 ../doc/gforth.texi:1566 ../doc/gforth.texi:1596
#, no-wrap
msgid "Stack Tutorial"
msgstr "Stack Tutorial"

#. type: section
#: ../doc/gforth.texi:1542
#, no-wrap
msgid "Crash Course"
msgstr "Crash Course"

#. type: table
#: ../doc/gforth.texi:1546
msgid ""
"Forth does not prevent you from shooting yourself in the foot.  Let's try a "
"few ways to crash Gforth:"
msgstr ""
"Forth は、 自分の足を撃つような馬鹿げた事を妨げたりはしません。 以下のように "
"Gforth をクラッシュさせるいくつかの方法を試してみましょう:"

#. type: example
#: ../doc/gforth.texi:1552
#, no-wrap
msgid ""
"0 0 !\n"
"here execute\n"
"' catch >body 20 erase abort\n"
"' (quit1) >body 20 erase\n"
msgstr ""
"0 0 !\n"
"here execute\n"
"' catch >body 20 erase abort\n"
"' (quit1) >body 20 erase\n"

#. type: table
#: ../doc/gforth.texi:1558
msgid ""
"The last two examples are guaranteed to destroy important parts of Gforth "
"(and most other systems), so you better leave Gforth afterwards (if it has "
"not finished by itself).  On some systems you may have to kill gforth from "
"outside (e.g., in Unix with @code{kill})."
msgstr ""
"最後の 2 つの例は、Gforth (および他のほとんどのシステム) の重要な部分を破壊す"
"ることが保証されているため、 (Gforth が自動的に終了していない場合、) この後"
"は Gforth を終了させたほうがよいでしょう。 一部のシステムでは、 外部から "
"gforth を強制終了する必要がある場合があります(例: Unix系 では @code{kill} を"
"使用します)。"

#. type: table
#: ../doc/gforth.texi:1561
msgid ""
"You will find out later what these lines do and then you will get an idea "
"why they produce crashes."
msgstr ""
"これらの行が何を行うのか、 なぜクラッシュが発生するのかは後ほど分かります。"

#. type: table
#: ../doc/gforth.texi:1564
msgid ""
"Now that you know how to produce crashes (and that there's not much to "
"them), let's learn how to produce meaningful programs."
msgstr ""
"クラッシュを発生させる方法がわかったので(そして、 それは大したことがない事が"
"わかったので)、 今度は意味のあるプログラムを作成する方法を学ぶとしましょう。"

#. type: node
#: ../doc/gforth.texi:1566 ../doc/gforth.texi:1596 ../doc/gforth.texi:1649
#, no-wrap
msgid "Arithmetics Tutorial"
msgstr "Arithmetics Tutorial"

#. type: section
#: ../doc/gforth.texi:1567
#, no-wrap
msgid "Stack"
msgstr "Stack"

#. type: cindex
#: ../doc/gforth.texi:1568
#, no-wrap
msgid "stack tutorial"
msgstr "stack tutorial"

#. type: table
#: ../doc/gforth.texi:1573
msgid ""
"The most obvious feature of Forth is the stack.  When you type in a number, "
"it is pushed on the stack.  You can display the contents of the stack with "
"@code{.s}."
msgstr ""
"Forth の最も明々白々な機能はスタックです。 数値を入力すると、 その数値がス"
"タックにプッシュされます。 @code{.s} を使用してスタックの内容を表示できます。"

#. type: example
#: ../doc/gforth.texi:1577
#, no-wrap
msgid ""
"1 2 .s\n"
"3 .s\n"
msgstr ""
"1 2 .s\n"
"3 .s\n"

#. type: table
#: ../doc/gforth.texi:1581
msgid ""
"@code{.s} displays the top-of-stack to the right, i.e., the numbers appear "
"in @code{.s} output as they appeared in the input."
msgstr ""
"@code{.s} はスタックの最上位(top-of-stack)が一番右になるように表示します。 つ"
"まり、 数値は入力時に表記されたとおりに @code{.s} 出力に表れます。"

#. type: table
#: ../doc/gforth.texi:1583
msgid "You can print the top element of the stack with @code{.}."
msgstr "@code{.} を使用してスタックの最上位要素を出力できます。"

#. type: example
#: ../doc/gforth.texi:1586
#, no-wrap
msgid "1 2 3 . . .\n"
msgstr "1 2 3 . . .\n"

#. type: table
#: ../doc/gforth.texi:1590
msgid ""
"In general, words consume their stack arguments (@code{.s} is an exception)."
msgstr "一般に、 ワードはスタック引数を消費します(@code{.s} は例外です)。"

#. type: quotation
#: ../doc/gforth.texi:1591 ../doc/gforth.texi:1624 ../doc/gforth.texi:1636
#: ../doc/gforth.texi:1677 ../doc/gforth.texi:1701 ../doc/gforth.texi:1826
#: ../doc/gforth.texi:1879 ../doc/gforth.texi:1940 ../doc/gforth.texi:2121
#: ../doc/gforth.texi:2179 ../doc/gforth.texi:2284 ../doc/gforth.texi:2365
#: ../doc/gforth.texi:2411 ../doc/gforth.texi:2473 ../doc/gforth.texi:2573
#: ../doc/gforth.texi:2638 ../doc/gforth.texi:2751 ../doc/gforth.texi:2867
#: ../doc/gforth.texi:2996 ../doc/gforth.texi:3212 ../doc/gforth.texi:3369
#: ../doc/gforth.texi:3470 ../doc/gforth.texi:3510 ../doc/gforth.texi:3683
#, no-wrap
msgid "Assignment"
msgstr "研究課題(assignment)"

# 5 6 7 . .s 7 <2> 5 6  ok 2
#. type: quotation
#: ../doc/gforth.texi:1593
msgid "What does the stack contain after @code{5 6 7 .}?"
msgstr "@code{5 6 7 .} の後、 スタックには何が含まれていますか？"

#. type: node
#: ../doc/gforth.texi:1596 ../doc/gforth.texi:1649 ../doc/gforth.texi:1711
#, no-wrap
msgid "Stack Manipulation Tutorial"
msgstr "Stack Manipulation Tutorial"

#. type: section
#: ../doc/gforth.texi:1597
#, no-wrap
msgid "Arithmetics"
msgstr "Arithmetics"

#. type: cindex
#: ../doc/gforth.texi:1598
#, no-wrap
msgid "arithmetics tutorial"
msgstr "arithmetics tutorial"

#. type: table
#: ../doc/gforth.texi:1602
msgid ""
"The words @code{+}, @code{-}, @code{*}, @code{/}, and @code{mod} always "
"operate on the top two stack items:"
msgstr ""
"@code{+} や @code{-} や @code{*} や @code{/} や @code{mod} というワードは、 "
"常に頂上から見て 2 つのスタック項目に作用します:"

#. type: example
#: ../doc/gforth.texi:1609
#, no-wrap
msgid ""
"2 2 .s\n"
"+ .s\n"
".\n"
"2 1 - .\n"
"7 3 mod .\n"
msgstr ""
"2 2 .s\n"
"+ .s\n"
".\n"
"2 1 - .\n"
"7 3 mod .\n"

#. type: table
#: ../doc/gforth.texi:1614
msgid ""
"The operands of @code{-}, @code{/}, and @code{mod} are in the same order as "
"in the corresponding infix expression (this is generally the case in Forth)."
msgstr ""
"@code{-} や @code{/} や @code{mod} のオペランドは、 対応する中置式と同じ順序"
"になります(これが Forth における一般的なケースです)。"

#. type: table
#: ../doc/gforth.texi:1618
msgid ""
"Parentheses are superfluous (and not available), because the order of the "
"words unambiguously determines the order of evaluation and the operands:"
msgstr ""
"ワードの順序によって評価の順序とオペランドが明確に決定されるため、 括弧は不要"
"です(そして、 括弧は使用不可です):"

#. type: example
#: ../doc/gforth.texi:1622
#, no-wrap
msgid ""
"3 4 + 5 * .\n"
"3 4 5 * + .\n"
msgstr ""
"3 4 + 5 * .\n"
"3 4 5 * + .\n"

# 3 4 + 5 * .
# → (3 + 4) * 5
#
# 3 4 5 * + .
# → 3 + (4 * 5)
#
# 6-7*8+9
# ※優先順位なし →
# 6 7 - 8 * 9 + . 1  ok
# 先に置数してから計算
# 6 7 8 9
# 2swap .s <4> 8 9 6 7  ok 4
# -     .s <3> 8 9 -1  ok 3
# rot   .s <3> 9 -1 8  ok 3
# *     .s <2> 9 -8  ok 2
# +     .s <1> 1  ok 1
# . 1  ok
#
# ※優先順位あり 6-(7*8)+9 →
# 先に置数してから計算
# 6 7 8 9  ok 4
# rot rot .s <4> 6 9 7 8  ok 4
# * .s       <3> 6 9 56  ok 3
# rot .s     <3> 9 56 6  ok 3
# swap .s    <3> 9 6 56  ok 3
# - .s       <2> 9 -50  ok 2
# + .s       <1> -41  ok 1
# . -41  ok
#. type: quotation
#: ../doc/gforth.texi:1628
msgid ""
"What are the infix expressions corresponding to the Forth code above? Write "
"@code{6-7*8+9} in Forth notation@footnote{This notation is also known as "
"Postfix or RPN (Reverse Polish Notation).}."
msgstr ""
"上記の Forth コードに対応する中置式はどうなるでしょうか？ また、 "
"@code{6-7*8+9} を Forth 表記で記述してください@footnote{この表記法は、 後値記"
"法(postfix notation) または RPN (逆ポーランド記法) と呼ばれます。}。"

#. type: table
#: ../doc/gforth.texi:1631
msgid "To change the sign, use @code{negate}:"
msgstr "符号を変更するには、 以下のように @code{negate} を使用します:"

#. type: example
#: ../doc/gforth.texi:1634
#, no-wrap
msgid "2 negate .\n"
msgstr "2 negate .\n"

# -(-3)*4-5
#
# -3 4 5 rot negate .s <3> 4 5 3  ok 3
# rot               .s <3> 5 3 4  ok 3
# *                 .s <2> 5 12  ok 2
# swap -            .s <1> 7  ok 1
# . 7  ok
#. type: quotation
#: ../doc/gforth.texi:1638
msgid "Convert -(-3)*4-5 to Forth."
msgstr "`-(-3)*4-5` を Forth に変換してみましょう。"

#. type: table
#: ../doc/gforth.texi:1641
msgid "@code{/mod} performs both @code{/} and @code{mod}."
msgstr "@code{/mod} は @code{/} と @code{mod} の両方を実行します。"

#. type: example
#: ../doc/gforth.texi:1644
#, no-wrap
msgid "7 3 /mod . .\n"
msgstr "7 3 /mod . .\n"

#. type: table
#: ../doc/gforth.texi:1647
msgid "Reference: @ref{Arithmetic}."
msgstr "詳しくはこちらを参照ください: @ref{Arithmetic}"

#. type: node
#: ../doc/gforth.texi:1649 ../doc/gforth.texi:1711 ../doc/gforth.texi:1759
#, no-wrap
msgid "Using files for Forth code Tutorial"
msgstr "Using files for Forth code Tutorial"

#. type: cindex
#: ../doc/gforth.texi:1651
#, no-wrap
msgid "stack manipulation tutorial"
msgstr "stack manipulation tutorial"

#. type: table
#: ../doc/gforth.texi:1654
msgid "Stack manipulation words rearrange the data on the stack."
msgstr "スタック操作ワードはスタックのデータを並べ替えます。"

#. type: example
#: ../doc/gforth.texi:1661
#, no-wrap
msgid ""
"1 .s drop .s\n"
"1 .s dup .s drop drop .s\n"
"1 2 .s over .s drop drop drop\n"
"1 2 .s swap .s drop drop\n"
"1 2 3 .s rot .s drop drop drop\n"
msgstr ""
"1 .s drop .s\n"
"1 .s dup .s drop drop .s\n"
"1 2 .s over .s drop drop drop\n"
"1 2 .s swap .s drop drop\n"
"1 2 3 .s rot .s drop drop drop\n"

#. type: table
#: ../doc/gforth.texi:1665
msgid ""
"These are the most important stack manipulation words.  There are also "
"variants that manipulate twice as many stack items:"
msgstr ""
"上記は最も重要なスタック操作ワードです。 以下のように2つペアでスタック項目を"
"操作する亜種もあります:"

#. type: example
#: ../doc/gforth.texi:1668
#, no-wrap
msgid "1 2 3 4 .s 2swap .s 2drop 2drop\n"
msgstr "1 2 3 4 .s 2swap .s 2drop 2drop\n"

#. type: table
#: ../doc/gforth.texi:1671
msgid "Two more stack manipulation words are:"
msgstr "さらに 2 つ、 以下のスタック操作ワードがあります:"

#. type: example
#: ../doc/gforth.texi:1675
#, no-wrap
msgid ""
"1 2 .s nip .s drop\n"
"1 2 .s tuck .s 2drop drop\n"
msgstr ""
"1 2 .s nip .s drop\n"
"1 2 .s tuck .s 2drop drop\n"

# / nip ( n1 n2 -- n2 )<
#
# : my-nip  ( n1 n2 -- n2 )  compiled
#   swap drop ;  ok 1
#
# 1 2 .s nip .s drop <2> 1 2 <1> 2  ok
# 1 2 .s my-nip .s drop <2> 1 2 <1> 2  ok
#
# / tuck ( n1 n2 -- n2 n1 n2 )
# 1 2 .s tuck .s 2drop drop <2> 1 2 <3> 2 1 2  ok
# : my-tuck  ( n1 n2 -- n2 n1 n2)  compiled
#   dup -rot ;  ok
# 1 2 .s my-tuck .s 2drop drop <2> 1 2 <3> 2 1 2  ok
#
#   
#. type: quotation
#: ../doc/gforth.texi:1680
msgid ""
"Replace @code{nip} and @code{tuck} with combinations of other stack "
"manipulation words."
msgstr ""
"@code{nip} と @code{tuck} を他のスタック操作ワードの組み合わせに置き換えてみ"
"ましょう。"

# ( 訳注: 正解はこれだけではないが一例として
# 1 2 3           3 2 1  ( rot rot swap ) ( -rot swap )
# 1 2 3           1 2 3 2  \ over
# 1 2 3           1 2 3 3  \ dup
# 1 2 3           1 3 3  ( swap drop dup ) ( nip swap )
# 1 2 3           2 1 3  \ rot swap
# 1 2 3 4         4 3 2 1  \ swap 2swap swap
# 1 2 3           1 2 3 1 2 3  \ third third third
# 1 2 3 4         1 2 3 4 1 2  \ 2over 
# 1 2 3                        \ 2drop drop
# 1 2 3           1 2 3 4  \ dup 1+
# 1 2 3           1 3  \ swap drop
#. type: example
#: ../doc/gforth.texi:1694
#, no-wrap
msgid ""
"Given:          How do you get:\n"
"1 2 3           3 2 1           \n"
"1 2 3           1 2 3 2                 \n"
"1 2 3           1 2 3 3                 \n"
"1 2 3           1 3 3           \n"
"1 2 3           2 1 3           \n"
"1 2 3 4         4 3 2 1         \n"
"1 2 3           1 2 3 1 2 3             \n"
"1 2 3 4         1 2 3 4 1 2             \n"
"1 2 3\n"
"1 2 3           1 2 3 4                 \n"
"1 2 3           1 3             \n"
msgstr ""
"以下の結果になるスタック操作を考えてみましょう\n"
"Given:          How do you get:\n"
"1 2 3           3 2 1\n"
"1 2 3           1 2 3 2\n"
"1 2 3           1 2 3 3\n"
"1 2 3           1 3 3\n"
"1 2 3           2 1 3\n"
"1 2 3 4         4 3 2 1\n"
"1 2 3           1 2 3 1 2 3\n"
"1 2 3 4         1 2 3 4 1 2\n"
"1 2 3\n"
"1 2 3           1 2 3 4\n"
"1 2 3           1 3\n"

#. type: example
#: ../doc/gforth.texi:1699
#, no-wrap
msgid "5 dup * .\n"
msgstr "5 dup * . \\ 5^2\n"

# 17^3
# 17 dup dup * * . 4913  ok
#
# 17^4
# 17 dup 2dup .s * * * . <4> 17 17 17 17 83521  ok
#
# \ (a-b)(a+1)
# 3 4 over 1+ .s <3> 3 4 4  ok 3
# -rot        .s <3> 4 3 4  ok 3
# -           .s <2> 4 -1  ok 2
# *           .s <1> -4  ok 1
# . -4  ok
#
#. type: quotation
#: ../doc/gforth.texi:1706
msgid ""
"Write 17^3 and 17^4 in Forth, without writing @code{17} more than once.  "
"Write a piece of Forth code that expects two numbers on the stack (@var{a} "
"and @var{b}, with @var{b} on top) and computes @code{(a-b)(a+1)}."
msgstr ""
"@code{17} を複数回書かずに、 Forth で 17^3 と 17^4 を書いてみましょう。 ま"
"た、 スタック上の 2 つの数値 (@var{a} と @var{b}、 スタック頂上を @var{b} と"
"する) を想定し、@code{(a-b)(a+1)} を計算する Forth コードを作成してみましょ"
"う。 "

#. type: table
#: ../doc/gforth.texi:1709
msgid "Reference: @ref{Stack Manipulation}."
msgstr "こちらも参照してください: @ref{Stack Manipulation}"

#. type: node
#: ../doc/gforth.texi:1711 ../doc/gforth.texi:1759 ../doc/gforth.texi:1793
#, no-wrap
msgid "Comments Tutorial"
msgstr "Comments Tutorial"

#. type: section
#: ../doc/gforth.texi:1712
#, no-wrap
msgid "Using files for Forth code"
msgstr "Using files for Forth code"

#. type: cindex
#: ../doc/gforth.texi:1713
#, no-wrap
msgid "loading Forth code, tutorial"
msgstr "loading Forth code, tutorial"

#. type: cindex
#: ../doc/gforth.texi:1714
#, no-wrap
msgid "files containing Forth code, tutorial"
msgstr "files containing Forth code, tutorial"

#. type: table
#: ../doc/gforth.texi:1721
msgid ""
"While working at the Forth command line is convenient for one-line examples "
"and short one-off code, you probably want to store your source code in files "
"for convenient editing and persistence.  You can use your favourite editor "
"(Gforth includes Emacs support, @pxref{Emacs and Gforth}) to create "
"@var{file.fs} and use"
msgstr ""
"Forth コマンド・ラインでの作業は、 1 行の例や短い 1 回限りのコードの場合には"
"便利ですが、 あなたは編集や永続化に便利なように、 ソース・コードをファイルに"
"保存したいと思うかもしれません。 お気に入りのエディター(なお、 Gforth には "
"Emacs サポートがあります @pxref{Emacs and Gforth})を使用して @var{file.fs} を"
"作成し以下のようにします"

#. type: example
#: ../doc/gforth.texi:1724
#, no-wrap
msgid "s\" @var{file.fs}\" included\n"
msgstr "s\" @var{file.fs}\" included\n"

#. type: table
#: ../doc/gforth.texi:1728
msgid ""
"to load it into your Forth system.  The file name extension I use for Forth "
"files is @samp{.fs}."
msgstr ""
"こうすると、 @var{file.fs} ファイルを Forth システムにロードします。 私達は "
"Forth ファイルの拡張子には @samp{.fs} を使っています。"

#. type: table
#: ../doc/gforth.texi:1730
msgid "You can easily start Gforth with some files loaded like this:"
msgstr ""
"以下のようにいくつかのファイルをロードして、 Gforth を簡単に開始できます:"

#. type: example
#: ../doc/gforth.texi:1733
#, no-wrap
msgid "gforth @var{file1.fs} @var{file2.fs}\n"
msgstr "gforth @var{file1.fs} @var{file2.fs}\n"

#. type: table
#: ../doc/gforth.texi:1740
msgid ""
"If an error occurs during loading these files, Gforth terminates, whereas an "
"error during @code{INCLUDED} within Gforth usually gives you a Gforth "
"command line.  Starting the Forth system every time gives you a clean start "
"every time, without interference from the results of earlier tries."
msgstr ""
"これらのファイルのロード中にエラーが発生した場合、 Gforth は終了(terminate)し"
"ますが、 Gforth 内で @code{INCLUDED} 中にエラーが発生すると、 通常は Gforth "
"コマンド・ラインになります。 Forth システムを毎回開始させれば、 あなたの以前"
"の試行の結果に影響されることなく、 毎回クリーンな開始が可能になります。"

#. type: table
#: ../doc/gforth.texi:1743
msgid ""
"I often put all the tests in a file, then load the code and run the tests "
"with"
msgstr ""
"私達は多くの場合、 すべてのテストをファイルに入れて、 それからそのコードを"
"ロードし以下のようにしてテストを実行します"

#. type: example
#: ../doc/gforth.texi:1746
#, no-wrap
msgid "gforth @var{code.fs} @var{tests.fs} -e bye\n"
msgstr "gforth @var{code.fs} @var{tests.fs} -e bye\n"

#. type: table
#: ../doc/gforth.texi:1751
msgid ""
"(often by performing this command with @kbd{C-x C-e} in Emacs).  The @code{-"
"e bye} ensures that Gforth terminates afterwards so that I can restart this "
"command without ado."
msgstr ""
"(多くの場合、 Emacs内 で @kbd{C-x C-e} を使用してこのコマンドを実行します。) "
"@code{-e bye} により、 テスト後に Gforth が確実に終了(terminate)するので、 面"
"倒なくこのコマンドを再度開始できます。"

#. type: table
#: ../doc/gforth.texi:1755
msgid ""
"The advantage of this approach is that the tests can be repeated easily "
"every time the program ist changed, making it easy to catch bugs introduced "
"by the change."
msgstr ""
"このアプローチの利点は、 プログラムが変更されるたびにテストを簡単に繰り返すこ"
"とができ、 変更によって生じたバグを簡単に発見できることです。"

#. type: table
#: ../doc/gforth.texi:1757
msgid "Reference: @ref{Forth source files}."
msgstr "こちらも参照してください: @ref{Forth source files}"

#. type: node
#: ../doc/gforth.texi:1759 ../doc/gforth.texi:1793 ../doc/gforth.texi:1836
#, no-wrap
msgid "Colon Definitions Tutorial"
msgstr "Colon Definitions Tutorial"

#. type: node
#: ../doc/gforth.texi:1760 ../doc/gforth.texi:5013 ../doc/gforth.texi:5046
#: ../doc/gforth.texi:5047 ../doc/gforth.texi:5092
#, no-wrap
msgid "Comments"
msgstr "Comments"

#. type: cindex
#: ../doc/gforth.texi:1761
#, no-wrap
msgid "comments tutorial"
msgstr "comments tutorial"

#. type: example
#: ../doc/gforth.texi:1766
#, no-wrap
msgid ""
"\\ That's a comment; it ends at the end of the line\n"
"( Another comment; it ends here: )  .s\n"
msgstr ""
"\\ これはコメントです。これは行末で終わります\n"
"( もう一つのコメント。 これはこのように閉じ丸括弧で終わります: )  .s\n"

#. type: table
#: ../doc/gforth.texi:1770
msgid ""
"@code{\\} and @code{(} are ordinary Forth words and therefore have to be "
"separated with white space from the following text."
msgstr ""
"@code{\\} と @code{(} は通常の Forth ワードであるため、 その後ろのテキストと"
"空白(white space)で区切る必要があります。"

#. type: example
#: ../doc/gforth.texi:1773
#, no-wrap
msgid "\\This gives an \"Undefined word\" error\n"
msgstr "\\This gives an \"Undefined word\" error\n"

#. type: table
#: ../doc/gforth.texi:1779
msgid ""
"The first @code{)} ends a comment started with @code{(}, so you cannot nest "
"@code{(}-comments; and you cannot comment out text containing a @code{)} "
"with @code{( ... )}@footnote{therefore it's a good idea to avoid @code{)} in "
"word names.}."
msgstr ""
"最初にあらわれる @code{)} が @code{(} で始まるコメントを終了するため、 "
"「@code{(} 型のコメント」を入れ子(nest)にすることはできません。 そして、 "
"@code{( ... )} を使用して @code{)} を含むテキストをコメントアウトすることはで"
"きません@footnote{したがって、 ワード名には @code{)} を使用しないことをお勧め"
"します。}。"

#. type: table
#: ../doc/gforth.texi:1784
msgid ""
"I use @code{\\}-comments for descriptive text and for commenting out code of "
"one or more line; I use @code{(}-comments for describing the stack effect, "
"the stack contents, or for commenting out sub-line pieces of code."
msgstr ""
"私達は、 説明テキストや、 1 行以上のコードのコメントアウトに @code{\\} コメン"
"トを使用します。 @code{(} コメントは、 スタック効果やスタックの内容を説明した"
"り、 コードの下位部分をコメントアウトしたりするために使用します。"

#. type: table
#: ../doc/gforth.texi:1789
msgid ""
"The Emacs mode @file{gforth.el} (@pxref{Emacs and Gforth}) supports these "
"uses by commenting out a region with @kbd{C-x \\}, uncommenting a region "
"with @kbd{C-u C-x \\}, and filling a @code{\\}-commented region with @kbd{M-"
"q}."
msgstr ""
"Emacs モード @file{gforth.el} (@pxref{Emacs and Gforth}) は、 @kbd{C-x \\} で"
"リージョンをコメントアウトし、 @kbd{C-u C-x \\} でリージョンのコメントを解除"
"し、 @code{\\} でコメントされた領域を @kbd{M-q} でフィル(fill)します。"

#. type: table
#: ../doc/gforth.texi:1791
msgid "Reference: @ref{Comments}."
msgstr "こちらも参照してください: @ref{Comments}"

#. type: node
#: ../doc/gforth.texi:1793 ../doc/gforth.texi:1836 ../doc/gforth.texi:1860
#, no-wrap
msgid "Decompilation Tutorial"
msgstr "Decompilation Tutorial"

#. type: node
#: ../doc/gforth.texi:1794 ../doc/gforth.texi:11536 ../doc/gforth.texi:11587
#: ../doc/gforth.texi:11588 ../doc/gforth.texi:11702
#, no-wrap
msgid "Colon Definitions"
msgstr "Colon Definitions"

#. type: cindex
#: ../doc/gforth.texi:1795
#, no-wrap
msgid "colon definitions, tutorial"
msgstr "colon definitions, tutorial"

#. type: cindex
#: ../doc/gforth.texi:1796
#, no-wrap
msgid "definitions, tutorial"
msgstr "definitions, tutorial"

#. type: cindex
#: ../doc/gforth.texi:1797
#, no-wrap
msgid "procedures, tutorial"
msgstr "procedures, tutorial"

#. type: cindex
#: ../doc/gforth.texi:1798
#, no-wrap
msgid "functions, tutorial"
msgstr "functions, tutorial"

#. type: table
#: ../doc/gforth.texi:1801
msgid "are similar to procedures and functions in other programming languages."
msgstr ""
"コロン定義(Colon Definitions)は、 他のプログラミング言語のプロシージャや関数"
"に似ています。"

#. type: example
#: ../doc/gforth.texi:1807
#, no-wrap
msgid ""
": squared ( n -- n^2 )\n"
"   dup * ;\n"
"5 squared .\n"
"7 squared .\n"
msgstr ""
": squared ( n -- n^2 )\n"
"   dup * ;\n"
"5 squared .\n"
"7 squared .\n"

#. type: table
#: ../doc/gforth.texi:1813
msgid ""
"@code{:} starts the colon definition; its name is @code{squared}.  The "
"following comment describes its stack effect.  The words @code{dup *} are "
"not executed, but compiled into the definition.  @code{;} ends the colon "
"definition."
msgstr ""
"@code{:} はコロン定義を開始します。 その名前は @code{squared} です。 それに続"
"くコメントは、 そのスタック効果について説明しています。  @code{dup *} という"
"ワードは実行はされませんが、 定義にコンパイルされます(compiled into the "
"definition)。 @code{;} はコロン定義を終了します。"

#. type: table
#: ../doc/gforth.texi:1816
msgid ""
"The newly-defined word can be used like any other word, including using it "
"in other definitions:"
msgstr ""
"新しく定義されたワードは、 他の定義での使用を含め、 他のワードと同様に使用で"
"きます:"

#. type: example
#: ../doc/gforth.texi:1824
#, no-wrap
msgid ""
": cubed ( n -- n^3 )\n"
"   dup squared * ;\n"
"-5 cubed .\n"
": fourth-power ( n -- n^4 )\n"
"   squared squared ;\n"
"3 fourth-power .\n"
msgstr ""
": cubed ( n -- n^3 )\n"
"   dup squared * ;\n"
"-5 cubed .\n"
": fourth-power ( n -- n^4 )\n"
"   squared squared ;\n"
"3 fourth-power .\n"

# : my-/mod  ( n1 n2 -- n3 n4 : my /mod )
#   2dup /
#   tuck
#   *
#   rot
#   swap -
#   swap
# ;
#
# 22 4 /mod .s 2drop <2> 2 5  ok
# 22 4 my-/mod .s 2drop <2> 2 5  ok
#. type: quotation
#: ../doc/gforth.texi:1831
msgid ""
"Write colon definitions for @code{nip}, @code{tuck}, @code{negate}, and "
"@code{/mod} in terms of other Forth words, and check if they work (hint: "
"test your tests on the originals first).  Don't let the @samp{redefined}-"
"Messages spook you, they are just warnings."
msgstr ""
"@code{nip} や @code{tuck} や @code{negate} や @code{/mod} のコロン定義を他の "
"Forth ワードで記述し、 それらが機能するかどうかを確認してみましょう (ヒント: "
"最初にオリジナルであなたの作成したテストコードをテストして結果を確認してか"
"ら、 その後あなたが定義して、 再度テストして結果を比較しましょう)。 "
"@samp{redefine} メッセージに驚かないでください。 これらは単なる警告です。 (訳"
"注: redefine; 同じ名前のワードを定義したという警告。 置き換えではなく追加とな"
"る。 これ以降の解釈(interpret)・コンパイルは新しい方のワードを参照するが、 通"
"常は新しい方のワード定義後も、 既にコンパイル済みのワードは古い方のワードを参"
"照しつづける。 詳しくはディクショナリ等の項目を参照)"

#. type: table
#: ../doc/gforth.texi:1834
msgid "Reference: @ref{Colon Definitions}."
msgstr "こちらも参照してください: @ref{Colon Definitions}"

#. type: node
#: ../doc/gforth.texi:1836 ../doc/gforth.texi:1860 ../doc/gforth.texi:1946
#, no-wrap
msgid "Stack-Effect Comments Tutorial"
msgstr "Stack-Effect Comments Tutorial"

#. type: section
#: ../doc/gforth.texi:1837
#, no-wrap
msgid "Decompilation"
msgstr "Decompilation"

#. type: cindex
#: ../doc/gforth.texi:1838
#, no-wrap
msgid "decompilation tutorial"
msgstr "decompilation tutorial"

#. type: cindex
#: ../doc/gforth.texi:1839
#, no-wrap
msgid "see tutorial"
msgstr "see tutorial"

#. type: table
#: ../doc/gforth.texi:1842
msgid "You can decompile colon definitions with @code{see}:"
msgstr "@code{see}: を使用してコロン定義を逆コンパイルできます:"

#. type: example
#: ../doc/gforth.texi:1846
#, no-wrap
msgid ""
"see squared\n"
"see cubed\n"
msgstr ""
"see squared\n"
"see cubed\n"

#. type: table
#: ../doc/gforth.texi:1851
msgid ""
"In Gforth @code{see} shows you a reconstruction of the source code from the "
"executable code.  Informations that were present in the source, but not in "
"the executable code, are lost (e.g., comments)."
msgstr ""
"Gforth では、 @code{see} は実行可能コードからソース・コードを再構築したものを"
"示します。 ソースには存在するが、 実行可能コードには存在しない情報(コメントな"
"ど)は失われます。"

#. type: table
#: ../doc/gforth.texi:1853
msgid "You can also decompile the predefined words:"
msgstr "最初から義済みのワードを逆コンパイルすることもできます:"

#. type: example
#: ../doc/gforth.texi:1857
#, no-wrap
msgid ""
"see .\n"
"see +\n"
msgstr ""
"see .\n"
"see +\n"

#. type: node
#: ../doc/gforth.texi:1860 ../doc/gforth.texi:1946 ../doc/gforth.texi:1998
#, no-wrap
msgid "Types Tutorial"
msgstr "Types Tutorial"

#. type: section
#: ../doc/gforth.texi:1861
#, no-wrap
msgid "Stack-Effect Comments"
msgstr "Stack-Effect Comments"

#. type: cindex
#: ../doc/gforth.texi:1862
#, no-wrap
msgid "stack-effect comments, tutorial"
msgstr "stack-effect comments, tutorial"

#. type: cindex
#: ../doc/gforth.texi:1863
#, no-wrap
msgid "--, tutorial"
msgstr "--, tutorial"

#. type: table
#: ../doc/gforth.texi:1871
msgid ""
"By convention the comment after the name of a definition describes the stack "
"effect: The part in front of the @samp{--} describes the state of the stack "
"before the execution of the definition, i.e., the parameters that are passed "
"into the colon definition; the part behind the @samp{--} is the state of the "
"stack after the execution of the definition, i.e., the results of the "
"definition.  The stack comment only shows the top stack items that the "
"definition accesses and/or changes."
msgstr ""
"慣例により、 定義名の後のコメントはスタック効果を説明します。 @samp{--} の前"
"の部分は、 定義の実行前のスタックの状態、 つまりコロン定義に渡されるパラメー"
"タを説明します。 @samp{--} の後ろの部分は、 定義の実行後のスタックの状態、 つ"
"まり定義の実行結果です。 スタック・コメントには、 定義がアクセス、 または、変"
"更する、 (訳注: 定義の外部から見える、 )スタック項目のみを記述します。"

#. type: table
#: ../doc/gforth.texi:1878
msgid ""
"You should put a correct stack effect on every definition, even if it is "
"just @code{( -- )}.  You should also add some descriptive comment to more "
"complicated words (I usually do this in the lines following @code{:}).  If "
"you don't do this, your code becomes unreadable (because you have to work "
"through every definition before you can understand any)."
msgstr ""
"たとえ スタック効果が @code{( -- )} (訳注: スタックに何の効果も及ぼさない)で"
"あっても、 あなたは、 すべての定義に正しいスタック効果を記述するべきです。 ま"
"た、 より複雑なワードには説明的なコメントを追加する必要があります(通常、 これ"
"は @code{:} の後ろに続けます)。 これを行わないと、 あなたコードの行動は解読不"
"能になります(なぜなら、 とある定義を理解するためには、 全ての定義を辿るハメに"
"なるから)。"

#. type: quotation
#: ../doc/gforth.texi:1885
msgid ""
"The stack effect of @code{swap} can be written like this: @code{x1 x2 -- x2 "
"x1}.  Describe the stack effect of @code{-}, @code{drop}, @code{dup}, "
"@code{over}, @code{rot}, @code{nip}, and @code{tuck}.  Hint: When you are "
"done, you can compare your stack effects to those in this manual "
"(@pxref{Word Index})."
msgstr ""
"例えば @code{swap} のスタック効果は、 @code{x1 x2 -- x2 x1} のように記述でき"
"ます。 同様に、 @code{-} や @code{drop} や @code{dup} や @code{over} や "
"@code{rot} や @code{nip} や @code{tuck} のスタック効果を書いてみましょう。 ヒ"
"ント: 書けたら、 このマニュアルに書いてあるスタック効果と合っているかどうか"
"チェックしましょう(@pxref{Word Index})。"

#. type: table
#: ../doc/gforth.texi:1891
msgid ""
"Sometimes programmers put comments at various places in colon definitions "
"that describe the contents of the stack at that place (stack comments); i."
"e., they are like the first part of a stack-effect comment. E.g.,"
msgstr ""
"プログラマーは、 コロン定義内のさまざまな場所に、 その場所のスタックの内容を"
"説明するコメント(スタック・コメント)を挿入することがあります。 つまり、 ス"
"タック効果コメントの最初の部分のようなものです。 例えば以下のようなのです"

#. type: example
#: ../doc/gforth.texi:1895
#, no-wrap
msgid ""
": cubed ( n -- n^3 )\n"
"   dup squared  ( n n^2 ) * ;\n"
msgstr ""
": cubed ( n -- n^3 )\n"
"   dup squared  ( n n^2 ) * ;\n"

#. type: table
#: ../doc/gforth.texi:1904
msgid ""
"In this case the stack comment is pretty superfluous, because the word is "
"simple enough.  If you think it would be a good idea to add such a comment "
"to increase readability, you should also consider factoring the word into "
"several simpler words (@pxref{Factoring Tutorial,, Factoring}), which "
"typically eliminates the need for the stack comment; however, if you decide "
"not to refactor it, then having such a comment is better than not having it."
msgstr ""
"この場合、 ワードが十分に単純であるため、 スタック・コメントは割と余計です。 "
"あなたが、 読みやすさを高めるためにそのようなコメントを追加することが良いと"
"思った場合、 ワードをいくつかの単純なワードにファクタリング(因数分解)すること"
"も検討する必要があります(@pxref{Factoring Tutorial,, Factoring})。 ファクタリ"
"ングにより、 通常はスタック・コメントが不要になります。 ただし、 あなたが結果"
"としてリファクタリングしないことに決めた場合は、 そのようなコメントがある方"
"が、 無いよりも良いです。"

#. type: table
#: ../doc/gforth.texi:1909
msgid ""
"The names of the stack items in stack-effect and stack comments in the "
"standard, in this manual, and in many programs specify the type through a "
"type prefix, similar to Fortran and Hungarian notation.  The most frequent "
"prefixes are:"
msgstr ""
"標準や、 このマニュアルや、 多くのプログラムの、 スタック効果およびスタック・"
"コメント内のスタック項目の名前は、 Fortran やハンガリアン記法と同様に、 型プ"
"レフィックスによって型を指定します。 最も頻繁に使用されるプレフィックスは以下"
"のとおりです:"

#. type: item
#: ../doc/gforth.texi:1911 ../doc/gforth.texi:4962 ../doc/gforth.texi:24241
#: ../doc/gforth.texi:24242 ../doc/gforth.texi:25199 ../doc/gforth.texi:26165
#, no-wrap
msgid "n"
msgstr "n"

#. type: table
#: ../doc/gforth.texi:1913 ../doc/gforth.texi:1959 ../doc/gforth.texi:4965
msgid "signed integer"
msgstr "符号付き整数"

#. type: item
#: ../doc/gforth.texi:1913 ../doc/gforth.texi:1959 ../doc/gforth.texi:4965
#: ../doc/gforth.texi:25202
#, no-wrap
msgid "u"
msgstr "u"

#. type: table
#: ../doc/gforth.texi:1915 ../doc/gforth.texi:1961 ../doc/gforth.texi:4968
msgid "unsigned integer"
msgstr "符号なし整数"

#. type: item
#: ../doc/gforth.texi:1915 ../doc/gforth.texi:1961 ../doc/gforth.texi:4956
#: ../doc/gforth.texi:7901 ../doc/gforth.texi:20959 ../doc/gforth.texi:20971
#, no-wrap
msgid "c"
msgstr "c"

#. type: table
#: ../doc/gforth.texi:1917 ../doc/gforth.texi:1963
msgid "character"
msgstr "文字(character)"

#. type: item
#: ../doc/gforth.texi:1917 ../doc/gforth.texi:1971 ../doc/gforth.texi:4953
#, no-wrap
msgid "f"
msgstr "f"

#. type: table
#: ../doc/gforth.texi:1919 ../doc/gforth.texi:4956
msgid "Boolean flags, i.e. @code{false} or @code{true}."
msgstr "二値フラグ(Boolean flags)。 つまり @code{false} または @code{true}"

#. type: item
#: ../doc/gforth.texi:1919
#, no-wrap
msgid "a-addr,a-"
msgstr "a-addr,a-"

#. type: table
#: ../doc/gforth.texi:1921 ../doc/gforth.texi:4980
msgid "Cell-aligned address"
msgstr "セル・アライメント・アドレス"

#. type: item
#: ../doc/gforth.texi:1921
#, no-wrap
msgid "c-addr,c-"
msgstr "c-addr,c-"

#. type: table
#: ../doc/gforth.texi:1923 ../doc/gforth.texi:4983
msgid ""
"Char-aligned address (note that a Char may have two bytes in Windows NT)"
msgstr "文字(char)アライメント・アドレス(注意: Windows NT では文字(char)は 2 バイトになる場合があることに注意)"

#. type: cindex
#: ../doc/gforth.texi:1923 ../doc/gforth.texi:3817 ../doc/gforth.texi:4992
#: ../doc/gforth.texi:13266
#, no-wrap
msgid "xt"
msgstr "xt"

#. type: table
#: ../doc/gforth.texi:1925 ../doc/gforth.texi:4995
msgid "Execution token, same size as Cell"
msgstr "実行トークン(Execution token)。 セルと同一サイズ"

#. type: item
#: ../doc/gforth.texi:1925
#, no-wrap
msgid "w,x"
msgstr "w,x"

#. type: table
#: ../doc/gforth.texi:1930
msgid ""
"Cell, can contain an integer or an address.  It usually takes 32, 64 or 16 "
"bits (depending on your platform and Forth system). A cell is more commonly "
"known as machine word, but the term @emph{word} already means something "
"different in Forth."
msgstr ""
"セル(cell)。 セルには整数またはアドレスを含めることができます。 通常は 32ビッ"
"トまたは 64 ビットまたは 16 ビットを必要とします(プラットフォームと Forth シ"
"ステムによって異なります)。 cell は一般には machine word として知られています"
"が、 Forth では @emph{word} という用語はすでに別の意味を持っています。"

#. type: kindex
#: ../doc/gforth.texi:1930 ../doc/gforth.texi:1963 ../doc/gforth.texi:4968
#: ../doc/gforth.texi:25206 ../doc/gforth.texi:26171 ../doc/gforth.texi:32061
#: ../doc/gforth.texi:32062
#, no-wrap
msgid "d"
msgstr "d"

#. type: table
#: ../doc/gforth.texi:1932 ../doc/gforth.texi:1965
msgid "signed double-cell integer"
msgstr "符号付き2倍長整数(signed double-cell integer)"

#. type: item
#: ../doc/gforth.texi:1932 ../doc/gforth.texi:4971
#, no-wrap
msgid "ud"
msgstr "ud"

#. type: table
#: ../doc/gforth.texi:1934 ../doc/gforth.texi:1967
msgid "unsigned double-cell integer"
msgstr "符号無し2倍長整数(unsigned double-cell integer)"

#. type: item
#: ../doc/gforth.texi:1934 ../doc/gforth.texi:4974 ../doc/gforth.texi:26174
#, no-wrap
msgid "r"
msgstr "r"

#. type: table
#: ../doc/gforth.texi:1936 ../doc/gforth.texi:4977
msgid "Float (on the FP stack)"
msgstr "浮動小数点数(Float)(FP スタック上に置かれる)"

#. type: table
#: ../doc/gforth.texi:1939
msgid "You can find a more complete list in @ref{Notation}."
msgstr "より完全なリストは @ref{Notation} にあります。"

#. type: quotation
#: ../doc/gforth.texi:1943
msgid ""
"Write stack-effect comments for all definitions you have written up to now."
msgstr ""
"あなたがここまでで記述したすべての定義に対してスタック効果コメントを記述して"
"みましょう。"

#. type: node
#: ../doc/gforth.texi:1946 ../doc/gforth.texi:1998 ../doc/gforth.texi:2026
#, no-wrap
msgid "Factoring Tutorial"
msgstr "Factoring Tutorial"

#. type: section
#: ../doc/gforth.texi:1947 ../doc/gforth.texi:30164
#, no-wrap
msgid "Types"
msgstr "Types"

#. type: cindex
#: ../doc/gforth.texi:1948
#, no-wrap
msgid "types tutorial"
msgstr "types tutorial"

#. type: table
#: ../doc/gforth.texi:1955
msgid ""
"In Forth the names of the operations are not overloaded; so similar "
"operations on different types need different names; e.g., @code{+} adds "
"integers, and you have to use @code{f+} to add floating-point numbers.  The "
"following prefixes are often used for related operations on different types:"
msgstr ""
"Forth では、 演算子の名前はオーバーロードされません。 したがって、 異なる型に"
"対する同様の演算には異なる名前が必要です。 たとえば、 @code{+} は整数の加算を"
"しますが、 浮動小数点数を加算するには @code{f+} を使用する必要があります。 以"
"下のプレフィックスは、 さまざまな型の関連する演算によく使用されます:"

#. type: item
#: ../doc/gforth.texi:1957
#, no-wrap
msgid "(none)"
msgstr "(none)"

#. type: item
#: ../doc/gforth.texi:1965
#, no-wrap
msgid "ud, du"
msgstr "ud, du"

#. type: item
#: ../doc/gforth.texi:1967
#, no-wrap
msgid "2"
msgstr "2"

#. type: table
#: ../doc/gforth.texi:1969
msgid "two cells (not-necessarily double-cell numbers)"
msgstr "2 つのセル(必ずしも 2倍長整数(double-cell numbers)とは限りません)"

#. type: item
#: ../doc/gforth.texi:1969
#, no-wrap
msgid "m, um"
msgstr "m, um"

#. type: table
#: ../doc/gforth.texi:1971
msgid "mixed single-cell and double-cell operations"
msgstr "単一セルとダブル・セルの混合操作"

#. type: table
#: ../doc/gforth.texi:1975
msgid ""
"floating-point (note that in stack comments @samp{f} represents flags, and "
"@samp{r} represents FP numbers; also, you need to include the exponent part "
"in literal FP numbers, @pxref{Floating Point Tutorial})."
msgstr ""
"浮動小数点(注意: スタック・コメントでは、 @samp{f} はフラグを表し、 @samp{r} "
"は FP 数値を表すことに注意してください。 また、 リテラル FP 数値には指数部分"
"を含める必要があります @pxref{Floating Point Tutorial})。"

#. type: table
#: ../doc/gforth.texi:1979
msgid ""
"If there are no differences between the signed and the unsigned variant (e."
"g., for @code{+}), there is only the prefix-less variant."
msgstr ""
"符号付きのバリエーションと符号なしのバリエーションに違いがない場合(例えば "
"@code{+} の場合)、 プレフィックスのないバリエーションのみが存在します。"

#. type: table
#: ../doc/gforth.texi:1983
msgid ""
"Forth does not perform type checking, neither at compile time, nor at run "
"time.  If you use the wrong operation, the data are interpreted incorrectly:"
msgstr ""
"Forth は、 コンパイル時も実行時も型チェックを実行しません。 以下のように間"
"違った演算子を使うと、 データが正しく解釈(interpret)されません:"

#. type: example
#: ../doc/gforth.texi:1986
#, no-wrap
msgid "-1 u.\n"
msgstr "-1 u.\n"

#. type: table
#: ../doc/gforth.texi:1996
msgid ""
"If you have only experience with type-checked languages until now, and have "
"heard how important type-checking is, don't panic! In my experience (and "
"that of other Forthers), type errors in Forth code are usually easy to find "
"(once you get used to it), the increased vigilance of the programmer tends "
"to catch some harder errors in addition to most type errors, and you never "
"have to work around the type system, so in most situations the lack of type-"
"checking seems to be a win (projects to add type checking to Forth have not "
"caught on)."
msgstr ""
"あなたが、 これまで型チェック言語しか使用したことがなく、 型チェックがいかに"
"重要であるかを聞いたことがある場合でも、 パニックに陥る必要はありません。 著"
"者の経験(および他の Forth 利用者(Forthers)の経験)では、 Forth コードの型エ"
"ラーは通常(慣れてしまえば)簡単に見つかります。 プログラマの警戒心が高まる"
"と、 ほとんどの型エラーに加えて、 より困難なエラーも発見される傾向がありま"
"す。 型システムを回避する必要がまったくないため、 ほとんどの状況では型チェッ"
"クがないことが利点であるようです(Forth に型チェックを追加するプロジェクトは普"
"及していません)。"

#. type: node
#: ../doc/gforth.texi:1998 ../doc/gforth.texi:2026 ../doc/gforth.texi:2084
#, no-wrap
msgid "Designing the stack effect Tutorial"
msgstr "Designing the stack effect Tutorial"

#. type: section
#: ../doc/gforth.texi:1999
#, no-wrap
msgid "Factoring"
msgstr "Factoring"

#. type: cindex
#: ../doc/gforth.texi:2000
#, no-wrap
msgid "factoring tutorial"
msgstr "factoring tutorial"

#. type: table
#: ../doc/gforth.texi:2007
msgid ""
"If you try to write longer definitions, you will soon find it hard to keep "
"track of the stack contents.  Therefore, good Forth programmers tend to "
"write only short definitions (e.g., three lines).  The art of finding "
"meaningful short definitions is known as factoring (as in factoring "
"polynomials)."
msgstr ""
"あなたが長ったらしい定義を書こうとすると、 スタックの内容を追跡するのがすぐに"
"困難になることがわかります。 したがって、優れた Forth プログラマは短い定義 "
"(たとえば 3 行)のみを記述する傾向があります。 意味のある短い定義を見つける技"
"術は、 (多項式の因数分解(factoring polynomials)と同様に)ファクタリング"
"(factoring)として知られています。"

#. type: table
#: ../doc/gforth.texi:2011
msgid ""
"Well-factored programs offer additional advantages: smaller, more general "
"words, are easier to test and debug and can be reused more and better than "
"larger, specialized words."
msgstr ""
"よくファクタリングされたプログラムには、 追加の利点もあります。 つまり、小さ"
"くて一般的なワードは、 大きくて特殊なワードよりもテストとデバッグが容易で、よ"
"り再利用性に富みます。"

#. type: table
#: ../doc/gforth.texi:2016
msgid ""
"So, if you run into difficulties with stack management, when writing code, "
"try to define meaningful factors for the word, and define the word in terms "
"of those.  Even if a factor contains only two words, it is often helpful."
msgstr ""
"したがって、 あなたが、 スタック管理に問題を抱えてるなら、 コードを記述すると"
"きにワードに意味のある要素を定義し、 それらの観点からワードを定義するようにし"
"てください。 たった 2 つのワードしかしか含まれないような定義でも、 多くの場合"
"役に立ちます。"

#. type: table
#: ../doc/gforth.texi:2022
msgid ""
"Good factoring is not easy, and it takes some practice to get the knack for "
"it; but even experienced Forth programmers often don't find the right "
"solution right away, but only when rewriting the program.  So, if you don't "
"come up with a good solution immediately, keep trying, don't despair."
msgstr "上手なファクタリングは簡単ではなく、 コツを掴むにはある程度の練習が必要です。 しかし、経験豊富な Forth プログラマーであっても、 すぐには適切な解決策を見つけられないことが多く、 プログラムの書き直し時に見つかるのです。 したがって、 すぐに良い解決策が思い浮かばなくても、 絶望しないで試し続けてください。(訳注: 参考: 拙訳 Thinking Forth 第6章 ファクタリング @url{https://thinking-forth-ja.readthedocs.io/ja/latest/chapter6.html})"

#. type: node
#: ../doc/gforth.texi:2026 ../doc/gforth.texi:2084 ../doc/gforth.texi:2128
#, no-wrap
msgid "Local Variables Tutorial"
msgstr "Local Variables Tutorial"

#. type: section
#: ../doc/gforth.texi:2027
#, no-wrap
msgid "Designing the stack effect"
msgstr "Designing the stack effect"

#. type: cindex
#: ../doc/gforth.texi:2028
#, no-wrap
msgid "Stack effect design, tutorial"
msgstr "Stack effect design, tutorial"

#. type: cindex
#: ../doc/gforth.texi:2029
#, no-wrap
msgid "design of stack effects, tutorial"
msgstr "design of stack effects, tutorial"

#. type: table
#: ../doc/gforth.texi:2034
msgid ""
"In other languages you can use an arbitrary order of parameters for a "
"function; and since there is only one result, you don't have to deal with "
"the order of results, either."
msgstr ""
"他の言語では、 関数(function)のパラメータに任意の順序を使用できます。 また、 "
"結果は 1 つだけなので、 結果の順序を扱う必要もありません。"

#. type: table
#: ../doc/gforth.texi:2040
msgid ""
"In Forth (and other stack-based languages, e.g., PostScript) the parameter "
"and result order of a definition is important and should be designed well.  "
"The general guideline is to design the stack effect such that the word is "
"simple to use in most cases, even if that complicates the implementation of "
"the word.  Some concrete rules are:"
msgstr ""
"Forth (および他のスタック・ベースの言語、 たとえば PostScript)では、 定義のパ"
"ラメーターの順序と結果の順序が重要であり、 適切に設計する必要があります。 一"
"般的なガイドラインは、 ワードの実装が複雑になる場合でも、 ワードがほとんどの"
"場合に簡単に使用できるようにスタック効果を設計することです。 いくつかの具体的"
"なルールは以下のとおりです:"

#. type: itemize
#: ../doc/gforth.texi:2045
msgid "Words consume all of their parameters (e.g., @code{.})."
msgstr "ワードがパラメータの全てを消費する(例: @code{.})。"

#. type: itemize
#: ../doc/gforth.texi:2050
msgid ""
"If there is a convention on the order of parameters (e.g., from mathematics "
"or another programming language), stick with it (e.g., @code{-})."
msgstr ""
"パラメータの順序に関する慣習がある場合(数学や他のプログラミング言語など)、 そ"
"れに従ってください(例: @code{-})。"

#. type: itemize
#: ../doc/gforth.texi:2061
msgid ""
"If one parameter usually requires only a short computation (e.g., it is a "
"constant), pass it on the top of the stack.  Conversely, parameters that "
"usually require a long sequence of code to compute should be passed as the "
"bottom (i.e., first) parameter.  This makes the code easier to read, because "
"the reader does not need to keep track of the bottom item through a long "
"sequence of code (or, alternatively, through stack manipulations). E.g., "
"@code{!} (store, @pxref{Memory}) expects the address on top of the stack "
"because it is usually simpler to compute than the stored value (often the "
"address is just a variable)."
msgstr ""
"1 つのパラメータが通常短い計算のみを必要とする場合(たとえば、それが定数である"
"場合)、 それをスタック頂上(top of stack;TOS)に渡します。 逆に、 通常、 計算に"
"長いコード シーケンスが必要なパラメータは、 スタック底(bottom) (つまり、最初"
"の) パラメータとして渡す必要があります。 これにより、 リーダーはコードの長い"
"シーケンス(またはスタック操作)を通じてスタック底の項目(bottom item)を追跡する"
"必要がなくなるため、 コードが読みやすくなります。 たとえば、 @code{!}(「スト"
"ア」 @pxref{Memory})は、 通常、 格納されている値よりも計算が簡単であるため、 "
"スタック頂上にアドレスがあるのを期待します(多くの場合、 アドレスは単なる変数"
"です)。"

#. type: itemize
#: ../doc/gforth.texi:2069
msgid ""
"Similarly, results that are usually consumed quickly should be returned on "
"the top of stack, whereas a result that is often used in long computations "
"should be passed as bottom result.  E.g., the file words like @code{open-"
"file} return the error code on the top of stack, because it is usually "
"consumed quickly by @code{throw}; moreover, the error code has to be checked "
"before doing anything with the other results."
msgstr ""
"同様に、 通常すぐに消費される結果はスタック頂上(top of stack)に返されるべきで"
"すが、 長い計算でよく使用される結果はスタック底(bottom)の結果として渡される必"
"要があります。 たとえば、 @code{open-file} のようなファイル・ワードは、スタッ"
"ク頂上にエラー・コードを返します。 これは、 通常、 @code{throw} によってすぐ"
"に消費されるためです。 さらに言えば、 他の結果に対して何かを行う前に、 エ"
"ラー・コードをチェックする必要があります。"

# bing copilot notebook:
# 翻訳してください。 word は ワード と訳してください。
# These rules are just general guidelines, don't lose sight of the overall goal to make the words easy to use.  E.g., if the convention rule conflicts with the computation-length rule, you might decide in favour of the convention if the word will be used rarely, and in favour of the computation-length rule if the word will be used frequently (because with frequent use the cost of breaking the computation-length rule would be quite high, and frequent use makes it easier to remember an unconventional order).<
#
# これらのルールは一般的なガイドラインに過ぎません。ワードを使いやすくするという全体的な目標を見失わないでください。例えば、慣習のルールが計算長のルールと衝突する場合、ワードがあまり使われない場合は慣習を優先するかもしれません。一方、ワードが頻繁に使われる場合は、計算長のルールを優先するかもしれません（頻繁に使うと、計算長のルールを破るコストが非常に高くなりますし、頻繁に使うことで非慣習的な順序を覚えやすくなります）。
#. type: table
#: ../doc/gforth.texi:2080
msgid ""
"These rules are just general guidelines, don't lose sight of the overall "
"goal to make the words easy to use.  E.g., if the convention rule conflicts "
"with the computation-length rule, you might decide in favour of the "
"convention if the word will be used rarely, and in favour of the computation-"
"length rule if the word will be used frequently (because with frequent use "
"the cost of breaking the computation-length rule would be quite high, and "
"frequent use makes it easier to remember an unconventional order)."
msgstr ""
"これらのルールは一般的なガイドラインに過ぎません。 ワードを使いやすくするとい"
"う全体的な目標を見失わないでください。 例えば、 慣習のルールが計算長のルール"
"と衝突する場合、 ワードがあまり使われない場合は慣習を優先するかもしれませ"
"ん。 一方、 ワードが頻繁に使われる場合は、 計算長のルールを優先するかもしれま"
"せん(だからといって頻繁に使うと、 計算長のルールを破るコストが非常に高くなり"
"ますし、 頻繁に使うことで非慣習的な順序を覚えてしまいがちになります)。"

#. type: node
#: ../doc/gforth.texi:2084 ../doc/gforth.texi:2128 ../doc/gforth.texi:2187
#, no-wrap
msgid "Conditional execution Tutorial"
msgstr "Conditional execution Tutorial"

#. type: section
#: ../doc/gforth.texi:2085
#, no-wrap
msgid "Local Variables"
msgstr "Local Variables"

#. type: cindex
#: ../doc/gforth.texi:2086
#, no-wrap
msgid "local variables, tutorial"
msgstr "local variables, tutorial"

#. type: table
#: ../doc/gforth.texi:2089
msgid "You can define local variables (@emph{locals}) in a colon definition:"
msgstr "コロン定義内でローカル変数(ローカルズ(locals))を定義できます:"

#. type: example
#: ../doc/gforth.texi:2094
#, no-wrap
msgid ""
": swap @{ a b -- b a @}\n"
"  b a ;\n"
"1 2 swap .s 2drop\n"
msgstr ""
": swap @{ a b -- b a @}\n"
"  b a ;\n"
"1 2 swap .s 2drop\n"

#. type: table
#: ../doc/gforth.texi:2098
msgid ""
"(If your Forth system does not support this syntax, include @file{compat/"
"anslocal.fs} first)."
msgstr ""
"(あなたの Forth システムがこの構文をサポートしていない場合は、  最初に "
"@file{compat/anslocal.fs} をインクルードしてください)"

# : locals-and-others ( n1 n2 n3 n4 -- n5 )
#   { n3 n4 }
#   +
# ;
# 1 2 3 4 locals-and-others .s <1> 3  ok 1
#. type: table
#: ../doc/gforth.texi:2105
msgid ""
"In this example @code{@{ a b -- b a @}} is the locals definition; it takes "
"two cells from the stack, puts the top of stack in @code{b} and the next "
"stack element in @code{a}.  @code{--} starts a comment ending with "
"@code{@}}.  After the locals definition, using the name of the local will "
"push its value on the stack.  You can omit the comment part (@code{-- b a}):"
msgstr ""
"この例では、 @code{@{ a b -- b a @}} がローカルズ定義です。 スタックから 2 つ"
"のセルを取得し、 スタック頂上を @code{b} に入れ、 その次のスタック要素を "
"@code{a} に入れます(訳注: a b はスタック上から取り除かれる)。 @code{--} は "
"@code{@}} で終わるコメントを開始します。 ローカルズの定義後、 ローカルズの名"
"前を使用すると、 その値がスタックに積まれます。 コメント部分(@code{-- b a})は"
"省略できます:"

#. type: example
#: ../doc/gforth.texi:2109
#, no-wrap
msgid ""
": swap ( x1 x2 -- x2 x1 )\n"
"  @{ a b @} b a ;\n"
msgstr ""
": swap ( x1 x2 -- x2 x1 )\n"
"  @{ a b @} b a ;\n"

#. type: table
#: ../doc/gforth.texi:2115
msgid ""
"In Gforth you can have several locals definitions, anywhere in a colon "
"definition; in contrast, in a standard program you can have only one locals "
"definition per colon definition, and that locals definition must be outside "
"any control structure."
msgstr ""
"Gforth では、 コロン定義内の任意の場所に複数のローカルズ定義を含めることがで"
"きます。 対照的に、 標準Forthのプログラムでは、 コロン定義ごとにローカルズ定"
"義を 1 つだけしか持つことができず、 そのローカルズ定義は制御構造の外側にある"
"必要があります。"

#. type: table
#: ../doc/gforth.texi:2120
msgid ""
"With locals you can write slightly longer definitions without running into "
"stack trouble.  However, I recommend trying to write colon definitions "
"without locals for exercise purposes to help you gain the essential "
"factoring skills."
msgstr ""
"ローカルズを使用すると、 スタックの問題に遭遇することなく、 少し長い定義を書"
"くことができます。 ただし、重要な、ファクタリング技能を身につけるための演習と"
"して、 ローカルズを使用せずにコロン定義を記述してみることをお勧めします。"

#. type: quotation
#: ../doc/gforth.texi:2123
msgid "Rewrite your definitions until now with locals"
msgstr "ここまでのあなたの定義をローカルズを使って書き換えてみましょう。"

#. type: table
#: ../doc/gforth.texi:2126
msgid "Reference: @ref{Locals}."
msgstr "こちらも参照下さい: @ref{Locals}"

#. type: node
#: ../doc/gforth.texi:2128 ../doc/gforth.texi:2187 ../doc/gforth.texi:2292
#, no-wrap
msgid "Flags and Comparisons Tutorial"
msgstr "Flags and Comparisons Tutorial"

#. type: section
#: ../doc/gforth.texi:2129
#, no-wrap
msgid "Conditional execution"
msgstr "Conditional execution"

#. type: cindex
#: ../doc/gforth.texi:2130
#, no-wrap
msgid "conditionals, tutorial"
msgstr "conditionals, tutorial"

#. type: cindex
#: ../doc/gforth.texi:2131
#, no-wrap
msgid "if, tutorial"
msgstr "if, tutorial"

#. type: table
#: ../doc/gforth.texi:2135
msgid ""
"In Forth you can use control structures only inside colon definitions.  An "
"@code{if}-structure looks like this:"
msgstr ""
"Forth では、 コロン定義内でのみ制御構造を使用できます。 @code{if} 構造は以下"
"のようになります:"

#. type: example
#: ../doc/gforth.texi:2143
#, no-wrap
msgid ""
": abs ( n1 -- +n2 )\n"
"    dup 0 < if\n"
"        negate\n"
"    endif ;\n"
"5 abs .\n"
"-5 abs .\n"
msgstr ""
": abs ( n1 -- +n2 )\n"
"    dup 0 < if\n"
"        negate\n"
"    endif ;\n"
"5 abs .\n"
"-5 abs .\n"

#. type: table
#: ../doc/gforth.texi:2149
msgid ""
"@code{if} takes a flag from the stack.  If the flag is non-zero (true), the "
"following code is performed, otherwise execution continues after the "
"@code{endif} (or @code{else}).  @code{<} compares the top two stack elements "
"and produces a flag:"
msgstr ""
"@code{if} はスタックからフラグを取得します。 フラグがゼロ以外 (true) の場合"
"は、 その次のコードが実行されます。 そうでない場合は、 @code{endif} (または "
"@code{else}) の後から実行が続けられます。 @code{<} は、 頂上から 2 つのスタッ"
"ク要素を比較し、 フラグを生成します。"

#. type: example
#: ../doc/gforth.texi:2154
#, no-wrap
msgid ""
"1 2 < .\n"
"2 1 < .\n"
"1 1 < .\n"
msgstr ""
"1 2 < .\n"
"2 1 < .\n"
"1 1 < .\n"

#. type: table
#: ../doc/gforth.texi:2161
msgid ""
"Actually the standard name for @code{endif} is @code{then}.  This tutorial "
"presents the examples using @code{endif}, because this is often less "
"confusing for people familiar with other programming languages where "
"@code{then} has a different meaning.  If your system does not have "
"@code{endif}, define it with"
msgstr ""
"実は、 @code{endif} の標準Forthでの名前は @code{then} です。 このチュートリア"
"ルでは、 @code{endif} を使用した例を示します。 なぜなら、 @code{then} が異な"
"る意味を持つ他のプログラミング言語に慣れている人々にとっては、 @code{endif} "
"を使用する方が混乱が少ないからです。 システムに @code{endif} がない場合は、 "
"以下のように定義します"

#. type: example
#: ../doc/gforth.texi:2164
#, no-wrap
msgid ": endif postpone then ; immediate\n"
msgstr ": endif postpone then ; immediate\n"

#. type: table
#: ../doc/gforth.texi:2167
msgid "You can optionally use an @code{else}-part:"
msgstr "あなたはオプションで @code{else} 部分を使用できます:"

#. type: example
#: ../doc/gforth.texi:2177
#, no-wrap
msgid ""
": min ( n1 n2 -- n )\n"
"  2dup < if\n"
"    drop\n"
"  else\n"
"    nip\n"
"  endif ;\n"
"2 3 min .\n"
"3 2 min .\n"
msgstr ""
": min ( n1 n2 -- n )\n"
"  2dup < if\n"
"    drop\n"
"  else\n"
"    nip\n"
"  endif ;\n"
"2 3 min .\n"
"3 2 min .\n"

# : my-min  ( n1 n2 -- n : my min )
#     2dup > if
# 	swap
#     endif
#     drop
# ;
#
# 2 3 my-min . cr ( expect 2 )
# 3 2 my-min . cr ( expect 2 )
#. type: quotation
#: ../doc/gforth.texi:2182
msgid ""
"Write @code{min} without @code{else}-part (hint: what's the definition of "
"@code{nip}?)."
msgstr ""
"@code{else} 部分を付けずに @code{min} を記述してみましょう。 (ヒント: "
"@code{nip} の定義は何ですか?)。"

#. type: table
#: ../doc/gforth.texi:2185
msgid "Reference: @ref{Selection}."
msgstr "こちらも参照下さい: @ref{Selection}"

#. type: node
#: ../doc/gforth.texi:2187 ../doc/gforth.texi:2292 ../doc/gforth.texi:2372
#, no-wrap
msgid "General Loops Tutorial"
msgstr "General Loops Tutorial"

#. type: section
#: ../doc/gforth.texi:2188
#, no-wrap
msgid "Flags and Comparisons"
msgstr "Flags and Comparisons"

#. type: cindex
#: ../doc/gforth.texi:2189
#, no-wrap
msgid "flags tutorial"
msgstr "flags tutorial"

#. type: cindex
#: ../doc/gforth.texi:2190
#, no-wrap
msgid "comparison tutorial"
msgstr "comparison tutorial"

#. type: table
#: ../doc/gforth.texi:2196
msgid ""
"In a false-flag all bits are clear (0 when interpreted as integer).  In a "
"canonical true-flag all bits are set (-1 as a twos-complement signed "
"integer); in many contexts (e.g., @code{if}) any non-zero value is treated "
"as true flag."
msgstr ""
"false フラグはすべてのビットがクリアです(整数として解釈(interpret)される場合"
"は 0)。 正規化された true フラグは、 すべてのビットがセットされています(2の補"
"数の符号付き整数として -1)。 多くの文脈(例: @code{if})では、ゼロ以外の値はす"
"べて true フラグとして扱われます。"

#. type: example
#: ../doc/gforth.texi:2201
#, no-wrap
msgid ""
"false .\n"
"true .\n"
"true hex u. decimal\n"
msgstr ""
"false .\n"
"true .\n"
"true hex u. decimal\n"

#. type: table
#: ../doc/gforth.texi:2204
msgid "Comparison words produce canonical flags:"
msgstr "比較ワードは正規化フラグを生成します:"

#. type: example
#: ../doc/gforth.texi:2212
#, no-wrap
msgid ""
"1 1 = .\n"
"1 0= .\n"
"0 1 < .\n"
"0 0 < .\n"
"-1 1 u< . \\ type error, u< interprets -1 as large unsigned number\n"
"-1 1 < .\n"
msgstr ""
"1 1 = .\n"
"1 0= .\n"
"0 1 < .\n"
"0 0 < .\n"
"-1 1 u< . \\ 型エラー。 u< は -1 を 大きな符号なし数として扱ってしまいます\n"
"-1 1 < .\n"

#. type: table
#: ../doc/gforth.texi:2218
msgid ""
"Gforth supports all combinations of the prefixes @code{0 u d d0 du f f0} (or "
"none) and the comparisons @code{= <> < > <= >=}.  Only a part of these "
"combinations are standard (for details see the standard, @ref{Numeric "
"comparison}, @ref{Floating Point} or @ref{Word Index})."
msgstr ""
"Gforth は、接頭辞 @code{0 u d d0 du f f0} (または「 接頭辞なし」)との比較 "
"@code{= <> < > <= >=} のすべての組み合わせをサポートします。 これらの組み合わ"
"せの一部のみが標準Forthです (詳細については、標準Forth または @ref{Numeric "
"comparison} または @ref{Floating Point} または @ref{Word Index} を参照してく"
"ださい)。"

#. type: table
#: ../doc/gforth.texi:2221
msgid ""
"You can use @code{and or xor invert} as operations on canonical flags.  "
"Actually they are bitwise operations:"
msgstr ""
"@code{and or xor invert} を正規化フラグ用の演算子として使用できます。 実際に"
"は、 これらはビット単位演算です:"

#. type: example
#: ../doc/gforth.texi:2227
#, no-wrap
msgid ""
"1 2 and .\n"
"1 2 or .\n"
"1 3 xor .\n"
"1 invert .\n"
msgstr ""
"1 2 and .\n"
"1 2 or .\n"
"1 3 xor .\n"
"1 invert .\n"

#. type: table
#: ../doc/gforth.texi:2233
msgid ""
"You can convert a zero/non-zero flag into a canonical flag with @code{0<>} "
"(and complement it on the way with @code{0=}; indeed, it is more common to "
"use @code{0=} instead of @code{invert} for canonical flags)."
msgstr ""
"@code{0<>} を使用して ゼロ/非ゼロ フラグを正規化フラグに変換できます(そし"
"て、 その途中で @code{0=} を使用して ゼロ/非ゼロ フラグの余数(complement)を取"
"ります。 実際、 正規化フラグでは @code{invert} の代わりに @code{0=} を使用す"
"るのが一般的です)。"

#. type: example
#: ../doc/gforth.texi:2237
#, no-wrap
msgid ""
"1 0= .\n"
"1 0<> .\n"
msgstr ""
"1 0= .\n"
"1 0<> .\n"

#. type: table
#: ../doc/gforth.texi:2247
msgid ""
"While you can use @code{if} without @code{0<>} to test for zero/non-zero, "
"you sometimes need to use @code{0<>} when combining zero/non-zero values "
"with @code{and or xor} because of their bitwise nature.  The simplest, least "
"error-prone, and probably clearest way is to use @code{0<>} in all these "
"cases, but in some cases you can use fewer @code{0<>}s.  Here are some stack "
"effects, where @i{fc} represents a canonical flag, and @i{fz} represents "
"zero/non-zero (every @i{fc} also works as @i{fz}):"
msgstr ""
"@code{0<>} 無しでも @code{if} で ゼロ/非ゼロ をテストすることはできますが、 "
"ゼロ/非ゼロ 値を @code{and or xor} と組み合わせる場合、 @code{and or xor} は"
"ビット単位での操作なので、 @code{0<>} を使用する必要がある場合があります。 最"
"も単純で、 エラーが少なく、 おそらく最も明確な方法は、 これらすべての場合に "
"@code{0<>} を使用することですが、 場合によっては、 使用する @code{0<>} の数を"
"減らすこともできます。 以下にいくつかのスタック効果を示します。 @i{fc} は正規"
"化フラグ(canonical flag)を表し、 @i{fz} は ゼロ/非ゼロ を表します(すべての "
"@i{fc} は @i{fz} としても機能します):"

#. type: example
#: ../doc/gforth.texi:2252
#, no-wrap
msgid ""
"or  ( fz1 fz2 -- fz3 )\n"
"and ( fz1 fc  -- fz2 )\n"
"and ( fc  fz1 -- fz2 )\n"
msgstr ""
"or  ( fz1 fz2 -- fz3 )\n"
"and ( fz1 fc  -- fz2 )\n"
"and ( fc  fz1 -- fz2 )\n"

#. type: table
#: ../doc/gforth.texi:2255
msgid "So, if you see code like this:"
msgstr "したがって、 以下のようなコードの場合:"

#. type: example
#: ../doc/gforth.texi:2258
#, no-wrap
msgid "( n1 n2 ) 0<> and if\n"
msgstr "( n1 n2 ) 0<> and if\n"

#. type: table
#: ../doc/gforth.texi:2264
msgid ""
"This tests whether n1 and n2 are non-zero and if yes, performs the code "
"after @code{if}; it treats n1 as zero/non-zero and uses @code{0<>} to "
"convert n2 into a canonical flag; the @code{and} then produces an fz, which "
"is consumed by the @code{if}."
msgstr ""
"これは、 n1 and n2 (n1 かつ n2)がゼロ以外であるかどうかをテストし、 イエスの"
"場合は @code{if} の後のコードを実行します。 n1 を ゼロ/非ゼロ として扱い、 "
"@code{0<>} を使用して n2 を正規化フラグに変換します。 @code{and} は fz を生成"
"し、 それは @code{if} によって消費されます。"

#. type: table
#: ../doc/gforth.texi:2267
msgid ""
"You can use the all-bits-set feature of canonical flags and the bitwise "
"operation of the Boolean operations to avoid @code{if}s:"
msgstr ""
"正規化フラグの全ビットセット機能とブール演算のビット単位の演算を使用して、 "
"@code{if} を回避することもできます:"

#. type: example
#: ../doc/gforth.texi:2277
#, no-wrap
msgid ""
": foo ( n1 -- n2 )\n"
"  0= if\n"
"    14\n"
"  else\n"
"    0\n"
"  endif ;\n"
"0 foo .\n"
"1 foo .\n"
"\n"
msgstr ""
": foo ( n1 -- n2 )\n"
"  0= if\n"
"    14\n"
"  else\n"
"    0\n"
"  endif ;\n"
"0 foo .\n"
"1 foo .\n"
"\n"

#. type: example
#: ../doc/gforth.texi:2282
#, no-wrap
msgid ""
": foo ( n1 -- n2 )\n"
"  0= 14 and ;\n"
"0 foo .\n"
"1 foo .\n"
msgstr ""
": foo ( n1 -- n2 )\n"
"  0= 14 and ;\n"
"0 foo .\n"
"1 foo .\n"

# : my-min-if-less  ( n1 n2 -- n3 ; my min by less if )
#     { a b }
#     a a b < and
#     b a b < 0= and
#     +
# ;
#
# 3 2 min .s drop cr
# 2 3 min .s drop cr
# 3 2 my-min-if-less .s drop cr
# 2 3 my-min-if-less .s drop cr
#. type: quotation
#: ../doc/gforth.texi:2286
msgid "Write @code{min} without @code{if}."
msgstr "@code{min} を @code{if} 無しで書いてみましょう。"

#. type: table
#: ../doc/gforth.texi:2290
msgid ""
"For reference, see @ref{Boolean Flags}, @ref{Numeric comparison}, and "
"@ref{Bitwise operations}."
msgstr ""
"こちらも参照下さい: @ref{Boolean Flags}, @ref{Numeric comparison}, "
"@ref{Bitwise operations}"

#. type: node
#: ../doc/gforth.texi:2292 ../doc/gforth.texi:2372 ../doc/gforth.texi:2434
#, no-wrap
msgid "Counted loops Tutorial"
msgstr "Counted loops Tutorial"

#. type: section
#: ../doc/gforth.texi:2293
#, no-wrap
msgid "General Loops"
msgstr "General Loops"

#. type: cindex
#: ../doc/gforth.texi:2294
#, no-wrap
msgid "loops, indefinite, tutorial"
msgstr "loops, indefinite, tutorial"

#. type: table
#: ../doc/gforth.texi:2297
msgid "The endless loop is the most simple one:"
msgstr "無限ループは非常に単純です:"

#. type: example
#: ../doc/gforth.texi:2304
#, no-wrap
msgid ""
": endless ( -- )\n"
"  0 begin\n"
"    dup . 1+\n"
"  again ;\n"
"endless\n"
msgstr ""
": endless ( -- )\n"
"  0 begin\n"
"    dup . 1+\n"
"  again ;\n"
"endless\n"

#. type: table
#: ../doc/gforth.texi:2308
msgid ""
"Terminate this loop by pressing @kbd{Ctrl-C} (in Gforth).  @code{begin} does "
"nothing at run-time, @code{again} jumps back to @code{begin}."
msgstr ""
"(Gforth の場合、) @kbd{Ctrl-C} を押してこのループを終了します。  "
"@code{begin} は実行時に何も行わず、 @code{again} は @code{begin} にジャンプし"
"ます。"

#. type: table
#: ../doc/gforth.texi:2310
msgid "A loop with one exit at any place looks like this:"
msgstr "任意の場所に 1 つの出口があるループは以下のようになります:"

#. type: example
#: ../doc/gforth.texi:2322
#, no-wrap
msgid ""
": log2 ( +n1 -- n2 )\n"
"\\ logarithmus dualis of n1>0, rounded down to the next integer\n"
"  assert( dup 0> )\n"
"  2/ 0 begin\n"
"    over 0> while\n"
"      1+ swap 2/ swap\n"
"  repeat\n"
"  nip ;\n"
"7 log2 .\n"
"8 log2 .\n"
msgstr ""
": log2 ( +n1 -- n2 )\n"
"\\ logarithmus dualis of n1>0, rounded down to the next integer\n"
"  assert( dup 0> )\n"
"  2/ 0 begin\n"
"    over 0> while\n"
"      1+ swap 2/ swap\n"
"  repeat\n"
"  nip ;\n"
"7 log2 .\n"
"8 log2 .\n"

#. type: table
#: ../doc/gforth.texi:2328
msgid ""
"At run-time @code{while} consumes a flag; if it is 0, execution continues "
"behind the @code{repeat}; if the flag is non-zero, execution continues "
"behind the @code{while}.  @code{Repeat} jumps back to @code{begin}, just "
"like @code{again}."
msgstr ""
"実行時には @code{while} はフラグを1つ消費します。 フラグが 0 の場合、 "
"@code{repeat} の後ろへ飛んで実行が継続されます。 フラグがゼロ以外の場合、 実"
"行は @code{while} の後ろから継続されます。 @code{Repeat} は、 @code{again} と"
"全く同じように、  @code{begin} に戻ります。"

#. type: table
#: ../doc/gforth.texi:2335
msgid ""
"In Forth there are a number of combinations/abbreviations, like @code{1+}.  "
"However, @code{2/} is not one of them; it shifts its argument right by one "
"bit (arithmetic shift right), and viewed as division that always rounds "
"towards negative infinity (floored division), like Gforth's @code{/} (since "
"Gforth 0.7), but unlike @code{/} in many other Forth systems."
msgstr ""
"Forth には、 @code{1+} など、多数の 組み合わせ/省略形 があります。 しかし、 "
"@code{2/} は 組み合わせ/省略形 ではありません。 これは引数を 1 ビット右にシフ"
"トし、 Gforth の (Gforth 0.7 以降の) @code{/} と同様、 常に負の無限大方向に向"
"かって小数点以下を丸める除算(フロア除算)と見なされますが、 他の多くの Forth "
"システムの @code{/} とは異なります。"

#. type: example
#: ../doc/gforth.texi:2339
#, no-wrap
msgid ""
"-5 2 / . \\ -2 or -3\n"
"-5 2/ .  \\ -3\n"
msgstr ""
"-5 2 / . \\ -2 or -3\n"
"-5 2/ .  \\ -3\n"

#. type: table
#: ../doc/gforth.texi:2344
msgid ""
"@code{assert(} is no standard word, but you can get it on systems other than "
"Gforth by including @file{compat/assert.fs}.  You can see what it does by "
"trying"
msgstr ""
"@code{assert(} は標準Forthのワードではありませんが、 Gforth 以外のシステムで"
"も @file{compat/assert.fs} を含めることで取得できます。 それが何をするかは、 "
"以下のように試してみることで確認できます。"

#. type: example
#: ../doc/gforth.texi:2347
#, no-wrap
msgid "0 log2 .\n"
msgstr "0 log2 .\n"

#. type: table
#: ../doc/gforth.texi:2350
msgid "Here's a loop with an exit at the end:"
msgstr "以下は、 最後に出口があるループです:"

#. type: example
#: ../doc/gforth.texi:2360
#, no-wrap
msgid ""
": log2 ( +n1 -- n2 )\n"
"\\ logarithmus dualis of n1>0, rounded down to the next integer\n"
"  assert( dup 0 > )\n"
"  -1 begin\n"
"    1+ swap 2/ swap\n"
"    over 0 <=\n"
"  until\n"
"  nip ;\n"
msgstr ""
": log2 ( +n1 -- n2 )\n"
"\\ logarithmus dualis of n1>0, rounded down to the next integer\n"
"  assert( dup 0 > )\n"
"  -1 begin\n"
"    1+ swap 2/ swap\n"
"    over 0 <=\n"
"  until\n"
"  nip ;\n"

#. type: table
#: ../doc/gforth.texi:2364
msgid ""
"@code{Until} consumes a flag; if it is zero, execution continues at the "
"@code{begin}, otherwise after the @code{until}."
msgstr ""
"@code{Until} はフラグを消費します。 フラグがゼロの場合は @code{begin} から実"
"行が継続され、 それ以外の場合は @code{until} の後から実行が継続されます。"

# ヒント：ユークリッド互除法
#. type: quotation
#: ../doc/gforth.texi:2367
msgid "Write a definition for computing the greatest common divisor."
msgstr "最大公約数を計算する定義を書いてみましょう。"

#. type: table
#: ../doc/gforth.texi:2370
msgid "Reference: @ref{Simple Loops}."
msgstr "こちらも参照ください: @ref{Simple Loops}"

#. type: node
#: ../doc/gforth.texi:2372 ../doc/gforth.texi:2434 ../doc/gforth.texi:2480
#, no-wrap
msgid "Recursion Tutorial"
msgstr "Recursion Tutorial"

#. type: section
#: ../doc/gforth.texi:2373
#, no-wrap
msgid "Counted loops"
msgstr "Counted loops"

#. type: cindex
#: ../doc/gforth.texi:2374
#, no-wrap
msgid "loops, counted, tutorial"
msgstr "loops, counted, tutorial"

#. type: example
#: ../doc/gforth.texi:2385
#, no-wrap
msgid ""
": ^ ( n1 u -- n )\n"
"\\ n = the uth power of n1\n"
"  1 swap 0 u+do\n"
"    over *\n"
"  loop\n"
"  nip ;\n"
"3 2 ^ .\n"
"4 3 ^ .\n"
msgstr ""
": ^ ( n1 u -- n )\n"
"\\ n = the uth power of n1\n"
"  1 swap 0 u+do\n"
"    over *\n"
"  loop\n"
"  nip ;\n"
"3 2 ^ .\n"
"4 3 ^ .\n"

#. type: table
#: ../doc/gforth.texi:2391
msgid ""
"@code{U+do} (from @file{compat/loops.fs}, if your Forth system doesn't have "
"it) takes two numbers of the stack @code{( u3 u4 -- )}, and then performs "
"the code between @code{u+do} and @code{loop} for @code{u3-u4} times (or not "
"at all, if @code{u3-u4<0})."
msgstr ""
"@code{U+do} (あなたの Forth システムにない場合は @file{compat/loops.fs} をイ"
"ンクルードしてください)は、 @code{( u3 u4 -- )} 、 つまり、 スタックから 2 つ"
"の数値を取得し、 @code{u+do} と @code{loop} の間のコードを @code{u3 - u4} 回"
"実行します(@code{ u3 - u4 < 0} の場合はまったく実行しません)。"

#. type: table
#: ../doc/gforth.texi:2396
msgid ""
"You can see the stack effect design rules at work in the stack effect of the "
"loop start words: Since the start value of the loop is more frequently "
"constant than the end value, the start value is passed on the top-of-stack."
msgstr ""
"ループ開始ワードのスタック効果を見れば、スタック効果の設計ルールが機能してい"
"ることがわかります。 ループの開始値は終了値と比べて定数であることが多いた"
"め、 開始値はスタック頂上(top-of-stack)に渡されます。"

#. type: table
#: ../doc/gforth.texi:2398
msgid "You can access the counter of a counted loop with @code{i}:"
msgstr "@code{i} を使用して、 ループ・カウンターにアクセスできます:"

#. type: example
#: ../doc/gforth.texi:2406
#, no-wrap
msgid ""
": fac ( u -- u! )\n"
"  1 swap 1+ 1 u+do\n"
"    i *\n"
"  loop ;\n"
"5 fac .\n"
"7 fac .\n"
msgstr ""
": fac ( u -- u! )\n"
"  1 swap 1+ 1 u+do\n"
"    i *\n"
"  loop ;\n"
"5 fac .\n"
"7 fac .\n"

#. type: table
#: ../doc/gforth.texi:2410
msgid ""
"There is also @code{+do}, which expects signed numbers (important for "
"deciding whether to enter the loop)."
msgstr ""
"@code{+do} もあります。 これは符号付きの数値を期待します(それはループに入るか"
"どうかを決定するために重要です)。"

#. type: quotation
#: ../doc/gforth.texi:2413
msgid "Write a definition for computing the nth Fibonacci number."
msgstr "n 番目のフィボナッチ数を計算するための定義を記述してみましょう。"

#. type: table
#: ../doc/gforth.texi:2416
msgid "You can also use increments other than 1:"
msgstr "増分として 1 以外も使用できます:"

#. type: example
#: ../doc/gforth.texi:2423
#, no-wrap
msgid ""
": up2 ( n1 n2 -- )\n"
"  +do\n"
"    i .\n"
"  2 +loop ;\n"
"10 0 up2\n"
"\n"
msgstr ""
": up2 ( n1 n2 -- )\n"
"  +do\n"
"    i .\n"
"  2 +loop ;\n"
"10 0 up2\n"
"\n"

#. type: example
#: ../doc/gforth.texi:2429
#, no-wrap
msgid ""
": down2 ( n1 n2 -- )\n"
"  -do\n"
"    i .\n"
"  2 -loop ;\n"
"0 10 down2\n"
msgstr ""
": down2 ( n1 n2 -- )\n"
"  -do\n"
"    i .\n"
"  2 -loop ;\n"
"0 10 down2\n"

#. type: table
#: ../doc/gforth.texi:2432
msgid "Reference: @ref{Counted Loops}."
msgstr "こちらも参照ください: @ref{Counted Loops}"

#. type: node
#: ../doc/gforth.texi:2434 ../doc/gforth.texi:2480 ../doc/gforth.texi:2519
#, no-wrap
msgid "Leaving definitions or loops Tutorial"
msgstr "Leaving definitions or loops Tutorial"

#. type: section
#: ../doc/gforth.texi:2435
#, no-wrap
msgid "Recursion"
msgstr "Recursion"

#. type: cindex
#: ../doc/gforth.texi:2436
#, no-wrap
msgid "recursion tutorial"
msgstr "recursion tutorial"

#. type: table
#: ../doc/gforth.texi:2440
msgid ""
"Usually the name of a definition is not visible in the definition; but "
"earlier definitions are usually visible:"
msgstr ""
"通常、 定義の名前はその定義内に表れません。ただし、 それ以前の(同名の)定義は"
"普通に表れます(訳注: 下記例は再帰呼出しではなくて、 '/' の古いバージョンを呼"
"び出しているに過ぎない事に注意。同じ名前の古いバージョンが存在しなければエ"
"ラーになるが、存在すればエラーにならないので注意。):"

#. type: example
#: ../doc/gforth.texi:2450
#, no-wrap
msgid ""
"1 0 / . \\ \"Floating-point unidentified fault\" in Gforth on some platforms\n"
": / ( n1 n2 -- n )\n"
"  dup 0= if\n"
"    -10 throw \\ report division by zero\n"
"  endif\n"
"  /           \\ old version\n"
";\n"
"1 0 /\n"
msgstr ""
"1 0 / . \\ \"Floating-point unidentified fault\" in Gforth on some platforms\n"
": / ( n1 n2 -- n )\n"
"  dup 0= if\n"
"    -10 throw \\ report division by zero\n"
"  endif\n"
"  /           \\ old version\n"
";\n"
"1 0 /\n"

#. type: table
#: ../doc/gforth.texi:2454
msgid ""
"For recursive definitions you can use @code{recursive} (non-standard) or "
"@code{recurse}:"
msgstr ""
"再帰定義の場合は、 @code{recursive} (非標準) または @code{recurse} を使用でき"
"ます:"

#. type: example
#: ../doc/gforth.texi:2463
#, no-wrap
msgid ""
": fac1 ( n -- n! ) recursive\n"
" dup 0> if\n"
"   dup 1- fac1 *\n"
" else\n"
"   drop 1\n"
" endif ;\n"
"7 fac1 .\n"
"\n"
msgstr ""
": fac1 ( n -- n! ) recursive\n"
" dup 0> if\n"
"   dup 1- fac1 *\n"
" else\n"
"   drop 1\n"
" endif ;\n"
"7 fac1 .\n"
"\n"

#. type: example
#: ../doc/gforth.texi:2471
#, no-wrap
msgid ""
": fac2 ( n -- n! )\n"
" dup 0> if\n"
"   dup 1- recurse *\n"
" else\n"
"   drop 1\n"
" endif ;\n"
"8 fac2 .\n"
msgstr ""
": fac2 ( n -- n! )\n"
" dup 0> if\n"
"   dup 1- recurse *\n"
" else\n"
"   drop 1\n"
" endif ;\n"
"8 fac2 .\n"

#. type: quotation
#: ../doc/gforth.texi:2475
msgid "Write a recursive definition for computing the nth Fibonacci number."
msgstr "n 番目のフィボナッチ数を計算するための再帰定義を記述してみましょう。"

#. type: table
#: ../doc/gforth.texi:2478
msgid "Reference (including indirect recursion): @xref{Calls and returns}."
msgstr ""
"こちらも参照ください (間接再帰に関してもコチラ): @xref{Calls and returns}"

#. type: node
#: ../doc/gforth.texi:2480 ../doc/gforth.texi:2519 ../doc/gforth.texi:2581
#, no-wrap
msgid "Return Stack Tutorial"
msgstr "Return Stack Tutorial"

#. type: section
#: ../doc/gforth.texi:2481
#, no-wrap
msgid "Leaving definitions or loops"
msgstr "Leaving definitions or loops"

#. type: cindex
#: ../doc/gforth.texi:2482
#, no-wrap
msgid "leaving definitions, tutorial"
msgstr "leaving definitions, tutorial"

#. type: cindex
#: ../doc/gforth.texi:2483
#, no-wrap
msgid "leaving loops, tutorial"
msgstr "leaving loops, tutorial"

# 2024/05/18
# ちょっと実験してみた。 ２重にネストしたループで unloop 一つだとエラー。
# unloop 2 つだと正常終了。
# : unloop-nest  ( -- : using unloop for nest loop. )
#     10 0 ?do
# 	11 1 ?do
# 	    j 10 * i + 
# 	    dup 55 = if
# 		unloop
# 		unloop
# 		exit
# 	    endif
# 	    .
# 	loop
# 	cr
#     loop
#     cr
# ;
# unloop-nest
#. type: table
#: ../doc/gforth.texi:2488
msgid ""
"@code{EXIT} exits the current definition right away.  For every counted loop "
"that is left in this way, an @code{UNLOOP} has to be performed before the "
"@code{EXIT}:"
msgstr ""
"@code{EXIT} は、 現在の定義をすぐに終了(exit)します。 @code{EXIT} の実行前"
"に、 (残ったループ・カウンタ達を全て取り除くために、)ネストしたカウンタ付き"
"ループの数だけ @code{UNLOOP} を実行する必要があります(訳注: 下記例は1重のルー"
"プなので unloop が1つ。 2重ループになったら unloop unloop と2つ必要):"

#. type: example
#: ../doc/gforth.texi:2499
#, no-wrap
msgid ""
": ...\n"
" ... u+do\n"
"   ... if\n"
"     ... unloop exit\n"
"   endif\n"
"   ...\n"
" loop\n"
" ... ;\n"
msgstr ""
": ...\n"
" ... u+do\n"
"   ... if\n"
"     ... unloop exit\n"
"   endif\n"
"   ...\n"
" loop\n"
" ... ;\n"

#. type: table
#: ../doc/gforth.texi:2502
msgid "@code{LEAVE} leaves the innermost counted loop right away:"
msgstr ""
"@code{LEAVE} は、 (@code{LEAVE} から見て)最も内側にあるカウンタ付きループを直"
"ちに終了します:"

#. type: example
#: ../doc/gforth.texi:2512
#, no-wrap
msgid ""
": ...\n"
" ... u+do\n"
"   ... if\n"
"     ... leave\n"
"   endif\n"
"   ...\n"
" loop\n"
" ... ;\n"
msgstr ""
": ...\n"
" ... u+do\n"
"   ... if\n"
"     ... leave\n"
"   endif\n"
"   ...\n"
" loop\n"
" ... ;\n"

#. type: table
#: ../doc/gforth.texi:2517
msgid "Reference: @ref{Calls and returns}, @ref{Counted Loops}."
msgstr "こちらも参照ください: @ref{Calls and returns}, @ref{Counted Loops}"

#. type: node
#: ../doc/gforth.texi:2519 ../doc/gforth.texi:2581 ../doc/gforth.texi:2695
#, no-wrap
msgid "Memory Tutorial"
msgstr "Memory Tutorial"

#. type: section
#: ../doc/gforth.texi:2520
#, no-wrap
msgid "Return Stack"
msgstr "Return Stack"

#. type: cindex
#: ../doc/gforth.texi:2521
#, no-wrap
msgid "return stack tutorial"
msgstr "return stack tutorial"

#. type: table
#: ../doc/gforth.texi:2526
msgid ""
"In addition to the data stack Forth also has a second stack, the return "
"stack; most Forth systems store the return addresses of procedure calls "
"there (thus its name).  Programmers can also use this stack:"
msgstr ""
"データ・スタックに加えて、 Forth には 2 番目のスタックであるリターン・スタッ"
"クもあります。 ほとんどの Forth システムは、プロシージャ呼び出しの戻りアドレ"
"スをそこに保存します(したがって、 リターン・スタックという名前が付けられてい"
"ます)。 プログラマもリターン・スタックを利用することができます。"

#. type: example
#: ../doc/gforth.texi:2538
#, no-wrap
msgid ""
": foo ( n1 n2 -- )\n"
" .s\n"
" >r .s\n"
" r@@ .\n"
" >r .s\n"
" r@@ .\n"
" r> .\n"
" r@@ .\n"
" r> . ;\n"
"1 2 foo\n"
msgstr ""
": foo ( n1 n2 -- )\n"
" .s\n"
" >r .s\n"
" r@@ .\n"
" >r .s\n"
" r@@ .\n"
" r> .\n"
" r@@ .\n"
" r> . ;\n"
"1 2 foo\n"

#. type: table
#: ../doc/gforth.texi:2544
msgid ""
"@code{>r} takes an element from the data stack and pushes it onto the return "
"stack; conversely, @code{r>} moves an element from the return to the data "
"stack; @code{r@@} pushes a copy of the top of the return stack on the data "
"stack."
msgstr ""
"@code{>r} はデータ・スタックから1つの要素を取得し、 それをリターン・スタック"
"にプッシュします。 逆に、 @code{r>} は1つの要素をリターンからデータ・スタック"
"に移動します。 @code{r@@} は、リターン・スタック頂上のコピーをデータ・スタッ"
"クにプッシュします。"

#. type: table
#: ../doc/gforth.texi:2548
msgid ""
"Forth programmers usually use the return stack for storing data temporarily, "
"if using the data stack alone would be too complex, and factoring and locals "
"are not an option:"
msgstr ""
"Forth プログラマーは通常、 データ・スタックのみを使用すると複雑すぎて、 か"
"つ、 ファクタリングやローカルが選択肢に無い場合、 データを一時的に保存するた"
"めにリターン・スタックを使用します。"

#. type: example
#: ../doc/gforth.texi:2552
#, no-wrap
msgid ""
": 2swap ( x1 x2 x3 x4 -- x3 x4 x1 x2 )\n"
" rot >r rot r> ;\n"
msgstr ""
": 2swap ( x1 x2 x3 x4 -- x3 x4 x1 x2 )\n"
" rot >r rot r> ;\n"

#. type: table
#: ../doc/gforth.texi:2560
msgid ""
"The return address of the definition and the loop control parameters of "
"counted loops usually reside on the return stack, so you have to take all "
"items, that you have pushed on the return stack in a colon definition or "
"counted loop, from the return stack before the definition or loop ends.  You "
"cannot access items that you pushed on the return stack outside some "
"definition or loop within the definition of loop."
msgstr ""
"定義のリターン・アドレスとカウント付きループのループ制御パラメータは通常、 リ"
"ターン・スタック上に存在するため、 コロン定義またはカウント付きループでリター"
"ン スタックにプッシュしたすべての項目を、定義の終了やループの終了の前にリター"
"ン・スタックから取得する必要があります。 ある定義の外側やループの外側でリター"
"ン・スタックにプッシュしたアイテムに、 ループの定義内からアクセスすることはで"
"きません。"

#. type: table
#: ../doc/gforth.texi:2562
msgid "If you miscount the return stack items, this usually ends in a crash:"
msgstr "リターン・スタック項目の数を間違えると、 通常はクラッシュします:"

#. type: example
#: ../doc/gforth.texi:2567
#, no-wrap
msgid ""
": crash ( n -- )\n"
"  >r ;\n"
"5 crash\n"
msgstr ""
": crash ( n -- )\n"
"  >r ;\n"
"5 crash\n"

#. type: table
#: ../doc/gforth.texi:2572
msgid ""
"You cannot mix using locals and using the return stack (according to the "
"standard; Gforth has no problem).  However, they solve the same problems, so "
"this shouldn't be an issue."
msgstr ""
"ローカルの使用とリターン・スタックの使用を混在させることはできません(標準"
"Forthの場合。 Gforth では問題ありません)。 ただし、 これらは同一の問題の解決"
"なので、 問題にはなりません。"

#. type: quotation
#: ../doc/gforth.texi:2576
msgid ""
"Can you rewrite any of the definitions you wrote until now in a better way "
"using the return stack?"
msgstr ""
"リターン・スタックを使用して、 ここまでにあなたが書いた定義をより良い方法で書"
"き直すことができるでしょうか？"

#. type: table
#: ../doc/gforth.texi:2579
msgid "Reference: @ref{Return stack}."
msgstr "こちらも参照ください: @ref{Return stack}"

#. type: node
#: ../doc/gforth.texi:2581 ../doc/gforth.texi:2695 ../doc/gforth.texi:2759
#, no-wrap
msgid "Characters and Strings Tutorial"
msgstr "Characters and Strings Tutorial"

#. type: cindex
#: ../doc/gforth.texi:2583
#, no-wrap
msgid "memory access/allocation tutorial"
msgstr "memory access/allocation tutorial"

#. type: table
#: ../doc/gforth.texi:2586
msgid "You can create a global variable @code{v} with"
msgstr "以下使用してグローバル変数 @code{v} を作成できます:"

#. type: example
#: ../doc/gforth.texi:2589
#, no-wrap
msgid "variable v ( -- addr )\n"
msgstr "variable v ( -- addr )\n"

#. type: table
#: ../doc/gforth.texi:2595
msgid ""
"@code{v} pushes the address of a cell in memory on the stack.  This cell was "
"reserved by @code{variable}.  You can use @code{!} (store) to store values "
"from the stack into this cell and @code{@@} (fetch) to load the value from "
"memory onto the stack:"
msgstr ""
"@code{v} は、スタックにメモリ内の、とあるセルのアドレスをプッシュします。 こ"
"のセルは @code{variable} によって予約されています。 @code{!}(ストア)を使用し"
"てスタックからこのセルに値を保存し、 @code{@@}(フェッチ)を使用して値をメモリ"
"からスタックにロードできます:"

#. type: example
#: ../doc/gforth.texi:2600
#, no-wrap
msgid ""
"v .\n"
"5 v ! .s\n"
"v @@ .\n"
msgstr ""
"v .\n"
"5 v ! .s\n"
"v @@ .\n"

#. type: table
#: ../doc/gforth.texi:2603
msgid "You can see a raw dump of memory with @code{dump}:"
msgstr ""
"@code{dump} を使用すると、 メモリの生のダンプ(メモリー・ダンプ)を確認できま"
"す:"

#. type: example
#: ../doc/gforth.texi:2606
#, no-wrap
msgid "v 1 cells .s dump\n"
msgstr "v 1 cells .s dump\n"

#. type: table
#: ../doc/gforth.texi:2611
msgid ""
"@code{Cells ( n1 -- n2 )} gives you the number of bytes (or, more generally, "
"address units (aus)) that @code{n1 cells} occupy.  You can also reserve more "
"memory:"
msgstr ""
"@code{Cells ( n1 -- n2 )} は、 n1 個のセル が占めるバイト数(より一般的にはア"
"ドレス単位(address units)(aus))を与えます。 そして、 あなたは、 さらに多くの"
"メモリを予約することもできます:"

#. type: example
#: ../doc/gforth.texi:2615
#, no-wrap
msgid ""
"create v2 20 cells allot\n"
"v2 20 cells dump\n"
msgstr ""
"create v2 20 cells allot\n"
"v2 20 cells dump\n"

#. type: table
#: ../doc/gforth.texi:2621
msgid ""
"creates a variable-like word @code{v2} and reserves 20 uninitialized cells; "
"the address pushed by @code{v2} points to the start of these 20 cells "
"(@pxref{CREATE}).  You can use address arithmetic to access these cells:"
msgstr ""
"変数のようなワード @code{v2} を作成し、 20 個の初期化されていないセルを予約し"
"ます。 @code{v2} によってプッシュされたアドレスは、 これら 20 個のセルの先頭"
"を指します(@pxref{CREATE})。 あなたは、 アドレス演算を使用して、 これらのセル"
"にアクセスできます:"

#. type: example
#: ../doc/gforth.texi:2625
#, no-wrap
msgid ""
"3 v2 5 cells + !\n"
"v2 20 cells dump\n"
msgstr ""
"3 v2 5 cells + !\n"
"v2 20 cells dump\n"

#. type: table
#: ../doc/gforth.texi:2628
msgid "You can reserve and initialize memory with @code{,}:"
msgstr "@code{,} を使用してメモリを予約 かつ 初期化できます:"

#. type: example
#: ../doc/gforth.texi:2636
#, no-wrap
msgid ""
"create v3\n"
"  5 , 4 , 3 , 2 , 1 ,\n"
"v3 @@ .\n"
"v3 cell+ @@ .\n"
"v3 2 cells + @@ .\n"
"v3 5 cells dump\n"
msgstr ""
"create v3\n"
"  5 , 4 , 3 , 2 , 1 ,\n"
"v3 @@ .\n"
"v3 cell+ @@ .\n"
"v3 2 cells + @@ .\n"
"v3 5 cells dump\n"

#. type: quotation
#: ../doc/gforth.texi:2642
msgid ""
"Write a definition @code{vsum ( addr u -- n )} that computes the sum of "
"@code{u} cells, with the first of these cells at @code{addr}, the next one "
"at @code{addr cell+} etc."
msgstr ""
"最初のセルは @code{addr} 、 次のセルは @code{addr cell+} などとして、 "
"@code{u} 個のセルの値の合計を計算する定義 @code{vsum ( addr u -- n )} を記述"
"してみましょう。"

#. type: table
#: ../doc/gforth.texi:2647
msgid ""
"The difference between @code{variable} and @code{create} is that "
"@code{variable} allots a cell, and that you cannot allot additional memory "
"to a variable in standard Forth."
msgstr ""
"@code{variable} と @code{create} の違いは、@code{variable} がセルを割り当てる"
"(allots)ことと、 標準 Forth では変数(variable)に追加のメモリを割り当てること"
"ができないことです。"

#. type: table
#: ../doc/gforth.texi:2649
msgid "You can also reserve memory without creating a new word:"
msgstr "新しいワードを作成せずにメモリを予約することもできます:"

#. type: example
#: ../doc/gforth.texi:2653
#, no-wrap
msgid ""
"here 10 cells allot .\n"
"here .\n"
msgstr ""
"here 10 cells allot .\n"
"here .\n"

#. type: table
#: ../doc/gforth.texi:2659
msgid ""
"The first @code{here} pushes the start address of the memory area, the "
"second @code{here} the address after the dictionary area.  You should store "
"the start address somewhere, or you will have a hard time finding the memory "
"area again."
msgstr ""
"最初の @code{here} は(最初の @code{here} 時点の)ディクショナリ領域の後のアド"
"レスをプッシュし、 メモリ領域の開始アドレスとして使い、 2 番目の @code{here} "
"は(2 番目の @code{here} 時点の)ディクショナリ領域の後のアドレスをプッシュしま"
"す。 この開始アドレスはどこかに保存する必要があります。 そうしないと、 あなた"
"はこのメモリ領域を再度見つけるのが困難になります。"

#. type: table
#: ../doc/gforth.texi:2664
msgid ""
"@code{Allot} manages dictionary memory.  The dictionary memory contains the "
"system's data structures for words etc. on Gforth and most other Forth "
"systems.  It is managed like a stack: You can free the memory that you have "
"just @code{allot}ed with"
msgstr ""
"@code{Allot} はディクショナリ・メモリを管理します。 ディクショナリ・メモリに"
"は、 Gforth や他のほとんどの Forth システムの、 ワードなどのシステムのデータ"
"構造が含まれています。 これはスタックのように管理されます。 あなたは以下のよ"
"うにして割り当て(@code{allot})したメモリを解放できます:"

#. type: example
#: ../doc/gforth.texi:2668
#, no-wrap
msgid ""
"-10 cells allot\n"
"here .\n"
msgstr ""
"-10 cells allot\n"
"here .\n"

#. type: table
#: ../doc/gforth.texi:2673
msgid ""
"Note that you cannot do this if you have created a new word in the meantime "
"(because then your @code{allot}ed memory is no longer on the top of the "
"dictionary ``stack'')."
msgstr ""
"注意: その合間に新しいワードを作成した場合、 それを実行できないことに注意して"
"ください(@code{allot} で作成されたメモリが、 もはやディクショナリ「スタック」"
"の頂上ではなくなるため)。"

#. type: table
#: ../doc/gforth.texi:2676
msgid ""
"Alternatively, you can use @code{allocate} and @code{free} which allow "
"freeing memory in any order:"
msgstr ""
"その代わりに、 @code{allocate} や @code{free} を使用すると、 任意の順序でメモ"
"リを解放できます:"

#. type: example
#: ../doc/gforth.texi:2683
#, no-wrap
msgid ""
"10 cells allocate throw .s\n"
"20 cells allocate throw .s\n"
"swap\n"
"free throw\n"
"free throw\n"
msgstr ""
"10 cells allocate throw .s\n"
"20 cells allocate throw .s\n"
"swap\n"
"free throw\n"
"free throw\n"

#. type: table
#: ../doc/gforth.texi:2686
msgid "The @code{throw}s deal with errors (e.g., out of memory)."
msgstr "@code{throw} はエラー(メモリ不足など)を処理します。"

#. type: table
#: ../doc/gforth.texi:2691
msgid ""
"And there is also a @uref{https://www.complang.tuwien.ac.at/forth/garbage-"
"collection.zip, garbage collector}, which eliminates the need to @code{free} "
"memory explicitly."
msgstr ""
"また、 @uref{https://www.complang.tuwien.ac.at/forth/garbage-collection.zip, "
"ガベージ・コレクター} なら、 メモリを明示的に解放(@code{free})する必要がなく"
"なります。"

#. type: table
#: ../doc/gforth.texi:2693
msgid "Reference: @ref{Memory}."
msgstr "こちらも参照ください: @ref{Memory}"

#. type: node
#: ../doc/gforth.texi:2695 ../doc/gforth.texi:2759 ../doc/gforth.texi:2798
#, no-wrap
msgid "Alignment Tutorial"
msgstr "Alignment Tutorial"

#. type: section
#: ../doc/gforth.texi:2696
#, no-wrap
msgid "Characters and Strings"
msgstr "Characters and Strings"

#. type: cindex
#: ../doc/gforth.texi:2697
#, no-wrap
msgid "strings tutorial"
msgstr "strings tutorial"

#. type: cindex
#: ../doc/gforth.texi:2698
#, no-wrap
msgid "characters tutorial"
msgstr "characters tutorial"

#. type: table
#: ../doc/gforth.texi:2703
msgid ""
"On the stack characters take up a cell, like numbers.  In memory they have "
"their own size (one 8-bit byte on most systems), and therefore require their "
"own words for memory access:"
msgstr ""
"スタック上では、 数と同様に文字がセルを占めます。 メモリ内では文字は独自のサ"
"イズ(ほとんどのシステムでは 8 ビットのバイト値)であるため、 メモリ・アクセス"
"には文字独自のワードが必要です:"

#. type: example
#: ../doc/gforth.texi:2709
#, no-wrap
msgid ""
"create v4 \n"
"  104 c, 97 c, 108 c, 108 c, 111 c,\n"
"v4 4 chars + c@@ .\n"
"v4 5 chars dump\n"
msgstr ""
"create v4 \n"
"  104 c, 97 c, 108 c, 108 c, 111 c,\n"
"v4 4 chars + c@@ .\n"
"v4 5 chars dump\n"

#. type: table
#: ../doc/gforth.texi:2714
msgid ""
"The preferred representation of strings on the stack is @code{addr u-count}, "
"where @code{addr} is the address of the first character and @code{u-count} "
"is the number of characters in the string."
msgstr ""
"スタック上の文字列の推奨される表現は @code{addr u-count} です。ここで、"
"@code{addr} は文字列の最初の文字のアドレスで、 @code{u-count} は文字列の文字"
"数です。"

#. type: example
#: ../doc/gforth.texi:2717
#, no-wrap
msgid "v4 5 type\n"
msgstr "v4 5 type\n"

#. type: table
#: ../doc/gforth.texi:2720
msgid "You get a string constant with"
msgstr "以下を使用すると文字列定数を取得できます"

#. type: example
#: ../doc/gforth.texi:2724
#, no-wrap
msgid ""
"s\" hello, world\" .s\n"
"type\n"
msgstr ""
"s\" hello, world\" .s\n"
"type\n"

#. type: table
#: ../doc/gforth.texi:2729
msgid ""
"Make sure you have a space between @code{s\"} and the string; @code{s\"} is "
"a normal Forth word and must be delimited with white space (try what happens "
"when you remove the space)."
msgstr ""
"@code{s\"} と文字列の間にスペースがあることを確かめてください。 @code{s\"} は"
"通常の Forth ワードであり、 空白(white space)で区切る必要があります(スペース"
"を削除するとどうなるかを試してみましょう)。"

#. type: table
#: ../doc/gforth.texi:2734
msgid ""
"However, this interpretive use of @code{s\"} is quite restricted: the string "
"exists only until the next call of @code{s\"} (some Forth systems keep more "
"than one of these strings, but usually they still have a limited lifetime)."
msgstr ""
"ただし、 この @code{s\"} のインタプリタでの使用(interpretive use)は非常に制限"
"されています。 文字列は、 @code{s\"} が次に呼び出されるまでの間だけ存在します"
"(一部の Forth システムはこれらの文字列を複数保持しますが、 普通は未だ限られた"
"寿命です)。"

# gforth はエラーにならない
# s" hello," s" world" .s <4> 94542410621392 6 94542410653696 5  ok 4
# type world ok 2
# type hello, ok
#. type: example
#: ../doc/gforth.texi:2739
#, no-wrap
msgid ""
"s\" hello,\" s\" world\" .s\n"
"type\n"
"type\n"
msgstr ""
"s\" hello,\" s\" world\" .s\n"
"type\n"
"type\n"

#. type: table
#: ../doc/gforth.texi:2743
msgid ""
"You can also use @code{s\"} in a definition, and the resulting strings then "
"live forever (well, for as long as the definition):"
msgstr ""
"あなたは定義内で @code{s\"} を使用することもでき、 (定義が続く限り、)その結果"
"の文字列は永久に存続します:"

#. type: example
#: ../doc/gforth.texi:2749
#, no-wrap
msgid ""
": foo s\" hello,\" s\" world\" ;\n"
"foo .s\n"
"type\n"
"type\n"
msgstr ""
": foo s\" hello,\" s\" world\" ;\n"
"foo .s\n"
"type\n"
"type\n"

#. type: quotation
#: ../doc/gforth.texi:2754
msgid ""
"@code{Emit ( c -- )} types @code{c} as character (not a number).  Implement "
"@code{type ( addr u -- )}."
msgstr ""
"@code{Emit ( c -- )} は @code{c} を(数値ではなく)文字として出力します。 これ"
"を使って @code{type ( addr u -- )} を実装してみましょう。"

#. type: table
#: ../doc/gforth.texi:2757
msgid "Reference: @ref{Memory Blocks}."
msgstr "こちらも参照ください: @ref{Memory Blocks}"

#. type: node
#: ../doc/gforth.texi:2759 ../doc/gforth.texi:2798 ../doc/gforth.texi:2881
#, no-wrap
msgid "Floating Point Tutorial"
msgstr "Floating Point Tutorial"

#. type: section
#: ../doc/gforth.texi:2760
#, no-wrap
msgid "Alignment"
msgstr "Alignment"

#. type: cindex
#: ../doc/gforth.texi:2761
#, no-wrap
msgid "alignment tutorial"
msgstr "alignment tutorial"

#. type: cindex
#: ../doc/gforth.texi:2762
#, no-wrap
msgid "memory alignment tutorial"
msgstr "memory alignment tutorial"

#. type: table
#: ../doc/gforth.texi:2767
msgid ""
"On many processors cells have to be aligned in memory, if you want to access "
"them with @code{@@} and @code{!} (and even if the processor does not require "
"alignment, access to aligned cells is faster)."
msgstr ""
"多くのプロセッサでは、 @code{@@} と @code{!} を使用してセルにアクセスする場"
"合、 メモリ内でセ​​ルをアライメントする必要があります (プロセッサがアライメント"
"を必要としない場合でも、 アライメントされたセルへのアクセスは高速です)。"

#. type: table
#: ../doc/gforth.texi:2773
msgid ""
"@code{Create} aligns @code{here} (i.e., the place where the next allocation "
"will occur, and that the @code{create}d word points to).  Likewise, the "
"memory produced by @code{allocate} starts at an aligned address.  Adding a "
"number of @code{cells} to an aligned address produces another aligned "
"address."
msgstr ""
"@code{Create} は @code{here}(つまり、 次の割り当てが行われる場所、 そして"
"@code{create}されたワードが指す場所)でアライメントします。 同様に、 "
"@code{allocate}によって生成されたメモリはアライメントしたアドレスから始まりま"
"す。 アライメントしたアドレスに @code{cells} の数値 を足すと、 次のアライメン"
"トされたアドレスが生成されます。"

#. type: table
#: ../doc/gforth.texi:2777
msgid ""
"However, address arithmetic involving @code{char+} and @code{chars} can "
"create an address that is not cell-aligned.  @code{Aligned ( addr -- a-"
"addr )} produces the next aligned address:"
msgstr ""
"ただし、 @code{char+} および @code{chars} を含むアドレス演算では、セルにアラ"
"イメントしていないアドレスが作成される可能性があります。 @code{Aligned "
"( addr -- a-addr )} は、 その次のアライメントせされたアドレスを生成します:"

#. type: example
#: ../doc/gforth.texi:2781
#, no-wrap
msgid ""
"v3 char+ aligned .s @@ .\n"
"v3 char+ .s @@ .\n"
msgstr ""
"v3 char+ aligned .s @@ .\n"
"v3 char+ .s @@ .\n"

#. type: table
#: ../doc/gforth.texi:2785
msgid ""
"Similarly, @code{align} advances @code{here} to the next aligned address:"
msgstr ""
"同様に、 @code{align} は @code{here} を次のアライメントされたアドレスに進めま"
"す:"

#. type: example
#: ../doc/gforth.texi:2791
#, no-wrap
msgid ""
"create v5 97 c,\n"
"here .\n"
"align here .\n"
"1000 ,\n"
msgstr ""
"create v5 97 c,\n"
"here .\n"
"align here .\n"
"1000 ,\n"

#. type: table
#: ../doc/gforth.texi:2795
msgid ""
"Note that you should use aligned addresses even if your processor does not "
"require them, if you want your program to be portable."
msgstr ""
"注意: プログラムを移植可能にしたい場合は、 プロセッサがそれらを必要としない場"
"合でも、 アライメントれたアドレスを使用する必要があることに注意してください。"

#. type: table
#: ../doc/gforth.texi:2797
msgid "Reference: @ref{Address arithmetic}."
msgstr "こちらも参照ください: @ref{Address arithmetic}"

#. type: node
#: ../doc/gforth.texi:2798 ../doc/gforth.texi:2881 ../doc/gforth.texi:3002
#, no-wrap
msgid "Files Tutorial"
msgstr "Files Tutorial"

#. type: cindex
#: ../doc/gforth.texi:2800
#, no-wrap
msgid "floating point tutorial"
msgstr "floating point tutorial"

#. type: cindex
#: ../doc/gforth.texi:2801
#, no-wrap
msgid "FP tutorial"
msgstr "FP tutorial"

#. type: table
#: ../doc/gforth.texi:2805
msgid ""
"Floating-point (FP) numbers and arithmetic in Forth works mostly as one "
"might expect, but there are a few things worth noting:"
msgstr ""
"Forth の浮動小数点(floating-point)(FP)の、 数値と算術演算は、 ほぼ期待された"
"通りに機能しますが、 特筆すべき点がいくつかあります:"

# 参考:
# https://qiita.com/cure_honey/items/377aec7871b64f51ad1a
# 10進表現で何桁出力すれば読み込みで内部精度が回復されるのか？
#
# 引用元(reprint元)
# https://dl.acm.org/citation.cfm?id=103163
# eReader または PDF ボタンで読める
#
# （ちなみにネットには機械翻訳っぽい和訳が落ちていますが日本語的に難があります。ビット別冊 (1993) により日本語な和訳があります。）
# http://iss.ndl.go.jp/books/R100000039-I001404293-00
# 「浮動小数点演算について計算機科学者は何を知っておくべきか / David Goldberg ; 西村恕彦」<
# ※国会図書館デジタルアーカイブスなので(web)利用者登録が必要
#. type: table
#: ../doc/gforth.texi:2815
msgid ""
"The first point is not specific to Forth, but so important and yet not "
"universally known that I mention it here: FP numbers are not reals.  Many "
"properties (e.g., arithmetic laws) that reals have and that one expects of "
"all kinds of numbers do not hold for FP numbers.  If you want to use FP "
"computations, you should learn about their problems and how to avoid them; a "
"good starting point is @cite{David Goldberg, @uref{https://docs.oracle.com/"
"cd/E19957-01/806-3568/ncg_goldberg.html,What Every Computer Scientist Should "
"Know About Floating-Point Arithmetic}, ACM Computing Surveys 23(1):5@minus{}"
"48, March 1991}."
msgstr ""
"最初の点は Forth に固有のものではありませんが、 非常に重要で、 まだ広く知られ"
"ていないため、 ここで言及します。 浮動小数点数は実数(real)ではありません。 実"
"数(real)が持ち、 あらゆる種類の数値に期待される多くの性質(算術法則など)は、 "
"浮動小数点数には当てはまりません。 浮動小数点演算したい場合、 浮動小数点演算"
"の問題とその回避方法について学ぶ必要があります。 良い出発点は @cite{David "
"Goldberg, @uref{https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg."
"html,What Every Computer Scientist Should Know About Floating-Point "
"Arithmetic}, ACM Computing Surveys 23(1):5@minus{}48, March 1991} です。"

#. type: table
#: ../doc/gforth.texi:2821
msgid ""
"In Forth source code literal FP numbers need an exponent, e.g., @code{1e0}; "
"this can also be written shorter as @code{1e}, longer as @code{+1.0e+0}, and "
"many variations in between.  The reason for this is that, for historical "
"reasons, Forth interprets a decimal point alone (e.g., @code{1.}) as "
"indicating a double-cell integer.  Examples:"
msgstr ""
"Forth ソース・コードでは、リテラル浮動小数点数には指数が必要です(例: "
"@code{1e0})。これは、 @code{1e} のように短く書くことも、 @code{+1.0e+0} のよ"
"うに長く書くこともでき、 その間にはさまざまなバリエーションがあります。 その"
"理由は、 歴史的な理由により、 Forth は小数点のみ(例: @code{1.}) の数を 2 セル"
"整数を示すものとして解釈(interpret)するためです。 例:"

#. type: example
#: ../doc/gforth.texi:2824
#, no-wrap
msgid "2e 2e f+ f.\n"
msgstr "2e 2e f+ f.\n"

#. type: table
#: ../doc/gforth.texi:2828
msgid ""
"Another requirement for literal FP numbers is that the current base is "
"decimal; with a hex base @code{1e} is interpreted as an integer."
msgstr ""
"リテラル浮動小数点数のもう 1 つの要件は、 現在の基数が 10 進数であることで"
"す。 16 進数の @code{1e} は整数として解釈(interpret)されます:"

#. type: table
#: ../doc/gforth.texi:2834
msgid ""
"Forth has a separate stack for FP numbers in conformance with Forth-2012.  "
"One advantage of this model is that cells are not in the way when accessing "
"FP values, and vice versa.  Forth has a set of words for manipulating the FP "
"stack: @code{fdup fswap fdrop fover frot} and (non-standard) @code{fnip "
"ftuck fpick}."
msgstr ""
"Forth には、Forth-2012 に準拠した浮動小数点数用の別個のスタックがあります。 "
"このモデルの利点の 1 つは、 浮動小数点数にアクセスするときにセルが邪魔になら"
"ないこと、 またその逆も同様であることです。 Forth には、 浮動小数点スタック"
"(FP スタック)を操作するためのワードのセットがあります:  @code{fdup fswap "
"fdrop fover frot} や (非標準の、) @code{fnip ftuck fpick}"

#. type: table
#: ../doc/gforth.texi:2844
msgid ""
"FP arithmetic words are prefixed with @code{F}.  There is the usual set "
"@code{f+ f- f* f/ f** fnegate} as well as a number of words for other "
"functions, e.g., @code{fsqrt fsin fln fmin}.  One word that you might expect "
"is @code{f=}; but @code{f=} is non-standard, because FP computation results "
"are usually inaccurate, so exact comparison is usually a mistake, and one "
"should use approximate comparison.  Unfortunately, @code{f~}, the standard "
"word for that purpose, is not well designed, so Gforth provides @code{f~abs} "
"and @code{f~rel} as well."
msgstr ""
"FP 算術ワードには @code{F} という接頭辞が付きます。 通常の @code{f+ f- f* f/ "
"f** fnegate} のほか、 他の、 関数用の多数のワード (例: @code{fsqrt fsin fln "
"fmin}) があります。 期待されるワードの 1 つが @code{f=} ですが、 @code{f=} は"
"標準にはありません。 浮動小数点数の計算結果は通常不正確であるため、 正確な比"
"較は通常間違いであり、 近似的な比較を使用する必要があります。 残念ながら、こ"
"の目的のための標準のワードである @code{f~} は適切に設計されていないため、 "
"Gforth では @code{f~abs} と @code{f~rel} も提供しています。"

#. type: table
#: ../doc/gforth.texi:2852
msgid ""
"And of course there are words for accessing FP numbers in memory (@code{f@@ "
"f!}), and for address arithmetic (@code{floats float+ faligned}).  There are "
"also variants of these words with an @code{sf} and @code{df} prefix for "
"accessing IEEE format single-precision and double-precision numbers in "
"memory; their main purpose is for accessing external FP data (e.g., that has "
"been read from or will be written to a file)."
msgstr ""
"そしてもちろん、 メモリ内の浮動小数点数にアクセスするためのワード(@code{f@@ "
"f!})や、 アドレス演算用のワード(@code{floats float+ faligned})もあります。 メ"
"モリ内の IEEE 書式の単精度および倍精度数値にアクセスするために、 @code{sf} お"
"よび @code{df} プレフィックスを付けた、 これらのワードのバリエーションもあり"
"ます。 その主な目的は、 外部浮動小数点数データ(ファイルから読み取られた、 ま"
"たはファイルに書き込まれるデータなど)にアクセスすることです。"

#. type: table
#: ../doc/gforth.texi:2854
msgid "Here is an example of a dot-product word and its use:"
msgstr "以下は、 ドット出力ワード(dot-product word)とその使用例です:"

#. type: example
#: ../doc/gforth.texi:2861
#, no-wrap
msgid ""
": v* ( f_addr1 nstride1 f_addr2 nstride2 ucount -- r )\n"
"  >r swap 2swap swap 0e r> 0 ?DO\n"
"    dup f@@ over + 2swap dup f@@ f* f+ over + 2swap\n"
"  LOOP\n"
"  2drop 2drop ;\n"
"\n"
msgstr ""
": v* ( f_addr1 nstride1 f_addr2 nstride2 ucount -- r )\n"
"  >r swap 2swap swap 0e r> 0 ?DO\n"
"    dup f@@ over + 2swap dup f@@ f* f+ over + 2swap\n"
"  LOOP\n"
"  2drop 2drop ;\n"
"\n"

#. type: example
#: ../doc/gforth.texi:2863
#, no-wrap
msgid ""
"create v 1.23e f, 4.56e f, 7.89e f,\n"
"\n"
msgstr ""
"create v 1.23e f, 4.56e f, 7.89e f,\n"
"\n"

#. type: example
#: ../doc/gforth.texi:2865
#, no-wrap
msgid "v 1 floats  v 1 floats  3  v* f.\n"
msgstr "v 1 floats  v 1 floats  3  v* f.\n"

#. type: quotation
#: ../doc/gforth.texi:2875
msgid ""
"Write a program to solve a quadratic equation.  Then read @cite{Henry G. "
"Baker, @uref{https://citeseerx.ist.psu.edu/viewdoc/download?"
"doi=10.1.1.111.4448&rep=rep1&type=pdf,You Could Learn a Lot from a "
"Quadratic}, ACM SIGPLAN Notices, 33(1):30@minus{}39, January 1998}, and see "
"if you can improve your program.  Finally, find a test case where the "
"original and the improved version produce different results."
msgstr ""
"二次方程式を解くプログラムを作成してみましょう。 次に、 @cite{Henry G. "
"Baker, @uref{https://citeseerx.ist.psu.edu/viewdoc/download?"
"doi=10.1.1.111.4448&rep=rep1&type=pdf,You Could Learn a Lot from a "
"Quadratic}, ACM SIGPLAN Notices, 33(1):30@minus{}39, January 1998} を読ん"
"で、 そのプログラムを改善できるかどうか確認してください。 最後に、 元のバー"
"ジョンと改良されたバージョンで異なる結果が生成されるテスト・ケースを探しま"
"しょう。"

#. type: table
#: ../doc/gforth.texi:2880
msgid ""
"Reference: @ref{Floating Point}; @ref{Floating point stack}; @ref{Number "
"Conversion}; @ref{Memory Access}; @ref{Address arithmetic}."
msgstr ""
"こちらも参照ください: @ref{Floating Point}; @ref{Floating point stack}; "
"@ref{Number Conversion}; @ref{Memory Access}; @ref{Address arithmetic}."

#. type: node
#: ../doc/gforth.texi:2881 ../doc/gforth.texi:3002 ../doc/gforth.texi:3087
#, no-wrap
msgid "Interpretation and Compilation Semantics and Immediacy Tutorial"
msgstr "Interpretation and Compilation Semantics and Immediacy Tutorial"

#. type: cindex
#: ../doc/gforth.texi:2883
#, no-wrap
msgid "files tutorial"
msgstr "files tutorial"

#. type: table
#: ../doc/gforth.texi:2887
msgid ""
"This section gives a short introduction into how to use files inside Forth. "
"It's broken up into five easy steps:"
msgstr ""
"このセクションでは、 Forth 内でファイルを使用する方法について簡単に説明しま"
"す。 それは 5 つの簡単なステップに分かれています:"

#. type: item
#: ../doc/gforth.texi:2889
#, no-wrap
msgid "Open an ASCII text file for input"
msgstr "入力用に ASCII テキスト・ファイルを開きます"

#. type: item
#: ../doc/gforth.texi:2890
#, no-wrap
msgid "Open a file for output"
msgstr "出力用にファイルを開く"

#. type: item
#: ../doc/gforth.texi:2891
#, no-wrap
msgid "Read input file until string matches (or some other condition is met)"
msgstr "文字列が一致する (または他の条件が満たされる) まで入力ファイルを読み取ります"

#. type: item
#: ../doc/gforth.texi:2892
#, no-wrap
msgid "Write some lines from input (modified or not) to output"
msgstr "入力 (が変更されたかどうかに関係なく、) から数行を出力に書き込みます"

#. type: item
#: ../doc/gforth.texi:2893
#, no-wrap
msgid "Close the files."
msgstr "ファイルを閉じます。"

#. type: table
#: ../doc/gforth.texi:2897
msgid "Reference: @ref{General files}."
msgstr "こちらも参照ください: @ref{General files}"

#. type: subsection
#: ../doc/gforth.texi:2898
#, no-wrap
msgid "Open file for input"
msgstr "Open file for input"

#. type: example
#: ../doc/gforth.texi:2902
#, no-wrap
msgid "s\" foo.in\"  r/o open-file throw Value fd-in\n"
msgstr "s\" foo.in\"  r/o open-file throw Value fd-in\n"

#. type: subsection
#: ../doc/gforth.texi:2904
#, no-wrap
msgid "Create file for output"
msgstr "Create file for output"

#. type: example
#: ../doc/gforth.texi:2908
#, no-wrap
msgid "s\" foo.out\" w/o create-file throw Value fd-out\n"
msgstr "s\" foo.out\" w/o create-file throw Value fd-out\n"

#. type: table
#: ../doc/gforth.texi:2915
msgid ""
"The available file modes are r/o for read-only access, r/w for read-write "
"access, and w/o for write-only access. You could open both files with r/w, "
"too, if you like. All file words return error codes; for most applications, "
"it's best to pass there error codes with @code{throw} to the outer error "
"handler."
msgstr ""
"使用可能なファイル・モードは、 読み取り専用アクセスの場合は r/o 、 読み取り/"
"書き込み アクセスの場合は r/w 、書き込み専用アクセスの場合は w/o です。 必要"
"に応じて、 読み取りと書き込みの両方のファイルを r/w で開くこともできます。 す"
"べてのファイル用ワードはエラーコードを返します。 ほとんどのアプリケーションで"
"は、 @code{throw} を使用してエラー・コードを外部のエラー・ハンドラーに渡すの"
"が最善(best)です。"

#. type: table
#: ../doc/gforth.texi:2917
msgid "If you want words for opening and assigning, define them as follows:"
msgstr ""
"開いたり(opening)割り当てたり(assigning)するためのワードが必要な場合は、 以下"
"のように定義します:"

#. type: example
#: ../doc/gforth.texi:2923
#, no-wrap
msgid ""
"0 Value fd-in\n"
"0 Value fd-out\n"
": open-input ( addr u -- )  r/o open-file throw to fd-in ;\n"
": open-output ( addr u -- )  w/o create-file throw to fd-out ;\n"
msgstr ""
"0 Value fd-in\n"
"0 Value fd-out\n"
": open-input ( addr u -- )  r/o open-file throw to fd-in ;\n"
": open-output ( addr u -- )  w/o create-file throw to fd-out ;\n"

#. type: table
#: ../doc/gforth.texi:2926 ../doc/gforth.texi:2964
msgid "Usage example:"
msgstr "使用例:"

#. type: example
#: ../doc/gforth.texi:2930
#, no-wrap
msgid ""
"s\" foo.in\" open-input\n"
"s\" foo.out\" open-output\n"
msgstr ""
"s\" foo.in\" open-input\n"
"s\" foo.out\" open-output\n"

#. type: subsection
#: ../doc/gforth.texi:2932
#, no-wrap
msgid "Scan file for a particular line"
msgstr "ファイルの特定の行をスキャン"

#. type: example
#: ../doc/gforth.texi:2937
#, no-wrap
msgid ""
"256 Constant max-line\n"
"Create line-buffer  max-line 2 + allot\n"
"\n"
msgstr ""
"256 Constant max-line\n"
"Create line-buffer  max-line 2 + allot\n"
"\n"

#. type: example
#: ../doc/gforth.texi:2948
#, no-wrap
msgid ""
": scan-file ( addr u -- )\n"
"  begin\n"
"      line-buffer max-line fd-in read-line throw\n"
"  while\n"
"         >r 2dup line-buffer r> compare 0=\n"
"     until\n"
"  else\n"
"     drop\n"
"  then\n"
"  2drop ;\n"
msgstr ""
": scan-file ( addr u -- )\n"
"  begin\n"
"      line-buffer max-line fd-in read-line throw\n"
"  while\n"
"         >r 2dup line-buffer r> compare 0=\n"
"     until\n"
"  else\n"
"     drop\n"
"  then\n"
"  2drop ;\n"

#. type: table
#: ../doc/gforth.texi:2953
msgid ""
"@code{read-line ( addr u1 fd -- u2 flag ior )} reads up to u1 bytes into the "
"buffer at addr, and returns the number of bytes read, a flag that is false "
"when the end of file is reached, and an error code."
msgstr ""
"@code{read-line ( addr u1 fd -- u2 flag ior )} は、 addr からのバッファに最"
"大 u1 バイトを読み取り、 読み取ったバイト数と、 ファイルの終わりに達した場合"
"に false になるフラグと、 エラーコードを返します。"

#. type: table
#: ../doc/gforth.texi:2958
msgid ""
"@code{compare ( addr1 u1 addr2 u2 -- n )} compares two strings and returns "
"zero if both strings are equal. It returns a positive number if the first "
"string is lexically greater, a negative if the second string is lexically "
"greater."
msgstr ""
"@code{compare ( addr1 u1 addr2 u2 -- n )} は 2 つの文字列を比較し、 両方の文"
"字列が等しい場合は 0 を返します。 最初の文字列の方が字句的に大きい(lexically "
"greater)場合は正の数値を返し、 2 番目の文字列の方が字句的に大きい(lexically "
"greater)場合は負の数値を返します。"

#. type: table
#: ../doc/gforth.texi:2962
msgid ""
"We haven't seen this loop here; it has two exits. Since the @code{while} "
"exits with the number of bytes read on the stack, we have to clean up that "
"separately; that's after the @code{else}."
msgstr ""
"このループは、 まだ見たことがないですよね。 このループは出口が2つあります。  "
"@code{while} はスタック上にある読み取ったバイト数で終了するため、 それを個別"
"にクリーンアップする必要があります。 そのクリーンアップする部分は "
"@code{else} の後にあります。"

#. type: example
#: ../doc/gforth.texi:2967
#, no-wrap
msgid "s\" The text I search is here\" scan-file\n"
msgstr "s\" The text I search is here\" scan-file\n"

#. type: subsection
#: ../doc/gforth.texi:2969
#, no-wrap
msgid "Copy input to output"
msgstr "Copy input to output"

#. type: example
#: ../doc/gforth.texi:2979
#, no-wrap
msgid ""
": copy-file ( -- )\n"
"  begin\n"
"      line-buffer max-line fd-in read-line throw\n"
"  while\n"
"      line-buffer swap fd-out write-line throw\n"
"  repeat \n"
"  drop ;\n"
msgstr ""
": copy-file ( -- )\n"
"  begin\n"
"      line-buffer max-line fd-in read-line throw\n"
"  while\n"
"      line-buffer swap fd-out write-line throw\n"
"  repeat \n"
"  drop ;\n"

#. type: subsection
#: ../doc/gforth.texi:2982
#, no-wrap
msgid "Close files"
msgstr "Close files"

#. type: example
#: ../doc/gforth.texi:2987
#, no-wrap
msgid ""
"fd-in close-file throw\n"
"fd-out close-file throw\n"
msgstr ""
"fd-in close-file throw\n"
"fd-out close-file throw\n"

#. type: table
#: ../doc/gforth.texi:2990
msgid "Likewise, you can put that into definitions, too:"
msgstr "これも、同様に、 定義に組み込むことができます:"

#. type: example
#: ../doc/gforth.texi:2994
#, no-wrap
msgid ""
": close-input ( -- )  fd-in close-file throw ;\n"
": close-output ( -- )  fd-out close-file throw ;\n"
msgstr ""
": close-input ( -- )  fd-in close-file throw ;\n"
": close-output ( -- )  fd-out close-file throw ;\n"

#. type: quotation
#: ../doc/gforth.texi:3000
msgid ""
"How could you modify @code{copy-file} so that it copies until a second line "
"is matched? Can you write a program that extracts a section of a text file, "
"given the line that starts and the line that terminates that section?"
msgstr ""
"@code{copy-file} を変更して、 2 行目が一致するまでコピーするようにするにはど"
"うすればよいでしょうか？ セクションの開始行と終了行を指定して、 テキスト・"
"ファイルのセクションを抽出するプログラムを作成できますか？"

#. type: node
#: ../doc/gforth.texi:3002 ../doc/gforth.texi:3087 ../doc/gforth.texi:3190
#, no-wrap
msgid "Execution Tokens Tutorial"
msgstr "Execution Tokens Tutorial"

#. type: section
#: ../doc/gforth.texi:3003
#, no-wrap
msgid "Interpretation and Compilation Semantics and Immediacy"
msgstr "Interpretation and Compilation Semantics and Immediacy"

#. type: cindex
#: ../doc/gforth.texi:3004
#, no-wrap
msgid "semantics tutorial"
msgstr "semantics tutorial"

#. type: cindex
#: ../doc/gforth.texi:3005
#, no-wrap
msgid "interpretation semantics tutorial"
msgstr "interpretation semantics tutorial"

#. type: cindex
#: ../doc/gforth.texi:3006
#, no-wrap
msgid "compilation semantics tutorial"
msgstr "compilation semantics tutorial"

#. type: cindex
#: ../doc/gforth.texi:3007
#, no-wrap
msgid "immediate, tutorial"
msgstr "immediate, tutorial"

#. type: table
#: ../doc/gforth.texi:3011
msgid ""
"When a word is compiled, it behaves differently from being interpreted.  E."
"g., consider @code{+}:"
msgstr ""
"ワードがコンパイルされるときと、 解釈(interpret)されるときでは異なる動作をし"
"ます。 たとえば、 @code{+} について考えてみましょう:"

#. type: example
#: ../doc/gforth.texi:3015
#, no-wrap
msgid ""
"1 2 + .\n"
": foo + ;\n"
msgstr ""
"1 2 + .\n"
": foo + ;\n"

#. type: table
#: ../doc/gforth.texi:3023
msgid ""
"These two behaviours are known as compilation and interpretation semantics.  "
"For normal words (e.g., @code{+}), the compilation semantics is to append "
"the interpretation semantics to the currently defined word (@code{foo} in "
"the example above).  I.e., when @code{foo} is executed later, the "
"interpretation semantics of @code{+} (i.e., adding two numbers) will be "
"performed."
msgstr "これらの 2 つの振る舞いは、 コンパイル時compilation semantics)と実行時(interpretation semantics)として知られています。 通常のワード(例: @code{+})の場合、 コンパイル時は、 現在定義されているワード(上記の例では @code{foo})に実行時コードを追加します。 つまり、 後で @code{foo} が実行されると、 @code{+} のj実行時コード(interpretation semantics)(つまり、2 つの数値の加算)が実行されます。"

#. type: table
#: ../doc/gforth.texi:3028
msgid ""
"However, there are words with non-default compilation semantics, e.g., the "
"control-flow words like @code{if}.  You can use @code{immediate} to change "
"the compilation semantics of the last defined word to be equal to the "
"interpretation semantics:"
msgstr "ただし、 @code{if} のような制御フロー・ワードなど、 デフォルト以外のコンパイル時動作を持つワードが存在します。 @code{immediate} を使用すると、 最後に定義されたワードのコンパイル時コードを実行時コードと等しくなるように変更できます:"

#. type: example
#: ../doc/gforth.texi:3032
#, no-wrap
msgid ""
": [FOO] ( -- )\n"
" 5 . ; immediate\n"
"\n"
msgstr ""
": [FOO] ( -- )\n"
" 5 . ; immediate\n"
"\n"

#. type: example
#: ../doc/gforth.texi:3038
#, no-wrap
msgid ""
"[FOO]\n"
": bar ( -- )\n"
"  [FOO] ;\n"
"bar\n"
"see bar\n"
msgstr ""
"[FOO]\n"
": bar ( -- )\n"
"  [FOO] ;\n"
"bar\n"
"see bar\n"

#. type: table
#: ../doc/gforth.texi:3043
msgid ""
"Two conventions to mark words with non-default compilation semantics are "
"names with brackets (more frequently used) and to write them all in upper "
"case (less frequently used)."
msgstr "デフォルト以外のコンパイル時ワードだと知らしめる 2 つの慣習は、 名前を括弧で囲む(より頻繁に使用される)ことと、 名前をすべて大文字で記述する(あまり使用されない)ことです。"

#. type: table
#: ../doc/gforth.texi:3046
msgid ""
"For some words, such as @code{if}, using their interpretation semantics is "
"usually a mistake, so we mark them as @code{compile-only}, and you get a "
"warning when you interpret them."
msgstr "@code{if} などの一部のワードについては、 実行時に使用するのは通常間違いであるため、 それらを @code{compile-only} としてマークし、 実行時に使用すると警告が表示されます。"

#. type: example
#: ../doc/gforth.texi:3051
#, no-wrap
msgid ""
": flip ( -- )\n"
" 6 . ; compile-only \\ but not immediate\n"
"flip\n"
"\n"
msgstr ""
": flip ( -- )\n"
" 6 . ; compile-only \\ but not immediate\n"
"flip\n"
"\n"

#. type: example
#: ../doc/gforth.texi:3055
#, no-wrap
msgid ""
": flop ( -- )\n"
" flip ;\n"
"flop\n"
msgstr ""
": flop ( -- )\n"
" flip ;\n"
"flop\n"

#. type: table
#: ../doc/gforth.texi:3062
msgid ""
"In this example, first the interpretation semantics of @code{flip} is used "
"(and you get a warning); the second use of @code{flip} uses the compilation "
"semantics (and you get no warning).  You can also see in this example that "
"compile-only is a property that is evaluated at text interpretation time, "
"not at run-time."
msgstr "この例では、 最初に @code{flip} の実行時コードが使用されます(警告が表示されます)。 @code{flip} の 2 番目の使用では、 コンパイル時コードが使用されます(警告は表示されません)。 この例では、 compile-only が実行時(run-time)ではなくテキスト解釈時(text interpretation time)に評価される属性であることもわかります。"

#. type: table
#: ../doc/gforth.texi:3066
msgid ""
"The text interpreter has two states: in interpret state, it performs the "
"interpretation semantics of words it encounters; in compile state, it "
"performs the compilation semantics of these words."
msgstr "テキスト・インタプリタには 2 つの状態があります。 実行時(interpret)は、 遭遇したワードの実行時コードを実行します。 コンパイル時では、 これらのワードのコンパイル時コードが実行されます。"

#. type: table
#: ../doc/gforth.texi:3071
msgid ""
"Among other things, @code{:} switches into compile state, and @code{;} "
"switches back to interpret state.  They contain the factors @code{]} (switch "
"to compile state) and @code{[} (switch to interpret state), that do nothing "
"but switch the state."
msgstr ""
"特に、 @code{:} はコンパイル状態に切り替え、 @code{;} は解釈(interpret)状態に"
"戻ります。 これらには、 状態を切り替えるだけがその効果である @code{]} (コンパ"
"イル状態に切り替える) と @code{[} (解釈(interpret)状態に切り替える) が含まれ"
"ています。"

#. type: example
#: ../doc/gforth.texi:3076
#, no-wrap
msgid ""
": xxx ( -- )\n"
"  [ 5 . ]\n"
";\n"
"\n"
msgstr ""
": xxx ( -- )\n"
"  [ 5 . ]\n"
";\n"
"\n"

#. type: example
#: ../doc/gforth.texi:3079
#, no-wrap
msgid ""
"xxx\n"
"see xxx\n"
msgstr ""
"xxx\n"
"see xxx\n"

#. type: table
#: ../doc/gforth.texi:3083
msgid ""
"These brackets are also the source of the naming convention mentioned above."
msgstr "これらの角括弧(brackets)は、 上記の命名慣習の源でもあります。"

#. type: table
#: ../doc/gforth.texi:3085
msgid "Reference: @ref{Interpretation and Compilation Semantics}."
msgstr "こちらも参照ください: @ref{Interpretation and Compilation Semantics}"

#. type: node
#: ../doc/gforth.texi:3087 ../doc/gforth.texi:3190 ../doc/gforth.texi:3265
#, no-wrap
msgid "Exceptions Tutorial"
msgstr "Exceptions Tutorial"

#. type: section
#: ../doc/gforth.texi:3088
#, no-wrap
msgid "Execution Tokens"
msgstr "Execution Tokens"

#. type: cindex
#: ../doc/gforth.texi:3089
#, no-wrap
msgid "execution tokens tutorial"
msgstr "execution tokens tutorial"

#. type: cindex
#: ../doc/gforth.texi:3090
#, no-wrap
msgid "XT tutorial"
msgstr "XT tutorial"

#. type: table
#: ../doc/gforth.texi:3095
msgid ""
"@code{' word} gives you the execution token (XT) of a word.  The XT is a "
"cell representing the interpretation semantics of a word.  You can execute "
"this semantics with @code{execute}:"
msgstr "@code{' word} は、 ワードの実行トークン(execution token)(XT)を提供します。 XT は、 ワードの実行時コードを表すセルです。 これは @code{execute} で実行できます:"

#. type: example
#: ../doc/gforth.texi:3099
#, no-wrap
msgid ""
"' + .s\n"
"1 2 rot execute .\n"
msgstr ""
"' + .s\n"
"1 2 rot execute .\n"

#. type: table
#: ../doc/gforth.texi:3103
msgid ""
"The XT is similar to a function pointer in C.  However, parameter passing "
"through the stack makes it a little more flexible:"
msgstr ""
"XT は C の関数ポインタに似ています。 ただし、 パラメータがスタックで渡される"
"ため、もう少し柔軟になります:"

# \ map-array.fs
#. type: example
#: ../doc/gforth.texi:3112
#, no-wrap
msgid ""
": map-array ( ... addr u xt -- ... )\n"
"\\ executes xt ( ... x -- ... ) for every element of the array starting\n"
"\\ at addr and containing u elements\n"
"  @{ xt @}\n"
"  cells over + swap ?do\n"
"    i @@ xt execute\n"
"  1 cells +loop ;\n"
"\n"
msgstr ""
": map-array ( ... addr u xt -- ... )\n"
"\\ addr で始まり u 個の要素を含む配列のすべての要素に対して\n"
"\\ xt ( ... x -- ... ) を実行します\n"
"  @{ xt @}\n"
"  cells over + swap ?do\n"
"    i @@ xt execute\n"
"  1 cells +loop ;\n"
"\n"

# \ map-array.fs
# \ 3.29 Execution Tokens  ok
# : map-array ( ... addr u xt -- ... )  compiled
#     \ addr で始まり u 個の要素を含む配列のすべての要素に対して  compiled
#     \ xt ( ... x -- ... ) を実行します  compiled
#     { xt }  compiled
#     cells over + swap ?do  compiled
#         i @ xt execute  compiled
#     1 cells +loop ;  ok
# create a 3 , 4 , 2 , -1 , 4 ,  ok
# a 5 ' . map-array 3 4 2 -1 4  ok
# 0 a 5 ' + map-array . 12  ok
# s" max-n" environment? drop .s  <1> 9223372036854775807  ok 1 \ Largest usable signed integer.
# a 5 ' min map-array . -1  ok
#. type: example
#: ../doc/gforth.texi:3118
#, no-wrap
msgid ""
"create a 3 , 4 , 2 , -1 , 4 ,\n"
"a 5 ' . map-array .s\n"
"0 a 5 ' + map-array .\n"
"s\" max-n\" environment? drop .s\n"
"a 5 ' min map-array .\n"
msgstr ""
"create a 3 , 4 , 2 , -1 , 4 ,\n"
"a 5 ' . map-array .s\n"
"0 a 5 ' + map-array .\n"
"\n"
"s\" max-n\" environment? drop .s \\ 下記比較初期値用に整数最大値を得る\n"
"a 5 ' min map-array . \\ 最初の要素は、 environment? で取得した整数最大値と比較\n"

#. type: table
#: ../doc/gforth.texi:3124
msgid ""
"You can use map-array with the XTs of words that consume one element more "
"than they produce.  In theory you can also use it with other XTs, but the "
"stack effect then depends on the size of the array, which is hard to "
"understand."
msgstr ""
"生成するより消費する要素が 1 つ多いワードの XT に対して map-array を使用でき"
"ます。 理論的には、他の XT でも使用できますが、 スタック効果は配列のサイズに"
"依存するため、理解するのが困難です。"

#. type: table
#: ../doc/gforth.texi:3128
msgid ""
"Since XTs are cell-sized, you can store them in memory and manipulate them "
"on the stack like other cells.  You can also compile the XT into a word with "
"@code{compile,}:"
msgstr ""
"XT はセルサイズであるため、 メモリに保存し、 他のセルと同様にスタック上で操作"
"できます。 @code{compile,} を使用して XT をワードにコンパイルすることもできま"
"す:"

# : foo1 ( n1 n2 -- n )  compiled
#   [ ' + compile, ] ;  ok
# see foo1 
# : foo1  
#   + ; ok
#. type: example
#: ../doc/gforth.texi:3133
#, no-wrap
msgid ""
": foo1 ( n1 n2 -- n )\n"
"   [ ' + compile, ] ;\n"
"see foo1\n"
msgstr ""
": foo1 ( n1 n2 -- n )\n"
"   [ ' + compile, ] ;\n"
"see foo1\n"

#. type: table
#: ../doc/gforth.texi:3138
msgid ""
"This is non-standard, because @code{compile,} has no compilation semantics "
"in the standard, but it works in good Forth systems.  For the broken ones, "
"use"
msgstr "@code{compile,} は標準ではコンパイル時コードがないため、 上記は標準ではないけれども、 良い Forth システムでは動作します。 うまくいかなかったモノついては、 以下を使用してください"

#. type: example
#: ../doc/gforth.texi:3141
#, no-wrap
msgid ""
": [compile,] compile, ; immediate\n"
"\n"
msgstr ""
": [compile,] compile, ; immediate\n"
"\n"

#      : [compile,] compile, ; immediate  ok
#   ok
#      : foo1 ( n1 n2 -- n )  compiled
#         [ ' + ] [compile,] ;  ok
#      see foo1 
# : foo1  
#   + ; ok
#. type: example
#: ../doc/gforth.texi:3145
#, no-wrap
msgid ""
": foo1 ( n1 n2 -- n )\n"
"   [ ' + ] [compile,] ;\n"
"see foo1\n"
msgstr ""
": foo1 ( n1 n2 -- n )\n"
"   [ ' + ] [compile,] ;\n"
"see foo1\n"

#. type: table
#: ../doc/gforth.texi:3150
msgid ""
"@code{'} is a word with default compilation semantics; it parses the next "
"word when its interpretation semantics are executed, not during compilation:"
msgstr "@code{'} は、 デフォルトでコンパイル時コードを持つワードです。 コンパイル中ではなく、 実行時コードの実行時、 その次のワードを構文解析(parse)します。"

# : foo  
#   ' ; ok
# : bar ( ... "word" -- ... )  compiled
#   ' execute ;  ok
# see bar
# : bar  
#   ' execute ; ok
# 1 2 bar + . 3  ok
#. type: example
#: ../doc/gforth.texi:3159
#, no-wrap
msgid ""
": foo ( -- xt )\n"
"  ' ;\n"
"see foo\n"
": bar ( ... \"word\" -- ... )\n"
"  ' execute ;\n"
"see bar\n"
"1 2 bar + .\n"
msgstr ""
": foo ( -- xt )\n"
"  ' ;\n"
"see foo\n"
": bar ( ... \"word\" -- ... )\n"
"  ' execute ;\n"
"see bar\n"
"1 2 bar + .\n"

#. type: table
#: ../doc/gforth.texi:3163
msgid ""
"You often want to parse a word during compilation and compile its XT so it "
"will be pushed on the stack at run-time.  @code{[']} does this:"
msgstr ""
"コンパイル中にワードを解析(parse)し、 その XT をコンパイルして、 実行時にス"
"タックにプッシュされるようにしたいことがよくあります。 @code{[']} はこれを行"
"います:"

# : xt-+ ( -- xt )  compiled
#   ['] + ;  ok
# see xt-+ 
# : xt-+  `+ ; ok
# 1 2 xt-+ execute . 3  ok
#. type: example
#: ../doc/gforth.texi:3169
#, no-wrap
msgid ""
": xt-+ ( -- xt )\n"
"  ['] + ;\n"
"see xt-+\n"
"1 2 xt-+ execute .\n"
msgstr ""
": xt-+ ( -- xt )\n"
"  ['] + ;\n"
"see xt-+\n"
"1 2 xt-+ execute .\n"

#. type: table
#: ../doc/gforth.texi:3179
msgid ""
"Many programmers tend to see @code{'} and the word it parses as one unit, "
"and expect it to behave like @code{[']} when compiled, and are confused by "
"the actual behaviour.  If you are, just remember that the Forth system just "
"takes @code{'} as one unit and has no idea that it is a parsing word "
"(attempts to convenience programmers in this issue have usually resulted in "
"even worse pitfalls, see @uref{https://www.complang.tuwien.ac.at/papers/"
"ertl98.ps.gz, @code{State}-smartness---Why it is evil and How to Exorcise "
"it})."
msgstr ""
"多くのプログラマーは、 @code{'} とそれが解析(parse)するワードを 1 つの単位と"
"して認識し、 コンパイル時に @code{[']} のように動作することを期待し、 実際の"
"動作に混乱する傾向があります。 あなたがもしそうなら、 Forth システムは "
"@code{'} を 1 つの単位として捉えているだけであり、 それが解析(parse)ワードで"
"あるとはまったく考えていないことを覚えておいてください(この問題でプログラマー"
"の便宜を図る試みは、 通常、 さらにひどい落とし穴につながります。 "
"@uref{https://www.complang.tuwien.ac.at/papers/ertl98.ps.gz, @code{State}-"
"smartness---Why it is evil and How to Exorcise it})。"

#. type: table
#: ../doc/gforth.texi:3186
msgid ""
"Note that the state of the interpreter does not come into play when creating "
"and executing XTs.  I.e., even when you execute @code{'} in compile state, "
"it still gives you the interpretation semantics.  And whatever that state "
"is, @code{execute} performs the semantics represented by the XT (i.e., for "
"XTs produced with @code{'} the interpretation semantics)."
msgstr "XT の作成および実行は、 インタプリタの状態には影響を受けないことに注意してください。 つまり、 コンパイル状態で @code{'} を実行した場合でも、 実行時コードが得られます。 そして、 そこでの状態が何であれ、 @code{execute} は XT によって表されるコード(つまり、@code{'} で生成された XT の場合は実行時コード)を実行します。"

#. type: table
#: ../doc/gforth.texi:3188 ../doc/gforth.texi:3624
msgid "Reference: @ref{Tokens for Words}."
msgstr "こちらも参照ください: @ref{Tokens for Words}"

#. type: node
#: ../doc/gforth.texi:3190 ../doc/gforth.texi:3265 ../doc/gforth.texi:3380
#, no-wrap
msgid "Defining Words Tutorial"
msgstr "Defining Words Tutorial"

#. type: section
#: ../doc/gforth.texi:3191
#, no-wrap
msgid "Exceptions"
msgstr "Exceptions"

#. type: cindex
#: ../doc/gforth.texi:3192
#, no-wrap
msgid "exceptions tutorial"
msgstr "exceptions tutorial"

#. type: table
#: ../doc/gforth.texi:3195
msgid "@code{throw ( n -- )} causes an exception unless n is zero."
msgstr "@code{throw ( n -- )} は、 n がゼロでない限り例外を引き起こします。"

#. type: example
#: ../doc/gforth.texi:3199
#, no-wrap
msgid ""
"100 throw .s\n"
"0 throw .s\n"
msgstr ""
"100 throw .s\n"
"0 throw .s\n"

#. type: table
#: ../doc/gforth.texi:3205
msgid ""
"@code{catch ( ... xt -- ... n )} behaves similar to @code{execute}, but it "
"catches exceptions and pushes the number of the exception on the stack (or "
"0, if the xt executed without exception).  If there was an exception, the "
"stacks have the same depth as when entering @code{catch}:"
msgstr ""
"@code{catch ( ... xt -- ... n )} は @code{execute} と同様に動作しますが、 例"
"外をキャッチし、 スタック上に例外の数値(または XT が例外なしで実行された場合"
"は 0)をプッシュします。 例外があった場合、 スタックの深さは @code{catch} の実"
"行直前と同一です。"

#. type: example
#: ../doc/gforth.texi:3210
#, no-wrap
msgid ""
".s\n"
"3 0 ' / catch .s\n"
"3 2 ' / catch .s\n"
msgstr ""
".s\n"
"3 0 ' / catch .s\n"
"3 2 ' / catch .s\n"

# 3 0 ' / .s catch .s <3> 3 0 140112178093152 <3> 3 0 -10  ok 3
#
# 3 0 ' / .s execute .s <6> 3 0 -10 3 0 140112178093152 
# *the terminal*:33:12: error: Division by zero
# 3 0 ' / .s >>>execute<<< .s
#
# 3 2 ' / .s catch .s <3> 3 2 140112178093152 <2> 1 0  ok 2
#
# 3 2 ' / .s execute .s <3> 3 2 140112178093152 <1> 1  ok 1
#. type: quotation
#: ../doc/gforth.texi:3214
msgid "Try the same with @code{execute} instead of @code{catch}."
msgstr ""
"@code{catch} の代わりに @code{execute} を使用して同じことを試してみましょう。"

#. type: table
#: ../doc/gforth.texi:3219
msgid ""
"@code{Throw} always jumps to the dynamically next enclosing @code{catch}, "
"even if it has to leave several call levels to achieve this:"
msgstr ""
"@code{throw} は、常に動的に直近にこの @code{throw} を囲んでいる(定義の) "
"@code{catch} にジャンプします、 たとえそのジャンプを達成するために複数の呼び"
"出しレベルを飛び越す必要がある場合でもです:"

# : foo 100 throw ;
# : foo1 foo ." after foo" ;
# : bar ['] foo1 catch ;
# bar . 100  ok
#. type: example
#: ../doc/gforth.texi:3225
#, no-wrap
msgid ""
": foo 100 throw ;\n"
": foo1 foo .\" after foo\" ;\n"
": bar ['] foo1 catch ;\n"
"bar .\n"
msgstr ""
": foo 100 throw ;\n"
": foo1 foo .\" after foo\" ;\n"
": bar ['] foo1 catch ;\n"
"bar .\n"

#. type: table
#: ../doc/gforth.texi:3230
msgid ""
"It is often important to restore a value upon leaving a definition, even if "
"the definition is left through an exception.  You can ensure this like this:"
msgstr ""
"多くの場合、 定義が例外によって終了した場合でも、 定義を終了したときに値を復"
"元することが重要です。 以下のようにしてみるのはどうでしょうか:"

#. type: example
#: ../doc/gforth.texi:3237
#, no-wrap
msgid ""
": ...\n"
"   save-x\n"
"   ['] word-changing-x catch ( ... n )\n"
"   restore-x\n"
"   ( ... n ) throw ;\n"
msgstr ""
": ...\n"
"   save-x\n"
"   ['] word-changing-x catch ( ... n )\n"
"   restore-x\n"
"   ( ... n ) throw ;\n"

#. type: table
#: ../doc/gforth.texi:3242
msgid ""
"However, this is still not safe against, e.g., the user pressing @kbd{Ctrl-"
"C} when execution is between the @code{catch} and @code{restore-x}."
msgstr ""
"しかし、 これでも、 たとえば、@code{catch} と @code{restore-x} の間を実行中に"
"ユーザーが @kbd{Ctrl-C} を押すなどしたら安全ではありません。"

#. type: table
#: ../doc/gforth.texi:3248
msgid ""
"Gforth provides an alternative exception handling syntax that is safe "
"against such cases: @code{try ... restore ... endtry}.  If the code between "
"@code{try} and @code{endtry} has an exception, the stack depths are "
"restored, the exception number is pushed on the stack, and the execution "
"continues right after @code{restore}."
msgstr ""
"Gforth は、そのような場合に対して安全な代替例外処理構文(alternative "
"exception handling syntax) @code{try ...restore ... endtry} を提供します。  "
"@code{try} と @code{endtry} の間のコードに例外があった場合、 スタックの深さが"
"復元され、 例外数値がスタックにプッシュされ、 @code{restore} の直後から実行が"
"続行されます。"

#. type: table
#: ../doc/gforth.texi:3250
msgid "The safer equivalent to the restoration code above is"
msgstr "以下は、 上記のコードと同等の、 より安全なコードです"

#. type: example
#: ../doc/gforth.texi:3260
#, no-wrap
msgid ""
": ...\n"
"  save-x\n"
"  try\n"
"    word-changing-x 0\n"
"  restore\n"
"    restore-x\n"
"  endtry\n"
"  throw ;\n"
msgstr ""
": ...\n"
"  save-x\n"
"  try\n"
"    word-changing-x 0\n"
"  restore\n"
"    restore-x\n"
"  endtry\n"
"  throw ;\n"

#. type: table
#: ../doc/gforth.texi:3263
msgid "Reference: @ref{Exception Handling}."
msgstr "こちらも参照ください: @ref{Exception Handling}"

#. type: node
#: ../doc/gforth.texi:3265 ../doc/gforth.texi:3380 ../doc/gforth.texi:3409
#, no-wrap
msgid "Arrays and Records Tutorial"
msgstr "Arrays and Records Tutorial"

#. type: cindex
#: ../doc/gforth.texi:3267
#, no-wrap
msgid "defining words tutorial"
msgstr "defining words tutorial"

#. type: cindex
#: ../doc/gforth.texi:3268
#, no-wrap
msgid "does> tutorial"
msgstr "does> tutorial"

#. type: cindex
#: ../doc/gforth.texi:3269
#, no-wrap
msgid "create...does> tutorial"
msgstr "create...does> tutorial"

#. type: table
#: ../doc/gforth.texi:3275
msgid ""
"@code{:}, @code{create}, and @code{variable} are definition words: They "
"define other words.  @code{Constant} is another definition word:"
msgstr ""
"これまでに出てきた @code{:} や @code{create} や @code{variable} は定義ワード"
"です。 これらは他のワードを定義します。 @code{Constant} はもう一つの定義ワー"
"ドです:"

#. type: example
#: ../doc/gforth.texi:3279 ../doc/gforth.texi:3302
#, no-wrap
msgid ""
"5 constant foo\n"
"foo .\n"
msgstr ""
"5 constant foo\n"
"foo .\n"

#. type: table
#: ../doc/gforth.texi:3283
msgid ""
"You can also use the prefixes @code{2} (double-cell) and @code{f} (floating "
"point) with @code{variable} and @code{constant}."
msgstr ""
"@code{variable} や @code{constant} でも接頭辞 @code{2} (2倍長セル) や "
"@code{f} (浮動小数点) を使用することができます。"

#. type: table
#: ../doc/gforth.texi:3285
msgid "You can also define your own defining words.  E.g.:"
msgstr "あなた独自の定義ワードを定義することもできます。 例:"

#. type: example
#: ../doc/gforth.texi:3289
#, no-wrap
msgid ""
": variable ( \"name\" -- )\n"
"  create 0 , ;\n"
msgstr ""
": variable ( \"name\" -- )\n"
"  create 0 , ;\n"

#. type: table
#: ../doc/gforth.texi:3293
msgid ""
"You can also define defining words that create words that do something other "
"than just producing their address:"
msgstr ""
"また、 単にアドレスを生成する以外のことを行うワードを作成する定義ワードを定義"
"することもできます:"

#. type: example
#: ../doc/gforth.texi:3299
#, no-wrap
msgid ""
": constant ( n \"name\" -- )\n"
"  create ,\n"
"does> ( -- n )\n"
"  ( addr ) @@ ;\n"
"\n"
msgstr ""
": constant ( n \"name\" -- )\n"
"  create ,\n"
"does> ( -- n )\n"
"  ( addr ) @@ ;\n"
"\n"

#. type: table
#: ../doc/gforth.texi:3309
msgid ""
"The definition of @code{constant} above ends at the @code{does>}; i.e., "
"@code{does>} replaces @code{;}, but it also does something else: It changes "
"the last defined word such that it pushes the address of the body of the "
"word and then performs the code after the @code{does>} whenever it is called."
msgstr ""
"上記の @code{constant} の定義は @code{does>} で終了します。 つまり、 "
"@code{does>} は @code{;} を置き換えるのですが、 他のことも行います。 最後に定"
"義されたワードを変更して、 ワード本体(body)のアドレスをプッシュし、 呼び出さ"
"れるたびに @code{does>} の後のコードを実行します。"

#. type: table
#: ../doc/gforth.texi:3314
msgid ""
"In the example above, @code{constant} uses @code{,} to store 5 into the body "
"of @code{foo}.  When @code{foo} executes, it pushes the address of the body "
"onto the stack, then (in the code after the @code{does>})  fetches the 5 "
"from there."
msgstr ""
"上の例では、 @code{constant} は @code{,} を使用して @code{foo} の本体に 5 を"
"格納します。  @code{foo} が実行されると、 本体のアドレスがスタックにプッシュ"
"され、 (@code{does>} の後のコードにより、)そこから 5 がフェッチされます。"

#. type: table
#: ../doc/gforth.texi:3319
msgid ""
"The stack comment near the @code{does>} reflects the stack effect of the "
"defined word, not the stack effect of the code after the @code{does>} (the "
"difference is that the code expects the address of the body that the stack "
"comment does not show)."
msgstr ""
"@code{does>} の脇のスタック・コメントは、 @code{does>} の後のコードのスタック"
"効果ではなく、 定義されたワードのスタック効果です(違いは、 @code{does>} の後"
"のコードは @code{does>} の脇のスタック・コメントには書いてない、 ワード本体"
"(body)のアドレスを期待している点です)。"

#. type: table
#: ../doc/gforth.texi:3323
msgid ""
"You can use these definition words to do factoring in cases that involve "
"(other) definition words.  E.g., a field offset is always added to an "
"address.  Instead of defining"
msgstr ""
"これらの定義ワードを使用すると、 (他の)定義ワードが関係する場合にファクタリン"
"グを行うことができます。  たとえば、 フィールド・オフセットは常にアドレスに加"
"算するものですが、 その代わりに以下を定義します"

#. type: example
#: ../doc/gforth.texi:3326
#, no-wrap
msgid "2 cells constant offset-field1\n"
msgstr "2 cells constant offset-field1\n"

#. type: table
#: ../doc/gforth.texi:3329
msgid "and using this like"
msgstr "この offset-field1 は以下のように使います"

#. type: example
#: ../doc/gforth.texi:3332
#, no-wrap
msgid "( addr ) offset-field1 +\n"
msgstr "( addr ) offset-field1 +\n"

#. type: table
#: ../doc/gforth.texi:3335
msgid "you can define a definition word"
msgstr "ここで、 あなたは以下のような定義ワードをを定義できます"

#. type: example
#: ../doc/gforth.texi:3341
#, no-wrap
msgid ""
": simple-field ( n \"name\" -- )\n"
"  create ,\n"
"does> ( n1 -- n1+n )\n"
"  ( addr ) @@ + ;\n"
msgstr ""
": simple-field ( n \"name\" -- )\n"
"  create ,\n"
"does> ( n1 -- n1+n )\n"
"  ( addr ) @@ + ;\n"

#. type: table
#: ../doc/gforth.texi:3344
msgid "Definition and use of field offsets now look like this:"
msgstr "フィールド・オフセットの定義と使用は以下のようになります:"

# / 固定のオフセットを定義するワード…らしい
# : simple-field ( n "name" -- )
#   create ,
# does> ( n1 -- n1+n )
#   ( addr ) @ + ;
# 2 cells simple-field field1
# create mystruct 4 cells allot
#
# mystruct .s field1 .s <1> 140112178740144 <1> 140112178740160  ok 1
#. type: example
#: ../doc/gforth.texi:3349
#, no-wrap
msgid ""
"2 cells simple-field field1\n"
"create mystruct 4 cells allot\n"
"mystruct .s field1 .s drop\n"
msgstr ""
"2 cells simple-field field1\n"
"create mystruct 4 cells allot\n"
"mystruct .s field1 .s drop\n"

#. type: table
#: ../doc/gforth.texi:3354
msgid ""
"If you want to do something with the word without performing the code after "
"the @code{does>}, you can access the body of a @code{create}d word with "
"@code{>body ( xt -- addr )}:"
msgstr ""
"@code{does>} の後のコードを実行せずに、 そのワードで何かをしたい場合は、 "
"@code{>body ( xt -- addr )} を使用すれば @code{create} したワードの本体(body)"
"にアクセスできます:"

#. type: example
#: ../doc/gforth.texi:3362
#, no-wrap
msgid ""
": value ( n \"name\" -- )\n"
"  create ,\n"
"does> ( -- n1 )\n"
"  @@ ;\n"
": to ( n \"name\" -- )\n"
"  ' >body ! ;\n"
"\n"
msgstr ""
": value ( n \"name\" -- )\n"
"  create ,\n"
"does> ( -- n1 )\n"
"  @@ ;\n"
": to ( n \"name\" -- )\n"
"  ' >body ! ;\n"
"\n"

# : value ( n "name" -- )
#   create ,
#   does> ( -- n1 )
#   @ ; 
#
# : to ( n "name" -- )
#   ' >body ! ; 
#
# 5 value foo 
# foo . 5  ok
# 7 to foo  ok
# foo . 7  ok
#. type: example
#: ../doc/gforth.texi:3367
#, no-wrap
msgid ""
"5 value foo\n"
"foo .\n"
"7 to foo\n"
"foo .\n"
msgstr ""
"5 value foo\n"
"foo .\n"
"7 to foo\n"
"foo .\n"

#. type: quotation
#: ../doc/gforth.texi:3375
msgid ""
"Define @code{defer ( \"name\" -- )}, which creates a word that stores an XT "
"(at the start the XT of @code{abort}), and upon execution @code{execute}s "
"the XT.  Define @code{is ( xt \"name\" -- )} that stores @code{xt} into "
"@code{name}, a word defined with @code{defer}.  Indirect recursion is one "
"application of @code{defer}."
msgstr ""
"(@code{abort} の XT の先頭に、) XT を格納するワードを作成する、 @code{defer "
"( \"name\" -- )} を定義し、 実行時に XT を @code{execute} で実行するようにし"
"てみましょう。 間接再帰は @code{defer} の応用の 1 つです。"

#. type: table
#: ../doc/gforth.texi:3378
msgid "Reference: @ref{User-defined Defining Words}."
msgstr "こちらも参照ください: @ref{User-defined Defining Words}"

#. type: node
#: ../doc/gforth.texi:3380 ../doc/gforth.texi:3409 ../doc/gforth.texi:3478
#, no-wrap
msgid "POSTPONE Tutorial"
msgstr "POSTPONE Tutorial"

#. type: section
#: ../doc/gforth.texi:3381
#, no-wrap
msgid "Arrays and Records"
msgstr "Arrays and Records"

#. type: cindex
#: ../doc/gforth.texi:3382
#, no-wrap
msgid "arrays tutorial"
msgstr "arrays tutorial"

#. type: cindex
#: ../doc/gforth.texi:3383
#, no-wrap
msgid "records tutorial"
msgstr "records tutorial"

#. type: cindex
#: ../doc/gforth.texi:3384
#, no-wrap
msgid "structs tutorial"
msgstr "structs tutorial"

#. type: table
#: ../doc/gforth.texi:3390
msgid ""
"Forth has no standard words for defining arrays, but you can build them "
"yourself based on address arithmetic.  You can also define words for "
"defining arrays and records (@pxref{Defining Words Tutorial,, Defining "
"Words})."
msgstr ""
"Forth には配列を定義するための標準ワードはありませんが、 アドレス演算に基づい"
"て自分で配列を構築できます。 配列とレコードを定義するためのワードを定義するこ"
"ともできます(@pxref{Defining Words Tutorial,, Defining Words})。"

#. type: table
#: ../doc/gforth.texi:3401
msgid ""
"One of the first projects a Forth newcomer sets out upon when learning about "
"defining words is an array defining word (possibly for n-dimensional "
"arrays).  Go ahead and do it, I did it, too; you will learn something from "
"it.  However, don't be disappointed when you later learn that you have "
"little use for these words (inappropriate use would be even worse).  I have "
"not found a set of useful array words yet; the needs are just too diverse, "
"and named, global arrays (the result of naive use of defining words) are "
"often not flexible enough (e.g., consider how to pass them as parameters).  "
"Another such project is a set of words to help dealing with strings."
msgstr ""
"Forth の初心者がワードの定義について学ぶときに最初に着手するプロジェクトの 1 "
"つが配列定義ワード(ことによっては n 次元配列)です。 さぁあなたもやってみま"
"しょう。 あなたはそこから何かを学ぶでしょう。 ただし、 後からこれらのワードを"
"ほとんど使用しないことがわかってもがっかりしないでください(不適切に使用すると"
"さらに悪いことになります)。 私はまだ有用な配列ワードのセットを見つけられてい"
"ません。 ニーズがあまりにも多様で、 (定義ワードを単純に使用した結果である、)"
"名前付きのグローバル配列は、 柔軟性が十分ではないことがよくあります(たとえ"
"ば、 どのようにしてパラメーターを渡すか、など)。 同様のプロジェクトのもう 1 "
"つは、 文字列の処理に役立つワードのセットです。"

#. type: table
#: ../doc/gforth.texi:3407
msgid ""
"On the other hand, there is a useful set of record words, and it has been "
"defined in @file{compat/struct.fs}; these words are predefined in Gforth.  "
"They are explained in depth elsewhere in this manual (see "
"@pxref{Structures}).  The @code{simple-field} example above is simplified "
"variant of fields in this package."
msgstr ""
"その一方、 レコード・ワードには便利なセットがあり、 @file{compat/struct.fs} "
"で定義されています。 これらのワードは Gforth で事前定義されています。 これら"
"については、 このマニュアルの他の場所で詳しく説明されています"
"(@pxref{Structures} 参照)。 上記の @code{simple-field} の例は、 このパッケー"
"ジのフィールドの簡略化されたバリエーションです。"

#. type: node
#: ../doc/gforth.texi:3409 ../doc/gforth.texi:3478 ../doc/gforth.texi:3518
#, no-wrap
msgid "Literal Tutorial"
msgstr "Literal Tutorial"

#. type: code{#1}
#: ../doc/gforth.texi:3410
#, no-wrap
msgid "POSTPONE"
msgstr "POSTPONE"

#. type: cindex
#: ../doc/gforth.texi:3411
#, no-wrap
msgid "postpone tutorial"
msgstr "postpone tutorial"

#. type: table
#: ../doc/gforth.texi:3415
msgid ""
"You can compile the compilation semantics (instead of compiling the "
"interpretation semantics) of a word with @code{POSTPONE}:"
msgstr "@code{POSTPONE} を使用すると、 (そのワードの実行時コード(interpretation semantics)をコンパイルする代わりに、) そのワードのコンパイル時コード(compilation semantics)をコンパイルできます:"

# : MY-+ ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )
#   POSTPONE + ; immediate
# : foo ( n1 n2 -- n )
#   MY-+ ;
#
# 1 2 foo . 3  ok
#
# see foo 
# : foo  
#   + ; ok
#. type: example
#: ../doc/gforth.texi:3423
#, no-wrap
msgid ""
": MY-+ ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )\n"
" POSTPONE + ; immediate\n"
": foo ( n1 n2 -- n )\n"
" MY-+ ;\n"
"1 2 foo .\n"
"see foo\n"
msgstr ""
": MY-+ ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )\n"
" POSTPONE + ; immediate\n"
": foo ( n1 n2 -- n )\n"
" MY-+ ;\n"
"1 2 foo .\n"
"see foo\n"

#. type: table
#: ../doc/gforth.texi:3428
msgid ""
"During the definition of @code{foo} the text interpreter performs the "
"compilation semantics of @code{MY-+}, which performs the compilation "
"semantics of @code{+}, i.e., it compiles @code{+} into @code{foo}."
msgstr "@code{foo} の定義中に、 テキスト・インタプリタは @code{MY-+} のコンパイル時コードを実行し、 そのコンパイル時コードが @code{+} のコンパイル時コードを実行します。 つまり、 @code{+} を @code{foo} 内にコンパイルします。"

#. type: table
#: ../doc/gforth.texi:3435
msgid ""
"This example also displays separate stack comments for the compilation "
"semantics and for the stack effect of the compiled code.  For words with "
"default compilation semantics these stack effects are usually not displayed; "
"the stack effect of the compilation semantics is always @code{( -- )} for "
"these words, the stack effect for the compiled code is the stack effect of "
"the interpretation semantics."
msgstr "この例では、 コンパイル時コードとコンパイルされたコードのスタック効果について個別のスタック・コメントも表示します。 デフォルトのコンパイル時コード(compilation semantics)を持つワードの場合、 通常、 これらのスタック効果は表示されません。 これらのワードのコンパイル時コード(compilation semantics)のスタック効果は常に @code{( -- )} であり、 コンパイルされたコードのスタック効果は実行時コード(interpretation semantics)のスタック効果です。"

#. type: table
#: ../doc/gforth.texi:3439
msgid ""
"Note that the state of the interpreter does not come into play when "
"performing the compilation semantics in this way.  You can also perform it "
"interpretively, e.g.:"
msgstr "注意: この方法でコンパイル時コード(compilation semantics)を実行する場合、 インタプリタの状態には影響を受けないことに注意してください。 あなたは解釈的(interpretively)に実行することもできます。 例:"

# 2024/05/21 foo2のスペルミスと思われる。修正。
#
# : MY-+ ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )
#   POSTPONE + ; immediate
# : foo ( n1 n2 -- n )
#   MY-+ ; 
# 1 2 foo . 3  ok
# see foo 
# : foo  
#   + ; ok
#
# : foo2 ( n1 n2 -- n )
#   [ MY-+ ] ;
# 1 2 foo2 . 3  ok
# see foo2 
# : foo2  
#   + ; ok
#. type: example
#: ../doc/gforth.texi:3445
#, no-wrap
msgid ""
": foo2 ( n1 n2 -- n )\n"
" [ MY-+ ] ;\n"
"1 2 foo .\n"
"see foo\n"
msgstr ""
": foo2 ( n1 n2 -- n )\n"
" [ MY-+ ] ;\n"
"1 2 foo2 .\n"
"see foo2\n"

#. type: table
#: ../doc/gforth.texi:3451
msgid ""
"However, there are some broken Forth systems where this does not always "
"work, and therefore this practice was been declared non-standard in 1999."
msgstr ""
"ただし、 これが常に機能するとは限らない、良くない Forth システムがいくつかあ"
"るため、 この方法は 1999 年に非標準となりました。"

#. type: table
#: ../doc/gforth.texi:3453
msgid "Here is another example for using @code{POSTPONE}:"
msgstr "@code{POSTPONE} を使用する別の例を以下に示します:"

# : MY-- ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )
#   POSTPONE negate POSTPONE + ; immediate compile-only
# : bar ( n1 n2 -- n )
#   MY-- ; 
# 2 1 bar . 1  ok
# see bar 
# : bar  
#   negate + ; ok
#. type: example
#: ../doc/gforth.texi:3461
#, no-wrap
msgid ""
": MY-- ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )\n"
" POSTPONE negate POSTPONE + ; immediate compile-only\n"
": bar ( n1 n2 -- n )\n"
"  MY-- ;\n"
"2 1 bar .\n"
"see bar\n"
msgstr ""
": MY-- ( Compilation: -- ; Run-time of compiled code: n1 n2 -- n )\n"
" POSTPONE negate POSTPONE + ; immediate compile-only\n"
": bar ( n1 n2 -- n )\n"
"  MY-- ;\n"
"2 1 bar .\n"
"see bar\n"

#. type: table
#: ../doc/gforth.texi:3464
msgid "You can define @code{ENDIF} in this way:"
msgstr "@code{ENDIF} は以下の方法で定義できます:"

#. type: example
#: ../doc/gforth.texi:3468
#, no-wrap
msgid ""
": ENDIF ( Compilation: orig -- )\n"
"  POSTPONE then ; immediate\n"
msgstr ""
": ENDIF ( Compilation: orig -- )\n"
"  POSTPONE then ; immediate\n"

# : MY-2DUP  compiled
#   POSTPONE over POSTPONE over ; immediate compile-only
# : hoge MY-2DUP ;
#
# see hoge 
# : hoge  
#   over over ; ok
#. type: quotation
#: ../doc/gforth.texi:3473
msgid ""
"Write @code{MY-2DUP} that has compilation semantics equivalent to "
"@code{2dup}, but compiles @code{over over}."
msgstr "@code{2dup} と同等のコンパイル時コードを持つ @code{MY-2DUP} を作成しますが、 コンパイルされるのは @code{over over} になるようにしてみましょう。"

#. type: node
#: ../doc/gforth.texi:3478 ../doc/gforth.texi:3518 ../doc/gforth.texi:3583
#, no-wrap
msgid "Advanced macros Tutorial"
msgstr "Advanced macros Tutorial"

#. type: kindex
#: ../doc/gforth.texi:3479 ../doc/gforth.texi:13756 ../doc/gforth.texi:13757
#, no-wrap
msgid "Literal"
msgstr "Literal"

#. type: cindex
#: ../doc/gforth.texi:3480
#, no-wrap
msgid "literal tutorial"
msgstr "literal tutorial"

#. type: table
#: ../doc/gforth.texi:3483
msgid "You cannot @code{POSTPONE} numbers:"
msgstr "数値を @code{POSTPONE} することはできません:"

#. type: example
#: ../doc/gforth.texi:3486
#, no-wrap
msgid ": [FOO] POSTPONE 500 ; immediate\n"
msgstr ": [FOO] POSTPONE 500 ; immediate\n"

#. type: table
#: ../doc/gforth.texi:3489
msgid ""
"Instead, you can use @code{LITERAL (compilation: n --; run-time: -- n )}:"
msgstr ""
"代わりに @code{LITERAL (compilation: n --; run-time: -- n )} を使用します:"

#. type: example
#: ../doc/gforth.texi:3493
#, no-wrap
msgid ""
": [FOO] ( compilation: --; run-time: -- n )\n"
"  500 POSTPONE literal ; immediate\n"
"\n"
msgstr ""
": [FOO] ( compilation: --; run-time: -- n )\n"
"  500 POSTPONE literal ; immediate\n"
"\n"

# : [FOO] ( compilation: --; run-time: -- n )  compiled
#    500 POSTPONE literal ; immediate  ok
# : flip [FOO] ;  ok
# flip . 500  ok
#
# see flip 
# : flip  #500 ; ok
#. type: example
#: ../doc/gforth.texi:3497
#, no-wrap
msgid ""
": flip [FOO] ;\n"
"flip .\n"
"see flip\n"
msgstr ""
": flip [FOO] ;\n"
"flip .\n"
"see flip\n"

#. type: table
#: ../doc/gforth.texi:3503
msgid ""
"@code{LITERAL} consumes a number at compile-time (when it's compilation "
"semantics are executed) and pushes it at run-time (when the code it compiled "
"is executed).  A frequent use of @code{LITERAL} is to compile a number "
"computed at compile time into the current word:"
msgstr "@code{LITERAL} は、 コンパイル時(コンパイル時コードが実行されるとき)に数値を消費し、 実行時(コンパイルされたコードが実行されるとき)にそれをプッシュします。 @code{LITERAL} のよくある使用法は、 コンパイル時に計算された数値を現在のワードにコンパイルすることです:"

#. type: example
#: ../doc/gforth.texi:3508
#, no-wrap
msgid ""
": bar ( -- n )\n"
"  [ 2 2 + ] literal ;\n"
"see bar\n"
msgstr ""
": bar ( -- n )\n"
"  [ 2 2 + ] literal ;\n"
"see bar\n"

#. type: quotation
#: ../doc/gforth.texi:3513
msgid ""
"Write @code{]L} which allows writing the example above as @code{: bar ( -- "
"n ) [ 2 2 + ]L ;}"
msgstr ""
"上記の例を @code{: bar ( -- n ) [ 2 2 + ]L ;} と記述できるような @code{]L} を"
"定義してみましょう。"

#. type: node
#: ../doc/gforth.texi:3518 ../doc/gforth.texi:3583 ../doc/gforth.texi:3626
#, no-wrap
msgid "Compilation Tokens Tutorial"
msgstr "Compilation Tokens Tutorial"

#. type: section
#: ../doc/gforth.texi:3519
#, no-wrap
msgid "Advanced macros"
msgstr "Advanced macros"

#. type: cindex
#: ../doc/gforth.texi:3520
#, no-wrap
msgid "macros, advanced tutorial"
msgstr "macros, advanced tutorial"

#. type: cindex
#: ../doc/gforth.texi:3521
#, no-wrap
msgid "run-time code generation, tutorial"
msgstr "run-time code generation, tutorial"

#. type: table
#: ../doc/gforth.texi:3528
msgid ""
"Reconsider @code{map-array} from @ref{Execution Tokens Tutorial,, Execution "
"Tokens}.  It frequently performs @code{execute}, a relatively expensive "
"operation in some Forth implementations.  You can use @code{compile,} and "
"@code{POSTPONE} to eliminate these @code{execute}s and produce a word that "
"contains the word to be performed directly:"
msgstr ""
"@ref{Execution Tokens Tutorial,, Execution Tokens} の @code{map-array} につい"
"て再検討してみましょう。 @code{map-array} は @code{execute} を頻繁に実行しま"
"すが、 これは一部の Forth 実装では比較的高価な操作です。 @code{compile,} と "
"@code{POSTPONE} を使用すると、 これらの @code{execute} を削除し、 直接実行さ"
"れるワードを含むワードを生成できます:"

# \ map-array.fs
#. type: example
#: ../doc/gforth.texi:3538
#, no-wrap
msgid ""
": compile-map-array ( compilation: xt -- ; run-time: ... addr u -- ... )\n"
"\\ at run-time, execute xt ( ... x -- ... ) for each element of the\n"
"\\ array beginning at addr and containing u elements\n"
"  @{ xt @}\n"
"  POSTPONE cells POSTPONE over POSTPONE + POSTPONE swap POSTPONE ?do\n"
"    POSTPONE i POSTPONE @@ xt compile,\n"
"  1 cells POSTPONE literal POSTPONE +loop ;\n"
"\n"
msgstr ""
": compile-map-array ( compilation: xt -- ; run-time: ... addr u -- ... )\n"
"\\ at run-time, execute xt ( ... x -- ... ) for each element of the\n"
"\\ array beginning at addr and containing u elements\n"
"  @{ xt @}\n"
"  POSTPONE cells POSTPONE over POSTPONE + POSTPONE swap POSTPONE ?do\n"
"    POSTPONE i POSTPONE @@ xt compile,\n"
"  1 cells POSTPONE literal POSTPONE +loop ;\n"
"\n"

# \ map-array.fs
#. type: example
#: ../doc/gforth.texi:3543
#, no-wrap
msgid ""
": sum-array ( addr u -- n )\n"
" 0 rot rot [ ' + compile-map-array ] ;\n"
"see sum-array\n"
"a 5 sum-array .\n"
msgstr ""
": sum-array ( addr u -- n )\n"
" 0 rot rot [ ' + compile-map-array ] ;\n"
"see sum-array\n"
"a 5 sum-array .\n"

#. type: table
#: ../doc/gforth.texi:3547
msgid ""
"You can use the full power of Forth for generating the code; here's an "
"example where the code is generated in a loop:"
msgstr ""
"コードの生成には Forth の機能を最大限に活用できます。 以下に、 コードがループ"
"内で生成される例を示します:"

# \ map-array.fs
#. type: example
#: ../doc/gforth.texi:3554
#, no-wrap
msgid ""
": compile-vmul-step ( compilation: n --; run-time: n1 addr1 -- n2 addr2 )\n"
"\\ n2=n1+(addr1)*n, addr2=addr1+cell\n"
"  POSTPONE tuck POSTPONE @@\n"
"  POSTPONE literal POSTPONE * POSTPONE +\n"
"  POSTPONE swap POSTPONE cell+ ;\n"
"\n"
msgstr ""
": compile-vmul-step ( compilation: n --; run-time: n1 addr1 -- n2 addr2 )\n"
"\\ n2=n1+(addr1)*n, addr2=addr1+cell\n"
"  POSTPONE tuck POSTPONE @@\n"
"  POSTPONE literal POSTPONE * POSTPONE +\n"
"  POSTPONE swap POSTPONE cell+ ;\n"
"\n"

# \ map-array.fs
#. type: example
#: ../doc/gforth.texi:3561
#, no-wrap
msgid ""
": compile-vmul ( compilation: addr1 u -- ; run-time: addr2 -- n )\n"
"\\ n=v1*v2 (inner product), where the v_i are represented as addr_i u\n"
"  0 postpone literal postpone swap\n"
"  [ ' compile-vmul-step compile-map-array ]\n"
"  postpone drop ;\n"
"see compile-vmul\n"
"\n"
msgstr ""
": compile-vmul ( compilation: addr1 u -- ; run-time: addr2 -- n )\n"
"\\ n=v1*v2 (inner product), where the v_i are represented as addr_i u\n"
"  0 postpone literal postpone swap\n"
"  [ ' compile-vmul-step compile-map-array ]\n"
"  postpone drop ;\n"
"see compile-vmul\n"
"\n"

# \ map-array.fs
#. type: example
#: ../doc/gforth.texi:3567
#, no-wrap
msgid ""
": a-vmul ( addr -- n )\n"
"\\ n=a*v, where v is a vector that's as long as a and starts at addr\n"
" [ a 5 compile-vmul ] ;\n"
"see a-vmul\n"
"a a-vmul .\n"
msgstr ""
": a-vmul ( addr -- n )\n"
"\\ n=a*v, where v is a vector that's as long as a and starts at addr\n"
" [ a 5 compile-vmul ] ;\n"
"see a-vmul\n"
"a a-vmul .\n"

#. type: table
#: ../doc/gforth.texi:3571
msgid ""
"This example uses @code{compile-map-array} to show off, but you could also "
"use @code{map-array} instead (try it now!)."
msgstr ""
"この例では @code{compile-map-array} を使用していますが、 代わりに @code{map-"
"array} を使用することもできます(是非試してみてください)。"

#. type: table
#: ../doc/gforth.texi:3579
msgid ""
"You can use this technique for efficient multiplication of large matrices.  "
"In matrix multiplication, you multiply every row of one matrix with every "
"column of the other matrix.  You can generate the code for one row once, and "
"use it for every column.  The only downside of this technique is that it is "
"cumbersome to recover the memory consumed by the generated code when you are "
"done (and in more complicated cases it is not possible portably)."
msgstr ""
"この手法を使用すると、 巨大な行列を効率的に乗算できます。 行列の乗算では、 一"
"方の行列のすべての行ともう一方の行列のすべての列を乗算します。 1 行のコード"
"を 1 回生成し、 それをすべての列に使用できます。 この手法の唯一の欠点は、 生"
"成されたコードによって消費されたメモリを完了時に開放するのが面倒なことです(さ"
"らに複雑な場合は移植可能ではありません)。"

#. type: section
#: ../doc/gforth.texi:3584
#, no-wrap
msgid "Compilation Tokens"
msgstr "Compilation Tokens"

#. type: cindex
#: ../doc/gforth.texi:3585
#, no-wrap
msgid "compilation tokens, tutorial"
msgstr "compilation tokens, tutorial"

#. type: cindex
#: ../doc/gforth.texi:3586
#, no-wrap
msgid "CT, tutorial"
msgstr "CT, tutorial"

#. type: table
#: ../doc/gforth.texi:3589
msgid "This section is Gforth-specific.  You can skip it."
msgstr "このセクションは Gforth 固有です。 スキップしても構いません。"

#. type: table
#: ../doc/gforth.texi:3598
msgid ""
"@code{' word compile,} compiles the interpretation semantics.  For words "
"with default compilation semantics this is the same as performing the "
"compilation semantics.  To represent the compilation semantics of other "
"words (e.g., words like @code{if} that have no interpretation semantics), "
"Gforth has the concept of a compilation token (CT, consisting of two cells), "
"and words @code{comp'} and @code{[comp']}.  You can perform the compilation "
"semantics represented by a CT with @code{execute}:"
msgstr "@code{' word compile,} は実行時コード(interpretation semantics)をコンパイルします。 デフォルトのコンパイル時コード(compilation semantics)を持つワードの場合、 これはコンパイル時コードを実行するのと同じです。  他のワードのコンパイル時コード(実行時に使えない @code{if} などのワード)を表すために、 Gforth にはコンパイル・トークン(CTと略します。 2つのセルで構成)と、 ワード @code{comp'} と、 ワード @code{[comp']} の概念があります。 @code{execute} を使用して、 CT によって表されるコンパイル時コードを実行できます:"

# 修正： see foo → see foo2
#. type: example
#: ../doc/gforth.texi:3603
#, no-wrap
msgid ""
": foo2 ( n1 n2 -- n )\n"
"   [ comp' + execute ] ;\n"
"see foo\n"
msgstr ""
": foo2 ( n1 n2 -- n )\n"
"   [ comp' + execute ] ;\n"
"see foo2\n"

#. type: table
#: ../doc/gforth.texi:3607
msgid ""
"You can compile the compilation semantics represented by a CT with "
"@code{postpone,}:"
msgstr "@code{postpone,} を使用して、 CT によって表されるコンパイル時コードをコンパイルできます:"

#. type: example
#: ../doc/gforth.texi:3612
#, no-wrap
msgid ""
": foo3 ( -- )\n"
"  [ comp' + postpone, ] ;\n"
"see foo3\n"
msgstr ""
": foo3 ( -- )\n"
"  [ comp' + postpone, ] ;\n"
"see foo3\n"

#. type: table
#: ../doc/gforth.texi:3617
msgid ""
"@code{[ comp' word postpone, ]} is equivalent to @code{POSTPONE word}.  "
"@code{comp'} is particularly useful for words that have no interpretation "
"semantics:"
msgstr "@code{[ comp' word postpone, ]} @code{POSTPONE word} と同等です。  @code{comp'} は、 実行時コードを持たないワードに対して特に役立ちます:"

#. type: example
#: ../doc/gforth.texi:3621
#, no-wrap
msgid ""
"' if\n"
"comp' if .s 2drop\n"
msgstr ""
"' if\n"
"comp' if .s 2drop\n"

#. type: section
#: ../doc/gforth.texi:3627
#, no-wrap
msgid "Wordlists and Search Order"
msgstr "Wordlists and Search Order"

#. type: cindex
#: ../doc/gforth.texi:3628
#, no-wrap
msgid "wordlists tutorial"
msgstr "wordlists tutorial"

#. type: cindex
#: ../doc/gforth.texi:3629
#, no-wrap
msgid "search order, tutorial"
msgstr "search order, tutorial"

#. type: table
#: ../doc/gforth.texi:3638
msgid ""
"The dictionary is not just a memory area that allows you to allocate memory "
"with @code{allot}, it also contains the Forth words, arranged in several "
"wordlists.  When searching for a word in a wordlist, conceptually you start "
"searching at the youngest and proceed towards older words (in reality most "
"systems nowadays use hash-tables); i.e., if you define a word with the same "
"name as an older word, the new word shadows the older word."
msgstr ""
"ディクショナリ(辞書)は、 @code{allot} でメモリを割り当てることができる、 単な"
"るメモリ領域ではなく、 複数のワード・リスト(wordlist)上にある Forth ワード達"
"も含まれています。  ワード・リスト内のワードを検索するとき、 概念的には、 最"
"も新しいワードから検索を開始し、 古いワードに向かって進みます(実際には、 最近"
"のほとんどのシステムはハッシュ・テーブルを使用します)。 つまり、 古いワードと"
"同一の名前のワードを定義すると、 新しいワードが古いワードを隠します。"

#. type: table
#: ../doc/gforth.texi:3643
msgid ""
"Which wordlists are searched in which order is determined by the search "
"order.  You can display the search order with @code{order}.  It displays "
"first the search order, starting with the wordlist searched first, then it "
"displays the wordlist that will contain newly defined words."
msgstr ""
"どのワードリストがどの順序で検索されるかは、 検索順序(search order)によって決"
"まります。  @code{order} で検索順を表示できます。  まず、 最初に検索された"
"ワード・リスト(wordlist)から始まる検索順序が表示され、 次に新しく定義された"
"ワードを含むワード・リスト(wordlist)が表示されます:"

#. type: table
#: ../doc/gforth.texi:3645
msgid "You can create a new, empty wordlist with @code{wordlist ( -- wid )}:"
msgstr ""
"@code{wordlist ( -- wid )} を使用して、 新しい空のワード・リスト(wordlist)を"
"作成できます:"

#. type: example
#: ../doc/gforth.texi:3648
#, no-wrap
msgid "wordlist constant mywords\n"
msgstr "wordlist constant mywords\n"

#. type: table
#: ../doc/gforth.texi:3652
msgid ""
"@code{Set-current ( wid -- )} sets the wordlist that will contain newly "
"defined words (the @emph{current} wordlist):"
msgstr ""
"@code{Set-current ( wid -- )} は、 新しく定義されたワードを入れるワード・リス"
"トを設定します(the current wordlist):"

#. type: example
#: ../doc/gforth.texi:3656
#, no-wrap
msgid ""
"mywords set-current\n"
"order\n"
msgstr ""
"mywords set-current\n"
"order\n"

#. type: table
#: ../doc/gforth.texi:3660
msgid ""
"Gforth does not display a name for the wordlist in @code{mywords} because "
"this wordlist was created anonymously with @code{wordlist}."
msgstr ""
"このワード・リストは @code{wordlist} を使用して匿名で作成されたため、 Gforth "
"は @code{mywords} のワード・リスト名を表示しません。"

#. type: table
#: ../doc/gforth.texi:3664
msgid ""
"You can get the current wordlist with @code{get-current ( -- wid)}.  If you "
"want to put something into a specific wordlist without overall effect on the "
"current wordlist, this typically looks like this:"
msgstr ""
"@code{get-current ( -- wid)} で現在のワード・リストを取得できます。  現在の"
"ワード・リストに影響を与えずに、 指定のワード・リストに何かを入れたい場合、 "
"通常は以下のようにします:"

#. type: example
#: ../doc/gforth.texi:3669
#, no-wrap
msgid ""
"get-current mywords set-current ( wid )\n"
"create someword\n"
"( wid ) set-current\n"
msgstr ""
"get-current mywords set-current ( wid )\n"
"create someword\n"
"( wid ) set-current\n"

#. type: table
#: ../doc/gforth.texi:3674
msgid ""
"You can write the search order with @code{set-order ( wid1 .. widn n -- )} "
"and read it with @code{get-order ( -- wid1 .. widn n )}.  The first searched "
"wordlist is topmost."
msgstr ""
"検索順序は @code{set-order ( wid1 .. widn n -- )} で記述し、 @code{get-order "
"( -- wid1 .. widn n )} で読み取ることができます。  最初に検索されたワード・リ"
"ストが最上位(topmost)になります。"

#. type: example
#: ../doc/gforth.texi:3678
#, no-wrap
msgid ""
"get-order mywords swap 1+ set-order\n"
"order\n"
msgstr ""
"get-order mywords swap 1+ set-order\n"
"order\n"

#. type: table
#: ../doc/gforth.texi:3682
msgid ""
"Yes, the order of wordlists in the output of @code{order} is reversed from "
"stack comments and the output of @code{.s} and thus unintuitive."
msgstr ""
"ええ、 @code{order} の出力内のワードリストの順序は、 スタック・コメントや "
"@code{.s} の出力とは逆になっているため、 直感的ではありません。"

#. type: quotation
#: ../doc/gforth.texi:3689
msgid ""
"Define @code{>order ( wid -- )} which adds @code{wid} as first searched "
"wordlist to the search order.  Define @code{previous ( -- )}, which removes "
"the first searched wordlist from the search order.  Experiment with boundary "
"conditions (you will see some crashes or situations that are hard or "
"impossible to leave)."
msgstr ""
"@code{>order ( wid -- )} を定義して、 最初に検索されるワード・リスト"
"(wordlist)として @code{wid} を検索順序に追加してみましょう。 @code{previous "
"( -- )} を定義してみましょう。 これは、 最初に検索されたワードリスト"
"(wordlist)を検索順序から削除(search order)するものです。 定義したら、 境界条"
"件を試してみましょう(クラッシュや、 そこから抜け出すことが困難または不可能な"
"状況がいくつか見られる事でしょう)。"

#. type: table
#: ../doc/gforth.texi:3698
msgid ""
"The search order is a powerful foundation for providing features similar to "
"Modula-2 modules and C++ namespaces.  However, trying to modularize programs "
"in this way has disadvantages for debugging and reuse/factoring that "
"overcome the advantages in my experience (I don't do huge projects, "
"though).  These disadvantages are not so clear in other languages/"
"programming environments, because these languages are not so strong in "
"debugging and reuse."
msgstr ""
"検索順序(search order)は、 Modula-2 モジュールや、 C++ の名前空間と同様の機能"
"を提供するための強力な基盤です。  ただし、 この方法でプログラムをモジュール化"
"しようとすると、 デバッグや 再利用/ファクタリング に関しては、 (大規模なプロ"
"ジェクトの経験はありませんけれども、)私の経験では利点を上回る欠点がありま"
"す。  他の言語/プログラミング環境では、 デバッグや再利用がそれほど強力ではな"
"いため、 これらの欠点はそれほど目立ちません。"

#. type: table
#: ../doc/gforth.texi:3702
msgid "Reference: @ref{Word Lists}."
msgstr "こしらも参照ください: @ref{Word Lists}"

#. type: node
#: ../doc/gforth.texi:3704 ../doc/gforth.texi:4621 ../doc/gforth.texi:4622
#: ../doc/gforth.texi:4817
#, no-wrap
msgid "Literals in source code"
msgstr "Literals in source code"

#. type: cindex
#: ../doc/gforth.texi:3707
#, no-wrap
msgid "Forth - an introduction"
msgstr "Forth - an introduction"

#. type: table
#: ../doc/gforth.texi:3714
msgid ""
"The difference of this chapter from the Tutorial (@pxref{Tutorial}) is that "
"it is slower-paced in its examples, but uses them to dive deep into "
"explaining Forth internals (not covered by the Tutorial).  Apart from that, "
"this chapter covers far less material.  It is suitable for reading without "
"using a computer."
msgstr ""
"この章とチュートリアル(@pxref{Tutorial})との違いは、 急ぎ足のチュートリアルと"
"違ってじっくり腰を据えて、 チュートリアルではカバーしきれていない、 Forth の"
"内部を詳しく説明していることです。  それはさておき、 この章で取り上げる内容は"
"チュートリアルに比べはるかに少ないので、 パソコンを使わずに読むのに適していま"
"す。"

#. type: table
#: ../doc/gforth.texi:3720
msgid ""
"The primary purpose of this manual is to document Gforth. However, since "
"Forth is not a widely-known language and there is a lack of up-to-date "
"teaching material, it seems worthwhile to provide some introductory "
"material.  For other sources of Forth-related information, see @ref{Forth-"
"related information}."
msgstr ""
"このマニュアルの主な目的は、 Gforth を文書化することです。 ただし、Forth は広"
"く知られている言語ではなく、 最新の教材が不足しているため、 入門用の教材を提"
"供する価値があると思われます。  巷の Forth 関連情報その他の情報源については "
"@ref{Forth-related information} を参照下さい。"

#. type: table
#: ../doc/gforth.texi:3731
msgid ""
"The examples in this section should work on any Standard Forth; the output "
"shown was produced using Gforth. Each example attempts to reproduce the "
"exact output that Gforth produces. If you try out the examples (and you "
"should), what you should type is shown @kbd{like this} and Gforth's response "
"is shown @code{like this}. The single exception is that, where the example "
"shows @key{RET} it means that you should press the ``carriage return'' key. "
"Unfortunately, some output formats for this manual cannot show the "
"difference between @kbd{this} and @code{this} which will make trying out the "
"examples harder (but not impossible)."
msgstr ""
"このセクションの例は、 どの標準 Forth でも動作するはずです。 示されている出力"
"は Gforth を使用して生成されました。 各例では、 Gforth が生成する正確な出力を"
"再現しようとしています。 あなたが例を試してみれば(そして、あなたはそうするべ"
"きです)、 入力すべき内容は @kbd{like this} と示され、 Gforth の応答は "
"@code{like this} で示されます。 唯一の例外は、 例で @key{RET} が示されている"
"場合、 これは「Enter」キー(機種によりReturnキー)を押す必要があることを意味し"
"ます。 残念ながら、 このマニュアルの一部の出力形式では @kbd{this} と "
"@code{this} の違いを表示できないため、 例を試してみるのが困難かもしれません"
"(ただし、 不可能ではありません)。"

#. type: table
#: ../doc/gforth.texi:3735
msgid ""
"Forth is an unusual language. It provides an interactive development "
"environment which includes both an interpreter and compiler. Forth "
"programming style encourages you to break a problem down into many"
msgstr ""
"Forth は珍しい言語です。 インタプリタとコンパイラの両方を含む対話型開発環境を"
"提供します。 Forth のプログラミング・スタイルでは、 問題をいくつかの要素に分"
"割することが推奨されます"

#. type: cindex
#: ../doc/gforth.texi:3735
#, no-wrap
msgid "factoring"
msgstr "factoring"

#. type: table
#: ../doc/gforth.texi:3740
msgid ""
"small fragments (@dfn{factoring}), and then to develop and test each "
"fragment interactively. Forth advocates assert that breaking the edit-"
"compile-test cycle used by conventional programming languages can lead to "
"great productivity improvements."
msgstr ""
"小さな断片を作成し(ファクタリング)、 各断片を対話的に開発・テストします。 "
"Forth の支持者は、 従来のプログラミング言語で使用されている編集・コンパイル・"
"テストのサイクルを打ち破ることで、 生産性の大幅な向上につながる可能性があると"
"主張しています。"

#. type: node
#: ../doc/gforth.texi:3753 ../doc/gforth.texi:3754 ../doc/gforth.texi:3895
#, no-wrap
msgid "Introducing the Text Interpreter"
msgstr "Introducing the Text Interpreter"

#. type: node
#: ../doc/gforth.texi:3753 ../doc/gforth.texi:3895 ../doc/gforth.texi:4121
#, no-wrap
msgid "Stacks and Postfix notation"
msgstr "Stacks and Postfix notation"

#. type: cindex
#: ../doc/gforth.texi:3755 ../doc/gforth.texi:3897 ../doc/gforth.texi:14126
#, no-wrap
msgid "text interpreter"
msgstr "text interpreter"

#. type: cindex
#: ../doc/gforth.texi:3756 ../doc/gforth.texi:3898 ../doc/gforth.texi:14127
#, no-wrap
msgid "outer interpreter"
msgstr "outer interpreter"

#. type: table
#: ../doc/gforth.texi:3777
msgid ""
"When you invoke the Forth image, you will see a startup banner printed and "
"nothing else (if you have Gforth installed on your system, try invoking it "
"now, by typing @kbd{gforth@key{RET}}). Forth is now running its command line "
"interpreter, which is called the @dfn{Text Interpreter} (also known as the "
"@dfn{Outer Interpreter}).  (You will learn a lot about the text interpreter "
"as you read through this chapter, for more detail @pxref{The Text "
"Interpreter})."
msgstr ""
"Forth イメージを呼び出すと、 起動バナーが出力されますが、 他には何も表示され"
"ません (システムに Gforth がインストールされている場合は、 "
"@kbd{gforth@key{RET}} と入力して今すぐ呼び出してみてください)。 今、 Forth "
"は、 テキスト・インタプリタ(Text Interpreter)と呼ばれるコマンド・ライン・イン"
"タプリタを実行しています(外部インタプリタとも呼ばれます;訳注: 別途存在する 内"
"部インタプリタ(inner interpreter)に対してこう呼ばれる)。 (この章を読み進れば"
"テキスト・インタプリタについて多くのことを学ぶことができます。 詳細について"
"は @pxref{The Text Interpreter} を参照してください)。"

#. type: table
#: ../doc/gforth.texi:3780
msgid ""
"Although it's not obvious, Forth is actually waiting for your input. Type a "
"number and press the @key{RET} key:"
msgstr ""
"明白ではなくて分かりにくいですが、 今や Forth はユーザーの入力を待っていま"
"す。 数字の 4 と 5 を入力し @key{RET} キーを押します:"

#. type: example
#: ../doc/gforth.texi:3783
#, no-wrap
msgid "@kbd{45@key{RET}}  ok\n"
msgstr "@kbd{45@key{RET}}  ok\n"

#. type: table
#: ../doc/gforth.texi:3790
msgid ""
"Rather than give you a prompt to invite you to input something, the text "
"interpreter prints a status message @i{after} it has processed a line of "
"input. The status message in this case (``@code{ ok}'' followed by carriage-"
"return) indicates that the text interpreter was able to process all of your "
"input successfully. Now type something illegal:"
msgstr ""
"テキスト・インタプリタは、  次の入力を促すプロンプトを表示するのではなく、 入"
"力行を処理した後に(改行無しで)ステータス・メッセージを出力します。 この場合の"
"ステータス・メッセージ(@key{RET} (「エンター」(リターン)キー押下)の後の "
"@code{ ok} )は、 テキスト・インタプリタがすべての入力を正常に処理できたことを"
"示します。 それでは次に、 不正な文字列を入力してみましょう:"

#. type: example
#: ../doc/gforth.texi:3798
#, no-wrap
msgid ""
"@kbd{qwer341@key{RET}}\n"
"*the terminal*:2: Undefined word\n"
">>>qwer341<<<\n"
"Backtrace:\n"
"$2A95B42A20 throw \n"
"$2A95B57FB8 no.extensions \n"
msgstr ""
"@kbd{qwer341@key{RET}}\n"
"*the terminal*:2: Undefined word\n"
">>>qwer341<<<\n"
"Backtrace:\n"
"$2A95B42A20 throw \n"
"$2A95B57FB8 no.extensions \n"

#. type: table
#: ../doc/gforth.texi:3805
msgid ""
"The exact text, other than the ``Undefined word'' may differ slightly on "
"your system, but the effect is the same; when the text interpreter detects "
"an error, it discards any remaining text on a line, resets certain internal "
"state and prints an error message. For a detailed description of error "
"messages see @ref{Error messages}."
msgstr ""
"`Undefined word` 以外の文章はシステムによって若干異なる場合がありますが、 意"
"味は同じです。 テキスト・インタプリタがエラーを検出すると、 行に残っているテ"
"キストを破棄し、 特定の内部状態をリセットして、 エラー・メッセージを出力しま"
"す。 エラー・メッセージの詳細な説明については、 @ref{Error messages} を参照し"
"てください。"

#. type: table
#: ../doc/gforth.texi:3810
msgid ""
"The text interpreter waits for you to press carriage-return, and then "
"processes your input line. Starting at the beginning of the line, it breaks "
"the line into groups of characters separated by spaces. For each group of "
"characters in turn, it makes two attempts to do something:"
msgstr ""
"テキスト・インタプリタは、エンター・キー(リターン・キー)が押されるのを待ち、 "
"その後入力行を処理します。 行頭から開始して、 行をスペースで区切られた文字の"
"グループに分割します。 文字のグループごとに、 以下の順番で、 何かするために"
"計 2 回の試みを行います:"

#. type: cindex
#: ../doc/gforth.texi:3813
#, no-wrap
msgid "name dictionary"
msgstr "name dictionary"

#. type: kindex
#: ../doc/gforth.texi:3814 ../doc/gforth.texi:4873 ../doc/gforth.texi:15411
#: ../doc/gforth.texi:15412
#, no-wrap
msgid "word"
msgstr "word"

#. type: cindex
#: ../doc/gforth.texi:3815
#, no-wrap
msgid "definition"
msgstr "definition"

#. type: cindex
#: ../doc/gforth.texi:3816 ../doc/gforth.texi:13267
#, no-wrap
msgid "execution token"
msgstr "execution token"

#. type: itemize
#: ../doc/gforth.texi:3827
msgid ""
"It tries to treat it as a command. It does this by searching a @dfn{name "
"dictionary}. If the group of characters matches an entry in the name "
"dictionary, the name dictionary provides the text interpreter with "
"information that allows the text interpreter to perform some actions. In "
"Forth jargon, we say that the group of characters names a @dfn{word}, that "
"the dictionary search returns an @dfn{execution token (xt)} corresponding to "
"the @dfn{definition} of the word, and that the text interpreter executes the "
"xt. Often, the terms @dfn{word} and @dfn{definition} are used "
"interchangeably."
msgstr ""
"その文字のグループをコマンドとして扱おうとします。 これは、 名前ディクショナ"
"リ(name dictionary)を検索することによって行われます。 その文字のグループが名"
"前ディクショナリのエントリと一致する場合、 名前ディクショナリは、 いくつかの"
"アクションを実行できるようにする情報をテキスト・インタプリタに提供します。 "
"Forth 流に言うと、文字のグループを「ワードの名前」といい、 ディクショナリ検索"
"でワードの定義(definition)に対応する実行トークン(execution token;xt)が返さ"
"れ、 テキスト・インタプリタは xt を実行します。 多くの場合、「ワード」(word)"
"と「定義」(definition)という用語は同じ意味で使用されます。"

#. type: itemize
#: ../doc/gforth.texi:3834
msgid ""
"If the text interpreter fails to find a match in the name dictionary, it "
"tries to treat the group of characters as a number in the current number "
"base (when you start up Forth, the current number base is base 10). If the "
"group of characters legitimately represents a number, the text interpreter "
"pushes the number onto a stack (we'll learn more about that in the next "
"section)."
msgstr ""
"テキスト・インタプリタが名前ディクショナリ内で一致するものを見つけられなかっ"
"た場合、 文字のグループを現在の基数の数値として処理しようとします(Forth を起"
"動したときの、 現在の基数は 10 です)。 文字のグループが正当な数値を表す場"
"合、 テキスト・インタプリタはその数値をスタックにプッシュします(これについて"
"は次のセクションで詳しく説明します)。"

#. type: table
#: ../doc/gforth.texi:3841
msgid ""
"If the text interpreter is unable to do either of these things with any "
"group of characters, it discards the group of characters and the rest of the "
"line, then prints an error message. If the text interpreter reaches the end "
"of the line without error, it prints the status message ``@code{ ok}'' "
"followed by carriage-return."
msgstr ""
"テキスト・インタプリタが文字グループに対して上記のいずれも実行不可能な場合、 "
"その文字グループと行の残りの部分が破棄され、 エラー・メッセージが出力されま"
"す。 テキスト・インタプリタがエラーなく行末に到達すると、 ステータス・メッ"
"セージ @code{ ok} に続いて改行を出力します。"

#. type: table
#: ../doc/gforth.texi:3843
msgid "This is the simplest command we can give to the text interpreter:"
msgstr ""
"以下は、 テキスト・インタプリタに与えることができる最もシンプルなコマンドで"
"す:"

#. type: example
#: ../doc/gforth.texi:3846
#, no-wrap
msgid "@key{RET}  ok\n"
msgstr "@key{RET}  ok\n"

#. type: table
#: ../doc/gforth.texi:3851
msgid ""
"The text interpreter did everything we asked it to do (nothing) without an "
"error, so it said that everything is ``@code{ ok}''. Try a slightly longer "
"command:"
msgstr ""
"ここで、 テキスト・インタプリタは、 私たちが要求したことをすべて(何もせずに)"
"エラーなしで実行したため、 すべてが @code{ ok} であると表示しました。 今度は"
"少し長いコマンドを試して見ましょう:"

#. type: example
#: ../doc/gforth.texi:3859
#, no-wrap
msgid ""
"@kbd{12 dup fred dup@key{RET}}\n"
"*the terminal*:3: Undefined word\n"
"12 dup >>>fred<<< dup\n"
"Backtrace:\n"
"$2A95B42A20 throw \n"
"$2A95B57FB8 no.extensions \n"
msgstr ""
"@kbd{12 dup fred dup@key{RET}}\n"
"*the terminal*:3: Undefined word\n"
"12 dup >>>fred<<< dup\n"
"Backtrace:\n"
"$2A95B42A20 throw \n"
"$2A95B57FB8 no.extensions \n"

#. type: table
#: ../doc/gforth.texi:3863
msgid ""
"When you press the carriage-return key, the text interpreter starts to work "
"its way along the line:"
msgstr ""
"エンター・キー(リターン・キー)を押すと、 テキスト・インタプリタが行に沿って動"
"作を開始します:"

#. type: itemize
#: ../doc/gforth.texi:3873
msgid ""
"When it gets to the space after the @code{2}, it takes the group of "
"characters @code{12} and looks them up in the name dictionary@footnote{We "
"can't tell if it found them or not, but assume for now that it did not}. "
"There is no match for this group of characters in the name dictionary, so it "
"tries to treat them as a number. It is able to do this successfully, so it "
"puts the number, 12, ``on the stack'' (whatever that means)."
msgstr ""
"@code{2} の後のスペースに到達すると、 文字グループ @code{12} を取得し、 それ"
"らを名前ディクショナリで検索します@footnote{見つかったかどうかはわかりません"
"が、いまのところ、 見つからなかったと仮定します。 訳注: 12 というワードを定義"
"することもでき、その場合はワード 12 の方が数値 12 より優先される}。 名前ディ"
"クショナリにはこの文字グループに一致するものがないため、それらを数値として処"
"理しようとし、 そして、 数値として処理するのは正常に実行できたので、 (それが"
"何を意味するにせよ) 数値 12 を「スタック上」に置きます。"

#. type: itemize
#: ../doc/gforth.texi:3878
msgid ""
"The text interpreter resumes scanning the line and gets the next group of "
"characters, @code{dup}. It looks it up in the name dictionary and (you'll "
"have to take my word for this) finds it, and executes the word @code{dup} "
"(whatever that means)."
msgstr ""
"テキスト・インタプリタは行のスキャンを再開し、 次の文字グループ @code{dup} を"
"取得します。 それを名前ディクショナリで検索し、 (これについては私の言葉(my "
"word)を信じてください、)それを見つけて、 ワード @code{dup} を実行します(それ"
"が何を意味していても)。"

#. type: itemize
#: ../doc/gforth.texi:3883
msgid ""
"Once again, the text interpreter resumes scanning the line and gets the "
"group of characters @code{fred}. It looks them up in the name dictionary, "
"but can't find them. It tries to treat them as a number, but they don't "
"represent any legal number."
msgstr ""
"更に再び、 テキスト・インタプリタは行のスキャンを再開し、 文字グループ "
"@code{fred} を取得します。 名前ディクショナリで調べますが、見つかりません。 "
"それらを数値として扱おうとしますが、 正当な数値を表すものではありませんでし"
"た。"

#. type: table
#: ../doc/gforth.texi:3892
msgid ""
"At this point, the text interpreter gives up and prints an error message. "
"The error message shows exactly how far the text interpreter got in "
"processing the line. In particular, it shows that the text interpreter made "
"no attempt to do anything with the final character group, @code{dup}, even "
"though we have good reason to believe that the text interpreter would have "
"no problem looking that word up and executing it a second time."
msgstr ""
"この時点で、 テキスト・インタプリタは諦めてエラー・メッセージを出力します。 "
"エラー・メッセージには、 テキスト・インタプリタが行の処理でどこまで到達したか"
"が正確に示されます。 これは、 特に、 テキスト・インタプリタが最後の文字グルー"
"プ @code{dup} に対して何も行おうとしなかったことを示しています。 テキスト・イ"
"ンタプリタがそのワード @code{dup} を検索して、 一度はちゃんと実行されたのです"
"から、 もう一度実行することに何の問題はないはずなのに、 です。 "

#. type: node
#: ../doc/gforth.texi:3895 ../doc/gforth.texi:4121 ../doc/gforth.texi:4209
#, no-wrap
msgid "Your first definition"
msgstr "Your first definition"

#. type: section
#: ../doc/gforth.texi:3896
#, no-wrap
msgid "Stacks, postfix notation and parameter passing"
msgstr "Stacks, postfix notation and parameter passing"

#. type: table
#: ../doc/gforth.texi:3904
msgid ""
"In procedural programming languages (like C and Pascal), the building-block "
"of programs is the @dfn{function} or @dfn{procedure}. These functions or "
"procedures are called with @dfn{explicit parameters}. For example, in C we "
"might write:"
msgstr ""
"手続き型プログラミング言語(C や Pascal など)では、 プログラムの構成要素は関数"
"(function)やプロシージャ(procedure)です。 これらの関数またはプロシージャは、 "
"明示的なパラメータを使用して呼び出されます。 たとえば、 C では以下のように記"
"述できます:"

#. type: example
#: ../doc/gforth.texi:3907
#, no-wrap
msgid "total = total + new_volume(length,height,depth);\n"
msgstr "total = total + new_volume(length,height,depth);\n"

#. type: table
#: ../doc/gforth.texi:3913
msgid ""
"where new_volume is a function-call to another piece of code, and total, "
"length, height and depth are all variables. length, height and depth are "
"parameters to the function-call."
msgstr ""
"ここで、  new_volume は別のコード片への関数呼び出し(function-call)であり、 "
"total, length, height, depth はすべて変数です。 length, height, depth は関数"
"呼び出しのパラメータです。"

#. type: table
#: ../doc/gforth.texi:3926
msgid ""
"In Forth, the equivalent of the function or procedure is the "
"@dfn{definition} and parameters are implicitly passed between definitions "
"using a shared stack that is visible to the programmer. Although Forth does "
"support variables, the existence of the stack means that they are used far "
"less often than in most other programming languages. When the text "
"interpreter encounters a number, it will place (@dfn{push}) it on the stack. "
"There are several stacks (the actual number is implementation-dependent ...) "
"and the particular stack used for any operation is implied unambiguously by "
"the operation being performed. The stack used for all integer operations is "
"called the @dfn{data stack} and, since this is the stack used most commonly, "
"references to ``the data stack'' are often abbreviated to ``the stack''."
msgstr ""
"Forth では、 関数またはプロシージャに相当するのは「定義」(definition)であ"
"り、 パラメータはプログラマから見える共有スタックを使用して定義間で暗黙的に渡"
"されます。  Forth は変数をサポートしていますが、 スタックの存在は、 他のほと"
"んどのプログラミング言語よりも変数が使用される頻度がはるかに低いことを意味し"
"ます。 テキスト・インタプリタは数値を検出すると、 それをスタックに置きます"
"(プッシュ)。 何種類かのスタックがあり(いくつあるかは実装依存です)、 操作に使"
"用されるスタックは、 実行される操作によって明確に示されます。 すべての整数演"
"算に使用されるスタックは「データ・スタック」と呼ばれ、 これが最も一般的に使用"
"されるスタックであるため、 「データ・スタック」への参照は多くの場合「スタッ"
"ク」と省略されます。"

#. type: table
#: ../doc/gforth.texi:3928
msgid "The stacks have a last-in, first-out (LIFO) organisation. If you type:"
msgstr ""
"スタックには後入れ先出し(last-in, first-out;LIFO)構成が採用されています。 以"
"下のように打ち込むと:"

#. type: example
#: ../doc/gforth.texi:3931
#, no-wrap
msgid "@kbd{1 2 3@key{RET}}  ok\n"
msgstr "@kbd{1 2 3@key{RET}}  ok\n"

#. type: cindex
#: ../doc/gforth.texi:3932
#, no-wrap
msgid "TOS definition"
msgstr "TOS definition"

#. type: table
#: ../doc/gforth.texi:3942
msgid ""
"Then this instructs the text interpreter to placed three numbers on the "
"(data) stack. An analogy for the behaviour of the stack is to take a pack of "
"playing cards and deal out the ace (1), 2 and 3 into a pile on the table. "
"The 3 was the last card onto the pile (``last-in'') and if you take a card "
"off the pile then, unless you're prepared to fiddle a bit, the card that you "
"take off will be the 3 (``first-out''). The number that will be first-out of "
"the stack is called the @dfn{top of stack}, which is often abbreviated to "
"@dfn{TOS}."
msgstr ""
"これはテキスト・インタプリタに 3 つの数値を (データ)スタック に配置するように"
"指示します。 スタックの振る舞いはトランプの扱いに例えられます。  トランプの箱"
"から、 (スートは何でもいいですが、) エース(1)のカードと2のカードと3のカードを"
"テーブルの上の山に配ります。 3のカードは山の最後のカード (last-in)であり、 山"
"からカードを 1 枚取ると、 あなたがシャッフルとか何もいじってない限り、 取り出"
"すカードは 3のカードになります(first-out)。 スタックから最初に取り出されるで"
"あろう(スタック上の)数値はスタック頂上(スタック・トップ;top of stack)と呼ば"
"れ、 多くの場合「TOS」と省略されます。"

#. type: table
#: ../doc/gforth.texi:3950
msgid ""
"To understand how parameters are passed in Forth, consider the behaviour of "
"the definition @code{+} (pronounced ``plus''). You will not be surprised to "
"learn that this definition performs addition. More precisely, it adds two "
"numbers together and produces a result. Where does it get the two numbers "
"from? It takes the top two numbers off the stack. Where does it place the "
"result? On the stack. You can act out the behaviour of @code{+} with your "
"playing cards like this:"
msgstr ""
"Forth でパラメーターがどのように渡されるかを理解するために、 定義 @code{+} "
"(「プラス」と発音します) の振る舞いを見てみましょう。 あなたは、 この定義が加"
"算を実行することを知っても驚かないでしょう。 より正確には、 これは 2 つの数値"
"を加算して結果を生成します。 さて、 その 2 つの数値はどこから取得されるので"
"しょうか？ これはスタック頂上から上位 2 つの数値を取り除きます。 その結果はど"
"こに配置されるのでしょうか？ それはスタックです。 あなたは以下のように、 トラ"
"ンプを使って @code{+} の振る舞いを演ずることができます。"

#. type: itemize
#: ../doc/gforth.texi:3954
msgid "Pick up two cards from the stack on the table"
msgstr "テーブル上の山(the steck)カードを 2 枚取り出します"

#. type: itemize
#: ../doc/gforth.texi:3957
msgid ""
"Stare at them intently and ask yourself ``what @i{is} the sum of these two "
"numbers''"
msgstr ""
"あなたは、 それらをじっと見つめて、 「これら 2 つの数字の合計は何であるか」を"
"自問してください。"

#. type: itemize
#: ../doc/gforth.texi:3959
msgid "Decide that the answer is 5"
msgstr "答えは 5 であると判明しました"

#. type: itemize
#: ../doc/gforth.texi:3961
msgid "Shuffle the two cards back into the pack and find a 5"
msgstr ""
"2 枚のカードをシャッフルしてトランプの箱に戻し、 トランプの箱の中から 5のカー"
"ド を見つけます"

#. type: itemize
#: ../doc/gforth.texi:3963
msgid "Put a 5 on the remaining ace that's on the table."
msgstr "テーブル上にある残りのエース(1)のカードの上に 5のカードを置きます。"

#. type: table
#: ../doc/gforth.texi:3968
msgid ""
"If you don't have a pack of cards handy but you do have Forth running, you "
"can use the definition @code{.s} to show the current state of the stack, "
"without affecting the stack. Type:"
msgstr ""
"トランプの箱はないですが、 Forth の実行中は、 定義 @code{.s} を使用して、 ス"
"タックに影響を与えることなく、 スタックの現在の状態を表示できます。 以下の様"
"に打ち込みます:"

#. type: example
#: ../doc/gforth.texi:3972
#, no-wrap
msgid ""
"@kbd{clearstacks 1 2 3@key{RET}} ok\n"
"@kbd{.s@key{RET}} <3> 1 2 3  ok\n"
msgstr ""
"@kbd{clearstacks 1 2 3@key{RET}} ok\n"
"@kbd{.s@key{RET}} <3> 1 2 3  ok\n"

#. type: table
#: ../doc/gforth.texi:3983
msgid ""
"The text interpreter looks up the word @code{clearstacks} and executes it; "
"it tidies up the stacks (data and floating point stack) and removes any "
"entries that may have been left on them by earlier examples. The text "
"interpreter pushes each of the three numbers in turn onto the stack. "
"Finally, the text interpreter looks up the word @code{.s} and executes it. "
"The effect of executing @code{.s} is to print the ``<3>'' (the total number "
"of items on the stack) followed by a list of all the items on the stack; the "
"item on the far right-hand side is the TOS."
msgstr ""
"テキスト・インタプリタはワード @code{clearstacks} を検索して実行します。 ス"
"タック(データおよび浮動小数点スタック)を整理し、 以前の例の実行によってスタッ"
"クに残された可能性のあるエントリをすべて削除します。 続けてテキスト・インタプ"
"リタは、 3 つの数値をそれぞれ順番にスタックにプッシュします。 最後に、 テキス"
"ト・インタプリタはワード @code{.s} を検索して実行します。 @code{.s} を実行す"
"ると、「<3>」 (スタック上の項目の合計数) に続いて、スタック上のすべての項目の"
"リストが出力されます。 一番右側の項目が TOS です。"

#. type: table
#: ../doc/gforth.texi:3985
msgid "You can now type:"
msgstr "あなたは今や以下のように打ち込めます:"

#. type: example
#: ../doc/gforth.texi:3988
#, no-wrap
msgid "@kbd{+ .s@key{RET}} <2> 1 5  ok\n"
msgstr "@kbd{+ .s@key{RET}} <2> 1 5  ok\n"

#. type: table
#: ../doc/gforth.texi:3993
msgid ""
"which is correct; there are now 2 items on the stack and the result of the "
"addition is 5."
msgstr ""
"現在スタックには 2 つの項目があり、 (そのうちの項目の1つである)加算の結果は "
"5 となっていれば正解です。"

#. type: table
#: ../doc/gforth.texi:4002
msgid ""
"If you're playing with cards, try doing a second addition: pick up the two "
"cards, work out that their sum is 6, shuffle them into the pack, look for a "
"6 and place that on the table. You now have just one item on the stack. What "
"happens if you try to do a third addition? Pick up the first card, pick up "
"the second card -- ah! There is no second card. This is called a @dfn{stack "
"underflow} and consitutes an error. If you try to do the same thing with "
"Forth it often reports an error (probably a Stack Underflow or an Invalid "
"Memory Address error)."
msgstr ""
"あなたが引き続きトランプで遊んでいるなら、 この結果に対して 2 回目の足し算を"
"行ってみましょう。 2 枚のカードを手に取り、 その合計が 6 であることを計算し、"
"手に取った2枚のカードをシャッフルして箱に入れ、 箱から 6のカード を探してテー"
"ブルに置きます。 これで、 スタックにはアイテムが 1 つだけになりました。 あな"
"たが 3 回目の足し算を実行しようとするとどうなるでしょうか？ あなたは、 1枚目"
"のカードを手に取り、 2枚目のカードを手に取ろうとします -- ああ! でも 2枚目の"
"カードはありません。 これは「スタック・アンダーフロー」と呼ばれ、エラーとなり"
"ます。 Forth で同じことを行おうとすると、 多くの場合、 エラーが報告されます"
"(おそらく、 スタック・アンダーフロー(Stack Underflow)エラー、 または、 無効な"
"メモリアクセス(Invalid Memory Address)エラー)。"

#. type: table
#: ../doc/gforth.texi:4011
msgid ""
"The opposite situation to a stack underflow is a @dfn{stack overflow}, which "
"simply accepts that there is a finite amount of storage space reserved for "
"the stack. To stretch the playing card analogy, if you had enough packs of "
"cards and you piled the cards up on the table, you would eventually be "
"unable to add another card; you'd hit the ceiling. Gforth allows you to set "
"the maximum size of the stacks. In general, the only time that you will get "
"a stack overflow is because a definition has a bug in it and is generating "
"data on the stack uncontrollably."
msgstr ""
"スタック・アンダーフローの逆の状況が「スタック・オーバーフロー」です。 これ"
"は、 あなたがたが、 スタック用に予約されている有限量のストレージ・スペースが"
"あることを単に受け入れるだけで済みます。 トランプの例えを拡張すると、 沢山の"
"数のトランプのカードがあり、 それらのカードをテーブルに積み上げた場合、 天井"
"にぶつかってしまい、 最終的には別のカードを追加できなくなります。 Gforth を使"
"用すると、 スタックの最大サイズを設定できます。 一般に、 スタック・オーバーフ"
"ローが発生するのは、 定義にバグがあり、 制御不能にスタック上にデータを生成し"
"ている場合のみです。"

#. type: table
#: ../doc/gforth.texi:4023
msgid ""
"There's one final use for the playing card analogy. If you model your stack "
"using a pack of playing cards, the maximum number of items on your stack "
"will be 52 (I assume you didn't use the Joker). The maximum @i{value} of any "
"item on the stack is 13 (the King). In fact, the only possible numbers are "
"positive integer numbers 1 through 13; you can't have (for example) 0 or 27 "
"or 3.52 or -2. If you change the way you think about some of the cards, you "
"can accommodate different numbers. For example, you could think of the Jack "
"as representing 0, the Queen as representing -1 and the King as representing "
"-2. Your @i{range} remains unchanged (you can still only represent a total "
"of 13 numbers) but the numbers that you can represent are -2 through 10."
msgstr ""
"トランプの例えには、 最後にもう 1 つ適用例があります。 トランプを使用してス"
"タックをモデル化した場合、 スタック上のアイテムの最大数は 52 になります"
"(ジョーカーを使用しなかったと仮定して)。 スタック上のアイテムの最大値は13(キ"
"ング)です。 実際は、 使用できる数値は 1 ～ 13 の正の整数のみ(つまり、 13個の"
"数)です。 (たとえば) 0や27や3.52や-2は使用できません。 そこで、 一部のカード"
"について考え方を変え、 さまざまな数値に対応できるようにします。 たとえば、"
"ジャックは 0 を表し、 クイーンは -1 を表し、 キングは -2 を表すと見なしま"
"す。 すると、 表現できる数値の幅は変更されません(合計 13 個の数値のみを表すこ"
"とができます)が、 -2 から 10 の数値を表す事ができるようになりました。"

#. type: table
#: ../doc/gforth.texi:4030
msgid ""
"In that analogy, the limit was the amount of information that a single stack "
"entry could hold, and Forth has a similar limit. In Forth, the size of a "
"stack entry is called a @dfn{cell}. The actual size of a cell is "
"implementation dependent and affects the maximum value that a stack entry "
"can hold. A Standard Forth provides a cell size of at least 16-bits, and "
"most desktop systems use a cell size of 32-bits."
msgstr ""
"この例えでは、 制限は 1 つのスタック・エントリが保持できる情報の量であり、 "
"Forth にも同様の制限があります。 Forth では、 スタック・エントリのサイズは"
"「セル」(cell)と呼ばれます。 セルの実際のサイズは実装に依存し、 スタック・エ"
"ントリが保持できる最大値に影響します。 標準 Forth は少なくとも 16 ビットのセ"
"ル・サイズを提供し、 ほとんどのデスクトップ・システムは 32 ビットのセル・サイ"
"ズを使用します。"

#. type: table
#: ../doc/gforth.texi:4035
msgid ""
"Forth does not do any type checking for you, so you are free to manipulate "
"and combine stack items in any way you wish. A convenient way of treating "
"stack items is as 2's complement signed integers, and that is what Standard "
"words like @code{+} do. Therefore you can type:"
msgstr ""
"Forth は型チェックを一切行わないため、 スタック項目を自由に操作したり組み合わ"
"せたりできます。 スタック項目を 2 の補数の符号付き整数として扱う便利な方法"
"は、 @code{+} などの標準ワードもやっています。 それゆえ、 以下のように入力で"
"きます:"

#. type: example
#: ../doc/gforth.texi:4038
#, no-wrap
msgid "@kbd{-5 12 + .s@key{RET}} <1> 7  ok\n"
msgstr "@kbd{-5 12 + .s@key{RET}} <1> 7  ok\n"

#. type: table
#: ../doc/gforth.texi:4048
msgid ""
"If you use numbers and definitions like @code{+} in order to turn Forth into "
"a great big pocket calculator, you will realise that it's rather different "
"from a normal calculator. Rather than typing 2 + 3 = you had to type 2 3 + "
"(ignore the fact that you had to use @code{.s} to see the result). The "
"terminology used to describe this difference is to say that your calculator "
"uses @dfn{Infix Notation} (parameters and operators are mixed) whilst Forth "
"uses @dfn{Postfix Notation} (parameters and operators are separate), also "
"called @dfn{Reverse Polish Notation}."
msgstr ""
"あなたが、 Forth を電卓にするために、 数値や @code{+} のような定義を使用する"
"と、 それが通常の電卓とはかなり異なることがわかるでしょう。 あなたは 2 + 3 = "
"と入力するのではなく、 2 3 + と入力する必要があります(ここでは、 結果を確認す"
"るには @code{.s} を使用する必要があるという事実は無視してください)。 この違い"
"を説明するために使用される用語は、 電卓は「中置記法」(Infix Notation;パラメー"
"ターと演算子が混合されている)を使用するのに対し、 Forth は「後置記法」"
"(Postfix Notation;パラメーターと演算子が分かれている)、 またの名を「逆ポーラ"
"ンド記法」(Reverse Polish Notation)と呼ばれるものを使用します。"

#. type: table
#: ../doc/gforth.texi:4051
msgid ""
"Whilst postfix notation might look confusing to begin with, it has several "
"important advantages:"
msgstr ""
"後置記法は最初はわかりにくいように見えるかもしれませんが、 いくつかの重要な利"
"点があります:"

#. type: itemize
#: ../doc/gforth.texi:4055
msgid "it is unambiguous"
msgstr "明白です"

#. type: itemize
#: ../doc/gforth.texi:4057
msgid "it is more concise"
msgstr "より簡潔です"

#. type: itemize
#: ../doc/gforth.texi:4059
msgid "it fits naturally with a stack-based system"
msgstr "スタックベースのシステムに自然に適合します"

#. type: table
#: ../doc/gforth.texi:4062
msgid "To examine these claims in more detail, consider these sums:"
msgstr ""
"これらの主張をさらに詳しく調べるために、 以下の計算について見てみましょう:"

#. type: example
#: ../doc/gforth.texi:4066
#, no-wrap
msgid ""
"6 + 5 * 4 =\n"
"4 * 5 + 6 =\n"
msgstr ""
"6 + 5 * 4 =\n"
"4 * 5 + 6 =\n"

#. type: table
#: ../doc/gforth.texi:4075
msgid ""
"If you're just learning maths or your maths is very rusty, you will probably "
"come up with the answer 44 for the first and 26 for the second. If you are a "
"bit of a whizz at maths you will remember the @i{convention} that "
"multiplication takes precendence over addition, and you'd come up with the "
"answer 26 both times. To explain the answer 26 to someone who got the answer "
"44, you'd probably rewrite the first sum like this:"
msgstr ""
"あなたが、算数を勉強中の場合、 または算数が非常に苦手な場合は、 最初の答えは "
"44、 2 番目の答えは 26 になるでしょう。 あなたが算数に少し詳しい人なら、 乗算"
"は加算よりも優先されるという法則を覚えているでしょう。 そして、 どちらの場合"
"も答えは 26 になるでしょう。 答え 44 だと言った人に、 なぜ答えが 26 かを説明"
"するには、 最初の計算を以下のように書き換えることになるでしょう:"

#. type: example
#: ../doc/gforth.texi:4078
#, no-wrap
msgid "6 + (5 * 4) =\n"
msgstr "6 + (5 * 4) =\n"

#. type: table
#: ../doc/gforth.texi:4082
msgid ""
"If what you really wanted was to perform the addition before the "
"multiplication, you would have to use parentheses to force it."
msgstr ""
"あなたが、 もし、 乗算より優先して加算を実行したい場合は、 かっこを使用して強"
"制的に加算させる必要があります。"

#. type: table
#: ../doc/gforth.texi:4086
msgid ""
"If you did the first two sums on a pocket calculator you would probably get "
"the right answers, unless you were very cautious and entered them using "
"these keystroke sequences:"
msgstr ""
"上記 2 つの計算を電卓で計算する場合、 以下のキーストローク・シーケンスを使用"
"して、 入力ミスしない限り、 おそらく正しい答えが得られるでしょう:"

#. type: example
#: ../doc/gforth.texi:4090
#, no-wrap
msgid ""
"6 + 5 = * 4 =\n"
"4 * 5 = + 6 =\n"
msgstr ""
"6 + 5 = * 4 =\n"
"4 * 5 = + 6 =\n"

#. type: table
#: ../doc/gforth.texi:4096
msgid ""
"Postfix notation is unambiguous because the order that the operators are "
"applied is always explicit; that also means that parentheses are never "
"required. The operators are @i{active} (the act of quoting the operator "
"makes the operation occur) which removes the need for ``=''."
msgstr ""
"Postfix notation is unambiguous because the order that the operators are "
"applied is always explicit; that also means that parentheses are never "
"required後置記法では演算子が適用される順序は常に明示的です。 これは、 括弧が"
"決して必要ないことも意味します。 演算子はアクティブです(演算子を引用する行為"
"によって演算操作が実行されます)。 これにより、「=」が必要なくなります。"

#. type: table
#: ../doc/gforth.texi:4099
msgid ""
"The sum 6 + 5 * 4 can be written (in postfix notation) in two equivalent "
"ways:"
msgstr ""
"計算 6 + 5 * 4 は、 以下の 2 つの同等の方法で(後置表記で)書くことができます:"

#. type: example
#: ../doc/gforth.texi:4104
#, no-wrap
msgid ""
"6 5 4 * +\n"
"or:\n"
"5 4 * 6 +\n"
msgstr ""
"6 5 4 * +\n"
"または:\n"
"5 4 * 6 +\n"

#. type: table
#: ../doc/gforth.texi:4109
msgid ""
"An important thing that you should notice about this notation is that the "
"@i{order} of the numbers does not change; if you want to subtract 2 from 10 "
"you type @code{10 2 -}."
msgstr ""
"この表記法に関して注意すべき重要な点は、 数値の順番は変わらないことです。 10 "
"から 2 を減算する場合は、 @code{10 2 -} と入力します。"

#. type: table
#: ../doc/gforth.texi:4117
msgid ""
"The reason that Forth uses postfix notation is very simple to explain: it "
"makes the implementation extremely simple, and it follows naturally from "
"using the stack as a mechanism for passing parameters. Another way of "
"thinking about this is to realise that all Forth definitions are @i{active}; "
"they execute as they are encountered by the text interpreter. The result of "
"this is that the syntax of Forth is trivially simple."
msgstr ""
"Forth が後置表記を使用する理由は非常に簡単に説明できます。 これにより実装が非"
"常に単純になり、 パラメータを渡すためのメカニズムとしてスタックを使用すること"
"が自然な流れになります。 これについての別の考え方としては、 すべての Forth 定"
"義がアクティブであると認識することです。 これらは、 テキスト・インタプリタに"
"よって検出されると実行されます。 この結果、 Forth の構文は何の努力も必要とせ"
"ずシンプルになります。"

#. type: node
#: ../doc/gforth.texi:4121 ../doc/gforth.texi:4209 ../doc/gforth.texi:4210
#: ../doc/gforth.texi:4459
#, no-wrap
msgid "How does that work?"
msgstr "How does that work?"

#. type: section
#: ../doc/gforth.texi:4122
#, no-wrap
msgid "Your first Forth definition"
msgstr "Your first Forth definition"

#. type: cindex
#: ../doc/gforth.texi:4123
#, no-wrap
msgid "first definition"
msgstr "first definition"

#. type: table
#: ../doc/gforth.texi:4132
msgid ""
"Until now, the examples we've seen have been trivial; we've just been using "
"Forth as a bigger-than-pocket calculator. Also, each calculation we've shown "
"has been a ``one-off'' -- to repeat it we'd need to type it in "
"again@footnote{That's not quite true. If you press the up-arrow key on your "
"keyboard you should be able to scroll back to any earlier command, edit it "
"and re-enter it.} In this section we'll see how to add new words to Forth's "
"vocabulary."
msgstr ""
"これまで私たちが見てきた例はこまごまとしたものでした。 私たちは Forth を大き"
"めの電卓として使用してきました。 また、 これまでに示した各計算は「1 回限り」"
"のものです -- それを繰り返すには、もう一度入力する必要があります@footnote{そ"
"れは完全には真実ではありません。 キーボードの上矢印キーを押すと、 以前のコマ"
"ンドにスクロールして戻り、 編集して再入力できます。}。 このセクションでは、 "
"Forth の語彙(vocabulary)に新しいワードを追加する方法を説明します。"

#. type: table
#: ../doc/gforth.texi:4137
msgid ""
"The easiest way to create a new word is to use a @dfn{colon definition}. "
"We'll define a few and try them out before worrying too much about how they "
"work. Try typing in these examples; be careful to copy the spaces accurately:"
msgstr ""
"新しいワードを作成する最も簡単な方法は、「コロン定義」を使用することです。 そ"
"れらがどのように機能するかについて思い悩む前に、 いくつか定義して試してみま"
"しょう。 以下の例を入力してみてください。 スペースを正確に反映するように注意"
"してください:"

#. type: example
#: ../doc/gforth.texi:4142
#, no-wrap
msgid ""
": add-two 2 + . ;\n"
": greet .\" Hello and welcome\" ;\n"
": demo 5 add-two ;\n"
msgstr ""
": add-two 2 + . ;\n"
": greet .\" Hello and welcome\" ;\n"
": demo 5 add-two ;\n"

#. type: table
#: ../doc/gforth.texi:4146
msgid "Now try them out:"
msgstr "この例を打ち込んだら、 すぐ試してみましょう:"

#. type: example
#: ../doc/gforth.texi:4153
#, no-wrap
msgid ""
"@kbd{greet@key{RET}} Hello and welcome  ok\n"
"@kbd{greet greet@key{RET}} Hello and welcomeHello and welcome  ok\n"
"@kbd{4 add-two@key{RET}} 6  ok\n"
"@kbd{demo@key{RET}} 7  ok\n"
"@kbd{9 greet demo add-two@key{RET}} Hello and welcome7 11  ok\n"
msgstr ""
"@kbd{greet@key{RET}} Hello and welcome  ok\n"
"@kbd{greet greet@key{RET}} Hello and welcomeHello and welcome  ok\n"
"@kbd{4 add-two@key{RET}} 6  ok\n"
"@kbd{demo@key{RET}} 7  ok\n"
"@kbd{9 greet demo add-two@key{RET}} Hello and welcome7 11  ok\n"

#. type: table
#: ../doc/gforth.texi:4159
msgid ""
"The first new thing that we've introduced here is the pair of words @code{:} "
"and @code{;}. These are used to start and terminate a new definition, "
"respectively. The first word after the @code{:} is the name for the new "
"definition."
msgstr ""
"ここで導入した最初の新しいモノは、 @code{:} と @code{;} というワードのペアで"
"す。 これらは、それぞれ新しい定義を開始および終了するために使用されます。  "
"@code{:} の後の最初の単語は、 新しい定義の名前です。"

#. type: table
#: ../doc/gforth.texi:4164
msgid ""
"As you can see from the examples, a definition is built up of words that "
"have already been defined; Forth makes no distinction between definitions "
"that existed when you started the system up, and those that you define "
"yourself."
msgstr ""
"例からわかるように、 定義はすでに定義されているワードから構成されます。 "
"Forth では、 システムの起動時に存在した定義と、 ユーザーが自分で定義した定義"
"とを区別しません。"

# dupの読み「デュープ」はFORTH入門による
#. type: table
#: ../doc/gforth.texi:4177
msgid ""
"The examples also introduce the words @code{.} (dot), @code{.\"} (dot-quote) "
"and @code{dup} (dewp). Dot takes the value from the top of the stack and "
"displays it. It's like @code{.s} except that it only displays the top item "
"of the stack and it is destructive; after it has executed, the number is no "
"longer on the stack. There is always one space printed after the number, and "
"no spaces before it. Dot-quote defines a string (a sequence of characters) "
"that will be printed when the word is executed. The string can contain any "
"printable characters except @code{\"}. A @code{\"} has a special function; "
"it is not a Forth word but it acts as a delimiter (the way that delimiters "
"work is described in the next section). Finally, @code{dup} duplicates the "
"value at the top of the stack. Try typing @code{5 dup .s} to see what it "
"does."
msgstr ""
"この例では、 @code{.} (ドット) や、 @code{.\"} (ドット・クォート)や、 "
"@code{dup} (デュープ) というワードも紹介しています。 ドットはスタック頂上から"
"数詞を取得して表示します。 これは @code{.s} に似ていますが、 スタック頂上の項"
"目のみを表示する点と破壊的である点が異なります。 実行後、スタック上にその数値"
"は最早ありません。 数値の前はスペース無しで、 後ろには常に 1 つのスペースが表"
"示されます。 ドット・クォートは、 ワードの実行時に出力される文字列(string)を"
"定義します。 文字列には、 @code{\"} を除く任意の印刷可能な文字を含めることが"
"できます。 @code{\"} には特別な機能があります。 これは Forth ワードではありま"
"せんが、 区切り文字として機能します(区切り文字の仕組みについては次のセクショ"
"ンで説明します)。 最後に、 @code{dup} はスタック頂上の値を複製します。 "
"@code{5 dup .s} と入力して、 @code{dup} がやることを確認してください。"

#. type: table
#: ../doc/gforth.texi:4182
msgid ""
"We already know that the text interpreter searches through the dictionary to "
"locate names. If you've followed the examples earlier, you will already have "
"a definition called @code{add-two}. Lets try modifying it by typing in a new "
"definition:"
msgstr ""
"あなたは、 既に、 テキスト・インタプリタが名前を見つけるためにディクショナリ"
"を検索することを知っています。 あなたが上記の例の通りにした場合、 @code{add-"
"two} という定義がすでにあるはずです。 それでは、 この定義に対して、 更に新し"
"い定義を入力して変更してみるとしましょう:"

#. type: example
#: ../doc/gforth.texi:4185
#, no-wrap
msgid "@kbd{: add-two dup . .\" + 2 = \" 2 + . ;@key{RET}} redefined add-two  ok\n"
msgstr "@kbd{: add-two dup . .\" + 2 = \" 2 + . ;@key{RET}} redefined add-two  ok\n"

#. type: table
#: ../doc/gforth.texi:4190
msgid ""
"Forth recognised that we were defining a word that already exists, and "
"printed a message to warn us of that fact. Let's try out the new definition:"
msgstr ""
"Forth は、私たちがすでに存在するワードを定義しようとしていることを認識し、 そ"
"れを警告するメッセージを出力しました。 さて、 それでは、 新しい定義を試してみ"
"ましょう:"

#. type: example
#: ../doc/gforth.texi:4193
#, no-wrap
msgid "@kbd{9 add-two@key{RET}} 9 + 2 = 11  ok\n"
msgstr "@kbd{9 add-two@key{RET}} 9 + 2 = 11  ok\n"

#. type: table
#: ../doc/gforth.texi:4204
msgid ""
"All that we've actually done here, though, is to create a new definition, "
"with a particular name. The fact that there was already a definition with "
"the same name did not make any difference to the way that the new definition "
"was created (except that Forth printed a warning message). The old "
"definition of add-two still exists (try @code{demo} again to see that this "
"is true). Any new definition will use the new definition of @code{add-two}, "
"but old definitions continue to use the version that already existed at the "
"time that they were @code{compiled}."
msgstr ""
"ただし、 ここで実際に行ったことは、 特定の名前を付けて新しい定義を作成するこ"
"とだけです。 同一の名前の定義がすでに存在するという事実は、 (Forth が警告メッ"
"セージを出力することを除いて、)新しい定義の作成方法に何の違いもありません。 "
"add-two の古い定義はいまだ存在します(これが正しいかどうかを確認するには、 "
"@code{demo} をもう一度試してください)。 @code{add-two} の新しい定義以降に定義"
"するワードは @code{add-two} の新しい定義を利用しますが、 @code{demo} の定義"
"は、 古い定義は @code{demo} をコンパイルする時点で既に存在していた @code{add-"
"two} の古い定義のバージョンを引き続き使用します。"

#. type: table
#: ../doc/gforth.texi:4207
msgid ""
"Before you go on to the next section, try defining and redefining some words "
"of your own."
msgstr ""
"次のセクションに進む前に、 あなた自身のワードをいくつか定義したり再定義したり"
"してみましょう。"

#. type: node
#: ../doc/gforth.texi:4209 ../doc/gforth.texi:4459 ../doc/gforth.texi:4460
#: ../doc/gforth.texi:4496
#, no-wrap
msgid "Forth is written in Forth"
msgstr "Forth is written in Forth"

#. type: cindex
#: ../doc/gforth.texi:4211 ../doc/gforth.texi:4283 ../doc/gforth.texi:14234
#, no-wrap
msgid "parsing words"
msgstr "parsing words"

#. type: table
#: ../doc/gforth.texi:4259
msgid ""
"Now we're going to take another look at the definition of @code{add-two} "
"from the previous section. From our knowledge of the way that the text "
"interpreter works, we would have expected this result when we tried to "
"define @code{add-two}:"
msgstr "ここで、 前のセクションの @code{add-two} の定義をもう一度見てみましょう。 テキスト・インタプリタの動作方法に関する知識から、 @code{add-two} を定義しようとしたとき、 私達は以下の結果を予期したかもしれません:"

#. type: example
#: ../doc/gforth.texi:4264
#, no-wrap
msgid ""
"@kbd{: add-two 2 + . ;@key{RET}}\n"
"*the terminal*:4: Undefined word\n"
": >>>add-two<<< 2 + . ;\n"
msgstr ""
"@kbd{: add-two 2 + . ;@key{RET}}\n"
"*the terminal*:4: Undefined word\n"
": >>>add-two<<< 2 + . ;\n"

#. type: cindex
#: ../doc/gforth.texi:4266
#, no-wrap
msgid "modifying >IN"
msgstr "modifying >IN"

#. type: table
#: ../doc/gforth.texi:4282
msgid ""
"The reason that this didn't happen is bound up in the way that @code{:} "
"works. The word @code{:} does two special things. The first special thing "
"that it does is to prevent the text interpreter from ever seeing the "
"characters @code{add-two}. The text interpreter uses a variable called "
"@code{>IN} (pronounced ``to-in'') to keep track of where it is in the input "
"line. When it encounters the word @code{:} it behaves in exactly the same "
"way as it does for any other word; it looks it up in the name dictionary, "
"finds its xt and executes it. When @code{:} executes, it looks at the input "
"buffer, finds the word @code{add-two} and advances the value of @code{>IN} "
"to point past it. It then does some other stuff associated with creating the "
"new definition (including creating an entry for @code{add-two} in the name "
"dictionary). When the execution of @code{:} completes, control returns to "
"the text interpreter, which is oblivious to the fact that it has been "
"tricked into ignoring part of the input line."
msgstr "しかし、 これが起こらなかった理由は、 @code{:} の動作方法に関係しています。 @code{:} というワードは 2 つの特別な働きをします。 1つ目の特別な機能は、 テキスト・インタプリタが @code{add-two} という文字を認識できないようにすることです。 テキスト・インタプリタは、 @code{>IN} (to-in;トゥーイン)という変数を使用して、 入力行のどこを追跡するかを保持し、 @code{:} というワードに遭遇すると、 他のワードの場合とまったく同じように動作します。 名前ディクショナリでそれを検索し、 その xt を見つけて実行します。  実行される @code{:} は、 入力バッファーを調べてワード @code{add-two} を見つけ、 @code{>IN} の値をその後ろを指すように進めておきます。 次に、 新しい定義の作成に関連するその他の処理を実行します(名前ディクショナリに @code{add-two} のエントリを作成する等)。 @code{:} の実行が完了すると、 制御はテキスト・インタプリタに戻ります。 テキスト・インタプリタは、 このトリックにより入力行の一部をスキップしていることに気づきません。"

#. type: table
#: ../doc/gforth.texi:4287
msgid ""
"Words like @code{:} -- words that advance the value of @code{>IN} and so "
"prevent the text interpreter from acting on the whole of the input line -- "
"are called @dfn{parsing words}."
msgstr "@code{:} のようなワード(@code{>IN} の値を進めて、 テキスト・インタプリタが入力行全体に作用するのを妨げるワード)は、 「構文解析ワード」(parsing words)と呼ばれます。"

#. type: cindex
#: ../doc/gforth.texi:4288
#, no-wrap
msgid "@code{state} - effect on the text interpreter"
msgstr "@code{state} - effect on the text interpreter"

#. type: cindex
#: ../doc/gforth.texi:4289
#, no-wrap
msgid "text interpreter - effect of state"
msgstr "text interpreter - effect of state"

#. type: table
#: ../doc/gforth.texi:4296
msgid ""
"The second special thing that @code{:} does is change the value of a "
"variable called @code{state}, which affects the way that the text "
"interpreter behaves. When Gforth starts up, @code{state} has the value 0, "
"and the text interpreter is said to be @dfn{interpreting}. During a colon "
"definition (started with @code{:}), @code{state} is set to -1 and the text "
"interpreter is said to be @dfn{compiling}."
msgstr "@code{:} が行う 2 つ目の特別な処理は、 @code{state} と呼ばれる変数の値を変更することです。 これは、 テキスト・インタプリタの振る舞いに影響します。 Gforth が起動するとき、 @code{state} の値は 0 であり、 テキスト・インタプリタはインタプリタ中(interpreting)であると言われます。 (@code{:} で始まる)コロン定義中 、 @code{state} は -1 に設定され、テキスト・インタプリタはコンパイル中(compiling)と言われます。"

#. type: table
#: ../doc/gforth.texi:4305
msgid ""
"In this example, the text interpreter is compiling when it processes the "
"string ``@code{2 + . ;}''. It still breaks the string down into character "
"sequences in the same way. However, instead of pushing the number @code{2} "
"onto the stack, it lays down (@dfn{compiles}) some magic into the definition "
"of @code{add-two} that will make the number @code{2} get pushed onto the "
"stack when @code{add-two} is @dfn{executed}. Similarly, the behaviours of "
"@code{+} and @code{.} are also compiled into the definition."
msgstr "この例では、 テキスト・インタプリタは文字列 ``@code{2 + . ;}''。引き続き同じ方法で文字列を文字シーケンスに分割します。ただし、数値 @code{2} をスタックにプッシュする代わりに、 数値 @code{2} を取得する魔法を @code{add-two} の定義に組み込み(コンパイル)、 @code{add-two} が「実行」されたときスタックにプッシュされます。 同様に、 @code{+} と @code{.} の振る舞いも定義にコンパイルされます。"

#. type: table
#: ../doc/gforth.texi:4312
msgid ""
"Certain kinds of words do not get compiled. These so-called @dfn{immediate "
"words} get executed (performed @i{now}) regardless of whether the text "
"interpreter is interpreting or compiling. The word @code{;} is an immediate "
"word. Rather than being compiled into the definition, it executes. Its "
"effect is to terminate the current definition, which includes changing the "
"value of @code{state} back to 0."
msgstr "特定の種類のワードはコンパイルされません。 これらのいわゆる「即実行ワード」(immediate word)は、 テキスト・インタプリタがインタプリタ・モードであるかコンパイル・モードかに関係なく、 実行されます(今、 直ちに実行されます)。 @code{;} というワードは即実行ワードです。 定義にコンパイルされるのではなく、 実行されます。 その効果は、 @code{state} の値を 0 に戻すことを含む、 現在の定義を終了することです。"

#. type: table
#: ../doc/gforth.texi:4316
msgid ""
"When you execute @code{add-two}, it has a @dfn{run-time effect} that is "
"exactly the same as if you had typed @code{2 + . @key{RET}} outside of a "
"definition."
msgstr "あなたが @code{add-two} を実行すると、 その定義の外で @code{2 + . @key{RET}} と入力した場合とまったく同一の「実行時効果」(run-time effect) が生じます。"

#. type: table
#: ../doc/gforth.texi:4319
msgid ""
"In Forth, every word or number can be described in terms of two properties:"
msgstr "Forth では、 すべてのワードまたは数値は以下の 2 つの性質を持ちます:"

#. type: cindex
#: ../doc/gforth.texi:4322 ../doc/gforth.texi:13074
#, no-wrap
msgid "interpretation semantics"
msgstr "interpretation semantics"

#. type: itemize
#: ../doc/gforth.texi:4327
msgid ""
"Its @dfn{interpretation semantics} describe how it will behave when the text "
"interpreter encounters it in @dfn{interpret} state. The interpretation "
"semantics of a word are represented by its @dfn{execution token} "
"(@pxref{Execution token})."
msgstr "その 実行時コード(interpretation semantics)は、 テキスト・インタプリタが実行時(interpret 状態)どのように動作するかを記述します。 ワードの実行時コードは、 その「実行トークン」(execution token)(@pxref{Execution token})によって表されます。"

#. type: cindex
#: ../doc/gforth.texi:4328 ../doc/gforth.texi:13082
#, no-wrap
msgid "compilation semantics"
msgstr "compilation semantics"

#. type: itemize
#: ../doc/gforth.texi:4333
msgid ""
"Its @dfn{compilation semantics} describe how it will behave when the text "
"interpreter encounters it in @dfn{compile} state. The compilation semantics "
"of a word are represented by its @dfn{compilation token} (@pxref{Compilation "
"token})."
msgstr "その コンパイル時コード(compilation semantics)は、 テキスト・インタプリタがコンパイル時(compile状態)に、 どのように動作するかを記述します。 ワードのコンパイル時コードは、 その「コンパイル・トークン」(@pxref{Compilation token})によって表されます。"

#. type: table
#: ../doc/gforth.texi:4337
msgid "Numbers are always treated in a fixed way:"
msgstr "数値は常に決まった方法で処理されます:"

#. type: itemize
#: ../doc/gforth.texi:4342
msgid ""
"When the number is @dfn{interpreted}, its behaviour is to push the number "
"onto the stack."
msgstr "その数値が解釈(interpret)される場合、 その振る舞いは、 その数値をスタックにプッシュすることです。"

#. type: itemize
#: ../doc/gforth.texi:4348
msgid ""
"When the number is @dfn{compiled}, a piece of code is appended to the "
"current definition that pushes the number when it runs. (In other words, the "
"compilation semantics of a number are to postpone its interpretation "
"semantics until the run-time of the definition that it is being compiled "
"into.)"
msgstr "その数値がコンパイルされる場合、 実行時にその数値をプッシュするコードが現在の定義に追加されます。 (言い換えれば、 数値のコンパイル時コードは、 コンパイルされる定義の実行時まで、 その数値の実行時コードの実行を延期します。)"

#. type: table
#: ../doc/gforth.texi:4352
msgid ""
"Words don't always behave in such a regular way, but most have @i{default "
"semantics} which means that they behave like this:"
msgstr "ワードは常にこのように通常の振る舞いをするとは限りませんが、 ほとんどのワードには実行時とコンパイル時のデフォルトの振る舞い(default semantics)があり、 以下のように振る舞うことを意味します。"

#. type: itemize
#: ../doc/gforth.texi:4356 ../doc/gforth.texi:4376
msgid ""
"The @dfn{interpretation semantics} of the word are to do something useful."
msgstr "ワードの実行時コード(compilation semantics)は、 何かしら役に立つことを行うことです。"

#. type: itemize
#: ../doc/gforth.texi:4360
msgid ""
"The @dfn{compilation semantics} of the word are to append its "
"@dfn{interpretation semantics} to the current definition (so that its run-"
"time behaviour is to do something useful)."
msgstr "ワードのコンパイル時コード(compilation semantics)は、 それの実行時コード(interpretation semantics)を現在の定義に追加します(よって、 それは実行時に何かしら役に立つことを行います)。"

#. type: cindex
#: ../doc/gforth.texi:4362 ../doc/gforth.texi:13123
#, no-wrap
msgid "immediate words"
msgstr "immediate words"

#. type: table
#: ../doc/gforth.texi:4368
msgid ""
"The actual behaviour of any particular word can be controlled by using the "
"words @code{immediate} and @code{compile-only} when the word is defined. "
"These words set flags in the name dictionary entry of the most recently "
"defined word, and these flags are retrieved by the text interpreter when it "
"finds the word in the name dictionary."
msgstr "特定のワードの実際の、 実行時とコンパイル時の振る舞いは、 ワードの定義時に @code{immediate} や @code{compile-only} というワードを使用することで制御できます。 これらのワードは、 最後に定義されたワードの名前ディクショナリ・エントリにフラグを設定します。 これらのフラグは、 名前ディクショナリでワードが見つかったときにテキスト・インタプリタによって取得されます。"

#. type: table
#: ../doc/gforth.texi:4372
msgid ""
"A word that is marked as @dfn{immediate} has compilation semantics that are "
"identical to its interpretation semantics. In other words, it behaves like "
"this:"
msgstr "@dfn{immediate} としてマークされたワードは、 その実行時コード(interpretation semantics)と同じコンパイル時コード(compilation semantics)を持ちます。 つまり、 以下のように振る舞います:"

#. type: itemize
#: ../doc/gforth.texi:4379
msgid ""
"The @dfn{compilation semantics} of the word are to do something useful (and "
"actually the same thing); i.e., it is executed during compilation."
msgstr "このワードのコンパイル時コード(compilation semantics)は、 何かしら役に立つことを行うことです(実際には実行時コードと同一のことを行うことです)。 つまり、 コンパイル時に実行(実行時コードと同一のコードを実行)を行います。"

#. type: table
#: ../doc/gforth.texi:4385
msgid ""
"Marking a word as @dfn{compile-only} means that the text interpreter "
"produces a warning when encountering this word in interpretation state; "
"ticking the word (with @code{'} or @code{[']} also produces a warning."
msgstr "ワードを @dfn{compile-only} としてマークすると、 解釈状態(interpretation state)でこのワードを検出したときにテキスト・インタプリタが警告を生成することを意味します。 (@code{'} または @code{[']} を使用して) ワードをティックすると、 警告が生成されます。"

#. type: table
#: ../doc/gforth.texi:4395
msgid ""
"It is never necessary to use @code{compile-only} (and it is not even part of "
"Standard Forth, though it is provided by many implementations)  but it is "
"good etiquette to apply it to a word that will not behave correctly (and "
"might have unexpected side-effects) in interpret state. For example, it is "
"only legal to use the conditional word @code{IF} within a definition. If you "
"forget this and try to use it elsewhere, the fact that (in Gforth) it is "
"marked as @code{compile-only} allows the text interpreter to generate a "
"helpful warning."
msgstr "@code{compile-only} を使用する必要はありません(多くの実装によって提供されてはいますが、 標準 Forth の一部でもありません)が、 解釈状態(interpret state)で正しく振る舞わないワードに @code{compile-only} を適用するのは良いエチケットです(そして予期しない副作用が発生する可能性があります)。 たとえば、 定義内で条件ワード @code{IF} を使用することのみが正当です。 これを忘れて別の場所で使用しようとすると、 (Gforth では) @code{compile-only} としてマークされているため、 テキスト・インタプリタが有用な警告を生成できます。"

#. type: table
#: ../doc/gforth.texi:4398
msgid ""
"This example shows the difference between an immediate and a non-immediate "
"word:"
msgstr "以下の例は、 即実行ワードと非即実行ワードの違いを示しています:"

# エラー：show-state で . を忘れてスタックに残してしまってたので。
# : word2 show-state-now ; 
# *the terminal*:13:24: error: Control structure mismatch
# : word2 show-state-now >>>;<<<
# Backtrace:
# /usr/local/share/gforth/0.7.9_20240418/kernel/cond.fs:171:26:  0 $7F7F03729398 thr
# ow 
# /usr/local/share/gforth/0.7.9_20240418/glocals.fs:619:5:  1 $7F7F0373B858 ?struc 
# /usr/local/share/gforth/0.7.9_20240418/kernel/comp.fs:843:5:  2 $7F7F0371F2B8 ;-ho
# ok
#
# : show-state state @ . ;  ok           
# : show-state-now show-state ; immediate  ok
# : word1 show-state ;  ok               
# : word2 show-state-now  ; -1  ok       
# word1 0  ok
# word2  ok
# see word2 
# : word2  ; ok
# see word1 
# : word1  
#   show-state ; ok
#. type: example
#: ../doc/gforth.texi:4404
#, no-wrap
msgid ""
": show-state state @@ . ;\n"
": show-state-now show-state ; immediate\n"
": word1 show-state ;\n"
": word2 show-state-now ;\n"
msgstr ""
": show-state state @@ . ;\n"
": show-state-now show-state ; immediate\n"
": word1 show-state ;\n"
": word2 show-state-now ;\n"

#. type: table
#: ../doc/gforth.texi:4412
msgid ""
"The word @code{immediate} after the definition of @code{show-state-now} "
"makes that word an immediate word. These definitions introduce a new word: "
"@code{@@} (pronounced ``fetch''). This word fetches the value of a variable, "
"and leaves it on the stack. Therefore, the behaviour of @code{show-state} is "
"to print a number that represents the current value of @code{state}."
msgstr "@code{show-state-now} の定義の後にあるワード @code{immediate} は、そのワードを即実行ワードにします。 これらの定義では、 @code{@@}(「フェッチ」と発音します) という新しいワードが導入されています。 このワードは変数の値を取り出し(フェッチし)、 それをスタックに残します。 したがって、 @code{show-state} の振る舞いは、 @code{state} の現在の値を表す数値を出力することです。"

#. type: table
#: ../doc/gforth.texi:4421
msgid ""
"When you execute @code{word1}, it prints the number 0, indicating that the "
"system is interpreting. When the text interpreter compiled the definition of "
"@code{word1}, it encountered @code{show-state} whose compilation semantics "
"are to append its interpretation semantics to the current definition. When "
"you execute @code{word1}, it performs the interpretation semantics of "
"@code{show-state}.  At the time that @code{word1} (and therefore @code{show-"
"state}) is executed, the system is interpreting."
msgstr "@code{word1} を実行すると、 システムが解釈中(interpreting)であることを示す数値 0 が出力されます。 テキスト・インタプリタが @code{word1} の定義をコンパイルしたときに、 コンパイル時コードが現在の定義に実行時コードを追加する @code{show-state} に遭遇しました。 @code{word1} を実行すると、 @code{show-state} の実行時コードが実行されます。  @code{word1} (つまり @code{show-state}) が実行される時点で、システムは解釈中(interpreting)です。"

#. type: table
#: ../doc/gforth.texi:4434
msgid ""
"When you pressed @key{RET} after entering the definition of @code{word2}, "
"you should have seen the number -1 printed, followed by ``@code{ ok}''. When "
"the text interpreter compiled the definition of @code{word2}, it encountered "
"@code{show-state-now}, an immediate word, whose compilation semantics are "
"therefore to perform its interpretation semantics. It is executed straight "
"away (even before the text interpreter has moved on to process another group "
"of characters; the @code{;} in this example). The effect of executing it is "
"to display the value of @code{state} @i{at the time that the definition of} "
"@code{word2} @i{is being defined}. Printing -1 demonstrates that the system "
"is compiling at this time. If you execute @code{word2} it does nothing at "
"all."
msgstr "@code{word2} の定義を入力した後に @key{RET} を押すと、 数値 -1 が出力され、 その後に @code{ ok} が表示されるはずです。 テキスト・インタプリタが @code{word2} の定義をコンパイルすると、 即実行ワードである @code{show-state-now} が検出されたため、 そのコンパイル時コードは実行時コードを実行します。 これは直ちにに実行されます(テキスト・インタプリタが次の文字グループ(この例では @code{;})の処理に移る前に)。 これを実行すると、 @code{word2} の定義途中の @code{state} の値が表示されます。 -1 を出力するので、 システムがその時点でコンパイル時であることがわかります。 もし あなたが @code{word2} を「実行」しても何も行いません。"

#. type: cindex
#: ../doc/gforth.texi:4435
#, no-wrap
msgid "@code{.\"}, how it works"
msgstr "@code{.\"}, how it works"

#. type: table
#: ../doc/gforth.texi:4456
msgid ""
"Before leaving the subject of immediate words, consider the behaviour of "
"@code{.\"} in the definition of @code{greet}, in the previous section. This "
"word is both a parsing word and an immediate word. Notice that there is a "
"space between @code{.\"} and the start of the text @code{Hello and welcome}, "
"but that there is no space between the last letter of @code{welcome} and the "
"@code{\"} character. The reason for this is that @code{.\"} is a Forth word; "
"it must have a space after it so that the text interpreter can identify it. "
"The @code{\"} is not a Forth word; it is a @dfn{delimiter}. The examples "
"earlier show that, when the string is displayed, there is neither a space "
"before the @code{H} nor after the @code{e}. Since @code{.\"} is an immediate "
"word, it executes at the time that @code{greet} is defined. When it "
"executes, its behaviour is to search forward in the input line looking for "
"the delimiter. When it finds the delimiter, it updates @code{>IN} to point "
"past the delimiter. It also compiles some magic code into the definition of "
"@code{greet}; the xt of a run-time routine that prints a text string. It "
"compiles the string @code{Hello and welcome} into memory so that it is "
"available to be printed later. When the text interpreter gains control, the "
"next word it finds in the input stream is @code{;} and so it terminates the "
"definition of @code{greet}."
msgstr "即実行ワードの話題を離れる前に、 前のセクションの @code{greet} の定義における @code{.\"} の振る舞いについて検討してみましょう。 このワードは構文解析ワード(parsing word)でもあり、 かつ、 即実行ワードでもあります。  @code{.\"} とそのテキストの先頭 @code{Hello and welcome} の間にはスペースがありますが、 @code{welcome} の最後の文字と @code{\"} 文字の間にはスペースがありません。 これは、@code{.\"} が Forth ワードであるということです。 テキスト・インタプリタがその Forth ワード @code{.\"} を識別できるように、 @code{.\"} の後ろにスペースが必要です。 @code{\"} は Forth ワードではなく、 区切り文字(delimiter)です。 先の例では、 文字列が表示されるときに、 @code{H} の前にも @code{e} の後ろにもスペースがないことを示しています。 @code{.\"} は即実行ワードなので、 @code{greet} の定義中に実行されます。 実行されると、 入力行内を前方に走査して区切り文字を探します。 区切り文字が見つかると、 区切り文字の後ろを指すように @code{>IN} を更新します。 また、 いくつかのマジック・コード、 つまりテキスト文字列を出力する実行時コード xtを @code{greet} の定義にコンパイルします。 文字列 @code{Hello and welcome} をメモリにコンパイルして、 後で出力できるようにします。 その後、 テキスト・インタプリタが制御を取得すると、 入力ストリーム内で次に検出されるワードは @code{;} であるため、 @code{greet} の定義を終了します。"

#. type: node
#: ../doc/gforth.texi:4459 ../doc/gforth.texi:4496 ../doc/gforth.texi:4497
#: ../doc/gforth.texi:4544
#, no-wrap
msgid "Review - elements of a Forth system"
msgstr "Review - elements of a Forth system"

#. type: cindex
#: ../doc/gforth.texi:4461
#, no-wrap
msgid "structure of Forth programs"
msgstr "structure of Forth programs"

#. type: table
#: ../doc/gforth.texi:4468
msgid ""
"When you start up a Forth compiler, a large number of definitions already "
"exist. In Forth, you develop a new application using bottom-up programming "
"techniques to create new definitions that are defined in terms of existing "
"definitions. As you create each definition you can test and debug it "
"interactively."
msgstr "あなたが Forth コンパイラを起動すると、 すでに多数の定義が存在しています。 Forth では、 ボトムアップ・プログラミング手法を使って新しいアプリケーションを開発し、 既存の定義に基づいて定義される新しい定義を作成します。 作成した各定義は、 対話的にテストおよびデバッグできます。"

#. type: table
#: ../doc/gforth.texi:4477
msgid ""
"If you have tried out the examples in this section, you will probably have "
"typed them in by hand; when you leave Gforth, your definitions will be lost. "
"You can avoid this by using a text editor to enter Forth source code into a "
"file, and then loading code from the file using @code{include} (@pxref{Forth "
"source files}). A Forth source file is processed by the text interpreter, "
"just as though you had typed it in by hand@footnote{Actually, there are some "
"subtle differences -- see @ref{The Text Interpreter}.}."
msgstr "この章の例を試したことがあるなら、 あなたは、それらをおそらく手動で入力したことがあるでしょう。 Gforth を終了すると、 あなたが定義したモノは失われてしまいます。 これを回避するには、 テキスト・エディタを使用して Forth ソース・コードをファイルに入力し、 @code{include} を使用してファイルからコードをロードします(@pxref{Forth source files})。 Forth のソース・ファイルは、 あたかも手入力したかのように、 テキスト・インタプリタによって処理されます@footnote{実際には、 いくつか微妙な違いがあります -- @ref{The Text Interpreter} }。"

#. type: table
#: ../doc/gforth.texi:4480
msgid ""
"Gforth also supports the traditional Forth alternative to using text files "
"for program entry (@pxref{Blocks})."
msgstr "Gforth は、 プログラム入力 にテキスト・ファイルを使用する、 伝統的な Forth の代替手段もサポートしています(@pxref{Blocks})。"

#. type: table
#: ../doc/gforth.texi:4486
msgid ""
"In common with many, if not most, Forth compilers, most of Gforth is "
"actually written in Forth. All of the @file{.fs} files in the installation "
"directory@footnote{For example, @file{/usr/local/share/gforth...}} are Forth "
"source files, which you can study to see examples of Forth programming."
msgstr "ほとんどというほどではないにしても、 多くの Forth コンパイラと共通して、 Gforth のほとんどは実際には Forth で書かれています。 インストール・ディレクトリ@footnote{For example, @file{/usr/local/share/gforth...}}内のすべての @file{.fs} ファイルは Forth ソース・ファイルであり、 あなたは それらを Forth プログラミングの例として拝んで学ぶことができます。"

#. type: table
#: ../doc/gforth.texi:4493
msgid ""
"Gforth maintains a history file that records every line that you type to the "
"text interpreter. This file is preserved between sessions, and is used to "
"provide a command-line recall facility. If you enter long definitions by "
"hand, you can use a text editor to paste them out of the history file into a "
"Forth source file for reuse at a later time (for more information "
"@pxref{Command-line editing})."
msgstr "Gforth は、 テキスト・インタプリタに入力したすべての行を記録する履歴(history)ファイルを維持します。 このファイルはセッションをまたいで維持され、 コマンドラインの呼び出し機能を提供するために使用されます。 長い定義を手動で入力した場合は、 テキスト・エディターを使用して履歴ファイルから後で再利用するために Forth ソース・ファイルに貼り付けることができます(詳細については @pxref{Command-line editing})。"

#. type: node
#: ../doc/gforth.texi:4496 ../doc/gforth.texi:4544 ../doc/gforth.texi:4597
#, no-wrap
msgid "Where to go next"
msgstr "Where to go next"

#. type: cindex
#: ../doc/gforth.texi:4498
#, no-wrap
msgid "elements of a Forth system"
msgstr "elements of a Forth system"

#. type: table
#: ../doc/gforth.texi:4501
msgid "To summarise this chapter:"
msgstr "この章を要約すると:"

#. type: itemize
#: ../doc/gforth.texi:4506
msgid ""
"Forth programs use @dfn{factoring} to break a problem down into small "
"fragments called @dfn{words} or @dfn{definitions}."
msgstr "Forth プログラムはファクタリングを使用して、 問題を「ワード」または「定義」と呼ばれる小さな断片に分割します。"

#. type: itemize
#: ../doc/gforth.texi:4508
msgid "Forth program development is an interactive process."
msgstr "Forth プログラムの開発は対話型のプロセスです。"

#. type: itemize
#: ../doc/gforth.texi:4512
msgid ""
"The main command loop that accepts input, and controls both interpretation "
"and compilation, is called the @dfn{text interpreter} (also known as the "
"@dfn{outer interpreter})."
msgstr "入力を受け付け、 解釈(interpret)とコンパイルの両方を制御するメイン・コマンド・ループは、「テキスト・インタプリタ」と呼ばれます(外部インタプリタとも呼ばれます)。"

#. type: itemize
#: ../doc/gforth.texi:4516
msgid ""
"Forth has a very simple syntax, consisting of words and numbers separated by "
"spaces or carriage-return characters. Any additional syntax is imposed by "
"@dfn{parsing words}."
msgstr "Forth の構文は非常に単純で、 スペースまたは改行文字で区切られた単語と数値で構成されます。 追加の構文は構文解析ワード(parsing words)によります。"

#. type: itemize
#: ../doc/gforth.texi:4519
msgid ""
"Forth uses a stack to pass parameters between words. As a result, it uses "
"postfix notation."
msgstr "Forth はスタックを使用してワード間でパラメーターを渡します。 その結果、 後置記法が使用されます。"

#. type: itemize
#: ../doc/gforth.texi:4522
msgid ""
"To use a word that has previously been defined, the text interpreter "
"searches for the word in the @dfn{name dictionary}."
msgstr "以前に定義されたワードを使用するために、 テキスト・インタプリタは「名前ディクショナリ」でそのワードを探します。"

#. type: itemize
#: ../doc/gforth.texi:4524
msgid ""
"Words have @dfn{interpretation semantics} and @dfn{compilation semantics}."
msgstr "ワードは実行時コード(interpretation semantics)とコンパイル時コード(compilation semantics)を持っています。"

#. type: itemize
#: ../doc/gforth.texi:4528
msgid ""
"The text interpreter uses the value of @code{state} to select between the "
"use of the @dfn{interpretation semantics} and the @dfn{compilation "
"semantics} of a word that it encounters."
msgstr "テキスト・インタプリタは、 @code{state} の値を使用して、 探し出したワードの「実行時コード」(interpretation semantics)を使用するかコンパイル時コード(compilation semantics)を使用するかを選択します。"

#. type: itemize
#: ../doc/gforth.texi:4533
msgid ""
"The relationship between the @dfn{interpretation semantics} and "
"@dfn{compilation semantics} for a word depends upon the way in which the "
"word was defined (for example, whether it is an @dfn{immediate} word)."
msgstr "ワードの実行時コード(interpretation semantics)とコンパイル時コード(compilation semantics)の関係は、 そのワードが定義された方法(たとえば、 それが「即実行ワード」であるかどうか)によって異なります。"

#. type: itemize
#: ../doc/gforth.texi:4538
msgid ""
"Forth definitions can be implemented in Forth (called @dfn{high-level "
"definitions}) or in some other way (usually a lower-level language and as a "
"result often called @dfn{low-level definitions}, @dfn{code definitions} or "
"@dfn{primitives})."
msgstr "Forth 定義は、 Forth で実装(「高レベル定義」と呼ばれます)、 または、 その他のいくつかの方法(通常は低レベル言語で、 「低レベル定義」、「コード定義」、「プリミティブ」と呼ばれる事もある)で実装できます。"

#. type: itemize
#: ../doc/gforth.texi:4540
msgid "Many Forth systems are implemented mainly in Forth."
msgstr "多くの Forth システムは主に Forth で記述されています。"

#. type: section
#: ../doc/gforth.texi:4545
#, no-wrap
msgid "Where To Go Next"
msgstr "Where To Go Next"

#. type: cindex
#: ../doc/gforth.texi:4546
#, no-wrap
msgid "where to go next"
msgstr "where to go next"

#. type: table
#: ../doc/gforth.texi:4556
msgid ""
"Amazing as it may seem, if you have read (and understood) this far, you know "
"almost all the fundamentals about the inner workings of a Forth system. You "
"certainly know enough to be able to read and understand the rest of this "
"manual and the Standard Forth document, to learn more about the facilities "
"that Forth in general and Gforth in particular provide. Even scarier, you "
"know almost enough to implement your own Forth system.  However, that's not "
"a good idea just yet... better to try writing some programs in Gforth."
msgstr "信じられないかもしれませんが、 あなたがここまで読んで(そして理解していれば)、 Forth システムの内部動作についての基本をほぼすべて知っていることになります。 あなたは今や確実に、 このマニュアルの残りの部分と標準 Forth ドキュメントを読んで理解し、 Forthの一般的な機能と、 特に Gforth が提供する機能について詳しく学ぶのに十分な知識を持っています。 更に恐るべきことに、 あなたは独自の Forth システムを実装するのにほぼ十分な知識を持っていますが、 独自の Forth システムを実装するには時期尚早かもしれません。 その前に、 あなたは Gforth でいくつかのプログラムを書いてみたほうがいいでしょう。"

#. type: table
#: ../doc/gforth.texi:4562
msgid ""
"Forth has such a rich vocabulary that it can be hard to know where to start "
"in learning it. This section suggests a few sets of words that are enough to "
"write small but useful programs. Use the word index in this document to "
"learn more about each word, then try it out and try to write small "
"definitions using it. Start by experimenting with these words:"
msgstr "Forth には非常に豊富な語彙があるため、 学ぶにも、 どこから手を付ければいいかわからない場合があります。 このセクションでは、 小さいながらも有用なプログラムを作成するのに十分なワードのセットをいくつか提案します。 このドキュメントのワード索引を使用して各ワードについて詳しく学び、 それを試して、 それを使用して簡単な定義を書いてみてください。 まずは以下のワード達を試してみてください:"

#. type: itemize
#: ../doc/gforth.texi:4566
msgid "Arithmetic: @code{+ - * / /MOD */ ABS INVERT}"
msgstr "算術演算: @code{+ - * / /MOD */ ABS INVERT}"

#. type: itemize
#: ../doc/gforth.texi:4568
msgid "Comparison: @code{MIN MAX =}"
msgstr "比較: @code{MIN MAX =}"

#. type: itemize
#: ../doc/gforth.texi:4570
msgid "Logic: @code{AND OR XOR NOT}"
msgstr "論理演算: @code{AND OR XOR NOT}"

#. type: itemize
#: ../doc/gforth.texi:4572
msgid "Stack manipulation: @code{DUP DROP SWAP OVER}"
msgstr "スタック操作: @code{DUP DROP SWAP OVER}"

#. type: itemize
#: ../doc/gforth.texi:4574
msgid "Loops and decisions: @code{IF ELSE ENDIF ?DO I LOOP}"
msgstr "ループと条件判断: @code{IF ELSE ENDIF ?DO I LOOP}"

#. type: itemize
#: ../doc/gforth.texi:4576
msgid "Input/Output: @code{. .\" EMIT CR KEY}"
msgstr "入出力: @code{. .\" EMIT CR KEY}"

#. type: itemize
#: ../doc/gforth.texi:4578
msgid "Defining words: @code{: ; CREATE}"
msgstr "定義ワード: @code{: ; CREATE}"

#. type: itemize
#: ../doc/gforth.texi:4580
msgid "Memory allocation words: @code{ALLOT ,}"
msgstr "メモリ割り当てワード: @code{ALLOT ,}"

#. type: itemize
#: ../doc/gforth.texi:4582
msgid "Tools: @code{SEE WORDS .S MARKER}"
msgstr "ツール: @code{SEE WORDS .S MARKER}"

#. type: table
#: ../doc/gforth.texi:4585
msgid "When you have mastered those, go on to:"
msgstr "上記をマスターできたら、 以下に進みましょう:"

#. type: itemize
#: ../doc/gforth.texi:4589
msgid "More defining words: @code{VARIABLE CONSTANT VALUE TO CREATE DOES>}"
msgstr "さらなる 定義ワード いくつか: @code{VARIABLE CONSTANT VALUE TO CREATE DOES>}"

#. type: itemize
#: ../doc/gforth.texi:4591
msgid "Memory access: @code{@@ !}"
msgstr "メモリ・アクセス: @code{@@ !}"

#. type: table
#: ../doc/gforth.texi:4595
msgid ""
"When you have mastered these, there's nothing for it but to read through the "
"whole of this manual and find out what you've missed."
msgstr "これらをマスターしたら、 あなたは、 このマニュアルのすべてに目を通し、 あなたのプログラムに欠けているものを探し出す必要があります。"

#. type: cindex
#: ../doc/gforth.texi:4599
#, no-wrap
msgid "exercises"
msgstr "exercises"

#. type: table
#: ../doc/gforth.texi:4604
msgid ""
"TODO: provide a set of programming excercises linked into the stuff done "
"already and into other sections of the manual. Provide solutions to all the "
"exercises in a .fs file in the distribution."
msgstr ""
"TODO: すでに完了した内容やマニュアルの他のセクションにリンクされた一連のプロ"
"グラミング演習を提供したい。 すべての演習に対する回答を、 ディストリビュー"
"ション内の .fs ファイルで提供するようにしたいです。"

#. type: cindex
#: ../doc/gforth.texi:4623
#, no-wrap
msgid "Literals (in source code)"
msgstr "Literals (in source code)"

#. type: cindex
#: ../doc/gforth.texi:4625
#, no-wrap
msgid "single-cell numbers, input format"
msgstr "single-cell numbers, input format"

#. type: cindex
#: ../doc/gforth.texi:4626
#, no-wrap
msgid "input format for single-cell numbers"
msgstr "input format for single-cell numbers"

#  (訳注:baseを16(16進数;HEX)にしたときに違和感なく扱えるようにしてあるのだろう。ASCIIでは 9 の次から A の前には :;<=>?@ があるのでASCII コードそのままを使うとズレる、それを更に基数36まで拡張してあるということだろうたぶん)
#. type: table
#: ../doc/gforth.texi:4636
msgid ""
"To push an integer number on the data stack, you write the number in source "
"code, e.g., @code{123}.  You can prefix the digits with @code{-} to indicate "
"a negative number, e.g. @code{-123}.  This works both inside colon "
"definitions and outside.  The number is interpreted according to the value "
"of @code{base} (@pxref{Number Conversion}).  The digits are @code{0} to "
"@code{9} and @code{a} (decimal 10) to @code{z} (decimal 35), but only digits "
"smaller than the base are recognized.  The conversion is case-insensitive, "
"so @code{A} and @code{a} are the same digit."
msgstr "整数値をデータ・スタックにプッシュするために、 あなたはソース・コードに数値を書きます。 たとえば @code{123} です。 数字の連なりの前に @code{-} を付けると、 負の数値を示すことができます。 たとえば @code{-123} です。  これはコロン定義の内部と外部の両方で機能します。  数値は @code{base} (基数) の値に従って解釈(interpret)されます(@pxref{Number Conversion})。  「数字」は @code{0} ～ @code{9} 、@code{a} (10進数の10) ～ @code{z} (10進数の35) です。 ただし、 基数(base)より小さい「数字」のみが認識されます。  変換では大文字と小文字が区別されないため、@code{A} と @code{a} は同じ「数字」になります。"

#. type: cindex
#: ../doc/gforth.texi:4637
#, no-wrap
msgid "&-prefix for decimal numbers"
msgstr "&-prefix for decimal numbers"

#. type: cindex
#: ../doc/gforth.texi:4638
#, no-wrap
msgid "#-prefix for decimal numbers"
msgstr "#-prefix for decimal numbers"

#. type: cindex
#: ../doc/gforth.texi:4639
#, no-wrap
msgid "%-prefix for binary numbers"
msgstr "%-prefix for binary numbers"

#. type: cindex
#: ../doc/gforth.texi:4640
#, no-wrap
msgid "$-prefix for hexadecimal numbers"
msgstr "$-prefix for hexadecimal numbers"

#. type: cindex
#: ../doc/gforth.texi:4641
#, no-wrap
msgid "0x-prefix for hexadecimal numbers"
msgstr "0x-prefix for hexadecimal numbers"

#. type: table
#: ../doc/gforth.texi:4643
msgid "You can make the base explicit for the number by using a prefix:"
msgstr "以下のプレフィックスを使用すると、 数値の基数(base)を明示的に指定できます:"

#. type: itemize
#: ../doc/gforth.texi:4647
msgid "@code{#} -- decimal"
msgstr "@code{#} -- 10進数(decimal)"

#. type: itemize
#: ../doc/gforth.texi:4649
msgid "@code{%} -- binary"
msgstr "@code{%} -- 2進数(binary)"

#. type: itemize
#: ../doc/gforth.texi:4651
msgid "@code{$} -- hexadecimal"
msgstr "@code{$} -- 16進数(hexadecimal)"

#. type: itemize
#: ../doc/gforth.texi:4653
msgid "@code{&} -- decimal (non-standard)"
msgstr "@code{&} -- 10進数(decimal)(非標準)"

#. type: itemize
#: ../doc/gforth.texi:4655
msgid "@code{0x} -- hexadecimal, if base<33 (non-standard)."
msgstr "@code{0x} -- 16進数(hexadecimal), if base<33 (非標準)"

#. type: table
#: ../doc/gforth.texi:4660
msgid ""
"For combinations including base-prefix and sign, the standard order is to "
"have the base-prefix first (e.g., @code{#-123}); Gforth supports both orders."
msgstr "基数プレフィックスと符号を含む組み合わせの場合、 標準的な順序では基数プレフィックスを最初に配置します(例: @code{#-123})。 Gforth は両方の順番をサポートします。"

#. type: cindex
#: ../doc/gforth.texi:4661
#, no-wrap
msgid "double-cell numbers, input format"
msgstr "double-cell numbers, input format"

#. type: cindex
#: ../doc/gforth.texi:4662
#, no-wrap
msgid "input format for double-cell numbers"
msgstr "input format for double-cell numbers"

#. type: table
#: ../doc/gforth.texi:4672
msgid ""
"You can put a decimal point @code{.} at the end of a number (or, non-"
"standardly, anywhere else except before a prefix) to get a double-cell "
"integer (e.g., @code{#-123.} or @code{#-.123} (the same number)).  If users "
"experienced in another programming language see or write such a number "
"without base prefix (e.g., @code{-123.}), they may expect that the number "
"represents a floating-point value.  To clear up the confusion early, Gforth "
"warns of such usage; to avoid the warnings, the best approach is to always "
"write double numbers with a base prefix (e.g., @code{#-123.})"
msgstr "小数点 @code{.} を数値の末尾(または非標準的に、 プレフィックスの前を除く他の場所)に置くと、 2倍長整数double-cell integer)として扱われます(例: @code{#-123.} または @code{#-.123} (この2つは同一の数値です))。  別のプログラミング言語の経験があるユーザーは、 基数プレフィックスのない、 このような数値(例: @code{-123.}) を見たり書いたりする場合、 その数値が浮動小数点値を表すものと期待する可能性があります。 混乱を早期に解決するために、 Gforth はそのような使用法について警告しています。 警告を回避するには、 常に基数プレフィックスを付けて 2倍長整数(double-cell integer)を記述することをお勧めします(例: @code{#-123.})"

#. type: table
#: ../doc/gforth.texi:4675
msgid ""
"Here are some examples, with the equivalent decimal number shown after in "
"braces:"
msgstr "以下にいくつかの例を示します。 なお、 同値の 10 進数が括弧内に示されています:"

#. type: table
#: ../doc/gforth.texi:4678
msgid ""
"@code{$-41} (-65), @code{%1001101} (205), @code{%1001.0001} (145 - a double-"
"precision number), @code{#905} (905), @code{$abc} (2478), @code{$ABC} (2478)."
msgstr "@code{$-41} (-65), @code{%1001101} (205), @code{%1001.0001} (145 - 倍精度数(a double-precision number)), @code{#905} (905), @code{$abc} (2478), @code{$ABC} (2478)"

#. type: cindex
#: ../doc/gforth.texi:4679
#, no-wrap
msgid "'-prefix for characters/code points"
msgstr "'-prefix for characters/code points"

#. type: cindex
#: ../doc/gforth.texi:4680
#, no-wrap
msgid "input format for characters/code points"
msgstr "input format for characters/code points"

#. type: table
#: ../doc/gforth.texi:4687
msgid ""
"You can get the numeric value of a (character) code point by surrounding the "
"character with @code{'} (e.g., @code{'a'}).  The trailing @code{'} is "
"required by the standard, but you can leave it away in Gforth.  Note that "
"this also works for non-ASCII characters.  For many uses, it is more useful "
"to have the character as a string rather than as a cell; see below for the "
"string syntax."
msgstr "(文字)コード・ポイントの数値を取得するには、 文字を @code{'} で囲みます (例: @code{'a'})。  末尾の @code{'} は標準では必須ですが、Gforth では省略できます。  注意: これは非 ASCII 文字でも機能することに注意してください。  多くの用途では、 文字をセルとしてではなく文字列として持つ方が便利です。 文字列の構文については、 以下を参照してください。"

#. type: cindex
#: ../doc/gforth.texi:4688
#, no-wrap
msgid "floating-point numbers, input format"
msgstr "floating-point numbers, input format"

#. type: cindex
#: ../doc/gforth.texi:4689
#, no-wrap
msgid "input format for floating-point numbers"
msgstr "input format for floating-point numbers"

#. type: table
#: ../doc/gforth.texi:4700
msgid ""
"For floating-point numbers in Forth, you recognize them due to their "
"exponent.  I.e. @code{1.} is a double-cell integer, and @code{1e0} is a "
"floating-point number; the latter can be (and usually is) shortened to "
"@code{1e}.  Both the significand (the part before the @code{e} or @code{E}) "
"and the exponent may have signs (including @code{+}); the significand must "
"contain at least one digit and may contain a decimal point, the exponent can "
"be empty.  Floating-point numbers always use decimal base for both "
"significand and exponent, and are only recognized when the base is decimal.  "
"Examples are: @code{1e 1e0 1.e 1.e0 +1e+0} (which all represent the same "
"number) @code{+12.E-4}."
msgstr "Forth の浮動小数点数は、 その指数によって認識されます。  つまり、 @code{1.} は 2倍長整数(double-cell integer)で、 そして @code{1e0} は浮動小数点数です。 後者は @code{1e} に短縮できます(通常は短縮します)。 仮数部(@code{e} や @code{E} より前の部分)と指数の部分の両方に符号(@code{+} を含む)を含めることができます。 仮数部には少なくとも 1 つの数字が含まれている必要があり、 小数点を含めることができます。 指数は空であってもかまいません。  浮動小数点数は仮数と指数の両方に常に 10 進数の基数を使用し、 基数が 10 進数の場合にのみ認識されます。  例: @code{1e 1e0 1.e 1.e0 +1e+0} (これらは全て同一の数値です)、 @code{+12.E-4}"

#. type: table
#: ../doc/gforth.texi:4706
msgid ""
"A Gforth extension (since 1.0) is to write a floating-point number in scaled "
"notation: It can optionally have a sign, then one or more digits, then use "
"one of the mostly SI-defined scaling symbols (aka metric prefixes) or "
"@code{%}, and then optionally more digits.  Here's the full list of scaling "
"symbols that Gforth accepts:"
msgstr "Gforth 拡張機能 (1.0 以降)では、 浮動小数点数をスケーリングされた表記で書くことができます。 オプションで符号、 その次に 1 つ以上の数字を指定し、その後ろに、 主に SI で定義されたスケーリング記号(別名 メトリック・プレフィックス)または @code{%} のうちの 1 つを使用でき、 その後に、 オプションで更に多くの桁を指定できます。 Gforth が受け入れるスケーリング記号の完全なリストは以下のとおりです:"

#. type: itemize
#: ../doc/gforth.texi:4710
msgid "@code{Q} @code{e30} quetta"
msgstr "@code{Q} @code{e30} quetta(クエタ)"

#. type: itemize
#: ../doc/gforth.texi:4712
msgid "@code{R} @code{e27} ronna"
msgstr "@code{R} @code{e27} ronna(ロナ)"

#. type: itemize
#: ../doc/gforth.texi:4714
msgid "@code{Y} @code{e24} yotta"
msgstr "@code{Y} @code{e24} yotta(ヨタ)"

#. type: itemize
#: ../doc/gforth.texi:4716
msgid "@code{Z} @code{e21} zetta"
msgstr "@code{Z} @code{e21} zetta(ゼタ)"

#. type: itemize
#: ../doc/gforth.texi:4718
msgid "@code{X} @code{e18} exa (not @code{E})"
msgstr "@code{X} @code{e18} exa(エクサ)(@code{E} じゃ無いので注意)"

#. type: itemize
#: ../doc/gforth.texi:4720
msgid "@code{P} @code{e15} peta"
msgstr "@code{P} @code{e15} peta(ペタ)"

#. type: itemize
#: ../doc/gforth.texi:4722
msgid "@code{T} @code{e12} tera"
msgstr "@code{T} @code{e12} tera(テラ)"

#. type: itemize
#: ../doc/gforth.texi:4724
msgid "@code{G} @code{e9} giga"
msgstr "@code{G} @code{e9} giga(ギガ)"

#. type: itemize
#: ../doc/gforth.texi:4726
msgid "@code{M} @code{e6} mega"
msgstr "@code{M} @code{e6} mega(メガ)"

#. type: itemize
#: ../doc/gforth.texi:4728
msgid "@code{k} @code{e3} kilo"
msgstr "@code{k} @code{e3} kilo(キロ)"

#. type: itemize
#: ../doc/gforth.texi:4730
msgid "@code{h} @code{e2} hecto"
msgstr "@code{h} @code{e2} hecto(ヘクト)"

#. type: itemize
#: ../doc/gforth.texi:4732
msgid "@code{d} @code{e-1} deci"
msgstr "@code{d} @code{e-1} deci(デシ)"

#. type: itemize
#: ../doc/gforth.texi:4734
msgid "@code{%} @code{e-2} percent (not @code{c})"
msgstr "@code{%} @code{e-2} percent(パーセント)(@code{c} じゃ無いので注意)(訳注: 一般の centi(センチ) と違うので注意)"

#. type: itemize
#: ../doc/gforth.texi:4736
msgid "@code{m} @code{e-3} milli"
msgstr "@code{m} @code{e-3} milli(ミリ)"

#. type: itemize
#: ../doc/gforth.texi:4738
msgid "@code{u} @code{e-6} micro (not @code{μ})"
msgstr "@code{u} @code{e-6} micro(マイクロ)(@code{μ} じゃ無いので注意)"

#. type: itemize
#: ../doc/gforth.texi:4740
msgid "@code{n} @code{e-9} nano"
msgstr "@code{n} @code{e-9} nano(ナノ)"

#. type: itemize
#: ../doc/gforth.texi:4742
msgid "@code{p} @code{e-12} pico"
msgstr "@code{p} @code{e-12} pico(ピコ)"

#. type: itemize
#: ../doc/gforth.texi:4744
msgid "@code{f} @code{e-15} femto"
msgstr "@code{f} @code{e-15} femto(フェムト)"

#. type: itemize
#: ../doc/gforth.texi:4746
msgid "@code{a} @code{e-18} atto"
msgstr "@code{a} @code{e-18} atto(アト)"

#. type: itemize
#: ../doc/gforth.texi:4748
msgid "@code{z} @code{e-21} zepto"
msgstr "@code{z} @code{e-21} zepto(ゼプト)"

#. type: itemize
#: ../doc/gforth.texi:4750
msgid "@code{y} @code{e-24} yocto"
msgstr "@code{y} @code{e-24} yocto(ヨクト)"

#. type: itemize
#: ../doc/gforth.texi:4752
msgid "@code{r} @code{e-27} ronto"
msgstr "@code{r} @code{e-27} ronto(ロント)"

#. type: itemize
#: ../doc/gforth.texi:4754
msgid "@code{q} @code{e-30} quecto"
msgstr "@code{q} @code{e-30} quecto(クエント)"

#. type: table
#: ../doc/gforth.texi:4761
msgid ""
"Unlike most of the rest of Gforth, scaling symbols are treated case-"
"sensitively.  Using the scaled notation is equivalent to using a decimal "
"point instead of the scaling symbol and appending the exponential notation "
"at the end.  Examples of scaled notation: @code{6k5} (6500e) @code{23%} "
"(0.23e)."
msgstr "Gforth の残りのほとんどとは異なり、 スケーリング・シンボルは大文字と小文字が区別されて扱われます。 スケール表記を使用するということは、 スケール記号の代わりに小数点を使用し、 末尾に指数表記を追加することと同じです。  スケール表記の例: @code{6k5} (6500e), @code{23%} (0.23e)"

#. type: cindex
#: ../doc/gforth.texi:4762
#, no-wrap
msgid "String input format"
msgstr "String input format"

#. type: cindex
#: ../doc/gforth.texi:4763
#, no-wrap
msgid "input format for strings"
msgstr "input format for strings"

#. type: table
#: ../doc/gforth.texi:4767
msgid ""
"You can input a string by surrounding it with @code{\"} (e.g. "
"@code{\"abc\"}, @code{\"a b\"}).  The result is the starting address and "
"byte (=char) count of the string on the data stack."
msgstr "文字列を @code{\"} で囲んで入力できます(例: @code{\"abc\"}、@code{\"a b\"})。 その結果は、データスタック上の、 文字列の開始アドレスと、 バイト(=char)のカウントです。"

#. type: table
#: ../doc/gforth.texi:4774
msgid ""
"You have to escape any @code{\"} inside the string with @code{\\} (e.g., "
"@code{\"double-quote->\\\"<-\"}).  In addition, this string syntax supports "
"all the ways to write control characters that are supported by @code{s\\\"} "
"(@pxref{String and character literals}).  A disadvantage of this string "
"syntax is that it is non-standard; for standard programs, use @code{s\\\"} "
"instead."
msgstr "文字列内の @code{\"} は @code{\\} でエスケープする必要があります(例: @code{\"double-quote->\\\"<-\"})。 さらに、 この文字列構文は、 @code{s\\\"} でサポートされている制御文字を記述するすべての方法をサポートしています(@pxref{String and character literals})。 この文字列構文の欠点は、 標準ではないことです。 標準プログラムの場合は、 @code{\"…\"} の代わりに @code{s\\\"} を使用してください。"

#. type: cindex
#: ../doc/gforth.texi:4775
#, no-wrap
msgid "environment variable input format"
msgstr "environment variable input format"

#. type: cindex
#: ../doc/gforth.texi:4776
#, no-wrap
msgid "input format for environment variables"
msgstr "input format for environment variables"

#. type: table
#: ../doc/gforth.texi:4783
msgid ""
"You can input an environment variable by first loading @file{rec-env.fs} and "
"then prefixing the environment variable with @code{$}, e.g., @code{$HOME}; "
"the result is a string descriptor on the data stack in the format described "
"above.  This is equivalent to @code{\"HOME\" getenv}, i.e., the environment "
"variable is resolved at run-time."
msgstr "環境変数を取得するには、 最初に @file{rec-env.fs} をロードし、 次に環境変数の前に @code{$} を付けます (例: @code{$HOME})。 結果は、 上で説明した形式のデータ・スタック上の文字列記述子(string descriptor)になります。  これは @code{\"HOME\" getenv} と同等です。つまり、 環境変数は実行時(run-time)に解決されます。"

#. type: cindex
#: ../doc/gforth.texi:4784
#, no-wrap
msgid "xt input format"
msgstr "xt input format"

#. type: cindex
#: ../doc/gforth.texi:4785
#, no-wrap
msgid "execution token input format"
msgstr "execution token input format"

#. type: cindex
#: ../doc/gforth.texi:4786
#, no-wrap
msgid "input format for execution tokens"
msgstr "input format for execution tokens"

#. type: cindex
#: ../doc/gforth.texi:4787
#, no-wrap
msgid "@code{`} prefix of word"
msgstr "@code{`} prefix of word"

#. type: table
#: ../doc/gforth.texi:4794
msgid ""
"You can input an execution token (xt) of a word by prefixing the name of the "
"word with @code{`} (e.g., @code{`dup}).  An advantage over using @code{'} or "
"@code{[']} is you do not need to switch between them when copying and "
"pasting code from inside to outside a colon definition or vice versa.  A "
"disadvantage is that this syntax is non-standard."
msgstr "ワード名の前に @code{`} を付けることで、 ワードの実行トークン (xt) を取得できます (例: @code{`dup})。  @code{'} または @code{[']} を使うよりも有利な点は、 コロン定義の内側から外側へ、 またはその逆にコードをコピーして貼り付けるときに、 これらを切り替える必要がないことです。  欠点は、 この構文が標準ではないことです。"

#. type: cindex
#: ../doc/gforth.texi:4795
#, no-wrap
msgid "nt input format"
msgstr "nt input format"

#. type: cindex
#: ../doc/gforth.texi:4796
#, no-wrap
msgid "nt token input format"
msgstr "nt token input format"

#. type: cindex
#: ../doc/gforth.texi:4797
#, no-wrap
msgid "input format for name tokens"
msgstr "input format for name tokens"

#. type: cindex
#: ../doc/gforth.texi:4798
#, no-wrap
msgid "@code{``} prefix of word"
msgstr "@code{``} prefix of word"

#. type: table
#: ../doc/gforth.texi:4802
msgid ""
"You can input a name token (nt) of a word by prefixing the name of the word "
"with @code{``} (e.g., @code{``dup}).  This syntax is also non-standard."
msgstr "ワード名の前に @code{``} を付けることで、 ワードのの名前トークン (nt) を取得できます (例: @code{``dup})。  この構文も非標準です。"

#. type: cindex
#: ../doc/gforth.texi:4803
#, no-wrap
msgid "body-relative address input format"
msgstr "body-relative address input format"

#. type: cindex
#: ../doc/gforth.texi:4804
#, no-wrap
msgid "input format for body-relative addresses"
msgstr "input format for body-relative addresses"

#. type: table
#: ../doc/gforth.texi:4813
msgid ""
"You can input a body address of a word by surrounding it with @code{<} and "
"@code{>} (e.g., @code{<spaces>}).  You can also input an address that is at "
"a positive offset from the body address (typically an address in that body), "
"by putting @code{+} and a number (see syntax above) between the word name "
"and the closing @code{>} (e.g., @code{<spaces+$15>}, @code{spaces+-3}).  You "
"will get the body address plus the number.  This non-standard feature exists "
"to allow copying and pasting the output of @code{...} (@pxref{Examining "
"data})."
msgstr "ワードの本体アドレスを @code{<} と @code{>} で囲むことで取得できます (例: @code{<spaces>})。 ワード名と末尾の @code{>} の間に @code{+} と数値を入れることで、 本体アドレスから正のオフセットのアドレス(通常はそのワードの本体内のアドレス)を取得することもできます(例: @code{<spaces+$15>}, @code{spaces+-3})。 ワード名と終わりの @code{ の間に @code{+} と数字 (上記の構文を参照) を入れることで、本文のアドレスから正のオフセットにあるアドレス (通常はその本文内のアドレス) を入力することもできます。 >} (例: @code{<spaces+$15>}、@code{spaces+-3})。  あなたは、 本体アドレスと数値を取得するでしょう。 この非標準機能は、 @code{...} の出力をコピーして貼り付けることを可能にするために存在します(@pxref{Examining data})。"

#. type: kindex
#: ../doc/gforth.texi:4819 ../doc/gforth.texi:15747 ../doc/gforth.texi:15748
#, no-wrap
msgid "words"
msgstr "words"

#. type: node
#: ../doc/gforth.texi:4857 ../doc/gforth.texi:4858 ../doc/gforth.texi:5013
#, no-wrap
msgid "Notation"
msgstr "Notation"

#. type: node
#: ../doc/gforth.texi:4857 ../doc/gforth.texi:5013 ../doc/gforth.texi:5014
#: ../doc/gforth.texi:5046
#, no-wrap
msgid "Case insensitivity"
msgstr "Case insensitivity"

#. type: cindex
#: ../doc/gforth.texi:4859
#, no-wrap
msgid "notation of glossary entries"
msgstr "notation of glossary entries"

#. type: cindex
#: ../doc/gforth.texi:4860
#, no-wrap
msgid "format of glossary entries"
msgstr "format of glossary entries"

#. type: cindex
#: ../doc/gforth.texi:4861
#, no-wrap
msgid "glossary notation format"
msgstr "glossary notation format"

#. type: cindex
#: ../doc/gforth.texi:4862
#, no-wrap
msgid "word glossary entry format"
msgstr "word glossary entry format"

#. type: table
#: ../doc/gforth.texi:4866
msgid ""
"The Forth words are described in this section in the glossary notation that "
"has become a de-facto standard for Forth texts:"
msgstr "Forth のワードは、 以下にあるように、 Forth テキストのデファクトスタンダード(事実上の標準)となっている表記にて説明されます:"

#. type: format
#: ../doc/gforth.texi:4869
#, no-wrap
msgid "@i{word}     @i{Stack effect}   @i{wordset}   @i{pronunciation}\n"
msgstr "@i{word}     @i{Stack effect}   @i{wordset}   @i{pronunciation}\n"

#. type: item
#: ../doc/gforth.texi:4871 ../doc/gforth.texi:4943
#, no-wrap
msgid "Description"
msgstr "Description"

#. type: table
#: ../doc/gforth.texi:4875
msgid "The name of the word."
msgstr "ワード名。"

#. type: item
#: ../doc/gforth.texi:4876
#, no-wrap
msgid "Stack effect"
msgstr "Stack effect"

#. type: cindex
#: ../doc/gforth.texi:4877
#, no-wrap
msgid "stack effect"
msgstr "stack effect"

#. type: table
#: ../doc/gforth.texi:4888
msgid ""
"The stack effect is written in the notation @code{@i{before} -- @i{after}}, "
"where @i{before} and @i{after} describe the top of stack entries before and "
"after the execution of the word. The rest of the stack is not touched by the "
"word. The top of stack is rightmost, i.e., a stack sequence is written as it "
"is typed in. Note that Gforth uses a separate floating point stack, but a "
"unified stack notation. Also, return stack effects are not shown in @i{stack "
"effect}, but in @i{Description}. The name of a stack item describes the type "
"and/or the function of the item. See below for a discussion of the types."
msgstr "スタック効果(stack effect)は、 @code{@i{before} -- @i{after}} という表記で記述されます。 ここで、@i{before} と @i{after} は、 ワード実行前と実行後のスタック・エントリの頂上部を表します。 スタックの残りの部分にはワードは触れません。 スタックの頂上は右端です。 つまり、 スタック・シーケンスはあなたが入力したとおりに書き込まれます。 注意: Gforth は別個の浮動小数点スタックを使用しますが、 統一されたスタック表記法を使用することに注意してください。 また、 リターンスタック効果は「スタック効果」には表示されませんが、 「説明」(Description)に表示されます。 スタック項目の名前は、 項目の型や機能を説明します。 型の説明については、 下記を参照してください。"

#. type: table
#: ../doc/gforth.texi:4895
msgid ""
"All words have two stack effects: A compile-time stack effect and a run-time "
"stack effect. The compile-time stack-effect of most words is @i{ -- }. If "
"the compile-time stack-effect of a word deviates from this standard "
"behaviour, or the word does other unusual things at compile time, both stack "
"effects are shown; otherwise only the run-time stack effect is shown."
msgstr "すべてのワードには、 コンパイル時のスタック効果と実行時のスタック効果という 2 つのスタック効果があります。 ほとんどのワードのコンパイル時のスタック効果は @i{ -- } です。 ワードのコンパイル時のスタック効果がこの標準の振る舞いから逸脱している場合、 またはワードがコンパイル時に他の通常でない振る舞いを行う場合、 両方のスタック効果が表示されます。 それ以外の場合、 実行時のスタック効果のみが表示されます。"

#. type: table
#: ../doc/gforth.texi:4899
msgid ""
"Also note that in code templates or examples there can be comments in "
"parentheses that display the stack picture at this point; there is no "
"@code{--} in these places, because there is no before-after situation."
msgstr "また、 コード・テンプレートまたはサンプルでは、​​ その時点でのスタックの状態表示するコメントが括弧内にある場合があることにも注意してください。 これらのスタックの状態表示には @code{--} はありません。 なぜなら前・後という状況が無いためです。"

#. type: cindex
#: ../doc/gforth.texi:4900
#, no-wrap
msgid "pronounciation of words"
msgstr "pronounciation of words"

#. type: item
#: ../doc/gforth.texi:4901
#, no-wrap
msgid "pronunciation"
msgstr "pronunciation"

#. type: table
#: ../doc/gforth.texi:4903
msgid "How the word is pronounced."
msgstr "ワードの発音"

#. type: item
#: ../doc/gforth.texi:4904 ../doc/gforth.texi:4906
#, no-wrap
msgid "wordset"
msgstr "wordset"

#. type: cindex
#: ../doc/gforth.texi:4905
#, no-wrap
msgid "environment wordset"
msgstr "environment wordset"

#. type: table
#: ../doc/gforth.texi:4912
msgid ""
"The wordset specifies whether a word has been standardized, it is an "
"environmental query string, or if it is a Gforth-specific word.  In the "
"latter case the wordset contains the string @code{gforth}, other wordset "
"names are either @code{environment} of refer to standard word sets."
msgstr "ワードセット(wordset)は、 ワードが標準化されたものか、 または環境クエリ文字列であるか、 または Gforth 固有のワードであるかを指定します。 Gforth 固有のワードの場合、 ワードセット名には文字列 @code{gforth} が含まれており、 他のワードセット名は @code{environment} または標準のワードセット(standard word sets)を参照します。"

#. type: table
#: ../doc/gforth.texi:4919
msgid ""
"The Forth standard is divided into several word sets. In theory, a standard "
"system need not support all of them, but in practice, serious systems on non-"
"tiny machines support almost all standardized words (some systems require "
"explicit loading of some word sets, however), so it does not increase "
"portability in practice to be parsimonious in using word sets."
msgstr "Forth 標準はいくつかのワードセットに分かれています。 理論上、 標準システムはそれらすべてをサポートする必要はありませんが、 実際には、 組み込み用途な超小型のマシン以外の本格的なシステムは、 ほぼすべての標準化されたワードをサポートします(ただし、一部のシステムでは一部のワードセットを明示的にロードする必要があります)。 そのため、 実際のところはワードセットの使用をケチったところでその分移植性が上がる訳ではありません。"

#. type: table
#: ../doc/gforth.texi:4921
msgid "For the Gforth-specific words, we have the following categories:"
msgstr "Gforth 固有のワードについては、 以下のカテゴリがあります:"

#. type: kindex
#: ../doc/gforth.texi:4923 ../doc/gforth.texi:16316 ../doc/gforth.texi:16317
#, no-wrap
msgid "gforth"
msgstr "gforth"

#. type: item
#: ../doc/gforth.texi:4924
#, no-wrap
msgid "gforth-@i{<version>}"
msgstr "gforth-@i{<version>}"

#. type: table
#: ../doc/gforth.texi:4928
msgid ""
"We intend to permanently support this word in Gforth and it has been "
"available since Gforth @i{<version>} (possibly not as supported word at that "
"time)."
msgstr "我々はこのワードを Gforth で永続的にサポートするつもりであり、 Gforth @i{<version>} 以降で有効です(おそらくその @i{<version>} 時点ではサポートされていないワードです)。"

#. type: item
#: ../doc/gforth.texi:4929
#, no-wrap
msgid "gforth-experimental"
msgstr "gforth-experimental"

#. type: table
#: ../doc/gforth.texi:4933
msgid ""
"This word is available in the present version and may turn into a permanent "
"word or may be removed in a future release of Gforth.  Feedback welcome."
msgstr "このワードは現在のバージョンで使用できますが、 永続的なワードになるか、 Gforth の将来のリリースで削除されるか分かりません。  あなたのフィードバックをお待ちしています。"

#. type: item
#: ../doc/gforth.texi:4934
#, no-wrap
msgid "gforth-internal"
msgstr "gforth-internal"

#. type: table
#: ../doc/gforth.texi:4937
msgid ""
"This word is an internal factor, not a supported word, and it may be removed "
"in a future release of Gforth."
msgstr "このワードは内部用であり、 サポート対象のワードではないため、 Gforth の将来のリリースでは削除される可能性があります。"

#. type: item
#: ../doc/gforth.texi:4938
#, no-wrap
msgid "gforth-obsolete"
msgstr "gforth-obsolete"

#. type: table
#: ../doc/gforth.texi:4940
msgid "This word will be removed in a future release of Gforth."
msgstr "このワードは、 Gforth の将来のリリースでは削除される予定です。"

#. type: table
#: ../doc/gforth.texi:4945
msgid "A description of the behaviour of the word."
msgstr "そのワードの振る舞いを説明します。"

#. type: cindex
#: ../doc/gforth.texi:4947
#, no-wrap
msgid "types of stack items"
msgstr "types of stack items"

#. type: cindex
#: ../doc/gforth.texi:4948
#, no-wrap
msgid "stack item types"
msgstr "stack item types"

#. type: table
#: ../doc/gforth.texi:4951
msgid ""
"The type of a stack item is specified by the character(s) the name starts "
"with:"
msgstr "スタック項目の型は、 以下のように、 スタック項目名のはじめの文字が何であるかによって指定されます:"

#. type: cindex
#: ../doc/gforth.texi:4954
#, no-wrap
msgid "@code{f}, stack item type"
msgstr "@code{f}, stack item type"

#. type: cindex
#: ../doc/gforth.texi:4957
#, no-wrap
msgid "@code{c}, stack item type"
msgstr "@code{c}, stack item type"

#. type: table
#: ../doc/gforth.texi:4959
msgid "Char"
msgstr "Char"

#. type: kindex
#: ../doc/gforth.texi:4959 ../doc/gforth.texi:7903 ../doc/gforth.texi:32043
#: ../doc/gforth.texi:32044
#, no-wrap
msgid "w"
msgstr "w"

#. type: cindex
#: ../doc/gforth.texi:4960
#, no-wrap
msgid "@code{w}, stack item type"
msgstr "@code{w}, stack item type"

#. type: table
#: ../doc/gforth.texi:4962
msgid "Cell, can contain an integer or an address"
msgstr "セル。 整数(an integer)やアドレス(an address)も格納可能。"

#. type: cindex
#: ../doc/gforth.texi:4963
#, no-wrap
msgid "@code{n}, stack item type"
msgstr "@code{n}, stack item type"

#. type: cindex
#: ../doc/gforth.texi:4966
#, no-wrap
msgid "@code{u}, stack item type"
msgstr "@code{u}, stack item type"

#. type: cindex
#: ../doc/gforth.texi:4969
#, no-wrap
msgid "@code{d}, stack item type"
msgstr "@code{d}, stack item type"

#. type: table
#: ../doc/gforth.texi:4971
msgid "double sized signed integer"
msgstr "符号付き2倍長整数"

#. type: cindex
#: ../doc/gforth.texi:4972
#, no-wrap
msgid "@code{ud}, stack item type"
msgstr "@code{ud}, stack item type"

#. type: table
#: ../doc/gforth.texi:4974
msgid "double sized unsigned integer"
msgstr "符号無し2倍長整数"

#. type: cindex
#: ../doc/gforth.texi:4975
#, no-wrap
msgid "@code{r}, stack item type"
msgstr "@code{r}, stack item type"

#. type: item
#: ../doc/gforth.texi:4977
#, no-wrap
msgid "a-"
msgstr "a-"

#. type: cindex
#: ../doc/gforth.texi:4978
#, no-wrap
msgid "@code{a_}, stack item type"
msgstr "@code{a_}, stack item type"

#. type: item
#: ../doc/gforth.texi:4980
#, no-wrap
msgid "c-"
msgstr "c-"

#. type: cindex
#: ../doc/gforth.texi:4981
#, no-wrap
msgid "@code{c_}, stack item type"
msgstr "@code{c_}, stack item type"

#. type: kindex
#: ../doc/gforth.texi:4983 ../doc/gforth.texi:6426 ../doc/gforth.texi:6427
#, no-wrap
msgid "f-"
msgstr "f-"

#. type: cindex
#: ../doc/gforth.texi:4984
#, no-wrap
msgid "@code{f_}, stack item type"
msgstr "@code{f_}, stack item type"

#. type: table
#: ../doc/gforth.texi:4986
msgid "Float-aligned address"
msgstr "浮動小数点数アライメントのアドレス"

#. type: item
#: ../doc/gforth.texi:4986
#, no-wrap
msgid "df-"
msgstr "df-"

#. type: cindex
#: ../doc/gforth.texi:4987
#, no-wrap
msgid "@code{df_}, stack item type"
msgstr "@code{df_}, stack item type"

#. type: table
#: ../doc/gforth.texi:4989
msgid "Address aligned for IEEE double precision float"
msgstr "IEEE倍精度浮動小数点数アライメントのアドレス"

#. type: item
#: ../doc/gforth.texi:4989
#, no-wrap
msgid "sf-"
msgstr "sf-"

#. type: cindex
#: ../doc/gforth.texi:4990
#, no-wrap
msgid "@code{sf_}, stack item type"
msgstr "@code{sf_}, stack item type"

#. type: table
#: ../doc/gforth.texi:4992
msgid "Address aligned for IEEE single precision float"
msgstr "IEEE単精度浮動小数点数アライメントのアドレス"

#. type: cindex
#: ../doc/gforth.texi:4993
#, no-wrap
msgid "@code{xt}, stack item type"
msgstr "@code{xt}, stack item type"

#. type: cindex
#: ../doc/gforth.texi:4995 ../doc/gforth.texi:15508
#, no-wrap
msgid "wid"
msgstr "wid"

#. type: cindex
#: ../doc/gforth.texi:4996
#, no-wrap
msgid "@code{wid}, stack item type"
msgstr "@code{wid}, stack item type"

#. type: table
#: ../doc/gforth.texi:4998
msgid "Word list ID, same size as Cell"
msgstr "ワード・リストID。セルと同一サイズ"

#. type: item
#: ../doc/gforth.texi:4998
#, no-wrap
msgid "ior, wior"
msgstr "ior, wior"

#. type: cindex
#: ../doc/gforth.texi:4999
#, no-wrap
msgid "ior type description"
msgstr "ior type description"

#. type: cindex
#: ../doc/gforth.texi:5000
#, no-wrap
msgid "wior type description"
msgstr "wior type description"

#. type: table
#: ../doc/gforth.texi:5002
msgid "I/O result code, cell-sized.  In Gforth, you can @code{throw} iors."
msgstr "セルサイズの入出力結果コード。 Gforth では iors を @code{throw} できます。"

#. type: item
#: ../doc/gforth.texi:5002
#, no-wrap
msgid "f83name"
msgstr "f83name"

#. type: cindex
#: ../doc/gforth.texi:5003
#, no-wrap
msgid "@code{f83name}, stack item type"
msgstr "@code{f83name}, stack item type"

#. type: table
#: ../doc/gforth.texi:5005
msgid "Pointer to a name structure"
msgstr "名前構造体へのポインタ"

#. type: item
#: ../doc/gforth.texi:5005
#, no-wrap
msgid "\""
msgstr "\""

#. type: cindex
#: ../doc/gforth.texi:5006
#, no-wrap
msgid "@code{\"}, stack item type"
msgstr "@code{\"}, stack item type"

#. type: table
#: ../doc/gforth.texi:5010
msgid ""
"string in the input stream (not on the stack). The terminating character is "
"a blank by default. If it is not a blank, it is shown in @code{<>} quotes."
msgstr "(スタック上ではなく、)入力ストリーム内の文字列。 終端文字はデフォルトでは空白(a blank)です。 終端文字が空白でない場合は、 @code{<>} でクォートして表示します。"

#. type: cindex
#: ../doc/gforth.texi:5015
#, no-wrap
msgid "case sensitivity"
msgstr "case sensitivity"

#. type: cindex
#: ../doc/gforth.texi:5016
#, no-wrap
msgid "upper and lower case"
msgstr "upper and lower case"

#. type: table
#: ../doc/gforth.texi:5022
msgid ""
"Gforth is case-insensitive; you can enter definitions and invoke Standard "
"words using upper, lower or mixed case (however, @pxref{core-idef, "
"Implementation-defined options, Implementation-defined options})."
msgstr "Gforth では英大文字小文字を区別しません(case-insensitive)。 大文字、 小文字、 または大文字と小文字の混合を使用して、 定義を入力したり標準のワードを呼び出したりできます(ただし、 こちらも参照ください @pxref{core-idef, Implementation-defined options, Implementation-defined options})"

#. type: table
#: ../doc/gforth.texi:5028
msgid ""
"Standard Forth only @i{requires} implementations to recognise Standard words "
"when they are typed entirely in upper case. Therefore, a Standard program "
"must use upper case for all Standard words. You can use whatever case you "
"like for words that you define, but in a Standard program you have to use "
"the words in the same case that you defined them."
msgstr "標準 Forth では、 標準のワードが完全に大文字で入力された場合にのみ実装が認識する必要があります。 したがって、 標準のプログラムでは、 すべての標準ワードに大文字を使用する必要があります。 あなたの定義したワードには大文字と小文字を自由に使用できますが、 標準のプログラムでは、 ワードを定義したときと同じ大文字と小文字で使用する必要があります。"

#. type: table
#: ../doc/gforth.texi:5031
msgid ""
"Gforth supports case sensitivity through @code{cs-wordlist}s (case-sensitive "
"wordlists, @pxref{Word Lists})."
msgstr "Gforth は、 @code{cs-wordlist} (英大文字小文字を区別する(case-sensitive)ワード・リスト @pxref{Word Lists}) を通じて英大文字小文字の区別をサポートします。"

#. type: table
#: ../doc/gforth.texi:5035
msgid ""
"Two people have asked how to convert Gforth to be case-sensitive; while we "
"think this is a bad idea, you can change all wordlists into tables like this:"
msgstr "何人かは Gforth を英大文字小文字を区別する(case-sensitive)ように変換する方法を質問しました。 これは悪い考え(bad idea)だとは思いますが、 すべてのワードリストを以下のようなテーブルに変更できます:"

#. type: example
#: ../doc/gforth.texi:5038
#, no-wrap
msgid "' table-find forth-wordlist wordlist-map @ !\n"
msgstr "' table-find forth-wordlist wordlist-map @ !\n"

#. type: table
#: ../doc/gforth.texi:5045
msgid ""
"Note that you now have to type the predefined words in the same case that we "
"defined them, which are varying.  You may want to convert them to your "
"favourite case before doing this operation (I won't explain how, because if "
"you are even contemplating doing this, you'd better have enough knowledge of "
"Forth systems to know this already)."
msgstr "注意: このように、 Gforth を英大文字小文字を区別する(case-sensitive)ように変換した場合、 定義済みのワードは、 定義したときと同一の大文字と小文字の組み合わせで入力する必要があることに注意してください。 大文字と小文字は異なります。  この操作を実行する前に、 それらをあなた好みの大文字と小文字の組み合わせに変換するとよいでしょう(その方法については説明しません。 Gforth を英大文字小文字を区別する(case-sensitive)ように変換することを実行することを検討している場合でも、 すでに定義済みワードのワード名をあなた好みの大文字と小文字の組み合わせに変換するその方法を知っているくらいの Forth システムの知識があったほうがよいと思います)。"

#. type: node
#: ../doc/gforth.texi:5046 ../doc/gforth.texi:5092 ../doc/gforth.texi:5093
#: ../doc/gforth.texi:5148
#, no-wrap
msgid "Boolean Flags"
msgstr "Boolean Flags"

#. type: cindex
#: ../doc/gforth.texi:5048
#, no-wrap
msgid "comments"
msgstr "comments"

#. type: table
#: ../doc/gforth.texi:5052
msgid ""
"Forth supports two styles of comment; the traditional @i{in-line} comment, "
"@code{(} and its modern cousin, the @i{comment to end of line}; @code{\\}."
msgstr "Fors は 2 つのスタイルのコメントをサポートしています。 従来の行中コメントである @code{(} と、 その現代的な親戚である、 行末までのコメント @code{\\} です。"

#. type: findex
#: ../doc/gforth.texi:5054
#, no-wrap
msgid "( ( @var{ compilation 'ccc<close-paren>' -- ; run-time --   } ) core,file"
msgstr "( ( @var{ compilation 'ccc<close-paren>' -- ; run-time --   } ) core,file"

#. type: kindex
#: ../doc/gforth.texi:5055 ../doc/gforth.texi:5056
#, no-wrap
msgid "("
msgstr "("

#. type: format
#: ../doc/gforth.texi:5059
#, no-wrap
msgid "@code{(} ( @i{compilation 'ccc<close-paren>' -- ; run-time --  }) core,file ``paren''\n"
msgstr "@code{(} ( @i{compilation 'ccc<close-paren>' -- ; run-time --  }) core,file ``paren''\n"

#. type: table
#: ../doc/gforth.texi:5066
msgid ""
"Comment, usually till the next @code{)}: parse and discard all subsequent "
"characters in the parse area until \")\" is encountered. During interactive "
"input, an end-of-line also acts as a comment terminator. For file input, it "
"does not; if the end-of-file is encountered whilst parsing for the \")\" "
"delimiter, Gforth will generate a warning."
msgstr "通常は次の @code{)} までがコメントです。 「)」 が見つかるまで、 パース領域内の後続の文字をすべてパースして破棄します。 対話入力中は、 行末はコメント終了文字としても機能します。 ただし、 ファイル入力の場合はそうではありませんので、 「)」区切り文字のパース中にファイルの終わりに遭遇すると、 Gforth は警告を出します。"

#. type: findex
#: ../doc/gforth.texi:5068
#, no-wrap
msgid "\\ ( @var{ compilation 'ccc<newline>' -- ; run-time --   } ) core-ext,block-ext"
msgstr "\\ ( @var{ compilation 'ccc<newline>' -- ; run-time --   } ) core-ext,block-ext"

#. type: kindex
#: ../doc/gforth.texi:5069 ../doc/gforth.texi:5070
#, no-wrap
msgid "\\"
msgstr "\\"

#. type: format
#: ../doc/gforth.texi:5073
#, no-wrap
msgid "@code{\\} ( @i{compilation 'ccc<newline>' -- ; run-time --  }) core-ext,block-ext ``backslash''\n"
msgstr "@code{\\} ( @i{compilation 'ccc<newline>' -- ; run-time --  }) core-ext,block-ext ``backslash''\n"

#. type: table
#: ../doc/gforth.texi:5078
msgid ""
"Comment until the end of line: parse and discard all remaining characters in "
"the parse area, except while @code{load}ing from a block: while @code{load}"
"ing from a block, parse and discard all remaining characters in the 64-byte "
"line."
msgstr "行末までがコメントです。 ブロックからのロード中を除き、 パース領域内の残りの文字をすべてパースして破棄します。 ブロックからのロード中は、 1行64バイトと見なすので、 その 64 バイト行の残りの文字をすべてパースして破棄します。"

#. type: findex
#: ../doc/gforth.texi:5080
#, no-wrap
msgid "\\G ( @var{ compilation 'ccc<newline>' -- ; run-time --   } ) gforth-0.2"
msgstr "\\G ( @var{ compilation 'ccc<newline>' -- ; run-time --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:5081 ../doc/gforth.texi:5082
#, no-wrap
msgid "\\G"
msgstr "\\G"

#. type: format
#: ../doc/gforth.texi:5085
#, no-wrap
msgid "@code{\\G} ( @i{compilation 'ccc<newline>' -- ; run-time --  }) gforth-0.2 ``backslash-gee''\n"
msgstr "@code{\\G} ( @i{compilation 'ccc<newline>' -- ; run-time --  }) gforth-0.2 ``backslash-gee''\n"

#. type: table
#: ../doc/gforth.texi:5088
msgid ""
"Equivalent to @code{\\} but used as a tag to annotate definition comments "
"into documentation."
msgstr "@code{\\} と同等ですが、 ドキュメントの定義コメントに注釈(annotate)を付けるためのタグとして使用されます。"

#. type: cindex
#: ../doc/gforth.texi:5094
#, no-wrap
msgid "Boolean flags"
msgstr "Boolean flags"

#. type: table
#: ../doc/gforth.texi:5102
msgid ""
"A Boolean flag is cell-sized. A cell with all bits clear represents the flag "
"@code{false} and a flag with all bits set represents the flag @code{true}. "
"Words that check a flag (for example, @code{IF}) will treat a cell that has "
"@i{any} bit set as @code{true}."
msgstr "ブール値フラグはセル・サイズです。 すべてのビットがクリアされているセルはフラグ @code{false} を表し、 すべてのビットがセットされているセルはフラグ @code{true} を表します。 フラグをチェックするワード (@code{IF} など) は、 セルの任意のビットがセットされているものを @code{true} として扱います。"

#. type: findex
#: ../doc/gforth.texi:5103
#, no-wrap
msgid "true ( @var{ -- f   } ) core-ext"
msgstr "true ( @var{ -- f   } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:5104 ../doc/gforth.texi:5105
#, no-wrap
msgid "true"
msgstr "true"

#. type: format
#: ../doc/gforth.texi:5108
#, no-wrap
msgid "@code{true} ( @i{-- f  }) core-ext ``true''\n"
msgstr "@code{true} ( @i{-- f  }) core-ext ``true''\n"

#. type: table
#: ../doc/gforth.texi:5110
msgid "@code{Constant} -- @i{f} is a cell with all bits set."
msgstr "定数 -- @i{f} は全てのビットがセットされたセルです。"

#. type: findex
#: ../doc/gforth.texi:5112
#, no-wrap
msgid "false ( @var{ -- f   } ) core-ext"
msgstr "false ( @var{ -- f   } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:5113 ../doc/gforth.texi:5114
#, no-wrap
msgid "false"
msgstr "false"

#. type: format
#: ../doc/gforth.texi:5117
#, no-wrap
msgid "@code{false} ( @i{-- f  }) core-ext ``false''\n"
msgstr "@code{false} ( @i{-- f  }) core-ext ``false''\n"

#. type: table
#: ../doc/gforth.texi:5119
msgid "@code{Constant} -- @i{f} is a cell with all bits clear."
msgstr "定数 -- @i{f} は全てのビットがクリアされたセルです。"

#. type: findex
#: ../doc/gforth.texi:5121
#, no-wrap
msgid "on ( @var{ a-addr --   } ) gforth-0.2"
msgstr "on ( @var{ a-addr --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:5122 ../doc/gforth.texi:5123
#, no-wrap
msgid "on"
msgstr "on"

#. type: format
#: ../doc/gforth.texi:5126
#, no-wrap
msgid "@code{on} ( @i{a-addr --  }) gforth-0.2 ``on''\n"
msgstr "@code{on} ( @i{a-addr --  }) gforth-0.2 ``on''\n"

#. type: table
#: ../doc/gforth.texi:5128
msgid "Set the (value of the) variable at @i{a-addr} to @code{true}."
msgstr "指定の @i{a-addr} の変数の値を @code{true} にセットする。"

#. type: findex
#: ../doc/gforth.texi:5130
#, no-wrap
msgid "off ( @var{ a-addr --   } ) gforth-0.2"
msgstr "off ( @var{ a-addr --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:5131 ../doc/gforth.texi:5132
#, no-wrap
msgid "off"
msgstr "off"

#. type: format
#: ../doc/gforth.texi:5135
#, no-wrap
msgid "@code{off} ( @i{a-addr --  }) gforth-0.2 ``off''\n"
msgstr "@code{off} ( @i{a-addr --  }) gforth-0.2 ``off''\n"

#. type: table
#: ../doc/gforth.texi:5137
msgid "Set the (value of the) variable at @i{a-addr} to @code{false}."
msgstr "指定の @i{a-addr} の変数の値を @code{false} にセットする。"

#. type: findex
#: ../doc/gforth.texi:5139
#, no-wrap
msgid "select ( @var{ u1 u2 f -- u  } ) gforth-1.0"
msgstr "select ( @var{ u1 u2 f -- u  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5140 ../doc/gforth.texi:5141
#, no-wrap
msgid "select"
msgstr "select"

#. type: format
#: ../doc/gforth.texi:5144
#, no-wrap
msgid "@code{select} ( @i{u1 u2 f -- u }) gforth-1.0 ``select''\n"
msgstr "@code{select} ( @i{u1 u2 f -- u }) gforth-1.0 ``select''\n"

#. type: table
#: ../doc/gforth.texi:5146
msgid "If @i{f} is false, @i{u} is @i{u2}, otherwise @i{u1}."
msgstr "@i{f} が false なら  @i{u2} を @i{u} として返し、 そうでなければ @i{u1} を @i{u} として返す。"

#. type: cindex
#: ../doc/gforth.texi:5150
#, no-wrap
msgid "arithmetic words"
msgstr "arithmetic words"

#. type: cindex
#: ../doc/gforth.texi:5152
#, no-wrap
msgid "division with potentially negative operands"
msgstr "division with potentially negative operands"

#. type: table
#: ../doc/gforth.texi:5162
msgid ""
"Forth arithmetic is not checked, i.e., you will not hear about integer "
"overflow on addition or multiplication, you may hear about division by zero "
"if you are lucky. The operator is written after the operands, but the "
"operands are still in the original order. I.e., the infix @code{2-1} "
"corresponds to @code{2 1 -}. Forth offers a variety of division operators. "
"If you perform division with potentially negative operands, you do not want "
"to use @code{/} or @code{/mod} with its implementation-defined behaviour, "
"but, e.g., @code{/f}, @code{/modf} or @code{fm/mod} (@pxref{Integer "
"division})."
msgstr "Forth の算術演算はチェックを行いません。 つまり、 加算または乗算での整数のオーバーフローについては問い詰められませんが、 運が良ければゼロによる除算については問い詰められることができるかもしれません。 演算子はオペランドの後に記述されますが、 オペランドは元の順序のままです。 つまり、 中置記法での @code{2-1} は @code{2 1 -} に対応します。 Forth はさまざまな除算演算子を提供します。 あなたが、 潜在的に負になりうるオペランドを使用して除算を実行する場合、 実装により振る舞いが異なる @code{/} や @code{/mod} を使用せず、 たとえば、 @code{/f} や @code{/modf} や @code{fm/mod} を使用します(@pxref{Integer division})。"

#. type: node
#: ../doc/gforth.texi:5174 ../doc/gforth.texi:5175 ../doc/gforth.texi:5275
#, no-wrap
msgid "Single precision"
msgstr "Single precision"

#. type: cindex
#: ../doc/gforth.texi:5176
#, no-wrap
msgid "single precision arithmetic words"
msgstr "single precision arithmetic words"

#. type: table
#: ../doc/gforth.texi:5184
msgid ""
"By default, numbers in Forth are single-precision integers that are one cell "
"in size. They can be signed or unsigned, depending upon how you treat them. "
"For the rules used by the text interpreter for recognising single-precision "
"integers see @ref{Number Conversion}."
msgstr "デフォルトでは、 Forth の数値は 1 セルのサイズの単精度整数です。 扱い方に応じて、 符号付きまたは符号無しにすることができます。 単精度整数を認識するためにテキスト・インタプリタで使用されるルールについては、 @ref{Number Conversion} を参照してください。"

#. type: table
#: ../doc/gforth.texi:5188
msgid ""
"These words are all defined for signed operands, but some of them also work "
"for unsigned numbers: @code{+}, @code{1+}, @code{-}, @code{1-}, @code{*}."
msgstr "これらのワードは、 すべて符号付きオペランドに対して定義されていますが、 一部のワードは符号無しの数値に対しても機能します: @code{+}, @code{1+}, @code{-}, @code{1-}, @code{*}"

#. type: findex
#: ../doc/gforth.texi:5189
#, no-wrap
msgid "+ ( @var{ n1 n2 -- n  } ) core"
msgstr "+ ( @var{ n1 n2 -- n  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5190 ../doc/gforth.texi:5191
#, no-wrap
msgid "+"
msgstr "+"

#. type: format
#: ../doc/gforth.texi:5194
#, no-wrap
msgid "@code{+} ( @i{n1 n2 -- n }) core ``plus''\n"
msgstr "@code{+} ( @i{n1 n2 -- n }) core ``plus''\n"

#. type: findex
#: ../doc/gforth.texi:5196
#, no-wrap
msgid "1+ ( @var{ n1 -- n2  } ) core"
msgstr "1+ ( @var{ n1 -- n2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5197 ../doc/gforth.texi:5198
#, no-wrap
msgid "1+"
msgstr "1+"

#. type: format
#: ../doc/gforth.texi:5201
#, no-wrap
msgid "@code{1+} ( @i{n1 -- n2 }) core ``one-plus''\n"
msgstr "@code{1+} ( @i{n1 -- n2 }) core ``one-plus''\n"

#. type: findex
#: ../doc/gforth.texi:5203
#, no-wrap
msgid "under+ ( @var{ n1 n2 n3 -- n n2  } ) gforth-0.3"
msgstr "under+ ( @var{ n1 n2 n3 -- n n2  } ) gforth-0.3"

#. type: kindex
#: ../doc/gforth.texi:5204 ../doc/gforth.texi:5205
#, no-wrap
msgid "under+"
msgstr "under+"

#. type: format
#: ../doc/gforth.texi:5208
#, no-wrap
msgid "@code{under+} ( @i{n1 n2 n3 -- n n2 }) gforth-0.3 ``under-plus''\n"
msgstr "@code{under+} ( @i{n1 n2 n3 -- n n2 }) gforth-0.3 ``under-plus''\n"

#. type: table
#: ../doc/gforth.texi:5210
msgid "add @i{n3} to @i{n1} (giving @i{n})"
msgstr "@i{n3} を @i{n1} に足し込む(@i{n} を得る)"

#. type: findex
#: ../doc/gforth.texi:5211
#, no-wrap
msgid "- ( @var{ n1 n2 -- n  } ) core"
msgstr "- ( @var{ n1 n2 -- n  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5212 ../doc/gforth.texi:5213
#, no-wrap
msgid "-"
msgstr "-"

#. type: format
#: ../doc/gforth.texi:5216
#, no-wrap
msgid "@code{-} ( @i{n1 n2 -- n }) core ``minus''\n"
msgstr "@code{-} ( @i{n1 n2 -- n }) core ``minus''\n"

#. type: findex
#: ../doc/gforth.texi:5218
#, no-wrap
msgid "1- ( @var{ n1 -- n2  } ) core"
msgstr "1- ( @var{ n1 -- n2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5219 ../doc/gforth.texi:5220
#, no-wrap
msgid "1-"
msgstr "1-"

#. type: format
#: ../doc/gforth.texi:5223
#, no-wrap
msgid "@code{1-} ( @i{n1 -- n2 }) core ``one-minus''\n"
msgstr "@code{1-} ( @i{n1 -- n2 }) core ``one-minus''\n"

#. type: findex
#: ../doc/gforth.texi:5225
#, no-wrap
msgid "* ( @var{ n1 n2 -- n  } ) core"
msgstr "* ( @var{ n1 n2 -- n  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5226 ../doc/gforth.texi:5227
#, no-wrap
msgid "*"
msgstr "*"

#. type: format
#: ../doc/gforth.texi:5230
#, no-wrap
msgid "@code{*} ( @i{n1 n2 -- n }) core ``star''\n"
msgstr "@code{*} ( @i{n1 n2 -- n }) core ``star''\n"

#. type: findex
#: ../doc/gforth.texi:5232
#, no-wrap
msgid "negate ( @var{ n1 -- n2  } ) core"
msgstr "negate ( @var{ n1 -- n2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5233 ../doc/gforth.texi:5234
#, no-wrap
msgid "negate"
msgstr "negate"

#. type: format
#: ../doc/gforth.texi:5237
#, no-wrap
msgid "@code{negate} ( @i{n1 -- n2 }) core ``negate''\n"
msgstr "@code{negate} ( @i{n1 -- n2 }) core ``negate''\n"

#. type: findex
#: ../doc/gforth.texi:5239
#, no-wrap
msgid "abs ( @var{ n -- u  } ) core"
msgstr "abs ( @var{ n -- u  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5240 ../doc/gforth.texi:5241
#, no-wrap
msgid "abs"
msgstr "abs"

#. type: format
#: ../doc/gforth.texi:5244
#, no-wrap
msgid "@code{abs} ( @i{n -- u }) core ``abs''\n"
msgstr "@code{abs} ( @i{n -- u }) core ``abs''\n"

#. type: findex
#: ../doc/gforth.texi:5246
#, no-wrap
msgid "min ( @var{ n1 n2 -- n  } ) core"
msgstr "min ( @var{ n1 n2 -- n  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5247 ../doc/gforth.texi:5248
#, no-wrap
msgid "min"
msgstr "min"

#. type: format
#: ../doc/gforth.texi:5251
#, no-wrap
msgid "@code{min} ( @i{n1 n2 -- n }) core ``min''\n"
msgstr "@code{min} ( @i{n1 n2 -- n }) core ``min''\n"

#. type: findex
#: ../doc/gforth.texi:5253
#, no-wrap
msgid "max ( @var{ n1 n2 -- n  } ) core"
msgstr "max ( @var{ n1 n2 -- n  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5254 ../doc/gforth.texi:5255
#, no-wrap
msgid "max"
msgstr "max"

#. type: format
#: ../doc/gforth.texi:5258
#, no-wrap
msgid "@code{max} ( @i{n1 n2 -- n }) core ``max''\n"
msgstr "@code{max} ( @i{n1 n2 -- n }) core ``max''\n"

#. type: findex
#: ../doc/gforth.texi:5260
#, no-wrap
msgid "umin ( @var{ u1 u2 -- u  } ) gforth-0.5"
msgstr "umin ( @var{ u1 u2 -- u  } ) gforth-0.5"

#. type: kindex
#: ../doc/gforth.texi:5261 ../doc/gforth.texi:5262
#, no-wrap
msgid "umin"
msgstr "umin"

#. type: format
#: ../doc/gforth.texi:5265
#, no-wrap
msgid "@code{umin} ( @i{u1 u2 -- u }) gforth-0.5 ``umin''\n"
msgstr "@code{umin} ( @i{u1 u2 -- u }) gforth-0.5 ``umin''\n"

#. type: findex
#: ../doc/gforth.texi:5267
#, no-wrap
msgid "umax ( @var{ u1 u2 -- u  } ) gforth-1.0"
msgstr "umax ( @var{ u1 u2 -- u  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5268 ../doc/gforth.texi:5269
#, no-wrap
msgid "umax"
msgstr "umax"

#. type: format
#: ../doc/gforth.texi:5272
#, no-wrap
msgid "@code{umax} ( @i{u1 u2 -- u }) gforth-1.0 ``umax''\n"
msgstr "@code{umax} ( @i{u1 u2 -- u }) gforth-1.0 ``umax''\n"

#. type: cindex
#: ../doc/gforth.texi:5277
#, no-wrap
msgid "double precision arithmetic words"
msgstr "double precision arithmetic words"

#. type: table
#: ../doc/gforth.texi:5281
msgid ""
"For the rules used by the text interpreter for recognising double-precision "
"integers, see @ref{Number Conversion}."
msgstr "テキスト・インタプリタが倍精度整数を認識するために使用するルールについては、 @ref{Number Conversion} を参照してください。"

#. type: table
#: ../doc/gforth.texi:5290
msgid ""
"A double precision number is represented by a cell pair, with the most "
"significant cell at the TOS. It is trivial to convert an unsigned single to "
"a double: simply push a @code{0} onto the TOS. Since numbers are represented "
"by Gforth using 2's complement arithmetic, converting a signed single to a "
"(signed) double requires sign-extension across the most significant cell. "
"This can be achieved using @code{s>d}. The moral of the story is that you "
"cannot convert a number without knowing whether it represents an unsigned or "
"a signed number."
msgstr "数値は 2 の補数演算を使用する Gforth で表されるため、符号付き単精度浮動小数点数を (符号付き) 倍精度浮動小数点に変換するには、最上位セル全体で符号拡張が必要です。 倍精度整数はセルのペアで表され、 上位側のセルが TOS にあります。 符号無しの単精度整数を倍精度整数に変換するのは簡単で、 @code{0} を TOS にプッシュするだけです。 整数値は Gforth では 2 の補数表現を使うため、  符号付き単精度整数を(符号付き)倍精度整数に変換するには、 上位側セル全体で符号拡張が必要です。 これは @code{s>d} を使用して実現できます。 このことから分かるとおり、 それが符号無し整数を表しているのか、 符号有り整数を表しているのか分からなければ、 数値を変換できないということです。"

#. type: table
#: ../doc/gforth.texi:5293
msgid ""
"These words are all defined for signed operands, but some of them also work "
"for unsigned numbers: @code{d+}, @code{d-}."
msgstr "これらのワードはすべて符号付きオペランドに対して定義されていますが、 一部のワードは符号無しの数値に対しても機能します: @code{d+}、@code{d-}"

#. type: findex
#: ../doc/gforth.texi:5294
#, no-wrap
msgid "s>d ( @var{ n -- d   } ) core"
msgstr "s>d ( @var{ n -- d   } ) core"

#. type: kindex
#: ../doc/gforth.texi:5295 ../doc/gforth.texi:5296
#, no-wrap
msgid "s>d"
msgstr "s>d"

#. type: format
#: ../doc/gforth.texi:5299
#, no-wrap
msgid "@code{s>d} ( @i{n -- d  }) core ``s-to-d''\n"
msgstr "@code{s>d} ( @i{n -- d  }) core ``s-to-d''\n"

#. type: findex
#: ../doc/gforth.texi:5301
#, no-wrap
msgid "d>s ( @var{ d -- n   } ) double"
msgstr "d>s ( @var{ d -- n   } ) double"

#. type: kindex
#: ../doc/gforth.texi:5302 ../doc/gforth.texi:5303
#, no-wrap
msgid "d>s"
msgstr "d>s"

#. type: format
#: ../doc/gforth.texi:5306
#, no-wrap
msgid "@code{d>s} ( @i{d -- n  }) double ``d-to-s''\n"
msgstr "@code{d>s} ( @i{d -- n  }) double ``d-to-s''\n"

#. type: findex
#: ../doc/gforth.texi:5308
#, no-wrap
msgid "d+ ( @var{ ud1 ud2 -- ud  } ) double"
msgstr "d+ ( @var{ ud1 ud2 -- ud  } ) double"

#. type: kindex
#: ../doc/gforth.texi:5309 ../doc/gforth.texi:5310
#, no-wrap
msgid "d+"
msgstr "d+"

#. type: format
#: ../doc/gforth.texi:5313
#, no-wrap
msgid "@code{d+} ( @i{ud1 ud2 -- ud }) double ``d-plus''\n"
msgstr "@code{d+} ( @i{ud1 ud2 -- ud }) double ``d-plus''\n"

#. type: findex
#: ../doc/gforth.texi:5315
#, no-wrap
msgid "d- ( @var{ d1 d2 -- d  } ) double"
msgstr "d- ( @var{ d1 d2 -- d  } ) double"

#. type: kindex
#: ../doc/gforth.texi:5316 ../doc/gforth.texi:5317
#, no-wrap
msgid "d-"
msgstr "d-"

#. type: format
#: ../doc/gforth.texi:5320
#, no-wrap
msgid "@code{d-} ( @i{d1 d2 -- d }) double ``d-minus''\n"
msgstr "@code{d-} ( @i{d1 d2 -- d }) double ``d-minus''\n"

#. type: findex
#: ../doc/gforth.texi:5322
#, no-wrap
msgid "dnegate ( @var{ d1 -- d2  } ) double"
msgstr "dnegate ( @var{ d1 -- d2  } ) double"

#. type: kindex
#: ../doc/gforth.texi:5323 ../doc/gforth.texi:5324
#, no-wrap
msgid "dnegate"
msgstr "dnegate"

#. type: format
#: ../doc/gforth.texi:5327
#, no-wrap
msgid "@code{dnegate} ( @i{d1 -- d2 }) double ``d-negate''\n"
msgstr "@code{dnegate} ( @i{d1 -- d2 }) double ``d-negate''\n"

#. type: findex
#: ../doc/gforth.texi:5329
#, no-wrap
msgid "dabs ( @var{ d -- ud   } ) double"
msgstr "dabs ( @var{ d -- ud   } ) double"

#. type: kindex
#: ../doc/gforth.texi:5330 ../doc/gforth.texi:5331
#, no-wrap
msgid "dabs"
msgstr "dabs"

#. type: format
#: ../doc/gforth.texi:5334
#, no-wrap
msgid "@code{dabs} ( @i{d -- ud  }) double ``d-abs''\n"
msgstr "@code{dabs} ( @i{d -- ud  }) double ``d-abs''\n"

#. type: findex
#: ../doc/gforth.texi:5336
#, no-wrap
msgid "dmin ( @var{ d1 d2 -- d   } ) double"
msgstr "dmin ( @var{ d1 d2 -- d   } ) double"

#. type: kindex
#: ../doc/gforth.texi:5337 ../doc/gforth.texi:5338
#, no-wrap
msgid "dmin"
msgstr "dmin"

#. type: format
#: ../doc/gforth.texi:5341
#, no-wrap
msgid "@code{dmin} ( @i{d1 d2 -- d  }) double ``d-min''\n"
msgstr "@code{dmin} ( @i{d1 d2 -- d  }) double ``d-min''\n"

#. type: findex
#: ../doc/gforth.texi:5343
#, no-wrap
msgid "dmax ( @var{ d1 d2 -- d   } ) double"
msgstr "dmax ( @var{ d1 d2 -- d   } ) double"

#. type: kindex
#: ../doc/gforth.texi:5344 ../doc/gforth.texi:5345
#, no-wrap
msgid "dmax"
msgstr "dmax"

#. type: format
#: ../doc/gforth.texi:5348
#, no-wrap
msgid "@code{dmax} ( @i{d1 d2 -- d  }) double ``d-max''\n"
msgstr "@code{dmax} ( @i{d1 d2 -- d  }) double ``d-max''\n"

#. type: node
#: ../doc/gforth.texi:5352 ../doc/gforth.texi:5378 ../doc/gforth.texi:5379
#: ../doc/gforth.texi:5675
#, no-wrap
msgid "Integer division"
msgstr "Integer division"

#. type: cindex
#: ../doc/gforth.texi:5354
#, no-wrap
msgid "mixed precision arithmetic words"
msgstr "mixed precision arithmetic words"

#. type: findex
#: ../doc/gforth.texi:5356
#, no-wrap
msgid "m+ ( @var{ d1 n -- d2  } ) double"
msgstr "m+ ( @var{ d1 n -- d2  } ) double"

#. type: kindex
#: ../doc/gforth.texi:5357 ../doc/gforth.texi:5358
#, no-wrap
msgid "m+"
msgstr "m+"

#. type: format
#: ../doc/gforth.texi:5361
#, no-wrap
msgid "@code{m+} ( @i{d1 n -- d2 }) double ``m-plus''\n"
msgstr "@code{m+} ( @i{d1 n -- d2 }) double ``m-plus''\n"

#. type: findex
#: ../doc/gforth.texi:5363
#, no-wrap
msgid "m* ( @var{ n1 n2 -- d  } ) core"
msgstr "m* ( @var{ n1 n2 -- d  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5364 ../doc/gforth.texi:5365
#, no-wrap
msgid "m*"
msgstr "m*"

#. type: format
#: ../doc/gforth.texi:5368
#, no-wrap
msgid "@code{m*} ( @i{n1 n2 -- d }) core ``m-star''\n"
msgstr "@code{m*} ( @i{n1 n2 -- d }) core ``m-star''\n"

#. type: findex
#: ../doc/gforth.texi:5370
#, no-wrap
msgid "um* ( @var{ u1 u2 -- ud  } ) core"
msgstr "um* ( @var{ u1 u2 -- ud  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5371 ../doc/gforth.texi:5372
#, no-wrap
msgid "um*"
msgstr "um*"

#. type: format
#: ../doc/gforth.texi:5375
#, no-wrap
msgid "@code{um*} ( @i{u1 u2 -- ud }) core ``u-m-star''\n"
msgstr "@code{um*} ( @i{u1 u2 -- ud }) core ``u-m-star''\n"

#. type: node
#: ../doc/gforth.texi:5378 ../doc/gforth.texi:5675 ../doc/gforth.texi:5676
#: ../doc/gforth.texi:5861
#, no-wrap
msgid "Two-stage integer division"
msgstr "Two-stage integer division"

#. type: cindex
#: ../doc/gforth.texi:5380
#, no-wrap
msgid "dividing integers"
msgstr "dividing integers"

#. type: cindex
#: ../doc/gforth.texi:5381
#, no-wrap
msgid "modulus"
msgstr "modulus"

#. type: cindex
#: ../doc/gforth.texi:5382
#, no-wrap
msgid "remainder"
msgstr "remainder"

#. type: cindex
#: ../doc/gforth.texi:5383
#, no-wrap
msgid "Floating-point unidentified fault"
msgstr "Floating-point unidentified fault"

#. type: cindex
#: ../doc/gforth.texi:5384 ../doc/gforth.texi:5659
#, no-wrap
msgid "Division by zero"
msgstr "Division by zero"

#. type: cindex
#: ../doc/gforth.texi:5385
#, no-wrap
msgid "Result out of range"
msgstr "Result out of range"

#. type: table
#: ../doc/gforth.texi:5391
msgid ""
"Below you find a considerable number of words for dealing with divisions.  A "
"major difference between them is in dealing with signed division: Do the "
"words support signed division (those with the @code{U} prefix do not)?"
msgstr "以下にあるように、 除算を扱うために相当な数のワードがあることが分かります。 これらの主な違いは、 符号付き除算の処理にあります。 これらのワードはどのようにして符号付き除算に対応するのでしょうか？ (@code{U} プレフィックスが付いたワードでは符号付き除算に対応しません)"

#. type: cindex
#: ../doc/gforth.texi:5392
#, no-wrap
msgid "floored division"
msgstr "floored division"

#. type: cindex
#: ../doc/gforth.texi:5393
#, no-wrap
msgid "symmetric division"
msgstr "symmetric division"

#. type: table
#: ../doc/gforth.texi:5403
msgid ""
"If they do, do they round towards negative infinity (floored division, "
"suffix @code{F}), or towards 0 (symmetric division, suffix @code{S}).  The "
"standard leaves the issue implementation-defined for most standard words "
"(@code{/ mod /mod */ */mod m*/}), and different systems have made different "
"choices.  Gforth implements these words as floored (since Gforth 0.7).  "
"There is only a difference between floored and symmetric division if the "
"dividend and the divisor have different signs, and the dividend is not a "
"multiple of the divisor.  The following table illustrates the results:"
msgstr "商を四捨五入して整数に丸める場合、 負の無限大に向かって丸めるのでしょうか(floored division(床除算)、 接尾辞 @code{F})、 それとも 0 に向かって丸めるのでしょうか(symmetric division、接尾辞 @code{S})。  標準では、 ほとんどの標準ワード(@code{/ mod /mod */ */mod m*/})について、 問題なのは、 各々の実装依存のままであり、 システムごとに異なる選択が行われています。  Gforth では、こ​​れらの単語をfloorとして実装します(Gforth 0.7 以降)。  floored division と symmetric division の違いは、 割られる数と割る数の符号が異なり、 かつ、 割られる数が割る数の倍数で無い場合のみです。 以下の表に組み合わせの結果を示します:"

#                       floored          symmetric
# 割られる  割る数      余り 商            余り 商
#     10      7           3   1              3   1
#    -10      7           4  -2             -3  -1  
#     10     -7          -4  -2              3  -1
#    -10     -7          -3   1             -3   1
#
# 余り = 被除数 - (商 * 除数)
#                       floored          symmetric
# 割られる  割る数      余り 商            余り 商
#    -10      7           4  -2             -3  -1  
#
# -10 - ( -2 * 7 ) = -10 - ( -14 ) = 4
#. type: example
#: ../doc/gforth.texi:5411
#, no-wrap
msgid ""
"                      floored          symmetric\n"
"dividend divisor remainder quotient remainder quotient\n"
"    10      7           3   1              3   1\n"
"   -10      7           4  -2             -3  -1\n"
"    10     -7          -4  -2              3  -1\n"
"   -10     -7          -3   1             -3   1\n"
msgstr ""
"                      floored          symmetric\n"
"割られる  割る数      余り 商            余り 商\n"
"    10      7           3   1              3   1\n"
"   -10      7           4  -2             -3  -1\n"
"    10     -7          -4  -2              3  -1\n"
"   -10     -7          -3   1             -3   1\n"

#. type: table
#: ../doc/gforth.texi:5421
msgid ""
"The common case where floored vs.@: symmetric makes a difference is when "
"dividends n1 with varying sign are divided by the same positive divisor n2; "
"in that case you usually want floored division, because then the remainder "
"is always positive and does not change sign depending on the dividend; also, "
"with floored division, the quotient always increases by 1 when n1 increases "
"by n2, while with symmetric division there is no increase in the quotient "
"for -n2<n1<n2 (the quotient is 0 in this range)."
msgstr "floored と symmetric とが違いを生む一般的なケースは、 様々な符号の被除数(割られる数) n1 が、 同一の正の除数(割る数) n2 で除算される場合です。 同一の正の除数(割る数) n2 で除算される場合、 通常は floored division が必要で、なぜなら、 同一の正の除数(割る数) n2 で除算される場合、 余りは常に正となり、 被除数(割られる数)に応じて符号が変化しないからです。 また、 floored division では、 n1 が n2 増加すると商は常に 1 増加しますが、 symmetric division では、 -n2<n1<n2 の場合は商は増加しません(この範囲では商は 0 です)。"

#. type: table
#: ../doc/gforth.texi:5426
msgid ""
"In any case, if you divide numbers where floored vs.@: symmetric makes a "
"difference, you should think about which variant is the right one for you, "
"and then use either the appropriately suffixed Gforth words, or the standard "
"words @code{fm/mod} or @code{sm/rem}."
msgstr "いずれの場合でも、 floored と symmetric とで違いが生ずる数値を除算する場合は、 どのバリエーションが適切であるかを考えてから、 適切な接尾辞を付けた Gforth ワードか、 標準ワードの @code{fm/mod} または @code{sm/rem} のいずれかを使用する必要があります。 "

#. type: table
#: ../doc/gforth.texi:5428
msgid "Single-by-single-cell division:"
msgstr "単精度セル同士の除算:"

#. type: findex
#: ../doc/gforth.texi:5429
#, no-wrap
msgid "/ ( @var{ n1 n2 -- n   } ) core"
msgstr "/ ( @var{ n1 n2 -- n   } ) core"

#. type: kindex
#: ../doc/gforth.texi:5430 ../doc/gforth.texi:5431
#, no-wrap
msgid "/"
msgstr "/"

#. type: format
#: ../doc/gforth.texi:5434
#, no-wrap
msgid "@code{/} ( @i{n1 n2 -- n  }) core ``slash''\n"
msgstr "@code{/} ( @i{n1 n2 -- n  }) core ``slash''\n"

#. type: table
#: ../doc/gforth.texi:5436
msgid "n=n1/n2"
msgstr "n=n1/n2"

#. type: findex
#: ../doc/gforth.texi:5438
#, no-wrap
msgid "/s ( @var{ n1 n2 -- n  } ) gforth-1.0"
msgstr "/s ( @var{ n1 n2 -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5439 ../doc/gforth.texi:5440
#, no-wrap
msgid "/s"
msgstr "/s"

#. type: format
#: ../doc/gforth.texi:5443
#, no-wrap
msgid "@code{/s} ( @i{n1 n2 -- n }) gforth-1.0 ``slash-s''\n"
msgstr "@code{/s} ( @i{n1 n2 -- n }) gforth-1.0 ``slash-s''\n"

#. type: findex
#: ../doc/gforth.texi:5445
#, no-wrap
msgid "/f ( @var{ n1 n2 -- n  } ) gforth-1.0"
msgstr "/f ( @var{ n1 n2 -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5446 ../doc/gforth.texi:5447
#, no-wrap
msgid "/f"
msgstr "/f"

#. type: format
#: ../doc/gforth.texi:5450
#, no-wrap
msgid "@code{/f} ( @i{n1 n2 -- n }) gforth-1.0 ``slash-f''\n"
msgstr "@code{/f} ( @i{n1 n2 -- n }) gforth-1.0 ``slash-f''\n"

#. type: findex
#: ../doc/gforth.texi:5452
#, no-wrap
msgid "u/ ( @var{ u1 u2 -- u  } ) gforth-1.0"
msgstr "u/ ( @var{ u1 u2 -- u  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5453 ../doc/gforth.texi:5454
#, no-wrap
msgid "u/"
msgstr "u/"

#. type: format
#: ../doc/gforth.texi:5457
#, no-wrap
msgid "@code{u/} ( @i{u1 u2 -- u }) gforth-1.0 ``u-slash''\n"
msgstr "@code{u/} ( @i{u1 u2 -- u }) gforth-1.0 ``u-slash''\n"

#. type: findex
#: ../doc/gforth.texi:5459
#, no-wrap
msgid "mod ( @var{ n1 n2 -- n   } ) core"
msgstr "mod ( @var{ n1 n2 -- n   } ) core"

#. type: kindex
#: ../doc/gforth.texi:5460 ../doc/gforth.texi:5461
#, no-wrap
msgid "mod"
msgstr "mod"

#. type: format
#: ../doc/gforth.texi:5464
#, no-wrap
msgid "@code{mod} ( @i{n1 n2 -- n  }) core ``mod''\n"
msgstr "@code{mod} ( @i{n1 n2 -- n  }) core ``mod''\n"

#. type: table
#: ../doc/gforth.texi:5466
msgid "n is the modulus of n1/n2"
msgstr "n は n1/n2 の余り(modulus)"

#. type: findex
#: ../doc/gforth.texi:5468
#, no-wrap
msgid "mods ( @var{ n1 n2 -- n  } ) gforth-1.0"
msgstr "mods ( @var{ n1 n2 -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5469 ../doc/gforth.texi:5470
#, no-wrap
msgid "mods"
msgstr "mods"

#. type: format
#: ../doc/gforth.texi:5473
#, no-wrap
msgid "@code{mods} ( @i{n1 n2 -- n }) gforth-1.0 ``mod-s''\n"
msgstr "@code{mods} ( @i{n1 n2 -- n }) gforth-1.0 ``mod-s''\n"

#. type: findex
#: ../doc/gforth.texi:5475
#, no-wrap
msgid "modf ( @var{ n1 n2 -- n  } ) gforth-1.0"
msgstr "modf ( @var{ n1 n2 -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5476 ../doc/gforth.texi:5477
#, no-wrap
msgid "modf"
msgstr "modf"

#. type: format
#: ../doc/gforth.texi:5480
#, no-wrap
msgid "@code{modf} ( @i{n1 n2 -- n }) gforth-1.0 ``modf''\n"
msgstr "@code{modf} ( @i{n1 n2 -- n }) gforth-1.0 ``modf''\n"

#. type: findex
#: ../doc/gforth.texi:5482
#, no-wrap
msgid "umod ( @var{ u1 u2 -- u  } ) gforth-1.0"
msgstr "umod ( @var{ u1 u2 -- u  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5483 ../doc/gforth.texi:5484
#, no-wrap
msgid "umod"
msgstr "umod"

#. type: format
#: ../doc/gforth.texi:5487
#, no-wrap
msgid "@code{umod} ( @i{u1 u2 -- u }) gforth-1.0 ``umod''\n"
msgstr "@code{umod} ( @i{u1 u2 -- u }) gforth-1.0 ``umod''\n"

#. type: findex
#: ../doc/gforth.texi:5489
#, no-wrap
msgid "/mod ( @var{ n1 n2 -- n3 n4   } ) core"
msgstr "/mod ( @var{ n1 n2 -- n3 n4   } ) core"

#. type: kindex
#: ../doc/gforth.texi:5490 ../doc/gforth.texi:5491
#, no-wrap
msgid "/mod"
msgstr "/mod"

#. type: format
#: ../doc/gforth.texi:5494
#, no-wrap
msgid "@code{/mod} ( @i{n1 n2 -- n3 n4  }) core ``slash-mod''\n"
msgstr "@code{/mod} ( @i{n1 n2 -- n3 n4  }) core ``slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5496
msgid "n1=n2*n4+n3; n3 is the modulus, n4 the quotient."
msgstr "n1/n2 を行い、 n3 が余り(modulus)、 n4 が商です(n1=n2*n4+n3)。"

#. type: findex
#: ../doc/gforth.texi:5498
#, no-wrap
msgid "/mods ( @var{ n1 n2 -- n3 n4  } ) gforth-1.0"
msgstr "/mods ( @var{ n1 n2 -- n3 n4  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5499 ../doc/gforth.texi:5500
#, no-wrap
msgid "/mods"
msgstr "/mods"

#. type: format
#: ../doc/gforth.texi:5503
#, no-wrap
msgid "@code{/mods} ( @i{n1 n2 -- n3 n4 }) gforth-1.0 ``slash-mod-s''\n"
msgstr "@code{/mods} ( @i{n1 n2 -- n3 n4 }) gforth-1.0 ``slash-mod-s''\n"

#. type: table
#: ../doc/gforth.texi:5505
msgid "n3 is the remainder, n4 the quotient"
msgstr "n3 が余り(remainder)、 n4 が商"

#. type: findex
#: ../doc/gforth.texi:5506
#, no-wrap
msgid "/modf ( @var{ n1 n2 -- n3 n4  } ) gforth-1.0"
msgstr "/modf ( @var{ n1 n2 -- n3 n4  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5507 ../doc/gforth.texi:5508
#, no-wrap
msgid "/modf"
msgstr "/modf"

#. type: format
#: ../doc/gforth.texi:5511
#, no-wrap
msgid "@code{/modf} ( @i{n1 n2 -- n3 n4 }) gforth-1.0 ``slash-mod-f''\n"
msgstr "@code{/modf} ( @i{n1 n2 -- n3 n4 }) gforth-1.0 ``slash-mod-f''\n"

#. type: table
#: ../doc/gforth.texi:5513
msgid "n3 is the modulus, n4 the quotient"
msgstr "n3 が余り(modulus)、 n4 が商"

#. type: findex
#: ../doc/gforth.texi:5514
#, no-wrap
msgid "u/mod ( @var{ u1 u2 -- u3 u4  } ) gforth-1.0"
msgstr "u/mod ( @var{ u1 u2 -- u3 u4  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5515 ../doc/gforth.texi:5516
#, no-wrap
msgid "u/mod"
msgstr "u/mod"

#. type: format
#: ../doc/gforth.texi:5519
#, no-wrap
msgid "@code{u/mod} ( @i{u1 u2 -- u3 u4 }) gforth-1.0 ``u-slash-mod''\n"
msgstr "@code{u/mod} ( @i{u1 u2 -- u3 u4 }) gforth-1.0 ``u-slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5521
msgid "u3 is the modulus, u4 the quotient"
msgstr "u3 が余り(modulus)、 u4 が商"

#. type: table
#: ../doc/gforth.texi:5527
msgid ""
"Double-by-single-cell division with single-cell results; these words are "
"roughly as fast as the words above on some architectures (e.g., AMD64), but "
"much slower on others (e.g., an order of magnitude on various Aarch64 CPUs)."
msgstr "倍精度セルを単精度セルで割って単精度セルの結果を得る; これらのワードは、 一部のアーキテクチャ(AMD64 など)では上記ワードとほぼ同じ速度ですが、 他のアーキテクチャ(さまざまな Aarch64 CPU など)でははるかに遅くなります。"

#. type: findex
#: ../doc/gforth.texi:5528
#, no-wrap
msgid "fm/mod ( @var{ d1 n1 -- n2 n3  } ) core"
msgstr "fm/mod ( @var{ d1 n1 -- n2 n3  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5529 ../doc/gforth.texi:5530
#, no-wrap
msgid "fm/mod"
msgstr "fm/mod"

#. type: format
#: ../doc/gforth.texi:5533
#, no-wrap
msgid "@code{fm/mod} ( @i{d1 n1 -- n2 n3 }) core ``f-m-slash-mod''\n"
msgstr "@code{fm/mod} ( @i{d1 n1 -- n2 n3 }) core ``f-m-slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5535
msgid ""
"Floored division: @i{d1} = @i{n3}*@i{n1}+@i{n2}, @i{n1}>@i{n2}>=0 or "
"0>=@i{n2}>@i{n1}."
msgstr "Floored division: @i{d1} = @i{n3}*@i{n1}+@i{n2}, @i{n1}>@i{n2}>=0 or 0>=@i{n2}>@i{n1}."

#. type: findex
#: ../doc/gforth.texi:5536
#, no-wrap
msgid "sm/rem ( @var{ d1 n1 -- n2 n3  } ) core"
msgstr "sm/rem ( @var{ d1 n1 -- n2 n3  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5537 ../doc/gforth.texi:5538
#, no-wrap
msgid "sm/rem"
msgstr "sm/rem"

#. type: format
#: ../doc/gforth.texi:5541
#, no-wrap
msgid "@code{sm/rem} ( @i{d1 n1 -- n2 n3 }) core ``s-m-slash-rem''\n"
msgstr "@code{sm/rem} ( @i{d1 n1 -- n2 n3 }) core ``s-m-slash-rem''\n"

#. type: table
#: ../doc/gforth.texi:5543
msgid ""
"Symmetric division: @i{d1} = @i{n3}*@i{n1}+@i{n2}, sign(@i{n2})=sign(@i{d1}) "
"or 0."
msgstr "Symmetric division: @i{d1} = @i{n3}*@i{n1}+@i{n2}, sign(@i{n2})=sign(@i{d1}) or 0."

#. type: findex
#: ../doc/gforth.texi:5544
#, no-wrap
msgid "um/mod ( @var{ ud u1 -- u2 u3  } ) core"
msgstr "um/mod ( @var{ ud u1 -- u2 u3  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5545 ../doc/gforth.texi:5546
#, no-wrap
msgid "um/mod"
msgstr "um/mod"

#. type: format
#: ../doc/gforth.texi:5549
#, no-wrap
msgid "@code{um/mod} ( @i{ud u1 -- u2 u3 }) core ``u-m-slash-mod''\n"
msgstr "@code{um/mod} ( @i{ud u1 -- u2 u3 }) core ``u-m-slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5551
msgid "ud=u3*u1+u2, 0<=u2<u1"
msgstr "ud=u3*u1+u2, 0<=u2<u1"

#. type: findex
#: ../doc/gforth.texi:5552
#, no-wrap
msgid "du/mod ( @var{ d u -- n u1  } ) gforth-1.0"
msgstr "du/mod ( @var{ d u -- n u1  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5553 ../doc/gforth.texi:5554
#, no-wrap
msgid "du/mod"
msgstr "du/mod"

#. type: format
#: ../doc/gforth.texi:5557
#, no-wrap
msgid "@code{du/mod} ( @i{d u -- n u1 }) gforth-1.0 ``du-slash-mod''\n"
msgstr "@code{du/mod} ( @i{d u -- n u1 }) gforth-1.0 ``du-slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5559
msgid "d=n*u+u1, 0<=u1<u; PolyForth style mixed division"
msgstr "d=n*u+u1, 0<=u1<u; PolyForth スタイルの混合除算"

#. type: findex
#: ../doc/gforth.texi:5560
#, no-wrap
msgid "*/ ( @var{ ( n1 n2 n3 -- n4   } ) core"
msgstr "*/ ( @var{ ( n1 n2 n3 -- n4   } ) core"

#. type: kindex
#: ../doc/gforth.texi:5561 ../doc/gforth.texi:5562
#, no-wrap
msgid "*/"
msgstr "*/"

#. type: format
#: ../doc/gforth.texi:5565
#, no-wrap
msgid "@code{*/} ( @i{( n1 n2 n3 -- n4  }) core ``star-slash''\n"
msgstr "@code{*/} ( @i{( n1 n2 n3 -- n4  }) core ``star-slash''\n"

#. type: table
#: ../doc/gforth.texi:5567 ../doc/gforth.texi:5576 ../doc/gforth.texi:5584
msgid "n4=(n1*n2)/n3, with the intermediate result being double"
msgstr "n4=(n1*n2)/n3 中間結果は倍精度"

#. type: findex
#: ../doc/gforth.texi:5569
#, no-wrap
msgid "*/s ( @var{ n1 n2 n3 -- n4  } ) gforth-1.0"
msgstr "*/s ( @var{ n1 n2 n3 -- n4  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5570 ../doc/gforth.texi:5571
#, no-wrap
msgid "*/s"
msgstr "*/s"

#. type: format
#: ../doc/gforth.texi:5574
#, no-wrap
msgid "@code{*/s} ( @i{n1 n2 n3 -- n4 }) gforth-1.0 ``star-slash-s''\n"
msgstr "@code{*/s} ( @i{n1 n2 n3 -- n4 }) gforth-1.0 ``star-slash-s''\n"

#. type: findex
#: ../doc/gforth.texi:5577
#, no-wrap
msgid "*/f ( @var{ n1 n2 n3 -- n4  } ) gforth-1.0"
msgstr "*/f ( @var{ n1 n2 n3 -- n4  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5578 ../doc/gforth.texi:5579
#, no-wrap
msgid "*/f"
msgstr "*/f"

#. type: format
#: ../doc/gforth.texi:5582
#, no-wrap
msgid "@code{*/f} ( @i{n1 n2 n3 -- n4 }) gforth-1.0 ``star-slash-f''\n"
msgstr "@code{*/f} ( @i{n1 n2 n3 -- n4 }) gforth-1.0 ``star-slash-f''\n"

#. type: findex
#: ../doc/gforth.texi:5585
#, no-wrap
msgid "u*/ ( @var{ u1 u2 u3 -- u4  } ) gforth-1.0"
msgstr "u*/ ( @var{ u1 u2 u3 -- u4  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5586 ../doc/gforth.texi:5587
#, no-wrap
msgid "u*/"
msgstr "u*/"

#. type: format
#: ../doc/gforth.texi:5590
#, no-wrap
msgid "@code{u*/} ( @i{u1 u2 u3 -- u4 }) gforth-1.0 ``u-star-slash''\n"
msgstr "@code{u*/} ( @i{u1 u2 u3 -- u4 }) gforth-1.0 ``u-star-slash''\n"

#. type: table
#: ../doc/gforth.texi:5592
msgid "u4=(u1*u2)/u3, with the intermediate result being double."
msgstr "u4=(u1*u2)/u3 中間結果は倍精度"

#. type: findex
#: ../doc/gforth.texi:5593
#, no-wrap
msgid "*/mod ( @var{ n1 n2 n3 -- n4 n5   } ) core"
msgstr "*/mod ( @var{ n1 n2 n3 -- n4 n5   } ) core"

#. type: kindex
#: ../doc/gforth.texi:5594 ../doc/gforth.texi:5595
#, no-wrap
msgid "*/mod"
msgstr "*/mod"

#. type: format
#: ../doc/gforth.texi:5598
#, no-wrap
msgid "@code{*/mod} ( @i{n1 n2 n3 -- n4 n5  }) core ``star-slash-mod''\n"
msgstr "@code{*/mod} ( @i{n1 n2 n3 -- n4 n5  }) core ``star-slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5601
msgid ""
"n1*n2=n3*n5+n4, with the intermediate result (n1*n2) being double; n4 is the "
"modulus, n5 the quotient."
msgstr "n1*n2=n3*n5+n4 中間結果(n1*n2)は倍精度、 n4 は剰余、 n5 は商。"

#. type: findex
#: ../doc/gforth.texi:5603
#, no-wrap
msgid "*/mods ( @var{ n1 n2 n3 -- n4 n5  } ) gforth-1.0"
msgstr "*/mods ( @var{ n1 n2 n3 -- n4 n5  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5604 ../doc/gforth.texi:5605
#, no-wrap
msgid "*/mods"
msgstr "*/mods"

#. type: format
#: ../doc/gforth.texi:5608
#, no-wrap
msgid "@code{*/mods} ( @i{n1 n2 n3 -- n4 n5 }) gforth-1.0 ``star-slash-mod-s''\n"
msgstr "@code{*/mods} ( @i{n1 n2 n3 -- n4 n5 }) gforth-1.0 ``star-slash-mod-s''\n"

#. type: table
#: ../doc/gforth.texi:5611
msgid ""
"n1*n2=n3*n5+n4, with the intermediate result (n1*n2) being double; n4 is the "
"remainder, n5 the quotient"
msgstr "n1*n2=n3*n5+n4, 中間結果(n1*n2)は倍精度、 n4 は余り(remainder)、 n5 は商"

#. type: findex
#: ../doc/gforth.texi:5612
#, no-wrap
msgid "*/modf ( @var{ n1 n2 n3 -- n4 n5  } ) gforth-1.0"
msgstr "*/modf ( @var{ n1 n2 n3 -- n4 n5  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5613 ../doc/gforth.texi:5614
#, no-wrap
msgid "*/modf"
msgstr "*/modf"

#. type: format
#: ../doc/gforth.texi:5617
#, no-wrap
msgid "@code{*/modf} ( @i{n1 n2 n3 -- n4 n5 }) gforth-1.0 ``star-slash-mod-f''\n"
msgstr "@code{*/modf} ( @i{n1 n2 n3 -- n4 n5 }) gforth-1.0 ``star-slash-mod-f''\n"

#. type: table
#: ../doc/gforth.texi:5620
msgid ""
"n1*n2=n3*n5+n4, with the intermediate result (n1*n2) being double; n4 is the "
"modulus, n5 the quotient"
msgstr "n1*n2=n3*n5+n4 中間結果(n1*n2)は倍精度。 n4 余り(modulus)、n5 は商"

#. type: findex
#: ../doc/gforth.texi:5621
#, no-wrap
msgid "u*/mod ( @var{ u1 u2 u3 -- u4 u5  } ) gforth-1.0"
msgstr "u*/mod ( @var{ u1 u2 u3 -- u4 u5  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5622 ../doc/gforth.texi:5623
#, no-wrap
msgid "u*/mod"
msgstr "u*/mod"

#. type: format
#: ../doc/gforth.texi:5626
#, no-wrap
msgid "@code{u*/mod} ( @i{u1 u2 u3 -- u4 u5 }) gforth-1.0 ``u-star-slash-mod''\n"
msgstr "@code{u*/mod} ( @i{u1 u2 u3 -- u4 u5 }) gforth-1.0 ``u-star-slash-mod''\n"

#. type: table
#: ../doc/gforth.texi:5628
msgid "u1*u2=u3*u5+u4, with the intermediate result (u1*u2) being double."
msgstr "u1*u2=u3*u5+u4 中間結果(u1*u2)は倍精度。"

#. type: table
#: ../doc/gforth.texi:5632
msgid ""
"Division with double-cell results; these words are much slower than the "
"words above."
msgstr "除算結果を2倍長セル(double-cell)で得ます。 以下のワード群は上記のワード群よりもはるかに遅いです。"

#. type: findex
#: ../doc/gforth.texi:5633
#, no-wrap
msgid "ud/mod ( @var{ ud1 u2 -- urem udquot   } ) gforth-0.2"
msgstr "ud/mod ( @var{ ud1 u2 -- urem udquot   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:5634 ../doc/gforth.texi:5635
#, no-wrap
msgid "ud/mod"
msgstr "ud/mod"

#. type: format
#: ../doc/gforth.texi:5638
#, no-wrap
msgid "@code{ud/mod} ( @i{ud1 u2 -- urem udquot  }) gforth-0.2 ``ud/mod''\n"
msgstr "@code{ud/mod} ( @i{ud1 u2 -- urem udquot  }) gforth-0.2 ``ud/mod''\n"

#. type: table
#: ../doc/gforth.texi:5641
msgid ""
"divide unsigned double @i{ud1} by @i{u2}, resulting in a unsigned double "
"quotient @i{udquot} and a single remainder @i{urem}."
msgstr "符号無し倍精度 @i{ud1} を @i{u2} で割る。 結果は、符号なし倍精度の商 @i{udquot} と、 単精度の余り(remainder) @i{urem} です。"

#. type: findex
#: ../doc/gforth.texi:5643
#, no-wrap
msgid "m*/ ( @var{ d1 n2 u3 -- dquot   } ) double"
msgstr "m*/ ( @var{ d1 n2 u3 -- dquot   } ) double"

#. type: kindex
#: ../doc/gforth.texi:5644 ../doc/gforth.texi:5645
#, no-wrap
msgid "m*/"
msgstr "m*/"

#. type: format
#: ../doc/gforth.texi:5648
#, no-wrap
msgid "@code{m*/} ( @i{d1 n2 u3 -- dquot  }) double ``m-star-slash''\n"
msgstr "@code{m*/} ( @i{d1 n2 u3 -- dquot  }) double ``m-star-slash''\n"

#. type: table
#: ../doc/gforth.texi:5651
msgid ""
"dquot=(d1*n2)/u3, with the intermediate result being triple-precision.  In "
"ANS Forth u3 can only be a positive signed number."
msgstr "dquot=(d1*n2)/u3,  中間結果は3倍精度です。 ANS Forth では u3 は正の符号付き数値のみです。"

#. type: table
#: ../doc/gforth.texi:5657
msgid ""
"You can use the following environmental query @code{floored} "
"(@pxref{Environmental Queries}) to learn whether @code{/ mod /mod */ */mod "
"m*/} use floored or symmetric division."
msgstr "環境クエリ(environmental query) @code{floored} を使用すると、 @code{/ mod /mod */ */mod m*/} が floored division か symmetric division かを確認できます(@pxref{Environmental Queries})。"

#. type: cindex
#: ../doc/gforth.texi:5658
#, no-wrap
msgid "Floating-point unidentified fault (on integer division)"
msgstr "Floating-point unidentified fault (on integer division)"

#. type: cindex
#: ../doc/gforth.texi:5660
#, no-wrap
msgid "Result out of range (on integer division)"
msgstr "Result out of range (on integer division)"

#. type: table
#: ../doc/gforth.texi:5673
msgid ""
"One other aspect of the integer division words is that most of them can "
"overflow, and division by zero is mathematically undefined.  What happens if "
"you hit one of these conditions depends on the engine, the hardware, and the "
"operating system: The engine @code{gforth} tries hard to throw the "
"appropriate error -10 (Division by zero) or -11 (Result out of range), but "
"on some platforms throws -55 (Floating-point unidentified fault).  The "
"engine @code{gforth-fast} may produce an inappropriate throw code (and error "
"message), or may produce no error, just produce a bogus value.  I.e., you "
"should not bet on such conditions being thrown, but for quicker debugging "
"@code{gforth} catches more and produces more accurate errors than "
"@code{gforth-fast}."
msgstr "整数除算ワードのもう 1 つの側面は、 整数除算ワードのほとんどがオーバーフローする可能性があり、 かつ、 ゼロによる除算が数学的に定義されていないことです。  これらの条件のいずれかに該当した場合に何が起こるかは、 エンジンやハードウェアやオペレーティング・システムによって異なります。 @code{gforth} エンジンは、適切なエラーである -10 (Division by zero;ゼロ除算) または -11 (Result out of range;範囲外の結果) を throw しようと懸命に試みます、 が、 しかし、 一部のプラットフォームでは -55（浮動小数点未確認エラー;Floating-point unidentified fault）が throw されます。  @code{gforth-fast} エンジンでは、 不適切な throw コード(およびエラー・メッセージ)を生成する場合や、 エラーを生成せずに嘘の値のみを生成する場合があります。  つまり、 あなたは、 そのような条件が throw されることに賭けるべきではありません。 そして、 あなたが迅速なデバッグを行うためには、 @code{gforth} エンジンは @code{gforth-fast} エンジンよりも多くのエラーをキャッチし、 より正確なエラーを生成します。"

#. type: node
#: ../doc/gforth.texi:5675 ../doc/gforth.texi:5861 ../doc/gforth.texi:5862
#: ../doc/gforth.texi:6102
#, no-wrap
msgid "Bitwise operations"
msgstr "Bitwise operations"

#. type: cindex
#: ../doc/gforth.texi:5677
#, no-wrap
msgid "dividing many integers with the same divisor"
msgstr "dividing many integers with the same divisor"

#. type: cindex
#: ../doc/gforth.texi:5678
#, no-wrap
msgid "reciprocal of integer"
msgstr "reciprocal of integer"

#. type: table
#: ../doc/gforth.texi:5686
msgid ""
"On most hardware, multiplication is significantly faster than division.  So "
"if you have to divide many numbers by the same divisor, it is usually faster "
"to determine the reciprocal of the divisor once and multiply the numbers "
"with the reciprocal.  For integers, this is tricky, so Gforth packages this "
"work into the words described in this section."
msgstr "(Two-stage integer divison;2段階除算)ほとんどのハードウェアでは、 乗算は除算よりも大幅に高速です。 したがって、 多くの数値を同じ除数(割る数)で除算する必要がある場合は、 通常、 除数の逆数を一度求めて、 その逆数を数値に乗算する方が高速です。  整数の場合、 これは技巧的になってしまうため、 Gforth ではこの作業をこのセクションで説明するワード群にパッケージ化しています。"

#. type: table
#: ../doc/gforth.texi:5690
msgid ""
"Let's start with an example: You want to divide all elements of an array of "
"cells by the same number n.  A straightforward way to implement this is:"
msgstr "以下の例から始めるとしましょう。 あなたがセルの配列のすべての要素を同じ数値 n で除算したいとします。 これを素直に実装すると以下のようになります:"

#. type: example
#: ../doc/gforth.texi:5697
#, no-wrap
msgid ""
": array/ ( addr u n -- )\n"
"  -rot cells bounds u+do\n"
"    i @@ over / i !\n"
"  1 cells +loop\n"
"  drop ;\n"
msgstr ""
": array/ ( addr u n -- )\n"
"  -rot cells bounds u+do\n"
"    i @@ over / i !\n"
"  1 cells +loop\n"
"  drop ;\n"

#. type: table
#: ../doc/gforth.texi:5700
msgid "A more efficient version looks like this:"
msgstr "より効率的なバージョンは以下のようになります:"

#. type: example
#: ../doc/gforth.texi:5708
#, no-wrap
msgid ""
": array/ ( addr u n -- )\n"
"  @{: | reci[ staged/-size ] :@}\n"
"  reci[ /f-stage1m\n"
"  cells bounds u+do\n"
"    i @@ reci[ /f-stage2m i !\n"
"  1 cells +loop ;\n"
msgstr ""
": array/ ( addr u n -- )\n"
"  @{: | reci[ staged/-size ] :@}\n"
"  reci[ /f-stage1m\n"
"  cells bounds u+do\n"
"    i @@ reci[ /f-stage2m i !\n"
"  1 cells +loop ;\n"

#. type: table
#: ../doc/gforth.texi:5715
msgid ""
"This example first creates a local buffer @code{reci[} with size "
"@code{staged/-size} for storing the reciprocal data.  Then @code{/f-stage1m} "
"computes the reciprocal of @i{n} and stores it in @code{reci[}.  Finally, "
"inside the loop @code{/f-stage2m} uses the data in @code{reci[} to compute "
"the quotient."
msgstr "この例では、 まず、 逆数データを格納するためのサイズ @code{staged/-size} のローカル・バッファ @code{reci[} を作成します。 次に、 @code{/f-stage1m} は @i{n} の逆数を計算し、 @code{reci[} に格納します。 最後に、 ループ内で @code{/f-stage2m} が @code{reci[} のデータを使用して除算の商を計算します。"

#. type: table
#: ../doc/gforth.texi:5726
msgid ""
"There are some limitations: Only positive divisors are supported for @code{/"
"f-stage1m}; for @code{u/-stage1m} you can use a divisor of 2 or higher.  You "
"get an error if you try to use an unsupported divisor.  You must initalize "
"the reciprocal buffer for the floored second-stage words with @code{/f-"
"stage1m} and for the unsigned second-stage words with @code{u/-stage1m}.  "
"You must not modify the reciprocal buffer between the first stage and the "
"second stage; basically, don't treat it as a memory buffer, but as something "
"that is only mutable by the first stage; the point of this rule is that "
"future versions of Gforth will not consider aliasing of this buffer."
msgstr "これにはいくつかの制限があります。 @code{/f-stage1m} では正の除数のみがサポートされます。  @code{u/-stage1m} には 2 以上の数を使用できます。  サポートされていない除数を使用しようとすると、 エラーが発生します。  floored 第2ステージ・ワードの相互(reciprocal)バッファは @code{/f-stage1m} で初期化し、 符号な無しの第2ステージ・ワードの相互バッファは @code{u/-stage1m} で初期化する必要があります。 最初のステージと2番目のステージの間で相互バッファを変更してはなりません。 基本的に、 これはメモリ・バッファとして扱うのではなく、 最初のステージでのみ変更可能なものとして扱います。 このルールのポイントは、 Gforth の将来のバージョンではこのバッファのエイリアスが考慮されないということです。"

#. type: table
#: ../doc/gforth.texi:5728
msgid "The words are:"
msgstr "これらのワードが以下です:"

#. type: findex
#: ../doc/gforth.texi:5729
#, no-wrap
msgid "staged/-size ( @var{ -- u   } ) gforth-1.0"
msgstr "staged/-size ( @var{ -- u   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5730 ../doc/gforth.texi:5731
#, no-wrap
msgid "staged/-size"
msgstr "staged/-size"

#. type: format
#: ../doc/gforth.texi:5734
#, no-wrap
msgid "@code{staged/-size} ( @i{-- u  }) gforth-1.0 ``staged-slash-size''\n"
msgstr "@code{staged/-size} ( @i{-- u  }) gforth-1.0 ``staged-slash-size''\n"

#. type: table
#: ../doc/gforth.texi:5736
msgid "Size of buffer for @code{u/-stage1m} or @code{/f-stage1m}."
msgstr "@code{u/-stage1m} または @code{/f-stage1m} のバッファのサイズ。"

#. type: findex
#: ../doc/gforth.texi:5738
#, no-wrap
msgid "/f-stage1m ( @var{ n addr-reci --   } ) gforth-1.0"
msgstr "/f-stage1m ( @var{ n addr-reci --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5739 ../doc/gforth.texi:5740
#, no-wrap
msgid "/f-stage1m"
msgstr "/f-stage1m"

#. type: format
#: ../doc/gforth.texi:5743
#, no-wrap
msgid "@code{/f-stage1m} ( @i{n addr-reci --  }) gforth-1.0 ``slash-f-stage1m''\n"
msgstr "@code{/f-stage1m} ( @i{n addr-reci --  }) gforth-1.0 ``slash-f-stage1m''\n"

#. type: table
#: ../doc/gforth.texi:5747
msgid ""
"Compute the reciprocal of @i{n} and store it in the buffer @i{addr-reci} of "
"size @code{staged/-size}.  Throws an error if @i{n}<1."
msgstr "@i{n} の逆数を計算し、 サイズ @code{staged/-size} のバッファ @i{addr-reci} に格納します。  @i{n}<1 の場合、 エラーを出します(throw)。"

#. type: findex
#: ../doc/gforth.texi:5749
#, no-wrap
msgid "/f-stage2m ( @var{ n1 a-reci -- nquotient  } ) gforth-1.0"
msgstr "/f-stage2m ( @var{ n1 a-reci -- nquotient  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5750 ../doc/gforth.texi:5751
#, no-wrap
msgid "/f-stage2m"
msgstr "/f-stage2m"

#. type: format
#: ../doc/gforth.texi:5754
#, no-wrap
msgid "@code{/f-stage2m} ( @i{n1 a-reci -- nquotient }) gforth-1.0 ``slash-f-stage2m''\n"
msgstr "@code{/f-stage2m} ( @i{n1 a-reci -- nquotient }) gforth-1.0 ``slash-f-stage2m''\n"

#. type: table
#: ../doc/gforth.texi:5757
msgid ""
"@i{Nquotient} is the result of dividing @i{n1} by the divisor represented by "
"@i{a-reci}, which was computed by @code{/f-stage1m}."
msgstr "@i{Nquotient} は、@i{n1} を @i{a-reci} で表される除数で除算した結果であり、 @code{/f-stage1m} によって計算されます。"

#. type: findex
#: ../doc/gforth.texi:5758
#, no-wrap
msgid "modf-stage2m ( @var{ n1 a-reci -- umodulus  } ) gforth-1.0"
msgstr "modf-stage2m ( @var{ n1 a-reci -- umodulus  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5759 ../doc/gforth.texi:5760
#, no-wrap
msgid "modf-stage2m"
msgstr "modf-stage2m"

#. type: format
#: ../doc/gforth.texi:5763
#, no-wrap
msgid "@code{modf-stage2m} ( @i{n1 a-reci -- umodulus }) gforth-1.0 ``mod-f-stage2m''\n"
msgstr "@code{modf-stage2m} ( @i{n1 a-reci -- umodulus }) gforth-1.0 ``mod-f-stage2m''\n"

#. type: table
#: ../doc/gforth.texi:5766
msgid ""
"@i{Umodulus} is the remainder of dividing @i{n1} by the divisor represented "
"by @i{a-reci}, which was computed by @code{/f-stage1m}."
msgstr "@i{Umodulus} は、 @i{n1} を @i{a-reci} で表される除数で割った余り(remainder)で、 @code{/f-stage1m} によって計算されます。"

#. type: findex
#: ../doc/gforth.texi:5767
#, no-wrap
msgid "/modf-stage2m ( @var{ n1 a-reci -- umodulus nquotient  } ) gforth-1.0"
msgstr "/modf-stage2m ( @var{ n1 a-reci -- umodulus nquotient  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5768 ../doc/gforth.texi:5769
#, no-wrap
msgid "/modf-stage2m"
msgstr "/modf-stage2m"

#. type: format
#: ../doc/gforth.texi:5772
#, no-wrap
msgid "@code{/modf-stage2m} ( @i{n1 a-reci -- umodulus nquotient }) gforth-1.0 ``slash-mod-f-stage2m''\n"
msgstr "@code{/modf-stage2m} ( @i{n1 a-reci -- umodulus nquotient }) gforth-1.0 ``slash-mod-f-stage2m''\n"

#. type: table
#: ../doc/gforth.texi:5776
msgid ""
"@i{Nquotient} is the quotient and @i{umodulus} is the remainder of dividing "
"@i{n1} by the divisor represented by @i{a-reci}, which was computed by "
"@code{/f-stage1m}."
msgstr "@i{Nquotient} は商で、 @i{umodulus} は @i{n1} を @i{a-reci} で表される除数で割った余り(remainder)で、 @code{/f-stage1m} によって計算されます。 "

#. type: findex
#: ../doc/gforth.texi:5777
#, no-wrap
msgid "u/-stage1m ( @var{ u addr-reci --   } ) gforth-1.0"
msgstr "u/-stage1m ( @var{ u addr-reci --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5778 ../doc/gforth.texi:5779
#, no-wrap
msgid "u/-stage1m"
msgstr "u/-stage1m"

#. type: format
#: ../doc/gforth.texi:5782
#, no-wrap
msgid "@code{u/-stage1m} ( @i{u addr-reci --  }) gforth-1.0 ``u-slash-stage1m''\n"
msgstr "@code{u/-stage1m} ( @i{u addr-reci --  }) gforth-1.0 ``u-slash-stage1m''\n"

#. type: table
#: ../doc/gforth.texi:5786
msgid ""
"Compute the reciprocal of @i{u} and store it in the buffer @i{addr-reci} of "
"size @code{staged/-size}.  Throws an error if @i{u}<2."
msgstr "@i{u} の逆数を計算し、 サイズ @code{staged/-size} のバッファ @i{addr-reci} に格納します。  @i{u}<2 の場合、 エラーを出します(throw)。"

#. type: findex
#: ../doc/gforth.texi:5788
#, no-wrap
msgid "u/-stage2m ( @var{ u1 a-reci -- uquotient  } ) gforth-1.0"
msgstr "u/-stage2m ( @var{ u1 a-reci -- uquotient  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5789 ../doc/gforth.texi:5790
#, no-wrap
msgid "u/-stage2m"
msgstr "u/-stage2m"

#. type: format
#: ../doc/gforth.texi:5793
#, no-wrap
msgid "@code{u/-stage2m} ( @i{u1 a-reci -- uquotient }) gforth-1.0 ``u-slash-stage2m''\n"
msgstr "@code{u/-stage2m} ( @i{u1 a-reci -- uquotient }) gforth-1.0 ``u-slash-stage2m''\n"

#. type: table
#: ../doc/gforth.texi:5796
msgid ""
"@i{Uquotient} is the result of dividing @i{u1} by the divisor represented by "
"@i{a-reci}, which was computed by @code{u/-stage1m}."
msgstr "@i{Uquotient} は、 @i{u1} を @i{a-reci} で表される除数で除算した結果であり、 @code{u/-stage1m} によって計算されます。"

#. type: findex
#: ../doc/gforth.texi:5797
#, no-wrap
msgid "umod-stage2m ( @var{ u1 a-reci -- umodulus  } ) gforth-1.0"
msgstr "umod-stage2m ( @var{ u1 a-reci -- umodulus  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5798 ../doc/gforth.texi:5799
#, no-wrap
msgid "umod-stage2m"
msgstr "umod-stage2m"

#. type: format
#: ../doc/gforth.texi:5802
#, no-wrap
msgid "@code{umod-stage2m} ( @i{u1 a-reci -- umodulus }) gforth-1.0 ``u-mod-stage2m''\n"
msgstr "@code{umod-stage2m} ( @i{u1 a-reci -- umodulus }) gforth-1.0 ``u-mod-stage2m''\n"

#. type: table
#: ../doc/gforth.texi:5805
msgid ""
"@i{Umodulus} is the remainder of dividing @i{u1} by the divisor represented "
"by @i{a-reci}, which was computed by @code{u/-stage1m}."
msgstr "@i{Umodulus} は、 @i{u1} を @i{a-reci} で表される除数で割った余り(remainder)で、@code{u/-stage1m} によって計算されます。"

#. type: findex
#: ../doc/gforth.texi:5806
#, no-wrap
msgid "u/mod-stage2m ( @var{ u1 a-reci -- umodulus uquotient  } ) gforth-1.0"
msgstr "u/mod-stage2m ( @var{ u1 a-reci -- umodulus uquotient  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5807 ../doc/gforth.texi:5808
#, no-wrap
msgid "u/mod-stage2m"
msgstr "u/mod-stage2m"

#. type: format
#: ../doc/gforth.texi:5811
#, no-wrap
msgid "@code{u/mod-stage2m} ( @i{u1 a-reci -- umodulus uquotient }) gforth-1.0 ``u-slash-mod-stage2m''\n"
msgstr "@code{u/mod-stage2m} ( @i{u1 a-reci -- umodulus uquotient }) gforth-1.0 ``u-slash-mod-stage2m''\n"

#. type: table
#: ../doc/gforth.texi:5815
msgid ""
"@i{Uquotient} is the quotient and @i{umodulus} is the remainder of dividing "
"@i{u1} by the divisor represented by @i{a-reci}, which was computed by "
"@code{u/-stage1m}."
msgstr "@i{Uquotient} は商で、 @i{umodulus} は @i{a-reci} で表される除数で @i{u1} を割った余り(remainder)で、@code{u/-stage1m} によって計算されます。 "

#. type: table
#: ../doc/gforth.texi:5818
msgid "Gforth currently does not support staged symmetrical division."
msgstr "Gforth は現在、 段階的対称除算(staged symmetrical division)をサポートしていません。"

#. type: table
#: ../doc/gforth.texi:5821
msgid ""
"You can recover the divisor from (the address of) a reciprocal with "
"@code{staged/-divisor @@}:"
msgstr "@code{staged/-divisor @@} を使用すると、 逆数(のアドレス)から除数を復旧(recover)できます:"

#. type: findex
#: ../doc/gforth.texi:5822
#, no-wrap
msgid "staged/-divisor ( @var{ addr1 -- addr2   } ) gforth-1.0"
msgstr "staged/-divisor ( @var{ addr1 -- addr2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5823 ../doc/gforth.texi:5824
#, no-wrap
msgid "staged/-divisor"
msgstr "staged/-divisor"

#. type: format
#: ../doc/gforth.texi:5827
#, no-wrap
msgid "@code{staged/-divisor} ( @i{addr1 -- addr2  }) gforth-1.0 ``staged-slash-divisor''\n"
msgstr "@code{staged/-divisor} ( @i{addr1 -- addr2  }) gforth-1.0 ``staged-slash-divisor''\n"

#. type: table
#: ../doc/gforth.texi:5830
msgid ""
"@i{Addr1} is the address of a reciprocal, @i{addr2} is the address "
"containing the divisor from which the reciprocal was computed."
msgstr "@i{Addr1} は逆数のアドレス、 @i{addr2} は逆数の計算元となった除数を含むアドレスです。"

#. type: table
#: ../doc/gforth.texi:5836
msgid ""
"This can be useful when looking at the decompiler output of Gforth: a "
"division by a constant is often compiled to a literal containing the address "
"of a reciprocal followed by a second-stage word."
msgstr "これは、Gforth の逆コンパイラ出力を確認するときに役立ちます。 定数による除算は、 多くの場合、 逆数のアドレスとその後に続く第2ステージ・ワードを含むリテラルにコンパイルされます。"

#. type: table
#: ../doc/gforth.texi:5846
msgid ""
"The performance impact of using these words strongly depends on the "
"architecture (does it have hardware division?) and the specific "
"implementation (how fast is hardware division?), but just to give you an "
"idea about the relative performance of these words, here are the cycles per "
"iteration of a microbenchmark (which performs the mentioned word once per "
"iteration) on two AMD64 implementations; the @i{norm} column shows the "
"normal division word (e.g., @code{u/}), while the @i{stg2} column shows the "
"corresponding stage2 word (e.g., @code{u/-stage2m}):"
msgstr "これらのワードを使用した場合のパフォーマンスへの影響は、 アーキテクチャ(ハードウェア除算があるかどうか)と、 特定の実装(ハードウェア除算の速さはどれくらいか)に大きく依存しますが、 これらのワードの相対的なパフォーマンスについてのアイデアを提供するために、 以下を示します。 2 つの AMD64 実装でのマイクロ・ベンチマークの反復ごとのサイクルを以下に示します。 @i{norm} 列は通常の除算ワード(例: @code{u/})を示し、stg2 列は対応する stage2 ワード(例: @code{u/-stage2m})を示します:"

#. type: example
#: ../doc/gforth.texi:5858
#, no-wrap
msgid ""
" Skylake              Zen2\n"
"norm stg2           norm stg2\n"
"41.3 15.8 u/\t    35.2 21.4 u/\t   \n"
"39.8 19.7 umod\t    36.9 25.8 umod\t   \n"
"44.0 25.3 u/mod\t    43.0 33.9 u/mod\t   \n"
"48.7 16.9 /f\t    36.2 22.5 /f\t   \n"
"47.9 20.5 modf\t    37.9 27.1 modf\t   \n"
"53.0 24.6 /modf\t    45.8 35.4 /modf\t   \n"
"    227.2 u/stage1      101.9 u/stage1\n"
"    159.8 /fstage1       97.7 /fstage1\n"
msgstr ""
"intel Skylake       AMD Zen2\n"
"norm stg2           norm stg2\n"
"41.3 15.8 u/        35.2 21.4 u/\n"
"39.8 19.7 umod      36.9 25.8 umod\n"
"44.0 25.3 u/mod     43.0 33.9 u/mod\n"
"48.7 16.9 /f        36.2 22.5 /f\n"
"47.9 20.5 modf      37.9 27.1 modf\n"
"53.0 24.6 /modf     45.8 35.4 /modf\n"
"    227.2 u/stage1      101.9 u/stage1\n"
"    159.8 /fstage1       97.7 /fstage1\n"

#. type: node
#: ../doc/gforth.texi:5861 ../doc/gforth.texi:6102 ../doc/gforth.texi:6103
#: ../doc/gforth.texi:6361
#, no-wrap
msgid "Numeric comparison"
msgstr "Numeric comparison"

#. type: cindex
#: ../doc/gforth.texi:5863
#, no-wrap
msgid "bitwise operation words"
msgstr "bitwise operation words"

#. type: findex
#: ../doc/gforth.texi:5866
#, no-wrap
msgid "and ( @var{ w1 w2 -- w  } ) core"
msgstr "and ( @var{ w1 w2 -- w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5867 ../doc/gforth.texi:5868
#, no-wrap
msgid "and"
msgstr "and"

#. type: format
#: ../doc/gforth.texi:5871
#, no-wrap
msgid "@code{and} ( @i{w1 w2 -- w }) core ``and''\n"
msgstr "@code{and} ( @i{w1 w2 -- w }) core ``and''\n"

#. type: findex
#: ../doc/gforth.texi:5873
#, no-wrap
msgid "or ( @var{ w1 w2 -- w  } ) core"
msgstr "or ( @var{ w1 w2 -- w  } ) core"

#. type: table
#: ../doc/gforth.texi:5874 ../doc/gforth.texi:5875 ../doc/gforth.texi:19839
#: ../doc/gforth.texi:19843
#, no-wrap
msgid "or"
msgstr "or"

#. type: format
#: ../doc/gforth.texi:5878
#, no-wrap
msgid "@code{or} ( @i{w1 w2 -- w }) core ``or''\n"
msgstr "@code{or} ( @i{w1 w2 -- w }) core ``or''\n"

#. type: findex
#: ../doc/gforth.texi:5880
#, no-wrap
msgid "xor ( @var{ w1 w2 -- w  } ) core"
msgstr "xor ( @var{ w1 w2 -- w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5881 ../doc/gforth.texi:5882
#, no-wrap
msgid "xor"
msgstr "xor"

#. type: format
#: ../doc/gforth.texi:5885
#, no-wrap
msgid "@code{xor} ( @i{w1 w2 -- w }) core ``x-or''\n"
msgstr "@code{xor} ( @i{w1 w2 -- w }) core ``x-or''\n"

#. type: findex
#: ../doc/gforth.texi:5887
#, no-wrap
msgid "invert ( @var{ w1 -- w2  } ) core"
msgstr "invert ( @var{ w1 -- w2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5888 ../doc/gforth.texi:5889
#, no-wrap
msgid "invert"
msgstr "invert"

#. type: format
#: ../doc/gforth.texi:5892
#, no-wrap
msgid "@code{invert} ( @i{w1 -- w2 }) core ``invert''\n"
msgstr "@code{invert} ( @i{w1 -- w2 }) core ``invert''\n"

#. type: findex
#: ../doc/gforth.texi:5894
#, no-wrap
msgid "mux ( @var{ u1 u2 u3 -- u  } ) gforth-1.0"
msgstr "mux ( @var{ u1 u2 u3 -- u  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5895 ../doc/gforth.texi:5896
#, no-wrap
msgid "mux"
msgstr "mux"

#. type: format
#: ../doc/gforth.texi:5899
#, no-wrap
msgid "@code{mux} ( @i{u1 u2 u3 -- u }) gforth-1.0 ``mux''\n"
msgstr "@code{mux} ( @i{u1 u2 u3 -- u }) gforth-1.0 ``mux''\n"

#. type: table
#: ../doc/gforth.texi:5903
msgid ""
"Multiplex: For every bit in @i{u3}: for a 1 bit, select the corresponding "
"bit from @i{u1}, otherwise the corresponding bit from @i{u2}.  E.g., "
"@code{%0011 %1100 %1010 mux} gives @code{%0110}"
msgstr "multiplex(多重化): @i{u3} の各ビットについて、 そのビットが 1 の場合は @i{u1} から対応するビットを選択し、 それ以外の場合は @i{u2} から対応するビットを選択します。 たとえば、 @code{%0011 %1100 %1010 mux} は @code{%0110} となります。"

#. type: findex
#: ../doc/gforth.texi:5904
#, no-wrap
msgid "lshift ( @var{ u1 u -- u2  } ) core"
msgstr "lshift ( @var{ u1 u -- u2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5905 ../doc/gforth.texi:5906
#, no-wrap
msgid "lshift"
msgstr "lshift"

#. type: format
#: ../doc/gforth.texi:5909
#, no-wrap
msgid "@code{lshift} ( @i{u1 u -- u2 }) core ``l-shift''\n"
msgstr "@code{lshift} ( @i{u1 u -- u2 }) core ``l-shift''\n"

#. type: table
#: ../doc/gforth.texi:5911
msgid "Shift @i{u1} left by @i{u} bits."
msgstr "@i{u1} を @i{u} ビット左シフトします。"

#. type: findex
#: ../doc/gforth.texi:5912
#, no-wrap
msgid "rshift ( @var{ u1 u -- u2  } ) core"
msgstr "rshift ( @var{ u1 u -- u2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5913 ../doc/gforth.texi:5914
#, no-wrap
msgid "rshift"
msgstr "rshift"

#. type: format
#: ../doc/gforth.texi:5917
#, no-wrap
msgid "@code{rshift} ( @i{u1 u -- u2 }) core ``r-shift''\n"
msgstr "@code{rshift} ( @i{u1 u -- u2 }) core ``r-shift''\n"

#. type: table
#: ../doc/gforth.texi:5920
msgid ""
"Shift @i{u1} (cell) right by @i{u} bits, filling the shifted-in bits with "
"zero (logical/unsigned shift)."
msgstr "@i{u1} (セル) を @i{u} ビットだけ右にシフトし、 シフトインされたビットを 0 で埋めます(論理/符号無しシフトです)。"

#. type: findex
#: ../doc/gforth.texi:5921
#, no-wrap
msgid "arshift ( @var{ n1 u -- n2  } ) gforth-1.0"
msgstr "arshift ( @var{ n1 u -- n2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5922 ../doc/gforth.texi:5923
#, no-wrap
msgid "arshift"
msgstr "arshift"

#. type: format
#: ../doc/gforth.texi:5926
#, no-wrap
msgid "@code{arshift} ( @i{n1 u -- n2 }) gforth-1.0 ``ar-shift''\n"
msgstr "@code{arshift} ( @i{n1 u -- n2 }) gforth-1.0 ``ar-shift''\n"

#. type: table
#: ../doc/gforth.texi:5929
msgid ""
"Shift @i{n1} (cell) right by @i{u} bits, filling the shifted-in bits from "
"the sign bit of @i{n1} (arithmetic shift)."
msgstr "@i{n1} (セル) を @i{u} ビット右にシフトし、@i{n1} の符号ビットからシフトインされたビットを埋めます (算術シフト)。"

#. type: findex
#: ../doc/gforth.texi:5930
#, no-wrap
msgid "dlshift ( @var{ ud1 u -- ud2  } ) gforth-1.0"
msgstr "dlshift ( @var{ ud1 u -- ud2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5931 ../doc/gforth.texi:5932
#, no-wrap
msgid "dlshift"
msgstr "dlshift"

#. type: format
#: ../doc/gforth.texi:5935
#, no-wrap
msgid "@code{dlshift} ( @i{ud1 u -- ud2 }) gforth-1.0 ``dlshift''\n"
msgstr "@code{dlshift} ( @i{ud1 u -- ud2 }) gforth-1.0 ``dlshift''\n"

#. type: table
#: ../doc/gforth.texi:5937
msgid "Shift @i{ud1} (double-cell) left by @i{u} bits."
msgstr "@i{ud1} (2倍長セル) を @i{u} ビット左にシフトします。"

#. type: findex
#: ../doc/gforth.texi:5938
#, no-wrap
msgid "drshift ( @var{ ud1 u -- ud2  } ) gforth-1.0"
msgstr "drshift ( @var{ ud1 u -- ud2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5939 ../doc/gforth.texi:5940
#, no-wrap
msgid "drshift"
msgstr "drshift"

#. type: format
#: ../doc/gforth.texi:5943
#, no-wrap
msgid "@code{drshift} ( @i{ud1 u -- ud2 }) gforth-1.0 ``drshift''\n"
msgstr "@code{drshift} ( @i{ud1 u -- ud2 }) gforth-1.0 ``drshift''\n"

#. type: table
#: ../doc/gforth.texi:5946
msgid ""
"Shift @i{ud1} (double-cell) right by @i{u} bits, filling the shifted-in bits "
"with zero (logical/unsigned shift)."
msgstr "@i{ud1} (2倍長セル) を @i{u} ビットだけ右にシフトし、 シフトインされたビットを 0 で埋めます (論理/符号なしシフト)。"

#. type: findex
#: ../doc/gforth.texi:5947
#, no-wrap
msgid "darshift ( @var{ d1 u -- d2  } ) gforth-1.0"
msgstr "darshift ( @var{ d1 u -- d2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5948 ../doc/gforth.texi:5949
#, no-wrap
msgid "darshift"
msgstr "darshift"

#. type: format
#: ../doc/gforth.texi:5952
#, no-wrap
msgid "@code{darshift} ( @i{d1 u -- d2 }) gforth-1.0 ``darshift''\n"
msgstr "@code{darshift} ( @i{d1 u -- d2 }) gforth-1.0 ``darshift''\n"

#. type: table
#: ../doc/gforth.texi:5955
msgid ""
"Shift @i{d1} (double-cell) right by @i{u} bits, filling the shifted-in bits "
"from the sign bit of @i{d1} (arithmetic shift)."
msgstr "@i{d1} (2倍長セル) を @i{u} ビット右にシフトし、@i{d1} の符号ビットからシフトインされたビットで埋めます (算術シフト)。"

#. type: findex
#: ../doc/gforth.texi:5956
#, no-wrap
msgid "2* ( @var{ n1 -- n2  } ) core"
msgstr "2* ( @var{ n1 -- n2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5957 ../doc/gforth.texi:5958
#, no-wrap
msgid "2*"
msgstr "2*"

#. type: format
#: ../doc/gforth.texi:5961
#, no-wrap
msgid "@code{2*} ( @i{n1 -- n2 }) core ``two-star''\n"
msgstr "@code{2*} ( @i{n1 -- n2 }) core ``two-star''\n"

#. type: table
#: ../doc/gforth.texi:5963
msgid "Shift left by 1; also works on unsigned numbers"
msgstr "1 つ左にシフトします。符号なしの数値でも機能します"

#. type: findex
#: ../doc/gforth.texi:5964
#, no-wrap
msgid "2/ ( @var{ n1 -- n2  } ) core"
msgstr "2/ ( @var{ n1 -- n2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:5965 ../doc/gforth.texi:5966
#, no-wrap
msgid "2/"
msgstr "2/"

#. type: format
#: ../doc/gforth.texi:5969
#, no-wrap
msgid "@code{2/} ( @i{n1 -- n2 }) core ``two-slash''\n"
msgstr "@code{2/} ( @i{n1 -- n2 }) core ``two-slash''\n"

#. type: table
#: ../doc/gforth.texi:5972
msgid ""
"Arithmetic shift right by 1.  For signed numbers this is a floored division "
"by 2 (note that @code{/} not necessarily floors)."
msgstr "1 つ右に算術シフトします。 符号付き数値の場合、 これは 2 による floored division になります(@code{/} は必ずしも floors ではないことに注意してください)。"

#. type: findex
#: ../doc/gforth.texi:5973
#, no-wrap
msgid "d2* ( @var{ d1 -- d2  } ) double"
msgstr "d2* ( @var{ d1 -- d2  } ) double"

#. type: kindex
#: ../doc/gforth.texi:5974 ../doc/gforth.texi:5975
#, no-wrap
msgid "d2*"
msgstr "d2*"

#. type: format
#: ../doc/gforth.texi:5978
#, no-wrap
msgid "@code{d2*} ( @i{d1 -- d2 }) double ``d-two-star''\n"
msgstr "@code{d2*} ( @i{d1 -- d2 }) double ``d-two-star''\n"

#. type: table
#: ../doc/gforth.texi:5980
msgid "Shift double-cell left by 1; also works on unsigned numbers"
msgstr "2倍長セルを左に 1 シフトします。 符号なしの数値でも機能します"

#. type: findex
#: ../doc/gforth.texi:5981
#, no-wrap
msgid "d2/ ( @var{ d1 -- d2  } ) double"
msgstr "d2/ ( @var{ d1 -- d2  } ) double"

#. type: kindex
#: ../doc/gforth.texi:5982 ../doc/gforth.texi:5983
#, no-wrap
msgid "d2/"
msgstr "d2/"

#. type: format
#: ../doc/gforth.texi:5986
#, no-wrap
msgid "@code{d2/} ( @i{d1 -- d2 }) double ``d-two-slash''\n"
msgstr "@code{d2/} ( @i{d1 -- d2 }) double ``d-two-slash''\n"

#. type: table
#: ../doc/gforth.texi:5989
msgid ""
"Arithmetic shift right by 1.  For signed numbers this is a floored division "
"by 2."
msgstr "1 つ右に算術シフトします。 符号付き数値の場合、これは 2 による floored division になります。"

#. type: findex
#: ../doc/gforth.texi:5990
#, no-wrap
msgid ">pow2 ( @var{ u1 -- u2  } ) gforth-1.0"
msgstr ">pow2 ( @var{ u1 -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5991 ../doc/gforth.texi:5992
#, no-wrap
msgid ">pow2"
msgstr ">pow2"

#. type: format
#: ../doc/gforth.texi:5995
#, no-wrap
msgid "@code{>pow2} ( @i{u1 -- u2 }) gforth-1.0 ``to-pow2''\n"
msgstr "@code{>pow2} ( @i{u1 -- u2 }) gforth-1.0 ``to-pow2''\n"

#. type: table
#: ../doc/gforth.texi:5997
msgid "@i{u2} is the lowest power-of-2 number with @i{u2>=u1}."
msgstr "@i{u2} は、@i{u2>=u1} の最小の 2 のべき乗数です。"

#. type: findex
#: ../doc/gforth.texi:5998
#, no-wrap
msgid "log2 ( @var{ u -- n  } ) gforth-1.0"
msgstr "log2 ( @var{ u -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:5999 ../doc/gforth.texi:6000
#, no-wrap
msgid "log2"
msgstr "log2"

#. type: format
#: ../doc/gforth.texi:6003
#, no-wrap
msgid "@code{log2} ( @i{u -- n }) gforth-1.0 ``log2''\n"
msgstr "@code{log2} ( @i{u -- n }) gforth-1.0 ``log2''\n"

#. type: table
#: ../doc/gforth.texi:6006
msgid ""
"@i{N} is the rounded-down binary logarithm of @i{u}, i.e., the index of the "
"first set bit; if @i{u}=0, @i{n}=-1."
msgstr "@i{N} は @i{u} の切り捨て2進対数、 つまり最初に設定されたビットのインデックスです。 @i{u}=0 の場合は @i{n}=-1 です。"

#. type: findex
#: ../doc/gforth.texi:6007
#, no-wrap
msgid "pow2? ( @var{ u -- f   } ) gforth-1.0"
msgstr "pow2? ( @var{ u -- f   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6008 ../doc/gforth.texi:6009
#, no-wrap
msgid "pow2?"
msgstr "pow2?"

#. type: format
#: ../doc/gforth.texi:6012
#, no-wrap
msgid "@code{pow2?} ( @i{u -- f  }) gforth-1.0 ``pow-two-query''\n"
msgstr "@code{pow2?} ( @i{u -- f  }) gforth-1.0 ``pow-two-query''\n"

#. type: table
#: ../doc/gforth.texi:6015
msgid ""
"@i{f} is true iff @i{u} is a power of two, i.e., there is exactly one bit "
"set in @i{u}."
msgstr "@i{f} は、 @i{u} が 2 の累乗の場合、 つまり @i{u} のビットが 1 つだけセットされている場合に true になります。"

#. type: findex
#: ../doc/gforth.texi:6017
#, no-wrap
msgid "ctz ( @var{ x -- u   } ) gforth-1.0"
msgstr "ctz ( @var{ x -- u   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6018 ../doc/gforth.texi:6019
#, no-wrap
msgid "ctz"
msgstr "ctz"

#. type: format
#: ../doc/gforth.texi:6022
#, no-wrap
msgid "@code{ctz} ( @i{x -- u  }) gforth-1.0 ``c-t-z''\n"
msgstr "@code{ctz} ( @i{x -- u  }) gforth-1.0 ``c-t-z''\n"

#. type: table
#: ../doc/gforth.texi:6024
msgid "count trailing zeros in binary representation of x"
msgstr "x の2進数表現で末尾からのゼロの数を数える"

#. type: table
#: ../doc/gforth.texi:6032
msgid ""
"Unlike most other operations, rotation of narrower units cannot easily be "
"synthesized from rotation of wider units, so using cell-wide and double-wide "
"rotation operations means that the results depend on the cell width.  For "
"published algorithms or cell-width-independent results, you usually need to "
"use a fixed-width rotation operation."
msgstr "他のほとんどの操作とは異なり、 幅の狭いユニットのローテートと幅の広いユニットのローテートを簡単に合成することはできないため、 1倍長セル幅および 2倍幅のセル幅のローテート操作を使用すると、 結果がセル幅に依存することになります。  公開されたアルゴリズムまたはセル幅に依存しない結果の場合、 通常は固定幅のローテート操作を使用する必要があります。"

#. type: findex
#: ../doc/gforth.texi:6033
#, no-wrap
msgid "wrol ( @var{ u1 u -- u2  } ) gforth-1.0"
msgstr "wrol ( @var{ u1 u -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6034 ../doc/gforth.texi:6035
#, no-wrap
msgid "wrol"
msgstr "wrol"

#. type: format
#: ../doc/gforth.texi:6038
#, no-wrap
msgid "@code{wrol} ( @i{u1 u -- u2 }) gforth-1.0 ``wrol''\n"
msgstr "@code{wrol} ( @i{u1 u -- u2 }) gforth-1.0 ``wrol''\n"

#. type: table
#: ../doc/gforth.texi:6041
msgid ""
"Rotate the least significant 16 bits of @i{u1} left by @i{u} bits, set the "
"other bits to 0."
msgstr "@i{u1} の下位側 16 ビットを @i{u} ビットだけ左に回転し、 他のビットを 0 にセットします。"

#. type: findex
#: ../doc/gforth.texi:6042
#, no-wrap
msgid "wror ( @var{ u1 u -- u2  } ) gforth-1.0"
msgstr "wror ( @var{ u1 u -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6043 ../doc/gforth.texi:6044
#, no-wrap
msgid "wror"
msgstr "wror"

#. type: format
#: ../doc/gforth.texi:6047
#, no-wrap
msgid "@code{wror} ( @i{u1 u -- u2 }) gforth-1.0 ``wror''\n"
msgstr "@code{wror} ( @i{u1 u -- u2 }) gforth-1.0 ``wror''\n"

#. type: table
#: ../doc/gforth.texi:6050
msgid ""
"Rotate the least significant 16 bits of @i{u1} right by @i{u} bits, set the "
"other bits to 0."
msgstr "@i{u1} の下位側 16 ビットを @i{u} ビットだけ右回転し、 他のビットを 0 にセットします。"

#. type: findex
#: ../doc/gforth.texi:6051
#, no-wrap
msgid "lrol ( @var{ u1 u -- u2  } ) gforth-1.0"
msgstr "lrol ( @var{ u1 u -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6052 ../doc/gforth.texi:6053
#, no-wrap
msgid "lrol"
msgstr "lrol"

#. type: format
#: ../doc/gforth.texi:6056
#, no-wrap
msgid "@code{lrol} ( @i{u1 u -- u2 }) gforth-1.0 ``lrol''\n"
msgstr "@code{lrol} ( @i{u1 u -- u2 }) gforth-1.0 ``lrol''\n"

#. type: table
#: ../doc/gforth.texi:6059
msgid ""
"Rotate the least significant 32 bits of @i{u1} left by @i{u} bits, set the "
"other bits to 0."
msgstr "@i{u1} の下位側 32 ビットを @i{u} ビットだけ左に回転し、 他のビットを 0 にセットします。"

#. type: findex
#: ../doc/gforth.texi:6060
#, no-wrap
msgid "lror ( @var{ u1 u -- u2  } ) gforth-1.0"
msgstr "lror ( @var{ u1 u -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6061 ../doc/gforth.texi:6062
#, no-wrap
msgid "lror"
msgstr "lror"

#. type: format
#: ../doc/gforth.texi:6065
#, no-wrap
msgid "@code{lror} ( @i{u1 u -- u2 }) gforth-1.0 ``lror''\n"
msgstr "@code{lror} ( @i{u1 u -- u2 }) gforth-1.0 ``lror''\n"

#. type: table
#: ../doc/gforth.texi:6068
msgid ""
"Rotate the least significant 32 bits of @i{u1} right by @i{u} bits, set the "
"other bits to 0."
msgstr "@i{u1} の下位側 32 ビットを @i{u} ビットだけ右回転し、 他のビットを 0 にセットします。"

#. type: findex
#: ../doc/gforth.texi:6069
#, no-wrap
msgid "rol ( @var{ u1 u -- u2  } ) gforth-1.0"
msgstr "rol ( @var{ u1 u -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6070 ../doc/gforth.texi:6071
#, no-wrap
msgid "rol"
msgstr "rol"

#. type: format
#: ../doc/gforth.texi:6074
#, no-wrap
msgid "@code{rol} ( @i{u1 u -- u2 }) gforth-1.0 ``rol''\n"
msgstr "@code{rol} ( @i{u1 u -- u2 }) gforth-1.0 ``rol''\n"

#. type: table
#: ../doc/gforth.texi:6076
msgid "Rotate all bits of @i{u1} left by @i{u} bits."
msgstr "@i{u1} のすべてのビットを @i{u} ビットだけ左に回転します。"

#. type: findex
#: ../doc/gforth.texi:6077
#, no-wrap
msgid "ror ( @var{ u1 u -- u2  } ) gforth-1.0"
msgstr "ror ( @var{ u1 u -- u2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6078 ../doc/gforth.texi:6079
#, no-wrap
msgid "ror"
msgstr "ror"

#. type: format
#: ../doc/gforth.texi:6082
#, no-wrap
msgid "@code{ror} ( @i{u1 u -- u2 }) gforth-1.0 ``ror''\n"
msgstr "@code{ror} ( @i{u1 u -- u2 }) gforth-1.0 ``ror''\n"

#. type: table
#: ../doc/gforth.texi:6084
msgid "Rotate all bits of @i{u1} right by @i{u} bits."
msgstr "@i{u1} のすべてのビットを @i{u} ビットだけ右回転します。"

#. type: findex
#: ../doc/gforth.texi:6085
#, no-wrap
msgid "drol ( @var{ ud1 u -- ud2  } ) gforth-1.0"
msgstr "drol ( @var{ ud1 u -- ud2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6086 ../doc/gforth.texi:6087
#, no-wrap
msgid "drol"
msgstr "drol"

#. type: format
#: ../doc/gforth.texi:6090
#, no-wrap
msgid "@code{drol} ( @i{ud1 u -- ud2 }) gforth-1.0 ``drol''\n"
msgstr "@code{drol} ( @i{ud1 u -- ud2 }) gforth-1.0 ``drol''\n"

#. type: table
#: ../doc/gforth.texi:6092
msgid "Rotate all bits of @i{ud1} (double-cell) left by @i{u} bits."
msgstr "@i{ud1} (2倍長セル) のすべてのビットを @i{u} ビットだけ左に回転します。"

#. type: findex
#: ../doc/gforth.texi:6093
#, no-wrap
msgid "dror ( @var{ ud1 u -- ud2  } ) gforth-1.0"
msgstr "dror ( @var{ ud1 u -- ud2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6094 ../doc/gforth.texi:6095
#, no-wrap
msgid "dror"
msgstr "dror"

#. type: format
#: ../doc/gforth.texi:6098
#, no-wrap
msgid "@code{dror} ( @i{ud1 u -- ud2 }) gforth-1.0 ``dror''\n"
msgstr "@code{dror} ( @i{ud1 u -- ud2 }) gforth-1.0 ``dror''\n"

#. type: table
#: ../doc/gforth.texi:6100
msgid "Rotate all bits of @i{ud1} (double-cell) right by @i{u} bits."
msgstr "@i{ud1} (2倍長セル) のすべてのビットを @i{u} ビット右に回転します。"

#. type: cindex
#: ../doc/gforth.texi:6104
#, no-wrap
msgid "numeric comparison words"
msgstr "numeric comparison words"

#. type: table
#: ../doc/gforth.texi:6108
msgid ""
"Note that the words that compare for equality (@code{= <> 0= 0<> d= d<> d0= "
"d0<>}) work for for both signed and unsigned numbers."
msgstr "注意: 等しいかどうかを比較するワード(@code{= <> 0= 0<> d= d<> d0= d0<>}) は、 符号付き数値と符号なし数値の両方に対して機能することに注意してください。"

#. type: findex
#: ../doc/gforth.texi:6109
#, no-wrap
msgid "< ( @var{ n1 n2 -- f  } ) core"
msgstr "< ( @var{ n1 n2 -- f  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6110 ../doc/gforth.texi:6111
#, no-wrap
msgid "<"
msgstr "<"

#. type: format
#: ../doc/gforth.texi:6114
#, no-wrap
msgid "@code{<} ( @i{n1 n2 -- f }) core ``less-than''\n"
msgstr "@code{<} ( @i{n1 n2 -- f }) core ``less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6116
#, no-wrap
msgid "<= ( @var{ n1 n2 -- f  } ) gforth-0.2"
msgstr "<= ( @var{ n1 n2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6117 ../doc/gforth.texi:6118
#, no-wrap
msgid "<="
msgstr "<="

#. type: format
#: ../doc/gforth.texi:6121
#, no-wrap
msgid "@code{<=} ( @i{n1 n2 -- f }) gforth-0.2 ``less-or-equal''\n"
msgstr "@code{<=} ( @i{n1 n2 -- f }) gforth-0.2 ``less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6123
#, no-wrap
msgid "<> ( @var{ n1 n2 -- f  } ) core-ext"
msgstr "<> ( @var{ n1 n2 -- f  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6124 ../doc/gforth.texi:6125
#, no-wrap
msgid "<>"
msgstr "<>"

#. type: format
#: ../doc/gforth.texi:6128
#, no-wrap
msgid "@code{<>} ( @i{n1 n2 -- f }) core-ext ``not-equals''\n"
msgstr "@code{<>} ( @i{n1 n2 -- f }) core-ext ``not-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6130
#, no-wrap
msgid "= ( @var{ n1 n2 -- f  } ) core"
msgstr "= ( @var{ n1 n2 -- f  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6131 ../doc/gforth.texi:6132
#, no-wrap
msgid "="
msgstr "="

#. type: format
#: ../doc/gforth.texi:6135
#, no-wrap
msgid "@code{=} ( @i{n1 n2 -- f }) core ``equals''\n"
msgstr "@code{=} ( @i{n1 n2 -- f }) core ``equals''\n"

#. type: findex
#: ../doc/gforth.texi:6137
#, no-wrap
msgid "> ( @var{ n1 n2 -- f  } ) core"
msgstr "> ( @var{ n1 n2 -- f  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6138 ../doc/gforth.texi:6139
#, no-wrap
msgid ">"
msgstr ">"

#. type: format
#: ../doc/gforth.texi:6142
#, no-wrap
msgid "@code{>} ( @i{n1 n2 -- f }) core ``greater-than''\n"
msgstr "@code{>} ( @i{n1 n2 -- f }) core ``greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6144
#, no-wrap
msgid ">= ( @var{ n1 n2 -- f  } ) gforth-0.2"
msgstr ">= ( @var{ n1 n2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6145 ../doc/gforth.texi:6146
#, no-wrap
msgid ">="
msgstr ">="

#. type: format
#: ../doc/gforth.texi:6149
#, no-wrap
msgid "@code{>=} ( @i{n1 n2 -- f }) gforth-0.2 ``greater-or-equal''\n"
msgstr "@code{>=} ( @i{n1 n2 -- f }) gforth-0.2 ``greater-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6152
#, no-wrap
msgid "0< ( @var{ n -- f  } ) core"
msgstr "0< ( @var{ n -- f  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6153 ../doc/gforth.texi:6154
#, no-wrap
msgid "0<"
msgstr "0<"

#. type: format
#: ../doc/gforth.texi:6157
#, no-wrap
msgid "@code{0<} ( @i{n -- f }) core ``zero-less-than''\n"
msgstr "@code{0<} ( @i{n -- f }) core ``zero-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6159
#, no-wrap
msgid "0<= ( @var{ n -- f  } ) gforth-0.2"
msgstr "0<= ( @var{ n -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6160 ../doc/gforth.texi:6161
#, no-wrap
msgid "0<="
msgstr "0<="

#. type: format
#: ../doc/gforth.texi:6164
#, no-wrap
msgid "@code{0<=} ( @i{n -- f }) gforth-0.2 ``zero-less-or-equal''\n"
msgstr "@code{0<=} ( @i{n -- f }) gforth-0.2 ``zero-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6166
#, no-wrap
msgid "0<> ( @var{ n -- f  } ) core-ext"
msgstr "0<> ( @var{ n -- f  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6167 ../doc/gforth.texi:6168
#, no-wrap
msgid "0<>"
msgstr "0<>"

#. type: format
#: ../doc/gforth.texi:6171
#, no-wrap
msgid "@code{0<>} ( @i{n -- f }) core-ext ``zero-not-equals''\n"
msgstr "@code{0<>} ( @i{n -- f }) core-ext ``zero-not-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6173
#, no-wrap
msgid "0= ( @var{ n -- f  } ) core"
msgstr "0= ( @var{ n -- f  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6174 ../doc/gforth.texi:6175
#, no-wrap
msgid "0="
msgstr "0="

#. type: format
#: ../doc/gforth.texi:6178
#, no-wrap
msgid "@code{0=} ( @i{n -- f }) core ``zero-equals''\n"
msgstr "@code{0=} ( @i{n -- f }) core ``zero-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6180
#, no-wrap
msgid "0> ( @var{ n -- f  } ) core-ext"
msgstr "0> ( @var{ n -- f  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6181 ../doc/gforth.texi:6182
#, no-wrap
msgid "0>"
msgstr "0>"

#. type: format
#: ../doc/gforth.texi:6185
#, no-wrap
msgid "@code{0>} ( @i{n -- f }) core-ext ``zero-greater-than''\n"
msgstr "@code{0>} ( @i{n -- f }) core-ext ``zero-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6187
#, no-wrap
msgid "0>= ( @var{ n -- f  } ) gforth-0.2"
msgstr "0>= ( @var{ n -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6188 ../doc/gforth.texi:6189
#, no-wrap
msgid "0>="
msgstr "0>="

#. type: format
#: ../doc/gforth.texi:6192
#, no-wrap
msgid "@code{0>=} ( @i{n -- f }) gforth-0.2 ``zero-greater-or-equal''\n"
msgstr "@code{0>=} ( @i{n -- f }) gforth-0.2 ``zero-greater-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6195
#, no-wrap
msgid "u< ( @var{ u1 u2 -- f  } ) core"
msgstr "u< ( @var{ u1 u2 -- f  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6196 ../doc/gforth.texi:6197
#, no-wrap
msgid "u<"
msgstr "u<"

#. type: format
#: ../doc/gforth.texi:6200
#, no-wrap
msgid "@code{u<} ( @i{u1 u2 -- f }) core ``u-less-than''\n"
msgstr "@code{u<} ( @i{u1 u2 -- f }) core ``u-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6202
#, no-wrap
msgid "u<= ( @var{ u1 u2 -- f  } ) gforth-0.2"
msgstr "u<= ( @var{ u1 u2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6203 ../doc/gforth.texi:6204
#, no-wrap
msgid "u<="
msgstr "u<="

#. type: format
#: ../doc/gforth.texi:6207
#, no-wrap
msgid "@code{u<=} ( @i{u1 u2 -- f }) gforth-0.2 ``u-less-or-equal''\n"
msgstr "@code{u<=} ( @i{u1 u2 -- f }) gforth-0.2 ``u-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6212
#, no-wrap
msgid "u> ( @var{ u1 u2 -- f  } ) core-ext"
msgstr "u> ( @var{ u1 u2 -- f  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6213 ../doc/gforth.texi:6214
#, no-wrap
msgid "u>"
msgstr "u>"

#. type: format
#: ../doc/gforth.texi:6217
#, no-wrap
msgid "@code{u>} ( @i{u1 u2 -- f }) core-ext ``u-greater-than''\n"
msgstr "@code{u>} ( @i{u1 u2 -- f }) core-ext ``u-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6219
#, no-wrap
msgid "u>= ( @var{ u1 u2 -- f  } ) gforth-0.2"
msgstr "u>= ( @var{ u1 u2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6220 ../doc/gforth.texi:6221
#, no-wrap
msgid "u>="
msgstr "u>="

#. type: format
#: ../doc/gforth.texi:6224
#, no-wrap
msgid "@code{u>=} ( @i{u1 u2 -- f }) gforth-0.2 ``u-greater-or-equal''\n"
msgstr "@code{u>=} ( @i{u1 u2 -- f }) gforth-0.2 ``u-greater-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6227
#, no-wrap
msgid "within ( @var{ u1 u2 u3 -- f  } ) core-ext"
msgstr "within ( @var{ u1 u2 u3 -- f  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6228 ../doc/gforth.texi:6229
#, no-wrap
msgid "within"
msgstr "within"

#. type: format
#: ../doc/gforth.texi:6232
#, no-wrap
msgid "@code{within} ( @i{u1 u2 u3 -- f }) core-ext ``within''\n"
msgstr "@code{within} ( @i{u1 u2 u3 -- f }) core-ext ``within''\n"

#. type: table
#: ../doc/gforth.texi:6240
msgid ""
"u2<u3 and u1 in [u2,u3) or: u2>=u3 and u1 not in [u3,u2).  This works for "
"unsigned and signed numbers (but not a mixture).  Another way to think about "
"this word is to consider the numbers as a circle (wrapping around from "
"@code{max-u} to 0 for unsigned, and from @code{max-n} to min-n for signed "
"numbers); now consider the range from u2 towards increasing numbers up to "
"and excluding u3 (giving an empty range if u2=u3); if u1 is in this range, "
"@code{within} returns true."
msgstr "u2<u3 かつ u1 が [u2,u3) にある(u2 < u3 and  u2 <= u1 < u3 )、 または u2 >= u3 かつ u1 が [u3,u2) にない( u2 >= u3 and (u1 not in (u3 <= and < u2)。  これは、 符号なしの数値と符号付きの数値に対して機能します(ただし、 混ぜてはいけません)。  このワードについて考えるもう 1 つの方法は、 数値を循環として考えることです(符号なしの数値の場合は @code{max-u} から 0 まで、 符号付きの数値の場合は @code{max-n} から min-n まで循環します)。ここで、 u2 から u3 までの増加する数値(u3 を除く)の範囲を検討します(u2=u3 の場合は空の範囲を与えます)。 u1 がこの範囲内にある場合、 @code{within} は true を返します。"

#. type: findex
#: ../doc/gforth.texi:6242
#, no-wrap
msgid "d< ( @var{ d1 d2 -- f  } ) double"
msgstr "d< ( @var{ d1 d2 -- f  } ) double"

#. type: kindex
#: ../doc/gforth.texi:6243 ../doc/gforth.texi:6244
#, no-wrap
msgid "d<"
msgstr "d<"

#. type: format
#: ../doc/gforth.texi:6247
#, no-wrap
msgid "@code{d<} ( @i{d1 d2 -- f }) double ``d-less-than''\n"
msgstr "@code{d<} ( @i{d1 d2 -- f }) double ``d-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6249
#, no-wrap
msgid "d<= ( @var{ d1 d2 -- f  } ) gforth-0.2"
msgstr "d<= ( @var{ d1 d2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6250 ../doc/gforth.texi:6251
#, no-wrap
msgid "d<="
msgstr "d<="

#. type: format
#: ../doc/gforth.texi:6254
#, no-wrap
msgid "@code{d<=} ( @i{d1 d2 -- f }) gforth-0.2 ``d-less-or-equal''\n"
msgstr "@code{d<=} ( @i{d1 d2 -- f }) gforth-0.2 ``d-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6256
#, no-wrap
msgid "d<> ( @var{ d1 d2 -- f  } ) gforth-0.2"
msgstr "d<> ( @var{ d1 d2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6257 ../doc/gforth.texi:6258
#, no-wrap
msgid "d<>"
msgstr "d<>"

#. type: format
#: ../doc/gforth.texi:6261
#, no-wrap
msgid "@code{d<>} ( @i{d1 d2 -- f }) gforth-0.2 ``d-not-equals''\n"
msgstr "@code{d<>} ( @i{d1 d2 -- f }) gforth-0.2 ``d-not-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6263
#, no-wrap
msgid "d= ( @var{ d1 d2 -- f  } ) double"
msgstr "d= ( @var{ d1 d2 -- f  } ) double"

#. type: kindex
#: ../doc/gforth.texi:6264 ../doc/gforth.texi:6265
#, no-wrap
msgid "d="
msgstr "d="

#. type: format
#: ../doc/gforth.texi:6268
#, no-wrap
msgid "@code{d=} ( @i{d1 d2 -- f }) double ``d-equals''\n"
msgstr "@code{d=} ( @i{d1 d2 -- f }) double ``d-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6270
#, no-wrap
msgid "d> ( @var{ d1 d2 -- f  } ) gforth-0.2"
msgstr "d> ( @var{ d1 d2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6271 ../doc/gforth.texi:6272
#, no-wrap
msgid "d>"
msgstr "d>"

#. type: format
#: ../doc/gforth.texi:6275
#, no-wrap
msgid "@code{d>} ( @i{d1 d2 -- f }) gforth-0.2 ``d-greater-than''\n"
msgstr "@code{d>} ( @i{d1 d2 -- f }) gforth-0.2 ``d-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6277
#, no-wrap
msgid "d>= ( @var{ d1 d2 -- f  } ) gforth-0.2"
msgstr "d>= ( @var{ d1 d2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6278 ../doc/gforth.texi:6279
#, no-wrap
msgid "d>="
msgstr "d>="

#. type: format
#: ../doc/gforth.texi:6282
#, no-wrap
msgid "@code{d>=} ( @i{d1 d2 -- f }) gforth-0.2 ``d-greater-or-equal''\n"
msgstr "@code{d>=} ( @i{d1 d2 -- f }) gforth-0.2 ``d-greater-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6285
#, no-wrap
msgid "d0< ( @var{ d -- f  } ) double"
msgstr "d0< ( @var{ d -- f  } ) double"

#. type: kindex
#: ../doc/gforth.texi:6286 ../doc/gforth.texi:6287
#, no-wrap
msgid "d0<"
msgstr "d0<"

#. type: format
#: ../doc/gforth.texi:6290
#, no-wrap
msgid "@code{d0<} ( @i{d -- f }) double ``d-zero-less-than''\n"
msgstr "@code{d0<} ( @i{d -- f }) double ``d-zero-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6292
#, no-wrap
msgid "d0<= ( @var{ d -- f  } ) gforth-0.2"
msgstr "d0<= ( @var{ d -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6293 ../doc/gforth.texi:6294
#, no-wrap
msgid "d0<="
msgstr "d0<="

#. type: format
#: ../doc/gforth.texi:6297
#, no-wrap
msgid "@code{d0<=} ( @i{d -- f }) gforth-0.2 ``d-zero-less-or-equal''\n"
msgstr "@code{d0<=} ( @i{d -- f }) gforth-0.2 ``d-zero-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6299
#, no-wrap
msgid "d0<> ( @var{ d -- f  } ) gforth-0.2"
msgstr "d0<> ( @var{ d -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6300 ../doc/gforth.texi:6301
#, no-wrap
msgid "d0<>"
msgstr "d0<>"

#. type: format
#: ../doc/gforth.texi:6304
#, no-wrap
msgid "@code{d0<>} ( @i{d -- f }) gforth-0.2 ``d-zero-not-equals''\n"
msgstr "@code{d0<>} ( @i{d -- f }) gforth-0.2 ``d-zero-not-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6306
#, no-wrap
msgid "d0= ( @var{ d -- f  } ) double"
msgstr "d0= ( @var{ d -- f  } ) double"

#. type: kindex
#: ../doc/gforth.texi:6307 ../doc/gforth.texi:6308
#, no-wrap
msgid "d0="
msgstr "d0="

#. type: format
#: ../doc/gforth.texi:6311
#, no-wrap
msgid "@code{d0=} ( @i{d -- f }) double ``d-zero-equals''\n"
msgstr "@code{d0=} ( @i{d -- f }) double ``d-zero-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6313
#, no-wrap
msgid "d0> ( @var{ d -- f  } ) gforth-0.2"
msgstr "d0> ( @var{ d -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6314 ../doc/gforth.texi:6315
#, no-wrap
msgid "d0>"
msgstr "d0>"

#. type: format
#: ../doc/gforth.texi:6318
#, no-wrap
msgid "@code{d0>} ( @i{d -- f }) gforth-0.2 ``d-zero-greater-than''\n"
msgstr "@code{d0>} ( @i{d -- f }) gforth-0.2 ``d-zero-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6320
#, no-wrap
msgid "d0>= ( @var{ d -- f  } ) gforth-0.2"
msgstr "d0>= ( @var{ d -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6321 ../doc/gforth.texi:6322
#, no-wrap
msgid "d0>="
msgstr "d0>="

#. type: format
#: ../doc/gforth.texi:6325
#, no-wrap
msgid "@code{d0>=} ( @i{d -- f }) gforth-0.2 ``d-zero-greater-or-equal''\n"
msgstr "@code{d0>=} ( @i{d -- f }) gforth-0.2 ``d-zero-greater-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6328
#, no-wrap
msgid "du< ( @var{ ud1 ud2 -- f  } ) double-ext"
msgstr "du< ( @var{ ud1 ud2 -- f  } ) double-ext"

#. type: kindex
#: ../doc/gforth.texi:6329 ../doc/gforth.texi:6330
#, no-wrap
msgid "du<"
msgstr "du<"

#. type: format
#: ../doc/gforth.texi:6333
#, no-wrap
msgid "@code{du<} ( @i{ud1 ud2 -- f }) double-ext ``d-u-less-than''\n"
msgstr "@code{du<} ( @i{ud1 ud2 -- f }) double-ext ``d-u-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6335
#, no-wrap
msgid "du<= ( @var{ ud1 ud2 -- f  } ) gforth-0.2"
msgstr "du<= ( @var{ ud1 ud2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6336 ../doc/gforth.texi:6337
#, no-wrap
msgid "du<="
msgstr "du<="

#. type: format
#: ../doc/gforth.texi:6340
#, no-wrap
msgid "@code{du<=} ( @i{ud1 ud2 -- f }) gforth-0.2 ``d-u-less-or-equal''\n"
msgstr "@code{du<=} ( @i{ud1 ud2 -- f }) gforth-0.2 ``d-u-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6345
#, no-wrap
msgid "du> ( @var{ ud1 ud2 -- f  } ) gforth-0.2"
msgstr "du> ( @var{ ud1 ud2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6346 ../doc/gforth.texi:6347
#, no-wrap
msgid "du>"
msgstr "du>"

#. type: format
#: ../doc/gforth.texi:6350
#, no-wrap
msgid "@code{du>} ( @i{ud1 ud2 -- f }) gforth-0.2 ``d-u-greater-than''\n"
msgstr "@code{du>} ( @i{ud1 ud2 -- f }) gforth-0.2 ``d-u-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6352
#, no-wrap
msgid "du>= ( @var{ ud1 ud2 -- f  } ) gforth-0.2"
msgstr "du>= ( @var{ ud1 ud2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6353 ../doc/gforth.texi:6354
#, no-wrap
msgid "du>="
msgstr "du>="

#. type: format
#: ../doc/gforth.texi:6357
#, no-wrap
msgid "@code{du>=} ( @i{ud1 ud2 -- f }) gforth-0.2 ``d-u-greater-or-equal''\n"
msgstr "@code{du>=} ( @i{ud1 ud2 -- f }) gforth-0.2 ``d-u-greater-or-equal''\n"

#. type: cindex
#: ../doc/gforth.texi:6363
#, no-wrap
msgid "floating point arithmetic words"
msgstr "floating point arithmetic words"

#. type: table
#: ../doc/gforth.texi:6367
msgid ""
"For the rules used by the text interpreter for recognising floating-point "
"numbers see @ref{Number Conversion}."
msgstr "浮動小数点数を認識するためにテキスト・インタプリタで使用されるルールについては、 @ref{Number Conversion} を参照してください。"

#. type: table
#: ../doc/gforth.texi:6373
msgid ""
"Gforth has a separate floating point stack, but the documentation uses the "
"unified notation.@footnote{It's easy to generate the separate notation from "
"that by just separating the floating-point numbers out: e.g. @code{( n r1 u "
"r2 -- r3 )} becomes @code{( n u -- ) ( F: r1 r2 -- r3 )}.}"
msgstr "Gforth には別個の浮動小数点スタックがありますが、 ドキュメントでは一緒に統一した表記が使用されています@footnote{この一緒にした表記から、 浮動小数点数だけを分離するだけで、 簡単に分離された表記にできます。 例えば: @code{( n r1 ur2 -- r3 )} は @code{( n u -- ) ( F: r1 r2 -- r3 )} になります}。"

#. type: cindex
#: ../doc/gforth.texi:6374
#, no-wrap
msgid "floating-point arithmetic, pitfalls"
msgstr "floating-point arithmetic, pitfalls"

# 参考:
# https://qiita.com/cure_honey/items/377aec7871b64f51ad1a
# 10進表現で何桁出力すれば読み込みで内部精度が回復されるのか？
#
# 引用元(reprint元)
# https://dl.acm.org/citation.cfm?id=103163
# eReader または PDF ボタンで読める
#
# （ちなみにネットには機械翻訳っぽい和訳が落ちていますが日本語的に難があります。ビット別冊 (1993) により日本語な和訳があります。）
# http://iss.ndl.go.jp/books/R100000039-I001404293-00
# 「浮動小数点演算について計算機科学者は何を知っておくべきか / David Goldberg ; 西村恕彦」<
# ※国会図書館デジタルアーカイブスなので(web)利用者登録が必要
#. type: table
#: ../doc/gforth.texi:6384
msgid ""
"Floating point numbers have a number of unpleasant surprises for the unwary "
"(e.g., floating point addition is not associative) and even a few for the "
"wary. You should not use them unless you know what you are doing or you "
"don't care that the results you get are totally bogus. If you want to learn "
"about the problems of floating point numbers (and how to avoid them), you "
"might start with @cite{David Goldberg, @uref{https://docs.oracle.com/cd/"
"E19957-01/806-3568/ncg_goldberg.html,What Every Computer Scientist Should "
"Know About Floating-Point Arithmetic}, ACM Computing Surveys 23(1):5@minus{}"
"48, March 1991}."
msgstr "浮動小数点数は、 不注意な人にとっては多くの不快な驚きをもたらします(たとえば、浮動小数点の加算は結合的(associative)ではありません)。 また、 用心深い人にとってもいくつかの不快な驚きさえあります。 自分が何をしているのか理解していない場合、 または得られる結果が完全に偽物であることを気にしない場合を除き、 これらを使用すべきではありません。 浮動小数点数の問題(およびその回避方法)について知りたい場合は、 @cite{David Goldberg, @uref{https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html,What Every Computer Scientist Should Know About Floating-Point Arithmetic}, ACM Computing Surveys 23(1):5@minus{}48, March 1991} から始めると良いでしょう。"

#. type: table
#: ../doc/gforth.texi:6386
msgid "Conversion between integers and floating-point:"
msgstr "整数と浮動小数点の間の変換:"

#. type: findex
#: ../doc/gforth.texi:6387
#, no-wrap
msgid "s>f ( @var{ n -- r  } ) floating-ext"
msgstr "s>f ( @var{ n -- r  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6388 ../doc/gforth.texi:6389
#, no-wrap
msgid "s>f"
msgstr "s>f"

#. type: format
#: ../doc/gforth.texi:6392
#, no-wrap
msgid "@code{s>f} ( @i{n -- r }) floating-ext ``s-to-f''\n"
msgstr "@code{s>f} ( @i{n -- r }) floating-ext ``s-to-f''\n"

#. type: findex
#: ../doc/gforth.texi:6394
#, no-wrap
msgid "d>f ( @var{ d -- r  } ) floating"
msgstr "d>f ( @var{ d -- r  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6395 ../doc/gforth.texi:6396
#, no-wrap
msgid "d>f"
msgstr "d>f"

#. type: format
#: ../doc/gforth.texi:6399
#, no-wrap
msgid "@code{d>f} ( @i{d -- r }) floating ``d-to-f''\n"
msgstr "@code{d>f} ( @i{d -- r }) floating ``d-to-f''\n"

#. type: findex
#: ../doc/gforth.texi:6401
#, no-wrap
msgid "f>s ( @var{ r -- n  } ) floating-ext"
msgstr "f>s ( @var{ r -- n  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6402 ../doc/gforth.texi:6403
#, no-wrap
msgid "f>s"
msgstr "f>s"

#. type: format
#: ../doc/gforth.texi:6406
#, no-wrap
msgid "@code{f>s} ( @i{r -- n }) floating-ext ``f-to-s''\n"
msgstr "@code{f>s} ( @i{r -- n }) floating-ext ``f-to-s''\n"

#. type: findex
#: ../doc/gforth.texi:6408
#, no-wrap
msgid "f>d ( @var{ r -- d  } ) floating"
msgstr "f>d ( @var{ r -- d  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6409 ../doc/gforth.texi:6410
#, no-wrap
msgid "f>d"
msgstr "f>d"

#. type: format
#: ../doc/gforth.texi:6413
#, no-wrap
msgid "@code{f>d} ( @i{r -- d }) floating ``f-to-d''\n"
msgstr "@code{f>d} ( @i{r -- d }) floating ``f-to-d''\n"

#. type: table
#: ../doc/gforth.texi:6417
msgid "Arithmetics:"
msgstr "算術演算:"

#. type: findex
#: ../doc/gforth.texi:6418
#, no-wrap
msgid "f+ ( @var{ r1 r2 -- r3  } ) floating"
msgstr "f+ ( @var{ r1 r2 -- r3  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6419 ../doc/gforth.texi:6420
#, no-wrap
msgid "f+"
msgstr "f+"

#. type: format
#: ../doc/gforth.texi:6423
#, no-wrap
msgid "@code{f+} ( @i{r1 r2 -- r3 }) floating ``f-plus''\n"
msgstr "@code{f+} ( @i{r1 r2 -- r3 }) floating ``f-plus''\n"

#. type: findex
#: ../doc/gforth.texi:6425
#, no-wrap
msgid "f- ( @var{ r1 r2 -- r3  } ) floating"
msgstr "f- ( @var{ r1 r2 -- r3  } ) floating"

#. type: format
#: ../doc/gforth.texi:6430
#, no-wrap
msgid "@code{f-} ( @i{r1 r2 -- r3 }) floating ``f-minus''\n"
msgstr "@code{f-} ( @i{r1 r2 -- r3 }) floating ``f-minus''\n"

#. type: findex
#: ../doc/gforth.texi:6432
#, no-wrap
msgid "f* ( @var{ r1 r2 -- r3  } ) floating"
msgstr "f* ( @var{ r1 r2 -- r3  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6433 ../doc/gforth.texi:6434
#, no-wrap
msgid "f*"
msgstr "f*"

#. type: format
#: ../doc/gforth.texi:6437
#, no-wrap
msgid "@code{f*} ( @i{r1 r2 -- r3 }) floating ``f-star''\n"
msgstr "@code{f*} ( @i{r1 r2 -- r3 }) floating ``f-star''\n"

#. type: findex
#: ../doc/gforth.texi:6439
#, no-wrap
msgid "f/ ( @var{ r1 r2 -- r3  } ) floating"
msgstr "f/ ( @var{ r1 r2 -- r3  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6440 ../doc/gforth.texi:6441
#, no-wrap
msgid "f/"
msgstr "f/"

#. type: format
#: ../doc/gforth.texi:6444
#, no-wrap
msgid "@code{f/} ( @i{r1 r2 -- r3 }) floating ``f-slash''\n"
msgstr "@code{f/} ( @i{r1 r2 -- r3 }) floating ``f-slash''\n"

#. type: findex
#: ../doc/gforth.texi:6446
#, no-wrap
msgid "fnegate ( @var{ r1 -- r2  } ) floating"
msgstr "fnegate ( @var{ r1 -- r2  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6447 ../doc/gforth.texi:6448
#, no-wrap
msgid "fnegate"
msgstr "fnegate"

#. type: format
#: ../doc/gforth.texi:6451
#, no-wrap
msgid "@code{fnegate} ( @i{r1 -- r2 }) floating ``f-negate''\n"
msgstr "@code{fnegate} ( @i{r1 -- r2 }) floating ``f-negate''\n"

#. type: findex
#: ../doc/gforth.texi:6453
#, no-wrap
msgid "fabs ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fabs ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6454 ../doc/gforth.texi:6455
#, no-wrap
msgid "fabs"
msgstr "fabs"

#. type: format
#: ../doc/gforth.texi:6458
#, no-wrap
msgid "@code{fabs} ( @i{r1 -- r2 }) floating-ext ``f-abs''\n"
msgstr "@code{fabs} ( @i{r1 -- r2 }) floating-ext ``f-abs''\n"

#. type: findex
#: ../doc/gforth.texi:6460
#, no-wrap
msgid "fcopysign ( @var{ r1 r2 -- r3   } ) gforth-1.0"
msgstr "fcopysign ( @var{ r1 r2 -- r3   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6461 ../doc/gforth.texi:6462
#, no-wrap
msgid "fcopysign"
msgstr "fcopysign"

#. type: format
#: ../doc/gforth.texi:6465
#, no-wrap
msgid "@code{fcopysign} ( @i{r1 r2 -- r3  }) gforth-1.0 ``fcopysign''\n"
msgstr "@code{fcopysign} ( @i{r1 r2 -- r3  }) gforth-1.0 ``fcopysign''\n"

#. type: table
#: ../doc/gforth.texi:6467
msgid "r3 takes its absolute value from r1 and its sign from r2"
msgstr "r3 は r1 から絶対値を取得し r2 から符号を取得します"

#. type: findex
#: ../doc/gforth.texi:6469
#, no-wrap
msgid "fmax ( @var{ r1 r2 -- r3  } ) floating"
msgstr "fmax ( @var{ r1 r2 -- r3  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6470 ../doc/gforth.texi:6471
#, no-wrap
msgid "fmax"
msgstr "fmax"

#. type: format
#: ../doc/gforth.texi:6474
#, no-wrap
msgid "@code{fmax} ( @i{r1 r2 -- r3 }) floating ``f-max''\n"
msgstr "@code{fmax} ( @i{r1 r2 -- r3 }) floating ``f-max''\n"

#. type: findex
#: ../doc/gforth.texi:6476
#, no-wrap
msgid "fmin ( @var{ r1 r2 -- r3  } ) floating"
msgstr "fmin ( @var{ r1 r2 -- r3  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6477 ../doc/gforth.texi:6478
#, no-wrap
msgid "fmin"
msgstr "fmin"

#. type: format
#: ../doc/gforth.texi:6481
#, no-wrap
msgid "@code{fmin} ( @i{r1 r2 -- r3 }) floating ``f-min''\n"
msgstr "@code{fmin} ( @i{r1 r2 -- r3 }) floating ``f-min''\n"

#. type: findex
#: ../doc/gforth.texi:6483
#, no-wrap
msgid "floor ( @var{ r1 -- r2  } ) floating"
msgstr "floor ( @var{ r1 -- r2  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6484 ../doc/gforth.texi:6485
#, no-wrap
msgid "floor"
msgstr "floor"

#. type: format
#: ../doc/gforth.texi:6488
#, no-wrap
msgid "@code{floor} ( @i{r1 -- r2 }) floating ``floor''\n"
msgstr "@code{floor} ( @i{r1 -- r2 }) floating ``floor''\n"

#. type: table
#: ../doc/gforth.texi:6490
msgid ""
"Round towards the next smaller integral value, i.e., round toward negative "
"infinity."
msgstr "次に小さい整数値に向かって丸めます。 つまり、 負の無限大に向かって丸めます。"

#. type: findex
#: ../doc/gforth.texi:6491
#, no-wrap
msgid "fround ( @var{ r1 -- r2  } ) floating"
msgstr "fround ( @var{ r1 -- r2  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6492 ../doc/gforth.texi:6493
#, no-wrap
msgid "fround"
msgstr "fround"

# 四捨五入では無いのか…？
# 0.1e fround f. 0.  ok
# 0.2e fround f. 0.  ok
# 0.3e fround f. 0.  ok
# 0.4e fround f. 0.  ok
# 0.5e fround f. 0.  ok
# 0.50e fround f. 0.  ok
# 0.51e fround f. 1.  ok
# 0.6e fround f. 1.  ok
# 0.7e fround f. 1.  ok
# 0.8e fround f. 1.  ok
# 0.9e fround f. 1.  ok
# 1.0e fround f. 1.  ok
# 1.5e fround f. 2.  ok
# 0.5e fround f. 0.  ok
#. type: format
#: ../doc/gforth.texi:6496
#, no-wrap
msgid "@code{fround} ( @i{r1 -- r2 }) floating ``f-round''\n"
msgstr "@code{fround} ( @i{r1 -- r2 }) floating ``f-round''\n"

#. type: table
#: ../doc/gforth.texi:6498
msgid "Round to the nearest integral value."
msgstr "最も近い整数値に丸めます(訳注: 0.5e -- 0, 0.50e -- 0, 0.51e -- 1, 1.5e -- 2, ... ??)"

#. type: findex
#: ../doc/gforth.texi:6499
#, no-wrap
msgid "ftrunc ( @var{ r1 -- r2   } ) floating-ext"
msgstr "ftrunc ( @var{ r1 -- r2   } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6500 ../doc/gforth.texi:6501
#, no-wrap
msgid "ftrunc"
msgstr "ftrunc"

#. type: format
#: ../doc/gforth.texi:6504
#, no-wrap
msgid "@code{ftrunc} ( @i{r1 -- r2  }) floating-ext ``f-trunc''\n"
msgstr "@code{ftrunc} ( @i{r1 -- r2  }) floating-ext ``f-trunc''\n"

#. type: table
#: ../doc/gforth.texi:6506
msgid "round towards 0"
msgstr "0 に向かって丸める(正数でも負数でも)"

#. type: findex
#: ../doc/gforth.texi:6508
#, no-wrap
msgid "f** ( @var{ r1 r2 -- r3  } ) floating-ext"
msgstr "f** ( @var{ r1 r2 -- r3  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6509 ../doc/gforth.texi:6510
#, no-wrap
msgid "f**"
msgstr "f**"

#. type: format
#: ../doc/gforth.texi:6513
#, no-wrap
msgid "@code{f**} ( @i{r1 r2 -- r3 }) floating-ext ``f-star-star''\n"
msgstr "@code{f**} ( @i{r1 r2 -- r3 }) floating-ext ``f-star-star''\n"

#. type: table
#: ../doc/gforth.texi:6515
msgid "@i{r3} is @i{r1} raised to the @i{r2}th power."
msgstr "@i{r3} は @i{r1} の @i{r2} 乗です"

#. type: findex
#: ../doc/gforth.texi:6516
#, no-wrap
msgid "fsqrt ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fsqrt ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6517 ../doc/gforth.texi:6518
#, no-wrap
msgid "fsqrt"
msgstr "fsqrt"

#. type: format
#: ../doc/gforth.texi:6521
#, no-wrap
msgid "@code{fsqrt} ( @i{r1 -- r2 }) floating-ext ``f-square-root''\n"
msgstr "@code{fsqrt} ( @i{r1 -- r2 }) floating-ext ``f-square-root''\n"

#. type: findex
#: ../doc/gforth.texi:6523
#, no-wrap
msgid "fexp ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fexp ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6524 ../doc/gforth.texi:6525
#, no-wrap
msgid "fexp"
msgstr "fexp"

#. type: format
#: ../doc/gforth.texi:6528
#, no-wrap
msgid "@code{fexp} ( @i{r1 -- r2 }) floating-ext ``f-e-x-p''\n"
msgstr "@code{fexp} ( @i{r1 -- r2 }) floating-ext ``f-e-x-p''\n"

#. type: findex
#: ../doc/gforth.texi:6530
#, no-wrap
msgid "fexpm1 ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fexpm1 ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6531 ../doc/gforth.texi:6532
#, no-wrap
msgid "fexpm1"
msgstr "fexpm1"

#. type: format
#: ../doc/gforth.texi:6535
#, no-wrap
msgid "@code{fexpm1} ( @i{r1 -- r2 }) floating-ext ``f-e-x-p-m-one''\n"
msgstr "@code{fexpm1} ( @i{r1 -- r2 }) floating-ext ``f-e-x-p-m-one''\n"

#. type: table
#: ../doc/gforth.texi:6537
msgid "@i{r2}=@i{e}**@i{r1}@minus{}1"
msgstr "@i{r2}=@i{e}**@i{r1}@minus{}1"

#. type: findex
#: ../doc/gforth.texi:6538
#, no-wrap
msgid "fln ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fln ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6539 ../doc/gforth.texi:6540
#, no-wrap
msgid "fln"
msgstr "fln"

#. type: format
#: ../doc/gforth.texi:6543
#, no-wrap
msgid "@code{fln} ( @i{r1 -- r2 }) floating-ext ``f-l-n''\n"
msgstr "@code{fln} ( @i{r1 -- r2 }) floating-ext ``f-l-n''\n"

#. type: findex
#: ../doc/gforth.texi:6545
#, no-wrap
msgid "flnp1 ( @var{ r1 -- r2  } ) floating-ext"
msgstr "flnp1 ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6546 ../doc/gforth.texi:6547
#, no-wrap
msgid "flnp1"
msgstr "flnp1"

#. type: format
#: ../doc/gforth.texi:6550
#, no-wrap
msgid "@code{flnp1} ( @i{r1 -- r2 }) floating-ext ``f-l-n-p-one''\n"
msgstr "@code{flnp1} ( @i{r1 -- r2 }) floating-ext ``f-l-n-p-one''\n"

#. type: table
#: ../doc/gforth.texi:6552
msgid "@i{r2}=ln(@i{r1}+1)"
msgstr "@i{r2}=ln(@i{r1}+1)"

#. type: findex
#: ../doc/gforth.texi:6553
#, no-wrap
msgid "flog ( @var{ r1 -- r2  } ) floating-ext"
msgstr "flog ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6554 ../doc/gforth.texi:6555
#, no-wrap
msgid "flog"
msgstr "flog"

#. type: format
#: ../doc/gforth.texi:6558
#, no-wrap
msgid "@code{flog} ( @i{r1 -- r2 }) floating-ext ``f-log''\n"
msgstr "@code{flog} ( @i{r1 -- r2 }) floating-ext ``f-log''\n"

#. type: table
#: ../doc/gforth.texi:6560
msgid "The decimal logarithm."
msgstr "常用対数(decimal logarithm)"

#. type: findex
#: ../doc/gforth.texi:6561
#, no-wrap
msgid "falog ( @var{ r1 -- r2  } ) floating-ext"
msgstr "falog ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6562 ../doc/gforth.texi:6563
#, no-wrap
msgid "falog"
msgstr "falog"

#. type: format
#: ../doc/gforth.texi:6566
#, no-wrap
msgid "@code{falog} ( @i{r1 -- r2 }) floating-ext ``f-a-log''\n"
msgstr "@code{falog} ( @i{r1 -- r2 }) floating-ext ``f-a-log''\n"

#. type: table
#: ../doc/gforth.texi:6568
msgid "@i{r2}=10**@i{r1}"
msgstr "@i{r2}=10**@i{r1}"

#. type: findex
#: ../doc/gforth.texi:6569
#, no-wrap
msgid "f2* ( @var{ r1 -- r2   } ) gforth-0.2"
msgstr "f2* ( @var{ r1 -- r2   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6570 ../doc/gforth.texi:6571
#, no-wrap
msgid "f2*"
msgstr "f2*"

#. type: format
#: ../doc/gforth.texi:6574
#, no-wrap
msgid "@code{f2*} ( @i{r1 -- r2  }) gforth-0.2 ``f2*''\n"
msgstr "@code{f2*} ( @i{r1 -- r2  }) gforth-0.2 ``f2*''\n"

#. type: table
#: ../doc/gforth.texi:6576
msgid "Multiply @i{r1} by 2.0e0"
msgstr "@i{r1} に 2.0e0 を掛けた値"

#. type: findex
#: ../doc/gforth.texi:6578
#, no-wrap
msgid "f2/ ( @var{ r1 -- r2   } ) gforth-0.2"
msgstr "f2/ ( @var{ r1 -- r2   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6579 ../doc/gforth.texi:6580
#, no-wrap
msgid "f2/"
msgstr "f2/"

#. type: format
#: ../doc/gforth.texi:6583
#, no-wrap
msgid "@code{f2/} ( @i{r1 -- r2  }) gforth-0.2 ``f2/''\n"
msgstr "@code{f2/} ( @i{r1 -- r2  }) gforth-0.2 ``f2/''\n"

#. type: table
#: ../doc/gforth.texi:6585
msgid "Multiply @i{r1} by 0.5e0"
msgstr "@i{r1} に 0.5e0 を掛けた値"

#. type: findex
#: ../doc/gforth.texi:6587
#, no-wrap
msgid "1/f ( @var{ r1 -- r2   } ) gforth-0.2"
msgstr "1/f ( @var{ r1 -- r2   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6588 ../doc/gforth.texi:6589
#, no-wrap
msgid "1/f"
msgstr "1/f"

#. type: format
#: ../doc/gforth.texi:6592
#, no-wrap
msgid "@code{1/f} ( @i{r1 -- r2  }) gforth-0.2 ``1/f''\n"
msgstr "@code{1/f} ( @i{r1 -- r2  }) gforth-0.2 ``1/f''\n"

#. type: table
#: ../doc/gforth.texi:6594
msgid "Divide 1.0e0 by @i{r1}."
msgstr "1.0e0 を @i{r1} で割った値"

#. type: table
#: ../doc/gforth.texi:6598
msgid "Vector arithmetics:"
msgstr "ベクトル演算:"

#. type: findex
#: ../doc/gforth.texi:6599
#, no-wrap
msgid "v* ( @var{ f-addr1 nstride1 f-addr2 nstride2 ucount -- r  } ) gforth-0.5"
msgstr "v* ( @var{ f-addr1 nstride1 f-addr2 nstride2 ucount -- r  } ) gforth-0.5"

#. type: kindex
#: ../doc/gforth.texi:6600 ../doc/gforth.texi:6601
#, no-wrap
msgid "v*"
msgstr "v*"

#. type: format
#: ../doc/gforth.texi:6604
#, no-wrap
msgid "@code{v*} ( @i{f-addr1 nstride1 f-addr2 nstride2 ucount -- r }) gforth-0.5 ``v-star''\n"
msgstr "@code{v*} ( @i{f-addr1 nstride1 f-addr2 nstride2 ucount -- r }) gforth-0.5 ``v-star''\n"

#. type: table
#: ../doc/gforth.texi:6608
msgid ""
"dot-product: r=v1*v2.  The first element of v1 is at f_addr1, the next at "
"f_addr1+nstride1 and so on (similar for v2). Both vectors have ucount "
"elements."
msgstr "ドット積(dot-product): r=v1*v2   v1 の最初の要素は f_addr1 にあり、 次の要素は f_addr1+nstride1 というようになります(v2 も同様)。 どちらのベクトルにも ucount の数の要素があります。"

#. type: findex
#: ../doc/gforth.texi:6609
#, no-wrap
msgid "faxpy ( @var{ ra f-x nstridex f-y nstridey ucount --  } ) gforth-0.5"
msgstr "faxpy ( @var{ ra f-x nstridex f-y nstridey ucount --  } ) gforth-0.5"

#. type: kindex
#: ../doc/gforth.texi:6610 ../doc/gforth.texi:6611
#, no-wrap
msgid "faxpy"
msgstr "faxpy"

#. type: format
#: ../doc/gforth.texi:6614
#, no-wrap
msgid "@code{faxpy} ( @i{ra f-x nstridex f-y nstridey ucount -- }) gforth-0.5 ``faxpy''\n"
msgstr "@code{faxpy} ( @i{ra f-x nstridex f-y nstridey ucount -- }) gforth-0.5 ``faxpy''\n"

#. type: table
#: ../doc/gforth.texi:6616
msgid "vy=ra*vx+vy"
msgstr "vy=ra*vx+vy"

#. type: cindex
#: ../doc/gforth.texi:6618
#, no-wrap
msgid "angles in trigonometric operations"
msgstr "angles in trigonometric operations"

#. type: cindex
#: ../doc/gforth.texi:6619
#, no-wrap
msgid "trigonometric operations"
msgstr "trigonometric operations"

#. type: table
#: ../doc/gforth.texi:6622
msgid ""
"Angles in floating point operations are given in radians (a full circle has "
"2 pi radians)."
msgstr "浮動小数点演算の角度はラジアン(radians)で指定します(完全な円は 2πラジアンです)。"

#. type: findex
#: ../doc/gforth.texi:6623
#, no-wrap
msgid "fsin ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fsin ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6624 ../doc/gforth.texi:6625
#, no-wrap
msgid "fsin"
msgstr "fsin"

#. type: format
#: ../doc/gforth.texi:6628
#, no-wrap
msgid "@code{fsin} ( @i{r1 -- r2 }) floating-ext ``f-sine''\n"
msgstr "@code{fsin} ( @i{r1 -- r2 }) floating-ext ``f-sine''\n"

#. type: findex
#: ../doc/gforth.texi:6630
#, no-wrap
msgid "fcos ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fcos ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6631 ../doc/gforth.texi:6632
#, no-wrap
msgid "fcos"
msgstr "fcos"

#. type: format
#: ../doc/gforth.texi:6635
#, no-wrap
msgid "@code{fcos} ( @i{r1 -- r2 }) floating-ext ``f-cos''\n"
msgstr "@code{fcos} ( @i{r1 -- r2 }) floating-ext ``f-cos''\n"

#. type: findex
#: ../doc/gforth.texi:6637
#, no-wrap
msgid "fsincos ( @var{ r1 -- r2 r3  } ) floating-ext"
msgstr "fsincos ( @var{ r1 -- r2 r3  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6638 ../doc/gforth.texi:6639
#, no-wrap
msgid "fsincos"
msgstr "fsincos"

#. type: format
#: ../doc/gforth.texi:6642
#, no-wrap
msgid "@code{fsincos} ( @i{r1 -- r2 r3 }) floating-ext ``f-sine-cos''\n"
msgstr "@code{fsincos} ( @i{r1 -- r2 r3 }) floating-ext ``f-sine-cos''\n"

#. type: table
#: ../doc/gforth.texi:6644
msgid "@i{r2}=sin(@i{r1}), @i{r3}=cos(@i{r1})"
msgstr "@i{r2}=sin(@i{r1}), @i{r3}=cos(@i{r1})"

#. type: findex
#: ../doc/gforth.texi:6645
#, no-wrap
msgid "ftan ( @var{ r1 -- r2  } ) floating-ext"
msgstr "ftan ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6646 ../doc/gforth.texi:6647
#, no-wrap
msgid "ftan"
msgstr "ftan"

#. type: format
#: ../doc/gforth.texi:6650
#, no-wrap
msgid "@code{ftan} ( @i{r1 -- r2 }) floating-ext ``f-tan''\n"
msgstr "@code{ftan} ( @i{r1 -- r2 }) floating-ext ``f-tan''\n"

#. type: findex
#: ../doc/gforth.texi:6652
#, no-wrap
msgid "fasin ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fasin ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6653 ../doc/gforth.texi:6654
#, no-wrap
msgid "fasin"
msgstr "fasin"

#. type: format
#: ../doc/gforth.texi:6657
#, no-wrap
msgid "@code{fasin} ( @i{r1 -- r2 }) floating-ext ``f-a-sine''\n"
msgstr "@code{fasin} ( @i{r1 -- r2 }) floating-ext ``f-a-sine''\n"

#. type: findex
#: ../doc/gforth.texi:6659
#, no-wrap
msgid "facos ( @var{ r1 -- r2  } ) floating-ext"
msgstr "facos ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6660 ../doc/gforth.texi:6661
#, no-wrap
msgid "facos"
msgstr "facos"

#. type: format
#: ../doc/gforth.texi:6664
#, no-wrap
msgid "@code{facos} ( @i{r1 -- r2 }) floating-ext ``f-a-cos''\n"
msgstr "@code{facos} ( @i{r1 -- r2 }) floating-ext ``f-a-cos''\n"

#. type: findex
#: ../doc/gforth.texi:6666
#, no-wrap
msgid "fatan ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fatan ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6667 ../doc/gforth.texi:6668
#, no-wrap
msgid "fatan"
msgstr "fatan"

#. type: format
#: ../doc/gforth.texi:6671
#, no-wrap
msgid "@code{fatan} ( @i{r1 -- r2 }) floating-ext ``f-a-tan''\n"
msgstr "@code{fatan} ( @i{r1 -- r2 }) floating-ext ``f-a-tan''\n"

#. type: findex
#: ../doc/gforth.texi:6673
#, no-wrap
msgid "fatan2 ( @var{ r1 r2 -- r3  } ) floating-ext"
msgstr "fatan2 ( @var{ r1 r2 -- r3  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6674 ../doc/gforth.texi:6675
#, no-wrap
msgid "fatan2"
msgstr "fatan2"

#. type: format
#: ../doc/gforth.texi:6678
#, no-wrap
msgid "@code{fatan2} ( @i{r1 r2 -- r3 }) floating-ext ``f-a-tan-two''\n"
msgstr "@code{fatan2} ( @i{r1 r2 -- r3 }) floating-ext ``f-a-tan-two''\n"

#. type: table
#: ../doc/gforth.texi:6681
msgid ""
"@i{r1/r2}=tan(@i{r3}). ANS Forth does not require, but probably intends this "
"to be the inverse of @code{fsincos}. In gforth it is."
msgstr "@i{r1/r2}=tan(@i{r3})  ANS Forth ではそこまで求められてはいないのですが、 おそらくこれが @code{fsincos} の逆になることを意図していて、 gforth ではそのようになっています。"

#. type: findex
#: ../doc/gforth.texi:6682
#, no-wrap
msgid "fsinh ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fsinh ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6683 ../doc/gforth.texi:6684
#, no-wrap
msgid "fsinh"
msgstr "fsinh"

#. type: format
#: ../doc/gforth.texi:6687
#, no-wrap
msgid "@code{fsinh} ( @i{r1 -- r2 }) floating-ext ``f-cinch''\n"
msgstr "@code{fsinh} ( @i{r1 -- r2 }) floating-ext ``f-cinch''\n"

#. type: findex
#: ../doc/gforth.texi:6689
#, no-wrap
msgid "fcosh ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fcosh ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6690 ../doc/gforth.texi:6691
#, no-wrap
msgid "fcosh"
msgstr "fcosh"

#. type: format
#: ../doc/gforth.texi:6694
#, no-wrap
msgid "@code{fcosh} ( @i{r1 -- r2 }) floating-ext ``f-cosh''\n"
msgstr "@code{fcosh} ( @i{r1 -- r2 }) floating-ext ``f-cosh''\n"

#. type: findex
#: ../doc/gforth.texi:6696
#, no-wrap
msgid "ftanh ( @var{ r1 -- r2  } ) floating-ext"
msgstr "ftanh ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6697 ../doc/gforth.texi:6698
#, no-wrap
msgid "ftanh"
msgstr "ftanh"

#. type: format
#: ../doc/gforth.texi:6701
#, no-wrap
msgid "@code{ftanh} ( @i{r1 -- r2 }) floating-ext ``f-tan-h''\n"
msgstr "@code{ftanh} ( @i{r1 -- r2 }) floating-ext ``f-tan-h''\n"

#. type: findex
#: ../doc/gforth.texi:6703
#, no-wrap
msgid "fasinh ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fasinh ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6704 ../doc/gforth.texi:6705
#, no-wrap
msgid "fasinh"
msgstr "fasinh"

#. type: format
#: ../doc/gforth.texi:6708
#, no-wrap
msgid "@code{fasinh} ( @i{r1 -- r2 }) floating-ext ``f-a-cinch''\n"
msgstr "@code{fasinh} ( @i{r1 -- r2 }) floating-ext ``f-a-cinch''\n"

#. type: findex
#: ../doc/gforth.texi:6710
#, no-wrap
msgid "facosh ( @var{ r1 -- r2  } ) floating-ext"
msgstr "facosh ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6711 ../doc/gforth.texi:6712
#, no-wrap
msgid "facosh"
msgstr "facosh"

#. type: format
#: ../doc/gforth.texi:6715
#, no-wrap
msgid "@code{facosh} ( @i{r1 -- r2 }) floating-ext ``f-a-cosh''\n"
msgstr "@code{facosh} ( @i{r1 -- r2 }) floating-ext ``f-a-cosh''\n"

#. type: findex
#: ../doc/gforth.texi:6717
#, no-wrap
msgid "fatanh ( @var{ r1 -- r2  } ) floating-ext"
msgstr "fatanh ( @var{ r1 -- r2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6718 ../doc/gforth.texi:6719
#, no-wrap
msgid "fatanh"
msgstr "fatanh"

#. type: format
#: ../doc/gforth.texi:6722
#, no-wrap
msgid "@code{fatanh} ( @i{r1 -- r2 }) floating-ext ``f-a-tan-h''\n"
msgstr "@code{fatanh} ( @i{r1 -- r2 }) floating-ext ``f-a-tan-h''\n"

#. type: findex
#: ../doc/gforth.texi:6724
#, no-wrap
msgid "pi ( @var{ -- r   } ) gforth-0.2"
msgstr "pi ( @var{ -- r   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6725 ../doc/gforth.texi:6726
#, no-wrap
msgid "pi"
msgstr "pi"

#. type: format
#: ../doc/gforth.texi:6729
#, no-wrap
msgid "@code{pi} ( @i{-- r  }) gforth-0.2 ``pi''\n"
msgstr "@code{pi} ( @i{-- r  }) gforth-0.2 ``pi''\n"

#. type: table
#: ../doc/gforth.texi:6732
msgid ""
"@code{Fconstant} -- @i{r} is the value pi; the ratio of a circle's area to "
"its diameter."
msgstr "@code{Fconstant}(定数) -- @i{r} は値 pi です(π)。 円の面積と直径の比率。"

#. type: cindex
#: ../doc/gforth.texi:6735
#, no-wrap
msgid "equality of floats"
msgstr "equality of floats"

#. type: cindex
#: ../doc/gforth.texi:6736
#, no-wrap
msgid "floating-point comparisons"
msgstr "floating-point comparisons"

#. type: table
#: ../doc/gforth.texi:6742
msgid ""
"One particular problem with floating-point arithmetic is that comparison for "
"equality often fails when you would expect it to succeed.  For this reason "
"approximate equality is often preferred (but you still have to know what you "
"are doing).  Also note that IEEE NaNs may compare differently from what you "
"might expect.  The comparison words are:"
msgstr "浮動小数点演算に関する特別な問題の 1 つは、 等価性の比較が、 成功するはずなのに失敗することがよくあることです。  このため、 多くの場合、 近似的等価性が好まれます(ただし、 自分が何をしているのかを理解しておく必要があります)。  また、 IEEE NaN の比較があなたの予想とは異なる場合があることにも注意してください。  比較ワードは以下のとおりです:"

#. type: findex
#: ../doc/gforth.texi:6743
#, no-wrap
msgid "f~rel ( @var{ r1 r2 r3 -- flag   } ) gforth-0.5"
msgstr "f~rel ( @var{ r1 r2 r3 -- flag   } ) gforth-0.5"

#. type: kindex
#: ../doc/gforth.texi:6744 ../doc/gforth.texi:6745
#, no-wrap
msgid "f~rel"
msgstr "f~rel"

#. type: format
#: ../doc/gforth.texi:6748
#, no-wrap
msgid "@code{f~rel} ( @i{r1 r2 r3 -- flag  }) gforth-0.5 ``f~rel''\n"
msgstr "@code{f~rel} ( @i{r1 r2 r3 -- flag  }) gforth-0.5 ``f~rel''\n"

#. type: table
#: ../doc/gforth.texi:6750
msgid "Approximate equality with relative error: |r1-r2|<r3*|r1+r2|."
msgstr "相対誤差を含む近似等価性: |r1-r2|<r3*|r1+r2|"

#. type: findex
#: ../doc/gforth.texi:6752
#, no-wrap
msgid "f~abs ( @var{ r1 r2 r3 -- flag   } ) gforth-0.5"
msgstr "f~abs ( @var{ r1 r2 r3 -- flag   } ) gforth-0.5"

#. type: kindex
#: ../doc/gforth.texi:6753 ../doc/gforth.texi:6754
#, no-wrap
msgid "f~abs"
msgstr "f~abs"

#. type: format
#: ../doc/gforth.texi:6757
#, no-wrap
msgid "@code{f~abs} ( @i{r1 r2 r3 -- flag  }) gforth-0.5 ``f~abs''\n"
msgstr "@code{f~abs} ( @i{r1 r2 r3 -- flag  }) gforth-0.5 ``f~abs''\n"

#. type: table
#: ../doc/gforth.texi:6759
msgid "Approximate equality with absolute error: |r1-r2|<r3."
msgstr ""
"Approximate equality with absolute error: |r1-r2|<r3.<\n"
"絶対誤差を伴う近似等価性: |r1-r2|<r3"

#. type: findex
#: ../doc/gforth.texi:6761
#, no-wrap
msgid "f~ ( @var{ r1 r2 r3 -- flag   } ) floating-ext"
msgstr "f~ ( @var{ r1 r2 r3 -- flag   } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:6762 ../doc/gforth.texi:6763
#, no-wrap
msgid "f~"
msgstr "f~"

#. type: format
#: ../doc/gforth.texi:6766
#, no-wrap
msgid "@code{f~} ( @i{r1 r2 r3 -- flag  }) floating-ext ``f-proximate''\n"
msgstr "@code{f~} ( @i{r1 r2 r3 -- flag  }) floating-ext ``f-proximate''\n"

#. type: table
#: ../doc/gforth.texi:6769
msgid ""
"ANS Forth medley for comparing r1 and r2 for equality: r3>0: @code{f~abs}; "
"r3=0: bitwise comparison; r3<0: @code{fnegate f~rel}."
msgstr "r1 と r2 が等しいかどうかを比較するための ANS Forth ワードごたまぜ: r3>0 なら @code{f~abs}; r3=0 なら ビット単位の比較; r3<0 なら @code{fnegate f~rel}"

#. type: findex
#: ../doc/gforth.texi:6771
#, no-wrap
msgid "f= ( @var{ r1 r2 -- f  } ) gforth-0.2"
msgstr "f= ( @var{ r1 r2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6772 ../doc/gforth.texi:6773
#, no-wrap
msgid "f="
msgstr "f="

#. type: format
#: ../doc/gforth.texi:6776
#, no-wrap
msgid "@code{f=} ( @i{r1 r2 -- f }) gforth-0.2 ``f-equals''\n"
msgstr "@code{f=} ( @i{r1 r2 -- f }) gforth-0.2 ``f-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6778
#, no-wrap
msgid "f<> ( @var{ r1 r2 -- f  } ) gforth-0.2"
msgstr "f<> ( @var{ r1 r2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6779 ../doc/gforth.texi:6780
#, no-wrap
msgid "f<>"
msgstr "f<>"

#. type: format
#: ../doc/gforth.texi:6783
#, no-wrap
msgid "@code{f<>} ( @i{r1 r2 -- f }) gforth-0.2 ``f-not-equals''\n"
msgstr "@code{f<>} ( @i{r1 r2 -- f }) gforth-0.2 ``f-not-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6786
#, no-wrap
msgid "f< ( @var{ r1 r2 -- f  } ) floating"
msgstr "f< ( @var{ r1 r2 -- f  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6787 ../doc/gforth.texi:6788
#, no-wrap
msgid "f<"
msgstr "f<"

#. type: format
#: ../doc/gforth.texi:6791
#, no-wrap
msgid "@code{f<} ( @i{r1 r2 -- f }) floating ``f-less-than''\n"
msgstr "@code{f<} ( @i{r1 r2 -- f }) floating ``f-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6793
#, no-wrap
msgid "f<= ( @var{ r1 r2 -- f  } ) gforth-0.2"
msgstr "f<= ( @var{ r1 r2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6794 ../doc/gforth.texi:6795
#, no-wrap
msgid "f<="
msgstr "f<="

#. type: format
#: ../doc/gforth.texi:6798
#, no-wrap
msgid "@code{f<=} ( @i{r1 r2 -- f }) gforth-0.2 ``f-less-or-equal''\n"
msgstr "@code{f<=} ( @i{r1 r2 -- f }) gforth-0.2 ``f-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6800
#, no-wrap
msgid "f> ( @var{ r1 r2 -- f  } ) gforth-0.2"
msgstr "f> ( @var{ r1 r2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6801 ../doc/gforth.texi:6802
#, no-wrap
msgid "f>"
msgstr "f>"

#. type: format
#: ../doc/gforth.texi:6805
#, no-wrap
msgid "@code{f>} ( @i{r1 r2 -- f }) gforth-0.2 ``f-greater-than''\n"
msgstr "@code{f>} ( @i{r1 r2 -- f }) gforth-0.2 ``f-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6807
#, no-wrap
msgid "f>= ( @var{ r1 r2 -- f  } ) gforth-0.2"
msgstr "f>= ( @var{ r1 r2 -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6808 ../doc/gforth.texi:6809
#, no-wrap
msgid "f>="
msgstr "f>="

#. type: format
#: ../doc/gforth.texi:6812
#, no-wrap
msgid "@code{f>=} ( @i{r1 r2 -- f }) gforth-0.2 ``f-greater-or-equal''\n"
msgstr "@code{f>=} ( @i{r1 r2 -- f }) gforth-0.2 ``f-greater-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6815
#, no-wrap
msgid "f0< ( @var{ r -- f  } ) floating"
msgstr "f0< ( @var{ r -- f  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6816 ../doc/gforth.texi:6817
#, no-wrap
msgid "f0<"
msgstr "f0<"

#. type: format
#: ../doc/gforth.texi:6820
#, no-wrap
msgid "@code{f0<} ( @i{r -- f }) floating ``f-zero-less-than''\n"
msgstr "@code{f0<} ( @i{r -- f }) floating ``f-zero-less-than''\n"

#. type: findex
#: ../doc/gforth.texi:6822
#, no-wrap
msgid "f0<= ( @var{ r -- f  } ) gforth-0.2"
msgstr "f0<= ( @var{ r -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6823 ../doc/gforth.texi:6824
#, no-wrap
msgid "f0<="
msgstr "f0<="

#. type: format
#: ../doc/gforth.texi:6827
#, no-wrap
msgid "@code{f0<=} ( @i{r -- f }) gforth-0.2 ``f-zero-less-or-equal''\n"
msgstr "@code{f0<=} ( @i{r -- f }) gforth-0.2 ``f-zero-less-or-equal''\n"

#. type: findex
#: ../doc/gforth.texi:6829
#, no-wrap
msgid "f0<> ( @var{ r -- f  } ) gforth-0.2"
msgstr "f0<> ( @var{ r -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6830 ../doc/gforth.texi:6831
#, no-wrap
msgid "f0<>"
msgstr "f0<>"

#. type: format
#: ../doc/gforth.texi:6834
#, no-wrap
msgid "@code{f0<>} ( @i{r -- f }) gforth-0.2 ``f-zero-not-equals''\n"
msgstr "@code{f0<>} ( @i{r -- f }) gforth-0.2 ``f-zero-not-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6836
#, no-wrap
msgid "f0= ( @var{ r -- f  } ) floating"
msgstr "f0= ( @var{ r -- f  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:6837 ../doc/gforth.texi:6838
#, no-wrap
msgid "f0="
msgstr "f0="

#. type: format
#: ../doc/gforth.texi:6841
#, no-wrap
msgid "@code{f0=} ( @i{r -- f }) floating ``f-zero-equals''\n"
msgstr "@code{f0=} ( @i{r -- f }) floating ``f-zero-equals''\n"

#. type: findex
#: ../doc/gforth.texi:6843
#, no-wrap
msgid "f0> ( @var{ r -- f  } ) gforth-0.2"
msgstr "f0> ( @var{ r -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6844 ../doc/gforth.texi:6845
#, no-wrap
msgid "f0>"
msgstr "f0>"

#. type: format
#: ../doc/gforth.texi:6848
#, no-wrap
msgid "@code{f0>} ( @i{r -- f }) gforth-0.2 ``f-zero-greater-than''\n"
msgstr "@code{f0>} ( @i{r -- f }) gforth-0.2 ``f-zero-greater-than''\n"

#. type: findex
#: ../doc/gforth.texi:6850
#, no-wrap
msgid "f0>= ( @var{ r -- f  } ) gforth-0.2"
msgstr "f0>= ( @var{ r -- f  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:6851 ../doc/gforth.texi:6852
#, no-wrap
msgid "f0>="
msgstr "f0>="

#. type: format
#: ../doc/gforth.texi:6855
#, no-wrap
msgid "@code{f0>=} ( @i{r -- f }) gforth-0.2 ``f-zero-greater-or-equal''\n"
msgstr "@code{f0>=} ( @i{r -- f }) gforth-0.2 ``f-zero-greater-or-equal''\n"

#. type: cindex
#: ../doc/gforth.texi:6858
#, no-wrap
msgid "floating-point constants"
msgstr "floating-point constants"

#. type: table
#: ../doc/gforth.texi:6861
msgid ""
"Special values in IEEE754 can be derived by for example dividing by zero.  "
"The most common ones are defined as floating point constants for easy usage."
msgstr "IEEE754 の特別な値は、 たとえばゼロで除算することによって導出できます。 最も一般的なものは、使いやすいように浮動小数点定数として定義されています。"

#. type: findex
#: ../doc/gforth.texi:6862
#, no-wrap
msgid "infinity ( @var{ -- r   } ) gforth-1.0"
msgstr "infinity ( @var{ -- r   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6863 ../doc/gforth.texi:6864
#, no-wrap
msgid "infinity"
msgstr "infinity"

#. type: format
#: ../doc/gforth.texi:6867
#, no-wrap
msgid "@code{infinity} ( @i{-- r  }) gforth-1.0 ``infinity''\n"
msgstr "@code{infinity} ( @i{-- r  }) gforth-1.0 ``infinity''\n"

#. type: table
#: ../doc/gforth.texi:6869
msgid "floating point infinity"
msgstr "浮動小数点数 (正の)無限大(floating point infinity)"

#. type: findex
#: ../doc/gforth.texi:6871
#, no-wrap
msgid "-infinity ( @var{ -- r   } ) gforth-1.0"
msgstr "-infinity ( @var{ -- r   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6872 ../doc/gforth.texi:6873
#, no-wrap
msgid "-infinity"
msgstr "-infinity"

#. type: format
#: ../doc/gforth.texi:6876
#, no-wrap
msgid "@code{-infinity} ( @i{-- r  }) gforth-1.0 ``-infinity''\n"
msgstr "@code{-infinity} ( @i{-- r  }) gforth-1.0 ``-infinity''\n"

#. type: table
#: ../doc/gforth.texi:6878
msgid "floating point -infinity"
msgstr "浮動小数点数 負の無限大(-infinity)"

#. type: findex
#: ../doc/gforth.texi:6880
#, no-wrap
msgid "NaN ( @var{ -- r   } ) gforth-1.0"
msgstr "NaN ( @var{ -- r   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6881 ../doc/gforth.texi:6882
#, no-wrap
msgid "NaN"
msgstr "NaN"

#. type: format
#: ../doc/gforth.texi:6885
#, no-wrap
msgid "@code{NaN} ( @i{-- r  }) gforth-1.0 ``NaN''\n"
msgstr "@code{NaN} ( @i{-- r  }) gforth-1.0 ``NaN''\n"

#. type: table
#: ../doc/gforth.texi:6887
msgid "floating point Not a Number"
msgstr "浮動小数点数 NaN(Not a Number)"

#. type: cindex
#: ../doc/gforth.texi:6892
#, no-wrap
msgid "stack manipulation words"
msgstr "stack manipulation words"

#. type: cindex
#: ../doc/gforth.texi:6894
#, no-wrap
msgid "floating-point stack in the standard"
msgstr "floating-point stack in the standard"

#. type: table
#: ../doc/gforth.texi:6896
msgid "Gforth maintains a number of separate stacks:"
msgstr "Gforth は、 いくつかの個別のスタックを維持します:"

#. type: cindex
#: ../doc/gforth.texi:6897
#, no-wrap
msgid "data stack"
msgstr "data stack"

#. type: cindex
#: ../doc/gforth.texi:6898
#, no-wrap
msgid "parameter stack"
msgstr "parameter stack"

#. type: itemize
#: ../doc/gforth.texi:6903
msgid ""
"A data stack (also known as the @dfn{parameter stack}) -- for characters, "
"cells, addresses, and double cells."
msgstr "データ・スタック(「パラメータ・スタック」とも呼ばれます) -- 文字(characters)と、 セル(cells)と、 アドレス(addresses)と、 2倍長セル(double cells)  用"

#. type: cindex
#: ../doc/gforth.texi:6904
#, no-wrap
msgid "floating-point stack"
msgstr "floating-point stack"

#. type: itemize
#: ../doc/gforth.texi:6907
msgid "A floating point stack -- for holding floating point (FP) numbers."
msgstr "浮動小数点スタック -- 浮動小数点 (FP) 数を保持します。"

#. type: cindex
#: ../doc/gforth.texi:6908
#, no-wrap
msgid "return stack"
msgstr "return stack"

#. type: itemize
#: ../doc/gforth.texi:6912
msgid ""
"A return stack -- for holding the return addresses of colon definitions and "
"other (non-FP) data."
msgstr "リターン・スタック -- コロン定義およびその他の(FP 以外の)データのリターン・アドレスを保持します。"

#. type: cindex
#: ../doc/gforth.texi:6913 ../doc/gforth.texi:20522
#, no-wrap
msgid "locals stack"
msgstr "locals stack"

#. type: itemize
#: ../doc/gforth.texi:6916
msgid "A locals stack -- for holding local variables."
msgstr "ローカル・スタック -- ローカル変数を保持します。"

#. type: node
#: ../doc/gforth.texi:6926 ../doc/gforth.texi:6927 ../doc/gforth.texi:7077
#, no-wrap
msgid "Data stack"
msgstr "Data stack"

#. type: node
#: ../doc/gforth.texi:6926 ../doc/gforth.texi:7077 ../doc/gforth.texi:7078
#: ../doc/gforth.texi:7162
#, no-wrap
msgid "Floating point stack"
msgstr "Floating point stack"

#. type: cindex
#: ../doc/gforth.texi:6928
#, no-wrap
msgid "data stack manipulation words"
msgstr "data stack manipulation words"

#. type: cindex
#: ../doc/gforth.texi:6929
#, no-wrap
msgid "stack manipulations words, data stack"
msgstr "stack manipulations words, data stack"

#. type: findex
#: ../doc/gforth.texi:6932
#, no-wrap
msgid "drop ( @var{ w --  } ) core"
msgstr "drop ( @var{ w --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6933 ../doc/gforth.texi:6934
#, no-wrap
msgid "drop"
msgstr "drop"

#. type: format
#: ../doc/gforth.texi:6937
#, no-wrap
msgid "@code{drop} ( @i{w -- }) core ``drop''\n"
msgstr "@code{drop} ( @i{w -- }) core ``drop''\n"

#. type: findex
#: ../doc/gforth.texi:6939
#, no-wrap
msgid "nip ( @var{ w1 w2 -- w2  } ) core-ext"
msgstr "nip ( @var{ w1 w2 -- w2  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6940 ../doc/gforth.texi:6941
#, no-wrap
msgid "nip"
msgstr "nip"

#. type: format
#: ../doc/gforth.texi:6944
#, no-wrap
msgid "@code{nip} ( @i{w1 w2 -- w2 }) core-ext ``nip''\n"
msgstr "@code{nip} ( @i{w1 w2 -- w2 }) core-ext ``nip''\n"

#. type: findex
#: ../doc/gforth.texi:6946
#, no-wrap
msgid "dup ( @var{ w -- w w  } ) core"
msgstr "dup ( @var{ w -- w w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6947 ../doc/gforth.texi:6948
#, no-wrap
msgid "dup"
msgstr "dup"

#. type: format
#: ../doc/gforth.texi:6951
#, no-wrap
msgid "@code{dup} ( @i{w -- w w }) core ``dupe''\n"
msgstr "@code{dup} ( @i{w -- w w }) core ``dupe''\n"

#. type: findex
#: ../doc/gforth.texi:6953
#, no-wrap
msgid "over ( @var{ w1 w2 -- w1 w2 w1  } ) core"
msgstr "over ( @var{ w1 w2 -- w1 w2 w1  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6954 ../doc/gforth.texi:6955
#, no-wrap
msgid "over"
msgstr "over"

#. type: format
#: ../doc/gforth.texi:6958
#, no-wrap
msgid "@code{over} ( @i{w1 w2 -- w1 w2 w1 }) core ``over''\n"
msgstr "@code{over} ( @i{w1 w2 -- w1 w2 w1 }) core ``over''\n"

#. type: findex
#: ../doc/gforth.texi:6960
#, no-wrap
msgid "third ( @var{ w1 w2 w3 -- w1 w2 w3 w1  } ) gforth-1.0"
msgstr "third ( @var{ w1 w2 w3 -- w1 w2 w3 w1  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6961 ../doc/gforth.texi:6962
#, no-wrap
msgid "third"
msgstr "third"

#. type: format
#: ../doc/gforth.texi:6965
#, no-wrap
msgid "@code{third} ( @i{w1 w2 w3 -- w1 w2 w3 w1 }) gforth-1.0 ``third''\n"
msgstr "@code{third} ( @i{w1 w2 w3 -- w1 w2 w3 w1 }) gforth-1.0 ``third''\n"

#. type: findex
#: ../doc/gforth.texi:6967
#, no-wrap
msgid "fourth ( @var{ w1 w2 w3 w4 -- w1 w2 w3 w4 w1  } ) gforth-1.0"
msgstr "fourth ( @var{ w1 w2 w3 w4 -- w1 w2 w3 w4 w1  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:6968 ../doc/gforth.texi:6969
#, no-wrap
msgid "fourth"
msgstr "fourth"

#. type: format
#: ../doc/gforth.texi:6972
#, no-wrap
msgid "@code{fourth} ( @i{w1 w2 w3 w4 -- w1 w2 w3 w4 w1 }) gforth-1.0 ``fourth''\n"
msgstr "@code{fourth} ( @i{w1 w2 w3 w4 -- w1 w2 w3 w4 w1 }) gforth-1.0 ``fourth''\n"

#. type: findex
#: ../doc/gforth.texi:6974
#, no-wrap
msgid "tuck ( @var{ w1 w2 -- w2 w1 w2  } ) core-ext"
msgstr "tuck ( @var{ w1 w2 -- w2 w1 w2  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6975 ../doc/gforth.texi:6976
#, no-wrap
msgid "tuck"
msgstr "tuck"

#. type: format
#: ../doc/gforth.texi:6979
#, no-wrap
msgid "@code{tuck} ( @i{w1 w2 -- w2 w1 w2 }) core-ext ``tuck''\n"
msgstr "@code{tuck} ( @i{w1 w2 -- w2 w1 w2 }) core-ext ``tuck''\n"

#. type: findex
#: ../doc/gforth.texi:6981
#, no-wrap
msgid "swap ( @var{ w1 w2 -- w2 w1  } ) core"
msgstr "swap ( @var{ w1 w2 -- w2 w1  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6982 ../doc/gforth.texi:6983
#, no-wrap
msgid "swap"
msgstr "swap"

#. type: format
#: ../doc/gforth.texi:6986
#, no-wrap
msgid "@code{swap} ( @i{w1 w2 -- w2 w1 }) core ``swap''\n"
msgstr "@code{swap} ( @i{w1 w2 -- w2 w1 }) core ``swap''\n"

#. type: findex
#: ../doc/gforth.texi:6988
#, no-wrap
msgid "pick ( @var{ S:... u -- S:... w  } ) core-ext"
msgstr "pick ( @var{ S:... u -- S:... w  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:6989 ../doc/gforth.texi:6990
#, no-wrap
msgid "pick"
msgstr "pick"

#. type: format
#: ../doc/gforth.texi:6993
#, no-wrap
msgid "@code{pick} ( @i{S:... u -- S:... w }) core-ext ``pick''\n"
msgstr "@code{pick} ( @i{S:... u -- S:... w }) core-ext ``pick''\n"

#. type: table
#: ../doc/gforth.texi:6995
msgid "Actually the stack effect is @code{ x0 ... xu u -- x0 ... xu x0 }."
msgstr "実際のスタック効果は @code{ x0 ... xu u -- x0 ... xu x0 } です。"

#. type: findex
#: ../doc/gforth.texi:6996
#, no-wrap
msgid "rot ( @var{ w1 w2 w3 -- w2 w3 w1  } ) core"
msgstr "rot ( @var{ w1 w2 w3 -- w2 w3 w1  } ) core"

#. type: kindex
#: ../doc/gforth.texi:6997 ../doc/gforth.texi:6998
#, no-wrap
msgid "rot"
msgstr "rot"

#. type: format
#: ../doc/gforth.texi:7001
#, no-wrap
msgid "@code{rot} ( @i{w1 w2 w3 -- w2 w3 w1 }) core ``rote''\n"
msgstr "@code{rot} ( @i{w1 w2 w3 -- w2 w3 w1 }) core ``rote''\n"

#. type: findex
#: ../doc/gforth.texi:7003
#, no-wrap
msgid "-rot ( @var{ w1 w2 w3 -- w3 w1 w2  } ) gforth-0.2"
msgstr "-rot ( @var{ w1 w2 w3 -- w3 w1 w2  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7004 ../doc/gforth.texi:7005
#, no-wrap
msgid "-rot"
msgstr "-rot"

#. type: format
#: ../doc/gforth.texi:7008
#, no-wrap
msgid "@code{-rot} ( @i{w1 w2 w3 -- w3 w1 w2 }) gforth-0.2 ``not-rote''\n"
msgstr "@code{-rot} ( @i{w1 w2 w3 -- w3 w1 w2 }) gforth-0.2 ``not-rote''\n"

#. type: findex
#: ../doc/gforth.texi:7010
#, no-wrap
msgid "?dup ( @var{ w -- S:... w  } ) core"
msgstr "?dup ( @var{ w -- S:... w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7011 ../doc/gforth.texi:7012
#, no-wrap
msgid "?dup"
msgstr "?dup"

#. type: format
#: ../doc/gforth.texi:7015
#, no-wrap
msgid "@code{?dup} ( @i{w -- S:... w }) core ``question-dupe''\n"
msgstr "@code{?dup} ( @i{w -- S:... w }) core ``question-dupe''\n"

#. type: table
#: ../doc/gforth.texi:7018
msgid ""
"Actually the stack effect is: @code{( w -- 0 | w w )}.  It performs a "
"@code{dup} if w is nonzero."
msgstr "実際のスタック効果は次のとおりです: @code{( w -- 0 | w w )} つまり w がゼロ以外の場合、 @code{dup} が実行されます。"

#. type: findex
#: ../doc/gforth.texi:7019
#, no-wrap
msgid "roll ( @var{ x0 x1 .. xn n -- x1 .. xn x0   } ) core-ext"
msgstr "roll ( @var{ x0 x1 .. xn n -- x1 .. xn x0   } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:7020 ../doc/gforth.texi:7021
#, no-wrap
msgid "roll"
msgstr "roll"

#. type: format
#: ../doc/gforth.texi:7024
#, no-wrap
msgid "@code{roll} ( @i{x0 x1 .. xn n -- x1 .. xn x0  }) core-ext ``roll''\n"
msgstr "@code{roll} ( @i{x0 x1 .. xn n -- x1 .. xn x0  }) core-ext ``roll''\n"

#. type: findex
#: ../doc/gforth.texi:7026
#, no-wrap
msgid "2drop ( @var{ w1 w2 --  } ) core"
msgstr "2drop ( @var{ w1 w2 --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7027 ../doc/gforth.texi:7028
#, no-wrap
msgid "2drop"
msgstr "2drop"

#. type: format
#: ../doc/gforth.texi:7031
#, no-wrap
msgid "@code{2drop} ( @i{w1 w2 -- }) core ``two-drop''\n"
msgstr "@code{2drop} ( @i{w1 w2 -- }) core ``two-drop''\n"

#. type: findex
#: ../doc/gforth.texi:7033
#, no-wrap
msgid "2nip ( @var{ w1 w2 w3 w4 -- w3 w4  } ) gforth-0.2"
msgstr "2nip ( @var{ w1 w2 w3 w4 -- w3 w4  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7034 ../doc/gforth.texi:7035
#, no-wrap
msgid "2nip"
msgstr "2nip"

#. type: format
#: ../doc/gforth.texi:7038
#, no-wrap
msgid "@code{2nip} ( @i{w1 w2 w3 w4 -- w3 w4 }) gforth-0.2 ``two-nip''\n"
msgstr "@code{2nip} ( @i{w1 w2 w3 w4 -- w3 w4 }) gforth-0.2 ``two-nip''\n"

#. type: findex
#: ../doc/gforth.texi:7040
#, no-wrap
msgid "2dup ( @var{ w1 w2 -- w1 w2 w1 w2  } ) core"
msgstr "2dup ( @var{ w1 w2 -- w1 w2 w1 w2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7041 ../doc/gforth.texi:7042
#, no-wrap
msgid "2dup"
msgstr "2dup"

#. type: format
#: ../doc/gforth.texi:7045
#, no-wrap
msgid "@code{2dup} ( @i{w1 w2 -- w1 w2 w1 w2 }) core ``two-dupe''\n"
msgstr "@code{2dup} ( @i{w1 w2 -- w1 w2 w1 w2 }) core ``two-dupe''\n"

#. type: findex
#: ../doc/gforth.texi:7047
#, no-wrap
msgid "2over ( @var{ w1 w2 w3 w4 -- w1 w2 w3 w4 w1 w2  } ) core"
msgstr "2over ( @var{ w1 w2 w3 w4 -- w1 w2 w3 w4 w1 w2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7048 ../doc/gforth.texi:7049
#, no-wrap
msgid "2over"
msgstr "2over"

#. type: format
#: ../doc/gforth.texi:7052
#, no-wrap
msgid "@code{2over} ( @i{w1 w2 w3 w4 -- w1 w2 w3 w4 w1 w2 }) core ``two-over''\n"
msgstr "@code{2over} ( @i{w1 w2 w3 w4 -- w1 w2 w3 w4 w1 w2 }) core ``two-over''\n"

#. type: findex
#: ../doc/gforth.texi:7054
#, no-wrap
msgid "2tuck ( @var{ w1 w2 w3 w4 -- w3 w4 w1 w2 w3 w4  } ) gforth-0.2"
msgstr "2tuck ( @var{ w1 w2 w3 w4 -- w3 w4 w1 w2 w3 w4  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7055 ../doc/gforth.texi:7056
#, no-wrap
msgid "2tuck"
msgstr "2tuck"

#. type: format
#: ../doc/gforth.texi:7059
#, no-wrap
msgid "@code{2tuck} ( @i{w1 w2 w3 w4 -- w3 w4 w1 w2 w3 w4 }) gforth-0.2 ``two-tuck''\n"
msgstr "@code{2tuck} ( @i{w1 w2 w3 w4 -- w3 w4 w1 w2 w3 w4 }) gforth-0.2 ``two-tuck''\n"

#. type: findex
#: ../doc/gforth.texi:7061
#, no-wrap
msgid "2swap ( @var{ w1 w2 w3 w4 -- w3 w4 w1 w2  } ) core"
msgstr "2swap ( @var{ w1 w2 w3 w4 -- w3 w4 w1 w2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7062 ../doc/gforth.texi:7063
#, no-wrap
msgid "2swap"
msgstr "2swap"

#. type: format
#: ../doc/gforth.texi:7066
#, no-wrap
msgid "@code{2swap} ( @i{w1 w2 w3 w4 -- w3 w4 w1 w2 }) core ``two-swap''\n"
msgstr "@code{2swap} ( @i{w1 w2 w3 w4 -- w3 w4 w1 w2 }) core ``two-swap''\n"

#. type: findex
#: ../doc/gforth.texi:7068
#, no-wrap
msgid "2rot ( @var{ w1 w2 w3 w4 w5 w6 -- w3 w4 w5 w6 w1 w2  } ) double-ext"
msgstr "2rot ( @var{ w1 w2 w3 w4 w5 w6 -- w3 w4 w5 w6 w1 w2  } ) double-ext"

#. type: kindex
#: ../doc/gforth.texi:7069 ../doc/gforth.texi:7070
#, no-wrap
msgid "2rot"
msgstr "2rot"

#. type: format
#: ../doc/gforth.texi:7073
#, no-wrap
msgid "@code{2rot} ( @i{w1 w2 w3 w4 w5 w6 -- w3 w4 w5 w6 w1 w2 }) double-ext ``two-rote''\n"
msgstr "@code{2rot} ( @i{w1 w2 w3 w4 w5 w6 -- w3 w4 w5 w6 w1 w2 }) double-ext ``two-rote''\n"

#. type: node
#: ../doc/gforth.texi:7077 ../doc/gforth.texi:7162 ../doc/gforth.texi:7163
#: ../doc/gforth.texi:7247
#, no-wrap
msgid "Return stack"
msgstr "Return stack"

#. type: cindex
#: ../doc/gforth.texi:7079
#, no-wrap
msgid "floating-point stack manipulation words"
msgstr "floating-point stack manipulation words"

#. type: cindex
#: ../doc/gforth.texi:7080
#, no-wrap
msgid "stack manipulation words, floating-point stack"
msgstr "stack manipulation words, floating-point stack"

#. type: findex
#: ../doc/gforth.texi:7082
#, no-wrap
msgid "fdrop ( @var{ r --  } ) floating"
msgstr "fdrop ( @var{ r --  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7083 ../doc/gforth.texi:7084
#, no-wrap
msgid "fdrop"
msgstr "fdrop"

#. type: format
#: ../doc/gforth.texi:7087
#, no-wrap
msgid "@code{fdrop} ( @i{r -- }) floating ``f-drop''\n"
msgstr "@code{fdrop} ( @i{r -- }) floating ``f-drop''\n"

#. type: findex
#: ../doc/gforth.texi:7089
#, no-wrap
msgid "fnip ( @var{ r1 r2 -- r2  } ) gforth-0.2"
msgstr "fnip ( @var{ r1 r2 -- r2  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7090 ../doc/gforth.texi:7091
#, no-wrap
msgid "fnip"
msgstr "fnip"

#. type: format
#: ../doc/gforth.texi:7094
#, no-wrap
msgid "@code{fnip} ( @i{r1 r2 -- r2 }) gforth-0.2 ``f-nip''\n"
msgstr "@code{fnip} ( @i{r1 r2 -- r2 }) gforth-0.2 ``f-nip''\n"

#. type: findex
#: ../doc/gforth.texi:7096
#, no-wrap
msgid "fdup ( @var{ r -- r r  } ) floating"
msgstr "fdup ( @var{ r -- r r  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7097 ../doc/gforth.texi:7098
#, no-wrap
msgid "fdup"
msgstr "fdup"

#. type: format
#: ../doc/gforth.texi:7101
#, no-wrap
msgid "@code{fdup} ( @i{r -- r r }) floating ``f-dupe''\n"
msgstr "@code{fdup} ( @i{r -- r r }) floating ``f-dupe''\n"

#. type: findex
#: ../doc/gforth.texi:7103
#, no-wrap
msgid "fover ( @var{ r1 r2 -- r1 r2 r1  } ) floating"
msgstr "fover ( @var{ r1 r2 -- r1 r2 r1  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7104 ../doc/gforth.texi:7105
#, no-wrap
msgid "fover"
msgstr "fover"

#. type: format
#: ../doc/gforth.texi:7108
#, no-wrap
msgid "@code{fover} ( @i{r1 r2 -- r1 r2 r1 }) floating ``f-over''\n"
msgstr "@code{fover} ( @i{r1 r2 -- r1 r2 r1 }) floating ``f-over''\n"

#. type: findex
#: ../doc/gforth.texi:7110
#, no-wrap
msgid "fthird ( @var{ r1 r2 r3 -- r1 r2 r3 r1  } ) gforth-1.0"
msgstr "fthird ( @var{ r1 r2 r3 -- r1 r2 r3 r1  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7111 ../doc/gforth.texi:7112
#, no-wrap
msgid "fthird"
msgstr "fthird"

#. type: format
#: ../doc/gforth.texi:7115
#, no-wrap
msgid "@code{fthird} ( @i{r1 r2 r3 -- r1 r2 r3 r1 }) gforth-1.0 ``fthird''\n"
msgstr "@code{fthird} ( @i{r1 r2 r3 -- r1 r2 r3 r1 }) gforth-1.0 ``fthird''\n"

#. type: findex
#: ../doc/gforth.texi:7117
#, no-wrap
msgid "ffourth ( @var{ r1 r2 r3 r4 -- r1 r2 r3 r4 r1  } ) gforth-1.0"
msgstr "ffourth ( @var{ r1 r2 r3 r4 -- r1 r2 r3 r4 r1  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7118 ../doc/gforth.texi:7119
#, no-wrap
msgid "ffourth"
msgstr "ffourth"

#. type: format
#: ../doc/gforth.texi:7122
#, no-wrap
msgid "@code{ffourth} ( @i{r1 r2 r3 r4 -- r1 r2 r3 r4 r1 }) gforth-1.0 ``ffourth''\n"
msgstr "@code{ffourth} ( @i{r1 r2 r3 r4 -- r1 r2 r3 r4 r1 }) gforth-1.0 ``ffourth''\n"

#. type: findex
#: ../doc/gforth.texi:7124
#, no-wrap
msgid "ftuck ( @var{ r1 r2 -- r2 r1 r2  } ) gforth-0.2"
msgstr "ftuck ( @var{ r1 r2 -- r2 r1 r2  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7125 ../doc/gforth.texi:7126
#, no-wrap
msgid "ftuck"
msgstr "ftuck"

#. type: format
#: ../doc/gforth.texi:7129
#, no-wrap
msgid "@code{ftuck} ( @i{r1 r2 -- r2 r1 r2 }) gforth-0.2 ``f-tuck''\n"
msgstr "@code{ftuck} ( @i{r1 r2 -- r2 r1 r2 }) gforth-0.2 ``f-tuck''\n"

#. type: findex
#: ../doc/gforth.texi:7131
#, no-wrap
msgid "fswap ( @var{ r1 r2 -- r2 r1  } ) floating"
msgstr "fswap ( @var{ r1 r2 -- r2 r1  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7132 ../doc/gforth.texi:7133
#, no-wrap
msgid "fswap"
msgstr "fswap"

#. type: format
#: ../doc/gforth.texi:7136
#, no-wrap
msgid "@code{fswap} ( @i{r1 r2 -- r2 r1 }) floating ``f-swap''\n"
msgstr "@code{fswap} ( @i{r1 r2 -- r2 r1 }) floating ``f-swap''\n"

#. type: findex
#: ../doc/gforth.texi:7138
#, no-wrap
msgid "fpick ( @var{ f:... u -- f:... r  } ) gforth-0.4"
msgstr "fpick ( @var{ f:... u -- f:... r  } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:7139 ../doc/gforth.texi:7140
#, no-wrap
msgid "fpick"
msgstr "fpick"

#. type: format
#: ../doc/gforth.texi:7143
#, no-wrap
msgid "@code{fpick} ( @i{f:... u -- f:... r }) gforth-0.4 ``fpick''\n"
msgstr "@code{fpick} ( @i{f:... u -- f:... r }) gforth-0.4 ``fpick''\n"

#. type: table
#: ../doc/gforth.texi:7145
msgid "Actually the stack effect is @code{ r0 ... ru u -- r0 ... ru r0 }."
msgstr "実際のスタック効果は @code{ r0 ... ru u -- r0 ... ru r0 }"

#. type: findex
#: ../doc/gforth.texi:7146
#, no-wrap
msgid "frot ( @var{ r1 r2 r3 -- r2 r3 r1  } ) floating"
msgstr "frot ( @var{ r1 r2 r3 -- r2 r3 r1  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7147 ../doc/gforth.texi:7148
#, no-wrap
msgid "frot"
msgstr "frot"

#. type: format
#: ../doc/gforth.texi:7151
#, no-wrap
msgid "@code{frot} ( @i{r1 r2 r3 -- r2 r3 r1 }) floating ``f-rote''\n"
msgstr "@code{frot} ( @i{r1 r2 r3 -- r2 r3 r1 }) floating ``f-rote''\n"

#. type: findex
#: ../doc/gforth.texi:7153
#, no-wrap
msgid "f-rot ( @var{ r1 r2 r3 -- r3 r1 r2  } ) floating"
msgstr "f-rot ( @var{ r1 r2 r3 -- r3 r1 r2  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7154 ../doc/gforth.texi:7155
#, no-wrap
msgid "f-rot"
msgstr "f-rot"

#. type: format
#: ../doc/gforth.texi:7158
#, no-wrap
msgid "@code{f-rot} ( @i{r1 r2 r3 -- r3 r1 r2 }) floating ``f-not-rote''\n"
msgstr "@code{f-rot} ( @i{r1 r2 r3 -- r3 r1 r2 }) floating ``f-not-rote''\n"

#. type: node
#: ../doc/gforth.texi:7162 ../doc/gforth.texi:7247 ../doc/gforth.texi:7248
#: ../doc/gforth.texi:7253
#, no-wrap
msgid "Locals stack"
msgstr "Locals stack"

#. type: cindex
#: ../doc/gforth.texi:7164
#, no-wrap
msgid "return stack manipulation words"
msgstr "return stack manipulation words"

#. type: cindex
#: ../doc/gforth.texi:7165
#, no-wrap
msgid "stack manipulation words, return stack"
msgstr "stack manipulation words, return stack"

#. type: cindex
#: ../doc/gforth.texi:7167
#, no-wrap
msgid "return stack and locals"
msgstr "return stack and locals"

#. type: cindex
#: ../doc/gforth.texi:7168
#, no-wrap
msgid "locals and return stack"
msgstr "locals and return stack"

#. type: table
#: ../doc/gforth.texi:7175
msgid ""
"A Forth system is allowed to keep local variables on the return stack. This "
"is reasonable, as local variables usually eliminate the need to use the "
"return stack explicitly. So, if you want to produce a standard compliant "
"program and you are using local variables in a word, forget about return "
"stack manipulations in that word (refer to the standard document for the "
"exact rules)."
msgstr "Forth システムは、 リターン・スタックにローカル変数を保持することができます。 通常、 ローカル変数を使用すると、 リターン・スタックを明示的に使用する必要がなくなるため、 これは合理的です。 したがって、 標準に準拠したプログラムを作成する場合で、 ワード内でローカル変数を使用している場合は、 そのワード内でのリターン・スタック操作のことは忘れてください(正確なルールについては標準ドキュメントを参照してください)。"

#. type: findex
#: ../doc/gforth.texi:7176
#, no-wrap
msgid ">r ( @var{ w -- R:w  } ) core"
msgstr ">r ( @var{ w -- R:w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7177 ../doc/gforth.texi:7178
#, no-wrap
msgid ">r"
msgstr ">r"

#. type: format
#: ../doc/gforth.texi:7181
#, no-wrap
msgid "@code{>r} ( @i{w -- R:w }) core ``to-r''\n"
msgstr "@code{>r} ( @i{w -- R:w }) core ``to-r''\n"

#. type: findex
#: ../doc/gforth.texi:7183
#, no-wrap
msgid "r> ( @var{ R:w -- w  } ) core"
msgstr "r> ( @var{ R:w -- w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7184 ../doc/gforth.texi:7185
#, no-wrap
msgid "r>"
msgstr "r>"

#. type: format
#: ../doc/gforth.texi:7188
#, no-wrap
msgid "@code{r>} ( @i{R:w -- w }) core ``r-from''\n"
msgstr "@code{r>} ( @i{R:w -- w }) core ``r-from''\n"

#. type: findex
#: ../doc/gforth.texi:7190
#, no-wrap
msgid "r@@ ( @var{ -- w ; R: w -- w   } ) core"
msgstr "r@@ ( @var{ -- w ; R: w -- w   } ) core"

#. type: kindex
#: ../doc/gforth.texi:7191 ../doc/gforth.texi:7192
#, no-wrap
msgid "r@@"
msgstr "r@@"

#. type: format
#: ../doc/gforth.texi:7195
#, no-wrap
msgid "@code{r@@} ( @i{-- w ; R: w -- w  }) core ``r-fetch''\n"
msgstr "@code{r@@} ( @i{-- w ; R: w -- w  }) core ``r-fetch''\n"

#. type: findex
#: ../doc/gforth.texi:7197
#, no-wrap
msgid "rdrop ( @var{ R:w --  } ) gforth-0.2"
msgstr "rdrop ( @var{ R:w --  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7198 ../doc/gforth.texi:7199
#, no-wrap
msgid "rdrop"
msgstr "rdrop"

#. type: format
#: ../doc/gforth.texi:7202
#, no-wrap
msgid "@code{rdrop} ( @i{R:w -- }) gforth-0.2 ``rdrop''\n"
msgstr "@code{rdrop} ( @i{R:w -- }) gforth-0.2 ``rdrop''\n"

#. type: findex
#: ../doc/gforth.texi:7204
#, no-wrap
msgid "2>r ( @var{ w1 w2 -- R:w1 R:w2  } ) core-ext"
msgstr "2>r ( @var{ w1 w2 -- R:w1 R:w2  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:7205 ../doc/gforth.texi:7206
#, no-wrap
msgid "2>r"
msgstr "2>r"

#. type: format
#: ../doc/gforth.texi:7209
#, no-wrap
msgid "@code{2>r} ( @i{w1 w2 -- R:w1 R:w2 }) core-ext ``two-to-r''\n"
msgstr "@code{2>r} ( @i{w1 w2 -- R:w1 R:w2 }) core-ext ``two-to-r''\n"

#. type: findex
#: ../doc/gforth.texi:7211
#, no-wrap
msgid "2r> ( @var{ R:w1 R:w2 -- w1 w2  } ) core-ext"
msgstr "2r> ( @var{ R:w1 R:w2 -- w1 w2  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:7212 ../doc/gforth.texi:7213
#, no-wrap
msgid "2r>"
msgstr "2r>"

#. type: format
#: ../doc/gforth.texi:7216
#, no-wrap
msgid "@code{2r>} ( @i{R:w1 R:w2 -- w1 w2 }) core-ext ``two-r-from''\n"
msgstr "@code{2r>} ( @i{R:w1 R:w2 -- w1 w2 }) core-ext ``two-r-from''\n"

#. type: findex
#: ../doc/gforth.texi:7218
#, no-wrap
msgid "2r@@ ( @var{ R:w1 R:w2 -- R:w1 R:w2 w1 w2  } ) core-ext"
msgstr "2r@@ ( @var{ R:w1 R:w2 -- R:w1 R:w2 w1 w2  } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:7219 ../doc/gforth.texi:7220
#, no-wrap
msgid "2r@@"
msgstr "2r@@"

#. type: format
#: ../doc/gforth.texi:7223
#, no-wrap
msgid "@code{2r@@} ( @i{R:w1 R:w2 -- R:w1 R:w2 w1 w2 }) core-ext ``two-r-fetch''\n"
msgstr "@code{2r@@} ( @i{R:w1 R:w2 -- R:w1 R:w2 w1 w2 }) core-ext ``two-r-fetch''\n"

#. type: findex
#: ../doc/gforth.texi:7225
#, no-wrap
msgid "2rdrop ( @var{ R:w1 R:w2 --  } ) gforth-0.2"
msgstr "2rdrop ( @var{ R:w1 R:w2 --  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7226 ../doc/gforth.texi:7227
#, no-wrap
msgid "2rdrop"
msgstr "2rdrop"

#. type: format
#: ../doc/gforth.texi:7230
#, no-wrap
msgid "@code{2rdrop} ( @i{R:w1 R:w2 -- }) gforth-0.2 ``two-r-drop''\n"
msgstr "@code{2rdrop} ( @i{R:w1 R:w2 -- }) gforth-0.2 ``two-r-drop''\n"

#. type: findex
#: ../doc/gforth.texi:7232
#, no-wrap
msgid "n>r ( @var{ x1 .. xn n -- r:xn..x1 r:n   } ) tools-ext"
msgstr "n>r ( @var{ x1 .. xn n -- r:xn..x1 r:n   } ) tools-ext"

#. type: kindex
#: ../doc/gforth.texi:7233 ../doc/gforth.texi:7234
#, no-wrap
msgid "n>r"
msgstr "n>r"

#. type: format
#: ../doc/gforth.texi:7237
#, no-wrap
msgid "@code{n>r} ( @i{x1 .. xn n -- r:xn..x1 r:n  }) tools-ext ``n-to-r''\n"
msgstr "@code{n>r} ( @i{x1 .. xn n -- r:xn..x1 r:n  }) tools-ext ``n-to-r''\n"

#. type: findex
#: ../doc/gforth.texi:7239
#, no-wrap
msgid "nr> ( @var{ r:xn..x1 r:n -- x1 .. xn n   } ) tools-ext"
msgstr "nr> ( @var{ r:xn..x1 r:n -- x1 .. xn n   } ) tools-ext"

#. type: kindex
#: ../doc/gforth.texi:7240 ../doc/gforth.texi:7241
#, no-wrap
msgid "nr>"
msgstr "nr>"

#. type: format
#: ../doc/gforth.texi:7244
#, no-wrap
msgid "@code{nr>} ( @i{r:xn..x1 r:n -- x1 .. xn n  }) tools-ext ``n-r-from''\n"
msgstr "@code{nr>} ( @i{r:xn..x1 r:n -- x1 .. xn n  }) tools-ext ``n-r-from''\n"

#. type: table
#: ../doc/gforth.texi:7252
msgid ""
"Gforth uses an extra locals stack.  It is described, along with the reasons "
"for its existence, in @ref{Locals implementation}."
msgstr "Gforth で追加のローカル・スタックを使用します。  これは、 その存在理由を含めて @ref{Locals implementation} にて説明されています。"

#. type: cindex
#: ../doc/gforth.texi:7255
#, no-wrap
msgid "stack pointer manipulation words"
msgstr "stack pointer manipulation words"

#. type: findex
#: ../doc/gforth.texi:7258
#, no-wrap
msgid "sp0 ( @var{ -- a-addr   } ) gforth-0.4"
msgstr "sp0 ( @var{ -- a-addr   } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:7259 ../doc/gforth.texi:7260
#, no-wrap
msgid "sp0"
msgstr "sp0"

#. type: format
#: ../doc/gforth.texi:7263
#, no-wrap
msgid "@code{sp0} ( @i{-- a-addr  }) gforth-0.4 ``sp0''\n"
msgstr "@code{sp0} ( @i{-- a-addr  }) gforth-0.4 ``sp0''\n"

#. type: table
#: ../doc/gforth.texi:7265
msgid "@code{User} variable -- initial value of the data stack pointer."
msgstr "ユーザー変数 -- データ・スタック・ポインタの初期値。"

#. type: findex
#: ../doc/gforth.texi:7267
#, no-wrap
msgid "sp@@ ( @var{ S:... -- a-addr  } ) gforth-0.2"
msgstr "sp@@ ( @var{ S:... -- a-addr  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7268 ../doc/gforth.texi:7269
#, no-wrap
msgid "sp@@"
msgstr "sp@@"

#. type: format
#: ../doc/gforth.texi:7272
#, no-wrap
msgid "@code{sp@@} ( @i{S:... -- a-addr }) gforth-0.2 ``sp-fetch''\n"
msgstr "@code{sp@@} ( @i{S:... -- a-addr }) gforth-0.2 ``sp-fetch''\n"

#. type: findex
#: ../doc/gforth.texi:7274
#, no-wrap
msgid "sp! ( @var{ a-addr -- S:...  } ) gforth-0.2"
msgstr "sp! ( @var{ a-addr -- S:...  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7275 ../doc/gforth.texi:7276
#, no-wrap
msgid "sp!"
msgstr "sp!"

#. type: format
#: ../doc/gforth.texi:7279
#, no-wrap
msgid "@code{sp!} ( @i{a-addr -- S:... }) gforth-0.2 ``sp-store''\n"
msgstr "@code{sp!} ( @i{a-addr -- S:... }) gforth-0.2 ``sp-store''\n"

#. type: findex
#: ../doc/gforth.texi:7281
#, no-wrap
msgid "fp0 ( @var{ -- a-addr   } ) gforth-0.4"
msgstr "fp0 ( @var{ -- a-addr   } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:7282 ../doc/gforth.texi:7283
#, no-wrap
msgid "fp0"
msgstr "fp0"

#. type: format
#: ../doc/gforth.texi:7286
#, no-wrap
msgid "@code{fp0} ( @i{-- a-addr  }) gforth-0.4 ``fp0''\n"
msgstr "@code{fp0} ( @i{-- a-addr  }) gforth-0.4 ``fp0''\n"

#. type: table
#: ../doc/gforth.texi:7288
msgid ""
"@code{User} variable -- initial value of the floating-point stack pointer."
msgstr "ユーザー変数 -- 浮動小数点スタック・ポインタの初期値。"

#. type: findex
#: ../doc/gforth.texi:7290
#, no-wrap
msgid "fp@@ ( @var{ f:... -- f-addr  } ) gforth-0.2"
msgstr "fp@@ ( @var{ f:... -- f-addr  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7291 ../doc/gforth.texi:7292
#, no-wrap
msgid "fp@@"
msgstr "fp@@"

#. type: format
#: ../doc/gforth.texi:7295
#, no-wrap
msgid "@code{fp@@} ( @i{f:... -- f-addr }) gforth-0.2 ``fp-fetch''\n"
msgstr "@code{fp@@} ( @i{f:... -- f-addr }) gforth-0.2 ``fp-fetch''\n"

#. type: findex
#: ../doc/gforth.texi:7297
#, no-wrap
msgid "fp! ( @var{ f-addr -- f:...  } ) gforth-0.2"
msgstr "fp! ( @var{ f-addr -- f:...  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7298 ../doc/gforth.texi:7299
#, no-wrap
msgid "fp!"
msgstr "fp!"

#. type: format
#: ../doc/gforth.texi:7302
#, no-wrap
msgid "@code{fp!} ( @i{f-addr -- f:... }) gforth-0.2 ``fp-store''\n"
msgstr "@code{fp!} ( @i{f-addr -- f:... }) gforth-0.2 ``fp-store''\n"

#. type: findex
#: ../doc/gforth.texi:7304
#, no-wrap
msgid "rp0 ( @var{ -- a-addr   } ) gforth-0.4"
msgstr "rp0 ( @var{ -- a-addr   } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:7305 ../doc/gforth.texi:7306
#, no-wrap
msgid "rp0"
msgstr "rp0"

#. type: format
#: ../doc/gforth.texi:7309
#, no-wrap
msgid "@code{rp0} ( @i{-- a-addr  }) gforth-0.4 ``rp0''\n"
msgstr "@code{rp0} ( @i{-- a-addr  }) gforth-0.4 ``rp0''\n"

#. type: table
#: ../doc/gforth.texi:7311
msgid "@code{User} variable -- initial value of the return stack pointer."
msgstr "ユーザー変数 -- リターン・スタック・ポインタの初期値。"

#. type: findex
#: ../doc/gforth.texi:7313
#, no-wrap
msgid "rp@@ ( @var{ -- a-addr  } ) gforth-0.2"
msgstr "rp@@ ( @var{ -- a-addr  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7314 ../doc/gforth.texi:7315
#, no-wrap
msgid "rp@@"
msgstr "rp@@"

#. type: format
#: ../doc/gforth.texi:7318
#, no-wrap
msgid "@code{rp@@} ( @i{-- a-addr }) gforth-0.2 ``rp-fetch''\n"
msgstr "@code{rp@@} ( @i{-- a-addr }) gforth-0.2 ``rp-fetch''\n"

#. type: findex
#: ../doc/gforth.texi:7320
#, no-wrap
msgid "rp! ( @var{ a-addr --  } ) gforth-0.2"
msgstr "rp! ( @var{ a-addr --  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7321 ../doc/gforth.texi:7322
#, no-wrap
msgid "rp!"
msgstr "rp!"

#. type: format
#: ../doc/gforth.texi:7325
#, no-wrap
msgid "@code{rp!} ( @i{a-addr -- }) gforth-0.2 ``rp-store''\n"
msgstr "@code{rp!} ( @i{a-addr -- }) gforth-0.2 ``rp-store''\n"

#. type: findex
#: ../doc/gforth.texi:7327
#, no-wrap
msgid "lp0 ( @var{ -- a-addr   } ) gforth-0.4"
msgstr "lp0 ( @var{ -- a-addr   } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:7328 ../doc/gforth.texi:7329
#, no-wrap
msgid "lp0"
msgstr "lp0"

#. type: format
#: ../doc/gforth.texi:7332
#, no-wrap
msgid "@code{lp0} ( @i{-- a-addr  }) gforth-0.4 ``lp0''\n"
msgstr "@code{lp0} ( @i{-- a-addr  }) gforth-0.4 ``lp0''\n"

#. type: table
#: ../doc/gforth.texi:7334
msgid "@code{User} variable -- initial value of the locals stack pointer."
msgstr "ユーザー変数 -- ローカル・スタック・ポインタの初期値。"

#. type: findex
#: ../doc/gforth.texi:7336 ../doc/gforth.texi:20545
#, no-wrap
msgid "lp@@ ( @var{ -- c-addr  } ) gforth-0.2"
msgstr "lp@@ ( @var{ -- c-addr  } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7337 ../doc/gforth.texi:7338 ../doc/gforth.texi:20546
#: ../doc/gforth.texi:20547
#, no-wrap
msgid "lp@@"
msgstr "lp@@"

#. type: format
#: ../doc/gforth.texi:7341 ../doc/gforth.texi:20550
#, no-wrap
msgid "@code{lp@@} ( @i{-- c-addr }) gforth-0.2 ``lp-fetch''\n"
msgstr "@code{lp@@} ( @i{-- c-addr }) gforth-0.2 ``lp-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7343 ../doc/gforth.texi:20552
msgid "@i{C_addr} is the current value of the locals stack pointer."
msgstr "@i{C_addr} は、 ローカル・スタック・ポインタの現在の値です。"

#. type: findex
#: ../doc/gforth.texi:7344 ../doc/gforth.texi:20554
#, no-wrap
msgid "lp! ( @var{ c-addr --  } ) gforth-internal"
msgstr "lp! ( @var{ c-addr --  } ) gforth-internal"

#. type: kindex
#: ../doc/gforth.texi:7345 ../doc/gforth.texi:7346 ../doc/gforth.texi:20555
#: ../doc/gforth.texi:20556
#, no-wrap
msgid "lp!"
msgstr "lp!"

#. type: format
#: ../doc/gforth.texi:7349 ../doc/gforth.texi:20559
#, no-wrap
msgid "@code{lp!} ( @i{c-addr -- }) gforth-internal ``lp-store''\n"
msgstr "@code{lp!} ( @i{c-addr -- }) gforth-internal ``lp-store''\n"

#. type: cindex
#: ../doc/gforth.texi:7355
#, no-wrap
msgid "memory words"
msgstr "memory words"

#. type: table
#: ../doc/gforth.texi:7370
msgid ""
"In addition to the standard Forth memory allocation words, there is also a "
"@uref{https://www.complang.tuwien.ac.at/forth/garbage-collection.zip, "
"garbage collector}."
msgstr "標準 Forth のメモリ割り当てワードに加えて @uref{https://www.complang.tuwien.ac.at/forth/garbage-collection.zip, ガベージ・コレクター(garbage collector)} もあります。"

#. type: node
#: ../doc/gforth.texi:7371 ../doc/gforth.texi:7372 ../doc/gforth.texi:7401
#, no-wrap
msgid "Memory model"
msgstr "Memory model"

#. type: node
#: ../doc/gforth.texi:7371 ../doc/gforth.texi:7401 ../doc/gforth.texi:7402
#: ../doc/gforth.texi:7628
#, no-wrap
msgid "Dictionary allocation"
msgstr "Dictionary allocation"

#. type: table
#: ../doc/gforth.texi:7383
msgid ""
"Standard Forth considers a Forth system as consisting of several address "
"spaces, of which only @dfn{data space} is managed and accessible with the "
"memory words.  Memory not necessarily in data space includes the stacks, the "
"code (called code space) and the headers (called name space). In Gforth "
"everything is in data space, but the code for the primitives is usually read-"
"only."
msgstr "標準 Forth は、 Forth システムが複数のアドレス空間で構成されているとみなします。 そのうちの「データ空間」(data space)のみを管理し、 メモリ・ワードでアクセスできます。  メモリには、 スタックと、 コード(コード空間(code space))と呼ばれる)と、 ヘッダー(名前空間(name space)と呼ばれる)とが含まれ、 それらは必ずしもデータ空間にある必要はありません。  Gforth ではすべてがデータ空間内にありますが、 プリミティブのコードは通常読み取り専用です。"

#. type: table
#: ../doc/gforth.texi:7390
msgid ""
"Data space is divided into a number of areas: The (data space portion of "
"the) dictionary@footnote{Sometimes, the term @dfn{dictionary} is used to "
"refer to the search data structure embodied in word lists and headers, "
"because it is used for looking up names, just as you would in a conventional "
"dictionary.}, the heap, and a number of system-allocated buffers."
msgstr "データ空間は、 いくつかの領域に分割されます。 ディクショナリ(dictionary)@footnote{「ディクショナリ」(辞書)という用語は、 従来の辞書と同じように名前を検索するために使用される、 ワード・リストやヘッダーに組み込まれた検索データ構造を指すために使用されることがあります}と、 ヒープと、 システムによって割り当てられた多数のバッファーから成ります。"

#. type: table
#: ../doc/gforth.texi:7399
msgid ""
"Gforth provides one big address space, and address arithmetic can be "
"performed between any addresses. However, in the dictionary headers or code "
"are interleaved with data, so almost the only contiguous data space regions "
"there are those described by Standard Forth as contiguous; but you can be "
"sure that the dictionary is allocated towards increasing addresses even "
"between contiguous regions.  The memory order of allocations in the heap is "
"platform-dependent (and possibly different from one run to the next)."
msgstr "Gforth は 1 つの大きなアドレス空間を提供し、 その任意のアドレス間でアドレス演算を実行できます。 ただし、 ディクショナリではヘッダーまたはコードがデータと代わる代わる出てくるため(interleaved)、 連続するデータ空間領域は、 標準 Forth で連続していると記述されているものだけがほとんどです。 しかし、 連続する領域間であっても、 増加するアドレス方向にディクショナリが確実に割り当てられます。 ヒープ内でのメモリ割り当ての順序はプラットフォームに依存します(また、実行ごとに異なる可能性もあります)。"

#. type: node
#: ../doc/gforth.texi:7401 ../doc/gforth.texi:7628 ../doc/gforth.texi:7771
#, no-wrap
msgid "Heap Allocation"
msgstr "Heap Allocation"

#. type: cindex
#: ../doc/gforth.texi:7403
#, no-wrap
msgid "reserving data space"
msgstr "reserving data space"

#. type: cindex
#: ../doc/gforth.texi:7404
#, no-wrap
msgid "data space - reserving some"
msgstr "data space - reserving some"

#. type: table
#: ../doc/gforth.texi:7409
msgid ""
"Dictionary allocation is a stack-oriented allocation scheme, i.e., if you "
"want to deallocate X, you also deallocate everything allocated after X."
msgstr "ディクショナリの割り当てはスタック指向の割り当てスキーム(stack-oriented allocation scheme)です。 つまり、 X の割り当てを解除したい場合は、 X の後に割り当てられたすべての割り当ても解除します。"

#. type: cindex
#: ../doc/gforth.texi:7410
#, no-wrap
msgid "contiguous regions in dictionary allocation"
msgstr "contiguous regions in dictionary allocation"

#. type: table
#: ../doc/gforth.texi:7415
msgid ""
"The allocations using the words below are contiguous and grow the region "
"towards increasing addresses.  Other words that allocate dictionary memory "
"of any kind (i.e., defining words including @code{:noname}) end the "
"contiguous region and start a new one."
msgstr "以下のワード達を使用した割り当ては連続しており、 アドレスの増加方向に向けて領域が拡張されます。 あらゆる種類のディクショナリ・メモリを割り当てる他のワード(つまり、 @code{:noname} を含む定義ワード)は、 連続領域(contiguous region)を終了し、 新しい領域を開始します。"

#. type: table
#: ../doc/gforth.texi:7420
msgid ""
"In Standard Forth only @code{create}d words are guaranteed to produce an "
"address that is the start of the following contiguous region.  In "
"particular, the cell allocated by @code{variable} is not guaranteed to be "
"contiguous with following @code{allot}ed memory."
msgstr "標準 Forth では、 @code{create} されたワードのみが、 後続の連続領域の開始となるアドレスを生成することが保証されています。  特に、 @code{variable} によって割り当てられたセルが、 後続の @code{allot} で割り当てられたメモリと連続していることは保証されません。"

#. type: table
#: ../doc/gforth.texi:7424
msgid ""
"You can deallocate memory by using @code{allot} with a negative argument "
"(with some restrictions, see @code{allot}). For larger deallocations use "
"@code{marker}."
msgstr "@code{allot} に負の引数を指定して使用すると、 メモリの割り当てを解除できます(いくつかの制限があります。 @code{allot} を参照してください)。 大規模な割り当て解除の場合は、 @code{marker} を使用します。"

#. type: findex
#: ../doc/gforth.texi:7426
#, no-wrap
msgid "here ( @var{ -- addr   } ) core"
msgstr "here ( @var{ -- addr   } ) core"

#. type: kindex
#: ../doc/gforth.texi:7427 ../doc/gforth.texi:7428
#, no-wrap
msgid "here"
msgstr "here"

#. type: format
#: ../doc/gforth.texi:7431
#, no-wrap
msgid "@code{here} ( @i{-- addr  }) core ``here''\n"
msgstr "@code{here} ( @i{-- addr  }) core ``here''\n"

#. type: table
#: ../doc/gforth.texi:7433
msgid "Return the address of the next free location in data space."
msgstr "データ空間内の次の空き位置のアドレスを返します。"

#. type: findex
#: ../doc/gforth.texi:7435
#, no-wrap
msgid "unused ( @var{ -- u   } ) core-ext"
msgstr "unused ( @var{ -- u   } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:7436 ../doc/gforth.texi:7437
#, no-wrap
msgid "unused"
msgstr "unused"

#. type: format
#: ../doc/gforth.texi:7440
#, no-wrap
msgid "@code{unused} ( @i{-- u  }) core-ext ``unused''\n"
msgstr "@code{unused} ( @i{-- u  }) core-ext ``unused''\n"

#. type: table
#: ../doc/gforth.texi:7443
msgid ""
"Return the amount of free space remaining (in address units) in the region "
"addressed by @code{here}."
msgstr "@code{here} でアドレス指定された領域(以降)に残っている空き領域の量をアドレス単位(address units)で返します。"

#. type: findex
#: ../doc/gforth.texi:7445
#, no-wrap
msgid "allot ( @var{ n --   } ) core"
msgstr "allot ( @var{ n --   } ) core"

#. type: kindex
#: ../doc/gforth.texi:7446 ../doc/gforth.texi:7447
#, no-wrap
msgid "allot"
msgstr "allot"

#. type: format
#: ../doc/gforth.texi:7450
#, no-wrap
msgid "@code{allot} ( @i{n --  }) core ``allot''\n"
msgstr "@code{allot} ( @i{n --  }) core ``allot''\n"

#. type: table
#: ../doc/gforth.texi:7457
msgid ""
"Reserve @i{n} address units of data space without initialization. @i{n} is a "
"signed number, passing a negative @i{n} releases memory.  In ANS Forth you "
"can only deallocate memory from the current contiguous region in this way.  "
"In Gforth you can deallocate anything in this way but named words.  The "
"system does not check this restriction."
msgstr "初期化せずに、 データ空間に @i{n} アドレス単位を予約します。 @i{n} は符号付きの数値で、 負の @i{n} を渡すとメモリが解放されます。  ANS Forth では、この方法で現在の連続領域からメモリの割り当てを解除することしかできません。  Gforth では、この方法で名前付きワード以外のあらゆるものを割り当て解除できます。  システムはこの制限をチェックしません。"

#. type: findex
#: ../doc/gforth.texi:7459
#, no-wrap
msgid "->here ( @var{ addr --   } ) gforth-1.0"
msgstr "->here ( @var{ addr --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7460 ../doc/gforth.texi:7461
#, no-wrap
msgid "->here"
msgstr "->here"

#. type: format
#: ../doc/gforth.texi:7464
#, no-wrap
msgid "@code{->here} ( @i{addr --  }) gforth-1.0 ``to-here''\n"
msgstr "@code{->here} ( @i{addr --  }) gforth-1.0 ``to-here''\n"

#. type: table
#: ../doc/gforth.texi:7466
msgid "Change the value of @code{here} to @i{addr}."
msgstr "@code{here} の値を @i{addr} に変更します。"

#. type: findex
#: ../doc/gforth.texi:7468
#, no-wrap
msgid "c, ( @var{ c --   } ) core"
msgstr "c, ( @var{ c --   } ) core"

#. type: kindex
#: ../doc/gforth.texi:7469 ../doc/gforth.texi:7470
#, no-wrap
msgid "c,"
msgstr "c,"

#. type: format
#: ../doc/gforth.texi:7473
#, no-wrap
msgid "@code{c,} ( @i{c --  }) core ``c-comma''\n"
msgstr "@code{c,} ( @i{c --  }) core ``c-comma''\n"

#. type: table
#: ../doc/gforth.texi:7475
msgid "Reserve data space for one char and store @i{c} in the space."
msgstr "文字(char)用に1つのデータ空間を予約し、 その空間に @i{c} を格納します。"

#. type: findex
#: ../doc/gforth.texi:7477
#, no-wrap
msgid "f, ( @var{ f --   } ) gforth-0.2"
msgstr "f, ( @var{ f --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7478 ../doc/gforth.texi:7479
#, no-wrap
msgid "f,"
msgstr "f,"

#. type: format
#: ../doc/gforth.texi:7482
#, no-wrap
msgid "@code{f,} ( @i{f --  }) gforth-0.2 ``f,''\n"
msgstr "@code{f,} ( @i{f --  }) gforth-0.2 ``f,''\n"

#. type: table
#: ../doc/gforth.texi:7485
msgid ""
"Reserve data space for one floating-point number and store @i{f} in the "
"space."
msgstr "浮動小数点数(floating-point number)用の1つのデータ空間を予約し、 その空間に @i{f} を格納します。"

#. type: findex
#: ../doc/gforth.texi:7487
#, no-wrap
msgid ", ( @var{ w --   } ) core"
msgstr ", ( @var{ w --   } ) core"

#. type: kindex
#: ../doc/gforth.texi:7488 ../doc/gforth.texi:7489
#, no-wrap
msgid ","
msgstr ","

#. type: format
#: ../doc/gforth.texi:7492
#, no-wrap
msgid "@code{,} ( @i{w --  }) core ``comma''\n"
msgstr "@code{,} ( @i{w --  }) core ``comma''\n"

#. type: table
#: ../doc/gforth.texi:7494
msgid "Reserve data space for one cell and store @i{w} in the space."
msgstr "セル(cell)用の1つのデータ空間を予約し、 その空間に @i{w} を格納します。"

#. type: findex
#: ../doc/gforth.texi:7496
#, no-wrap
msgid "2, ( @var{ w1 w2 --   } ) gforth-0.2"
msgstr "2, ( @var{ w1 w2 --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7497 ../doc/gforth.texi:7498
#, no-wrap
msgid "2,"
msgstr "2,"

#. type: format
#: ../doc/gforth.texi:7501
#, no-wrap
msgid "@code{2,} ( @i{w1 w2 --  }) gforth-0.2 ``2,''\n"
msgstr "@code{2,} ( @i{w1 w2 --  }) gforth-0.2 ``2,''\n"

#. type: table
#: ../doc/gforth.texi:7504
msgid ""
"Reserve data space for two cells and store the double @i{w1 w2} there, "
"@i{w2} first (lower address)."
msgstr "2つのセル用のデータ空間を予約し、 そこに @i{w1 w2} 格納します。 最初(低位アドレス側)に @i{w2} を格納します。"

#. type: findex
#: ../doc/gforth.texi:7506
#, no-wrap
msgid "w, ( @var{ w --   } ) gforth-1.0"
msgstr "w, ( @var{ w --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7507 ../doc/gforth.texi:7508
#, no-wrap
msgid "w,"
msgstr "w,"

#. type: format
#: ../doc/gforth.texi:7511
#, no-wrap
msgid "@code{w,} ( @i{w --  }) gforth-1.0 ``w-comma''\n"
msgstr "@code{w,} ( @i{w --  }) gforth-1.0 ``w-comma''\n"

#. type: findex
#: ../doc/gforth.texi:7513
#, no-wrap
msgid "l, ( @var{ l --   } ) gforth-1.0"
msgstr "l, ( @var{ l --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7514 ../doc/gforth.texi:7515
#, no-wrap
msgid "l,"
msgstr "l,"

#. type: format
#: ../doc/gforth.texi:7518
#, no-wrap
msgid "@code{l,} ( @i{l --  }) gforth-1.0 ``l-comma''\n"
msgstr "@code{l,} ( @i{l --  }) gforth-1.0 ``l-comma''\n"

#. type: findex
#: ../doc/gforth.texi:7520
#, no-wrap
msgid "x, ( @var{ x --   } ) gforth-1.0"
msgstr "x, ( @var{ x --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7521 ../doc/gforth.texi:7522
#, no-wrap
msgid "x,"
msgstr "x,"

#. type: format
#: ../doc/gforth.texi:7525
#, no-wrap
msgid "@code{x,} ( @i{x --  }) gforth-1.0 ``x-comma''\n"
msgstr "@code{x,} ( @i{x --  }) gforth-1.0 ``x-comma''\n"

#. type: findex
#: ../doc/gforth.texi:7527
#, no-wrap
msgid "xd, ( @var{ xd --   } ) gforth-1.0"
msgstr "xd, ( @var{ xd --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7528 ../doc/gforth.texi:7529
#, no-wrap
msgid "xd,"
msgstr "xd,"

#. type: format
#: ../doc/gforth.texi:7532
#, no-wrap
msgid "@code{xd,} ( @i{xd --  }) gforth-1.0 ``x-d-comma''\n"
msgstr "@code{xd,} ( @i{xd --  }) gforth-1.0 ``x-d-comma''\n"

#. type: findex
#: ../doc/gforth.texi:7534
#, no-wrap
msgid "A, ( @var{ addr --   } ) gforth-0.2"
msgstr "A, ( @var{ addr --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7535 ../doc/gforth.texi:7536
#, no-wrap
msgid "A,"
msgstr "A,"

#. type: format
#: ../doc/gforth.texi:7539
#, no-wrap
msgid "@code{A,} ( @i{addr --  }) gforth-0.2 ``A,''\n"
msgstr "@code{A,} ( @i{addr --  }) gforth-0.2 ``A,''\n"

#. type: table
#: ../doc/gforth.texi:7544
msgid ""
"Reserve data space for one cell, and store @i{addr} there.  For our cross-"
"compiler this provides the type information necessary for a relocatable "
"image; normally, though, this is equivalent to @code{,}."
msgstr "1 つのセル用のデータ空間を予約し、 そこに @i{addr} を格納します。  私達のクロス・コンパイラの場合には、 再配置可能なイメージに必要な型情報(type information)を提供します。 ただし、 通常では、 これは @code{,} と同等です。"

#. type: findex
#: ../doc/gforth.texi:7546
#, no-wrap
msgid "mem, ( @var{ addr u --   } ) gforth-0.6"
msgstr "mem, ( @var{ addr u --   } ) gforth-0.6"

#. type: kindex
#: ../doc/gforth.texi:7547 ../doc/gforth.texi:7548
#, no-wrap
msgid "mem,"
msgstr "mem,"

#. type: format
#: ../doc/gforth.texi:7551
#, no-wrap
msgid "@code{mem,} ( @i{addr u --  }) gforth-0.6 ``mem,''\n"
msgstr "@code{mem,} ( @i{addr u --  }) gforth-0.6 ``mem,''\n"

#. type: table
#: ../doc/gforth.texi:7554
msgid "doc-save-mem-dict"
msgstr "doc-save-mem-dict"

#. type: table
#: ../doc/gforth.texi:7562
msgid ""
"Memory accesses have to be aligned (@pxref{Address arithmetic}). So of "
"course you should allocate memory in an aligned way, too. I.e., before "
"allocating allocating a cell, @code{here} must be cell-aligned, etc.  The "
"words below align @code{here} if it is not already.  Basically it is only "
"already aligned for a type, if the last allocation was a multiple of the "
"size of this type and if @code{here} was aligned for this type before."
msgstr "メモリ・アクセスはアライメントする必要があります(@pxref{Address arithmetic})。 したがって、 メモリ割り当てもアライメントされるべきです。 つまり、 セルを割り当てる前に、 @code{here} をセル・アライメントする必要があります。 以下のワード達は、 @code{here} が既に指定の型のアライメントに合っている状態で無い場合は合わせます。 基本的に、 既に割り当てたのがその型のサイズの倍数であり、 かつ、 @code{here} が以前にその型のアライメントに対して合うようにしてあった場合にのみ、  その型のアライメントに対して既にすでに合っているということが言えます。"

#. type: table
#: ../doc/gforth.texi:7565
msgid ""
"After freshly @code{create}ing a word, @code{here} is @code{align}ed in "
"Standard Forth (@code{maxalign}ed in Gforth)."
msgstr "新しくワードを @code{create} した後、@code{here} は 標準 Forth では @code{align} されます(Gforth では @code{maxalign} されます)。"

#. type: findex
#: ../doc/gforth.texi:7566
#, no-wrap
msgid "align ( @var{ --   } ) core"
msgstr "align ( @var{ --   } ) core"

#. type: kindex
#: ../doc/gforth.texi:7567 ../doc/gforth.texi:7568
#, no-wrap
msgid "align"
msgstr "align"

#. type: format
#: ../doc/gforth.texi:7571
#, no-wrap
msgid "@code{align} ( @i{--  }) core ``align''\n"
msgstr "@code{align} ( @i{--  }) core ``align''\n"

#. type: table
#: ../doc/gforth.texi:7573
msgid ""
"If the data-space pointer is not aligned, reserve enough space to align it."
msgstr "データ空間ポインタがアライメントできてない場合は、 アライメントするのに十分な空間を予約します。"

#. type: findex
#: ../doc/gforth.texi:7575
#, no-wrap
msgid "falign ( @var{ --   } ) floating"
msgstr "falign ( @var{ --   } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7576 ../doc/gforth.texi:7577
#, no-wrap
msgid "falign"
msgstr "falign"

#. type: format
#: ../doc/gforth.texi:7580
#, no-wrap
msgid "@code{falign} ( @i{--  }) floating ``f-align''\n"
msgstr "@code{falign} ( @i{--  }) floating ``f-align''\n"

#. type: table
#: ../doc/gforth.texi:7583
msgid ""
"If the data-space pointer is not float-aligned, reserve enough space to "
"align it."
msgstr "データ空間ポインタが浮動小数点数にアライメントされていない場合は、 アライメントするのに十分な空間を予約します。"

#. type: findex
#: ../doc/gforth.texi:7585
#, no-wrap
msgid "sfalign ( @var{ --   } ) floating-ext"
msgstr "sfalign ( @var{ --   } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:7586 ../doc/gforth.texi:7587
#, no-wrap
msgid "sfalign"
msgstr "sfalign"

#. type: format
#: ../doc/gforth.texi:7590
#, no-wrap
msgid "@code{sfalign} ( @i{--  }) floating-ext ``s-f-align''\n"
msgstr "@code{sfalign} ( @i{--  }) floating-ext ``s-f-align''\n"

#. type: table
#: ../doc/gforth.texi:7593
msgid ""
"If the data-space pointer is not single-float-aligned, reserve enough space "
"to align it."
msgstr "データ空間ポインタが単精度浮動小数点数にアライメントされていない場合は、 アライメントするのに十分な空間を予約します。"

#. type: findex
#: ../doc/gforth.texi:7595
#, no-wrap
msgid "dfalign ( @var{ --   } ) floating-ext"
msgstr "dfalign ( @var{ --   } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:7596 ../doc/gforth.texi:7597
#, no-wrap
msgid "dfalign"
msgstr "dfalign"

#. type: format
#: ../doc/gforth.texi:7600
#, no-wrap
msgid "@code{dfalign} ( @i{--  }) floating-ext ``d-f-align''\n"
msgstr "@code{dfalign} ( @i{--  }) floating-ext ``d-f-align''\n"

#. type: table
#: ../doc/gforth.texi:7603
msgid ""
"If the data-space pointer is not double-float-aligned, reserve enough space "
"to align it."
msgstr "データ空間ポインタが倍精度浮動小数点数にアライメントされていない場合は、 アライメントするのに十分な空間を予約します。"

#. type: findex
#: ../doc/gforth.texi:7605
#, no-wrap
msgid "maxalign ( @var{ --   } ) gforth-0.2"
msgstr "maxalign ( @var{ --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7606 ../doc/gforth.texi:7607
#, no-wrap
msgid "maxalign"
msgstr "maxalign"

#. type: format
#: ../doc/gforth.texi:7610
#, no-wrap
msgid "@code{maxalign} ( @i{--  }) gforth-0.2 ``maxalign''\n"
msgstr "@code{maxalign} ( @i{--  }) gforth-0.2 ``maxalign''\n"

#. type: table
#: ../doc/gforth.texi:7612
msgid "Align data-space pointer for all alignment requirements."
msgstr "すべてのアライメント要件に合わせてデータ空間ポインタをアライメントします。"

#. type: findex
#: ../doc/gforth.texi:7614
#, no-wrap
msgid "cfalign ( @var{ --   } ) gforth-0.2"
msgstr "cfalign ( @var{ --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7615 ../doc/gforth.texi:7616
#, no-wrap
msgid "cfalign"
msgstr "cfalign"

#. type: format
#: ../doc/gforth.texi:7619
#, no-wrap
msgid "@code{cfalign} ( @i{--  }) gforth-0.2 ``cfalign''\n"
msgstr "@code{cfalign} ( @i{--  }) gforth-0.2 ``cfalign''\n"

#. type: table
#: ../doc/gforth.texi:7622
msgid ""
"Align data-space pointer for code field requirements (i.e., such that the "
"corresponding body is maxaligned)."
msgstr "データ空間ポインタをコード・フィールドの要件に合わせてアライメントします(つまり、 対応する本体が maxalign された状態になるようにする)。"

#. type: node
#: ../doc/gforth.texi:7628 ../doc/gforth.texi:7771 ../doc/gforth.texi:7772
#: ../doc/gforth.texi:7883
#, no-wrap
msgid "Memory Access"
msgstr "Memory Access"

#. type: subsection
#: ../doc/gforth.texi:7629
#, no-wrap
msgid "Heap allocation"
msgstr "Heap allocation"

#. type: cindex
#: ../doc/gforth.texi:7630
#, no-wrap
msgid "heap allocation"
msgstr "heap allocation"

#. type: cindex
#: ../doc/gforth.texi:7631
#, no-wrap
msgid "dynamic allocation of memory"
msgstr "dynamic allocation of memory"

#. type: cindex
#: ../doc/gforth.texi:7632
#, no-wrap
msgid "memory-allocation word set"
msgstr "memory-allocation word set"

#. type: cindex
#: ../doc/gforth.texi:7634
#, no-wrap
msgid "contiguous regions and heap allocation"
msgstr "contiguous regions and heap allocation"

#. type: table
#: ../doc/gforth.texi:7639
msgid ""
"Heap allocation supports deallocation of allocated memory in any order. "
"Dictionary allocation is not affected by it (i.e., it does not end a "
"contiguous region). In Gforth, these words are implemented using the "
"standard C library calls malloc(), free() and realloc()."
msgstr "ヒープ割り当ては、 割り当てられたメモリの割り当て解除を任意の順序でサポートします。 ディクショナリの割り当ては影響を受けません(つまり、 連続領域(contiguous region)は終了しません)。 Gforth では、 これらのワードは標準の C ライブラリ呼び出しである malloc() や free() や realloc() を使用して実装されます。"

#. type: table
#: ../doc/gforth.texi:7644
msgid ""
"The memory region produced by one invocation of @code{allocate} or "
"@code{resize} is internally contiguous.  There is no contiguity between such "
"a region and any other region (including others allocated from the heap)."
msgstr "@code{allocate} または @code{resize} の 1 回の呼び出しによって生成されるメモリ領域は、 内部的に連続しています。  このような領域と他の領域(ヒープから割り当てられた他の領域を含む)との間には連続性はありません。"

#. type: findex
#: ../doc/gforth.texi:7645
#, no-wrap
msgid "allocate ( @var{ u -- a_addr wior   } ) memory"
msgstr "allocate ( @var{ u -- a_addr wior   } ) memory"

#. type: kindex
#: ../doc/gforth.texi:7646 ../doc/gforth.texi:7647
#, no-wrap
msgid "allocate"
msgstr "allocate"

#. type: format
#: ../doc/gforth.texi:7650
#, no-wrap
msgid "@code{allocate} ( @i{u -- a_addr wior  }) memory ``allocate''\n"
msgstr "@code{allocate} ( @i{u -- a_addr wior  }) memory ``allocate''\n"

#. type: table
#: ../doc/gforth.texi:7657
msgid ""
"Allocate @i{u} address units of contiguous data space. The initial contents "
"of the data space is undefined. If the allocation is successful, @i{a-addr} "
"is the start address of the allocated region and @i{wior} is 0. If the "
"allocation fails, @i{a-addr} is undefined and @i{wior} is a non-zero I/O "
"result code."
msgstr "連続したデータ空間を @i{u} アドレス単位分割り当てます。 データ空間の初期内容は未定義です。 割り当てが成功した場合、 @i{a-addr} は割り当てられた領域の開始アドレスで、 @i{wior} は 0 になります。 割り当てが失敗した場合、 @i{a-addr} は未定義で、 @i{wior} ゼロ以外の I/O 結果コードです。"

#. type: findex
#: ../doc/gforth.texi:7659
#, no-wrap
msgid "free ( @var{ a_addr -- wior   } ) memory"
msgstr "free ( @var{ a_addr -- wior   } ) memory"

#. type: kindex
#: ../doc/gforth.texi:7660 ../doc/gforth.texi:7661
#, no-wrap
msgid "free"
msgstr "free"

#. type: format
#: ../doc/gforth.texi:7664
#, no-wrap
msgid "@code{free} ( @i{a_addr -- wior  }) memory ``free''\n"
msgstr "@code{free} ( @i{a_addr -- wior  }) memory ``free''\n"

#. type: table
#: ../doc/gforth.texi:7670
msgid ""
"Return the region of data space starting at @i{a-addr} to the system.  The "
"region must originally have been obtained using @code{allocate} or "
"@code{resize}. If the operational is successful, @i{wior} is 0.  If the "
"operation fails, @i{wior} is a non-zero I/O result code."
msgstr "@i{a-addr} で始まるデータ空間の領域をシステムに返します。  領域は元々 @code{allocate} または @code{resize} を使用して取得されている必要があります。 操作が成功した場合、 @i{wior} は 0 になります。 操作が失敗した場合、 @i{wior} はゼロ以外の I/O 結果コードになります。"

#. type: findex
#: ../doc/gforth.texi:7672
#, no-wrap
msgid "resize ( @var{ a_addr1 u -- a_addr2 wior   } ) memory"
msgstr "resize ( @var{ a_addr1 u -- a_addr2 wior   } ) memory"

#. type: kindex
#: ../doc/gforth.texi:7673 ../doc/gforth.texi:7674
#, no-wrap
msgid "resize"
msgstr "resize"

#. type: format
#: ../doc/gforth.texi:7677
#, no-wrap
msgid "@code{resize} ( @i{a_addr1 u -- a_addr2 wior  }) memory ``resize''\n"
msgstr "@code{resize} ( @i{a_addr1 u -- a_addr2 wior  }) memory ``resize''\n"

#. type: table
#: ../doc/gforth.texi:7685
msgid ""
"Change the size of the allocated area at @i{a-addr1} to @i{u} address units, "
"possibly moving the contents to a different area. @i{a-addr2} is the address "
"of the resulting area.  If the operation is successful, @i{wior} is 0.  If "
"the operation fails, @i{wior} is a non-zero I/O result code. If @i{a-addr1} "
"is 0, Gforth's (but not the Standard) @code{resize} @code{allocate}s @i{u} "
"address units."
msgstr "@i{a-addr1} に割り当てられた領域のサイズを @i{u} アドレス単位に変更します。 但し内容を別の領域に移動する可能性があります。  @i{a-addr2} は、 結果の領域のアドレスです。  操作が成功した場合、 @i{wior} は 0 になります。 操作が失敗した場合、 @i{wior} はゼロ以外の I/O 結果コードになります。 @i{a-addr1} が 0 の場合、 Gforth の (非標準の ) @code{resize} は @i{u} アドレス単位の割り当てを行います。"

#. type: table
#: ../doc/gforth.texi:7689
msgid "The following words are useful for dealing with memory blocks:"
msgstr "以下のワード達はメモリ・ブロックを扱うのに役立ちます:"

#. type: findex
#: ../doc/gforth.texi:7690
#, no-wrap
msgid "save-mem ( @var{ addr1 u -- addr2 u   } ) gforth-0.2"
msgstr "save-mem ( @var{ addr1 u -- addr2 u   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:7691 ../doc/gforth.texi:7692
#, no-wrap
msgid "save-mem"
msgstr "save-mem"

#. type: format
#: ../doc/gforth.texi:7695
#, no-wrap
msgid "@code{save-mem} ( @i{addr1 u -- addr2 u  }) gforth-0.2 ``save-mem''\n"
msgstr "@code{save-mem} ( @i{addr1 u -- addr2 u  }) gforth-0.2 ``save-mem''\n"

#. type: table
#: ../doc/gforth.texi:7697
msgid "Copy a memory block into a newly allocated region in the heap."
msgstr "指定のメモリ・ブロックをヒープ内で新しく割り当てられた領域にコピーします。"

#. type: findex
#: ../doc/gforth.texi:7699
#, no-wrap
msgid "free-mem-var ( @var{ addr --   } ) gforth-experimental"
msgstr "free-mem-var ( @var{ addr --   } ) gforth-experimental"

#. type: kindex
#: ../doc/gforth.texi:7700 ../doc/gforth.texi:7701
#, no-wrap
msgid "free-mem-var"
msgstr "free-mem-var"

#. type: format
#: ../doc/gforth.texi:7704
#, no-wrap
msgid "@code{free-mem-var} ( @i{addr --  }) gforth-experimental ``free-mem-var''\n"
msgstr "@code{free-mem-var} ( @i{addr --  }) gforth-experimental ``free-mem-var''\n"

#. type: table
#: ../doc/gforth.texi:7707
msgid ""
"Addr is the address of a 2variable containing address and size of a memory "
"range; frees memory and clears the 2variable."
msgstr "addr は、 メモリ範囲のアドレスとサイズを含む 2variable のアドレスです。 これはメモリを解放し、 2variable をクリアします。"

#. type: findex
#: ../doc/gforth.texi:7709
#, no-wrap
msgid "extend-mem ( @var{ addr1 u1 u -- addr addr2 u2   } ) gforth-experimental"
msgstr "extend-mem ( @var{ addr1 u1 u -- addr addr2 u2   } ) gforth-experimental"

#. type: kindex
#: ../doc/gforth.texi:7710 ../doc/gforth.texi:7711
#, no-wrap
msgid "extend-mem"
msgstr "extend-mem"

# : extend-mem  
#   over >r + dup >r resize throw r> over r> + -rot ;
#
# ( addr1 u1 u )
# over   ( addr1 u1 u u1 )
# >r     ( addr1 u1 u R: u1 ) 
# +      ( addr1 u1+u R: u1 )
# dup    ( addr1 u1+u u1+u R: u1 )
# >r     ( addr1 u1+u R: u1 u1+u )
# resize ( a_addr2 wior R: u1 u1+u )
# throw  ( a_addr2 R: u1 u1+u )
# r>     ( a_addr2 u1+u R: u1 )
# over   ( a_addr2 u1+u a_addr2 R: u1 )
# r>     ( a_addr2 u1+u a_addr2 u1 )
# +      ( a_addr2 u1+u a_addr2+u1 )
# -rot   ( a_addr2+u1 a_addr2 u1+u ) 
#. type: format
#: ../doc/gforth.texi:7714
#, no-wrap
msgid "@code{extend-mem} ( @i{addr1 u1 u -- addr addr2 u2  }) gforth-experimental ``extend-mem''\n"
msgstr "@code{extend-mem} ( @i{addr1 u1 u -- addr addr2 u2  }) gforth-experimental ``extend-mem''\n"

#. type: table
#: ../doc/gforth.texi:7717
msgid ""
"Extend memory block addr1 u1 allocated from the heap by u aus.  The "
"(possibly reallocated) piece is addr2 u2, the extension is at addr."
msgstr "u (アドレス単位)によってヒープから割り当てられたメモリ・ブロック addr1 u1 を拡張します。  (おそらく再割り当てされた)開始アドレスは addr2 で、 その合計長さは u2 で、 拡張部分の開始アドレスは addr です(訳注: 例えば元々長さ10のブロックを5拡張すると( addr1 10 5 -- addr2+10 addr2 10+5))"

#. type: table
#: ../doc/gforth.texi:7723
msgid ""
"The $tring words can also be used for dealing with memory blocks, "
"@xref{$tring words}."
msgstr "$tring ワード群は、 メモリ・ブロックの処理にも使用できます。 @xref{$tring words} (訳注: $tring (ダラー tring)と String (エス string) とあることに注意)"

#. type: table
#: ../doc/gforth.texi:7729
msgid ""
"For growable memory buffers you can use $trings, or the following words.  "
"Because the allocated memory of a buffer managed with @code{adjust-buffer} "
"does not shrink, there is no heap-management overhead when adjusting the "
"buffer for a size smaller than the largest one seen yet."
msgstr "拡張可能なメモリ・バッファの場合は、 $trings または以下のワード群を使用できます。  @code{adjust-buffer} で管理されるバッファに割り当てられたメモリは縮小できないため、 これまでに確認された最大サイズよりも小さいサイズにバッファを調整(adjust)するときはヒープ管理のオーバーヘッドは発生しません。"

# 2024.06.09 スタック効果修正
#. type: findex
#: ../doc/gforth.texi:7730
#, no-wrap
msgid "buffer% ( @var{ u1 u2 --   } ) gforth-experimental"
msgstr "buffer% ( @var{-- u1 u2  } ) gforth-experimental"

#. type: kindex
#: ../doc/gforth.texi:7731 ../doc/gforth.texi:7732
#, no-wrap
msgid "buffer%"
msgstr "buffer%"

# 2024.06.09 スタック効果修正
#. type: format
#: ../doc/gforth.texi:7735
#, no-wrap
msgid "@code{buffer%} ( @i{u1 u2 --  }) gforth-experimental ``buffer%''\n"
msgstr "@code{buffer%} ( @i{-- u1 u2  }) gforth-experimental ``buffer%''\n"

#. type: table
#: ../doc/gforth.texi:7737
msgid "@i{u1} is the alignment and @i{u2} is the size of a buffer descriptor."
msgstr "@i{u1} は アライメント(alignment)、 @i{u2} は バッファ・デスクリプタのサイズです。"

#. type: findex
#: ../doc/gforth.texi:7739
#, no-wrap
msgid "init-buffer ( @var{ addr --   } ) gforth-experimental"
msgstr "init-buffer ( @var{ addr --   } ) gforth-experimental"

#. type: kindex
#: ../doc/gforth.texi:7740 ../doc/gforth.texi:7741
#, no-wrap
msgid "init-buffer"
msgstr "init-buffer"

#. type: format
#: ../doc/gforth.texi:7744
#, no-wrap
msgid "@code{init-buffer} ( @i{addr --  }) gforth-experimental ``init-buffer''\n"
msgstr "@code{init-buffer} ( @i{addr --  }) gforth-experimental ``init-buffer''\n"

#. type: findex
#: ../doc/gforth.texi:7746
#, no-wrap
msgid "adjust-buffer ( @var{ u addr --   } ) gforth-experimental"
msgstr "adjust-buffer ( @var{ u addr --   } ) gforth-experimental"

#. type: kindex
#: ../doc/gforth.texi:7747 ../doc/gforth.texi:7748
#, no-wrap
msgid "adjust-buffer"
msgstr "adjust-buffer"

#. type: format
#: ../doc/gforth.texi:7751
#, no-wrap
msgid "@code{adjust-buffer} ( @i{u addr --  }) gforth-experimental ``adjust-buffer''\n"
msgstr "@code{adjust-buffer} ( @i{u addr --  }) gforth-experimental ``adjust-buffer''\n"

#. type: table
#: ../doc/gforth.texi:7754
msgid ""
"Adjust buffer% at addr to length u.  This may grow the allocated area, but "
"never shrinks it."
msgstr "addr の buffer% を長さ u に調整します。 これにより、 割り当てられた領域が拡大する可能性がありますが、 決して縮小されることはありません。"

#. type: table
#: ../doc/gforth.texi:7759
msgid ""
"You can get the current address and length of such a buffer with @code{2@@}."
msgstr "@code{2@@} を使用すると、 このようなバッファの現在のアドレスと長さを取得できます。"

#. type: table
#: ../doc/gforth.texi:7761
msgid "Typical usage:"
msgstr "典型的な使い方:"

#. type: example
#: ../doc/gforth.texi:7768
#, no-wrap
msgid ""
"create mybuf  buffer% %size allot  mybuf init-buffer\n"
"s\" frobnicate\" mybuf adjust-buffer  mybuf 2@@ move\n"
"mybuf 2@@ type\n"
"s\" foo\"        mybuf adjust-buffer  mybuf 2@@ move\n"
"mybuf 2@@ type\n"
msgstr ""
"create mybuf  buffer% %size allot  mybuf init-buffer\n"
"s\" frobnicate\" mybuf adjust-buffer  mybuf 2@@ move\n"
"mybuf 2@@ type\n"
"s\" foo\"        mybuf adjust-buffer  mybuf 2@@ move\n"
"mybuf 2@@ type\n"

#. type: node
#: ../doc/gforth.texi:7771 ../doc/gforth.texi:7883 ../doc/gforth.texi:7884
#: ../doc/gforth.texi:8135
#, no-wrap
msgid "Special Memory Accesses"
msgstr "Special Memory Accesses"

#. type: cindex
#: ../doc/gforth.texi:7773
#, no-wrap
msgid "memory access words"
msgstr "memory access words"

#. type: findex
#: ../doc/gforth.texi:7775
#, no-wrap
msgid "@@ ( @var{ a-addr -- w  } ) core"
msgstr "@@ ( @var{ a-addr -- w  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7776 ../doc/gforth.texi:7777
#, no-wrap
msgid "@@"
msgstr "@@"

#. type: format
#: ../doc/gforth.texi:7780
#, no-wrap
msgid "@code{@@} ( @i{a-addr -- w }) core ``fetch''\n"
msgstr "@code{@@} ( @i{a-addr -- w }) core ``fetch''\n"

#. type: table
#: ../doc/gforth.texi:7782
msgid "@i{w} is the cell stored at @i{a_addr}."
msgstr "@i{a_addr} に保存されているセルを @i{w} に取得します。"

#. type: findex
#: ../doc/gforth.texi:7783
#, no-wrap
msgid "! ( @var{ w a-addr --  } ) core"
msgstr "! ( @var{ w a-addr --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7784 ../doc/gforth.texi:7785
#, no-wrap
msgid "!"
msgstr "!"

#. type: format
#: ../doc/gforth.texi:7788
#, no-wrap
msgid "@code{!} ( @i{w a-addr -- }) core ``store''\n"
msgstr "@code{!} ( @i{w a-addr -- }) core ``store''\n"

#. type: table
#: ../doc/gforth.texi:7790
msgid "Store @i{w} into the cell at @i{a-addr}."
msgstr "@i{w} を @i{a-addr} のセルに格納します。"

#. type: findex
#: ../doc/gforth.texi:7791
#, no-wrap
msgid "+! ( @var{ n a-addr --  } ) core"
msgstr "+! ( @var{ n a-addr --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7792 ../doc/gforth.texi:7793
#, no-wrap
msgid "+!"
msgstr "+!"

#. type: format
#: ../doc/gforth.texi:7796
#, no-wrap
msgid "@code{+!} ( @i{n a-addr -- }) core ``plus-store''\n"
msgstr "@code{+!} ( @i{n a-addr -- }) core ``plus-store''\n"

#. type: table
#: ../doc/gforth.texi:7798
msgid "Add @i{n} to the cell at @i{a-addr}."
msgstr "@i{a-addr} のセルに @i{n} を加算します。"

#. type: findex
#: ../doc/gforth.texi:7799
#, no-wrap
msgid "c@@ ( @var{ c-addr -- c  } ) core"
msgstr "c@@ ( @var{ c-addr -- c  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7800 ../doc/gforth.texi:7801
#, no-wrap
msgid "c@@"
msgstr "c@@"

#. type: format
#: ../doc/gforth.texi:7804
#, no-wrap
msgid "@code{c@@} ( @i{c-addr -- c }) core ``c-fetch''\n"
msgstr "@code{c@@} ( @i{c-addr -- c }) core ``c-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7806
msgid "@i{c} is the char stored at @i{c_addr}."
msgstr "@i{c_addr} に保存されている文字(char) を @i{c} に取得します。"

#. type: findex
#: ../doc/gforth.texi:7807
#, no-wrap
msgid "c! ( @var{ c c-addr --  } ) core"
msgstr "c! ( @var{ c c-addr --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7808 ../doc/gforth.texi:7809
#, no-wrap
msgid "c!"
msgstr "c!"

#. type: format
#: ../doc/gforth.texi:7812
#, no-wrap
msgid "@code{c!} ( @i{c c-addr -- }) core ``c-store''\n"
msgstr "@code{c!} ( @i{c c-addr -- }) core ``c-store''\n"

#. type: table
#: ../doc/gforth.texi:7814
msgid "Store @i{c} into the char at @i{c-addr}."
msgstr "@i{c} を @i{c-addr} の char に格納します。"

#. type: findex
#: ../doc/gforth.texi:7815
#, no-wrap
msgid "2@@ ( @var{ a-addr -- w1 w2  } ) core"
msgstr "2@@ ( @var{ a-addr -- w1 w2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7816 ../doc/gforth.texi:7817
#, no-wrap
msgid "2@@"
msgstr "2@@"

#. type: format
#: ../doc/gforth.texi:7820
#, no-wrap
msgid "@code{2@@} ( @i{a-addr -- w1 w2 }) core ``two-fetch''\n"
msgstr "@code{2@@} ( @i{a-addr -- w1 w2 }) core ``two-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7823
msgid ""
"@i{w2} is the content of the cell stored at @i{a-addr}, @i{w1} is the "
"content of the next cell."
msgstr "@i{w2} は @i{a-addr} に格納されているセルの内容、 @i{w1} はその次のセルの内容です。"

#. type: findex
#: ../doc/gforth.texi:7824
#, no-wrap
msgid "2! ( @var{ w1 w2 a-addr --  } ) core"
msgstr "2! ( @var{ w1 w2 a-addr --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:7825 ../doc/gforth.texi:7826
#, no-wrap
msgid "2!"
msgstr "2!"

#. type: format
#: ../doc/gforth.texi:7829
#, no-wrap
msgid "@code{2!} ( @i{w1 w2 a-addr -- }) core ``two-store''\n"
msgstr "@code{2!} ( @i{w1 w2 a-addr -- }) core ``two-store''\n"

#. type: table
#: ../doc/gforth.texi:7831
msgid "Store @i{w2} into the cell at @i{c-addr} and @i{w1} into the next cell."
msgstr "@i{w2} を @i{c-addr} のセルに格納し、 @i{w1} をその次のセルに格納します。"

#. type: findex
#: ../doc/gforth.texi:7832
#, no-wrap
msgid "f@@ ( @var{ f-addr -- r  } ) floating"
msgstr "f@@ ( @var{ f-addr -- r  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7833 ../doc/gforth.texi:7834
#, no-wrap
msgid "f@@"
msgstr "f@@"

#. type: format
#: ../doc/gforth.texi:7837
#, no-wrap
msgid "@code{f@@} ( @i{f-addr -- r }) floating ``f-fetch''\n"
msgstr "@code{f@@} ( @i{f-addr -- r }) floating ``f-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7839
msgid "@i{r} is the float at address @i{f-addr}."
msgstr "アドレス @i{f-addr} の浮動小数点数を @i{r} に取得します。"

#. type: findex
#: ../doc/gforth.texi:7840
#, no-wrap
msgid "f! ( @var{ r f-addr --  } ) floating"
msgstr "f! ( @var{ r f-addr --  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:7841 ../doc/gforth.texi:7842
#, no-wrap
msgid "f!"
msgstr "f!"

#. type: format
#: ../doc/gforth.texi:7845
#, no-wrap
msgid "@code{f!} ( @i{r f-addr -- }) floating ``f-store''\n"
msgstr "@code{f!} ( @i{r f-addr -- }) floating ``f-store''\n"

#. type: table
#: ../doc/gforth.texi:7847
msgid "Store @i{r} into the float at address @i{f-addr}."
msgstr "@i{r} をアドレス @i{f-addr} の浮動小数点数として格納します。"

#. type: findex
#: ../doc/gforth.texi:7848
#, no-wrap
msgid "sf@@ ( @var{ sf-addr -- r  } ) floating-ext"
msgstr "sf@@ ( @var{ sf-addr -- r  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:7849 ../doc/gforth.texi:7850
#, no-wrap
msgid "sf@@"
msgstr "sf@@"

#. type: format
#: ../doc/gforth.texi:7853
#, no-wrap
msgid "@code{sf@@} ( @i{sf-addr -- r }) floating-ext ``s-f-fetch''\n"
msgstr "@code{sf@@} ( @i{sf-addr -- r }) floating-ext ``s-f-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7855
msgid ""
"Fetch the single-precision IEEE floating-point value @i{r} from the address "
"@i{sf-addr}."
msgstr "アドレス @i{sf-addr} から 単精度 IEEE 浮動小数点値を @i{r} に取得します。"

#. type: findex
#: ../doc/gforth.texi:7856
#, no-wrap
msgid "sf! ( @var{ r sf-addr --  } ) floating-ext"
msgstr "sf! ( @var{ r sf-addr --  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:7857 ../doc/gforth.texi:7858
#, no-wrap
msgid "sf!"
msgstr "sf!"

#. type: format
#: ../doc/gforth.texi:7861
#, no-wrap
msgid "@code{sf!} ( @i{r sf-addr -- }) floating-ext ``s-f-store''\n"
msgstr "@code{sf!} ( @i{r sf-addr -- }) floating-ext ``s-f-store''\n"

#. type: table
#: ../doc/gforth.texi:7864
msgid ""
"Store @i{r} as single-precision IEEE floating-point value to the address "
"@i{sf-addr}."
msgstr "@i{r} を単精度 IEEE 浮動小数点値としてアドレス @i{sf-addr} に格納します。"

#. type: findex
#: ../doc/gforth.texi:7865
#, no-wrap
msgid "df@@ ( @var{ df-addr -- r  } ) floating-ext"
msgstr "df@@ ( @var{ df-addr -- r  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:7866 ../doc/gforth.texi:7867
#, no-wrap
msgid "df@@"
msgstr "df@@"

#. type: format
#: ../doc/gforth.texi:7870
#, no-wrap
msgid "@code{df@@} ( @i{df-addr -- r }) floating-ext ``d-f-fetch''\n"
msgstr "@code{df@@} ( @i{df-addr -- r }) floating-ext ``d-f-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7872
msgid ""
"Fetch the double-precision IEEE floating-point value @i{r} from the address "
"@i{df-addr}."
msgstr "アドレス @i{df-addr} からの倍精度 IEEE 浮動小数点値を @i{r} に取得します。"

#. type: findex
#: ../doc/gforth.texi:7873
#, no-wrap
msgid "df! ( @var{ r df-addr --  } ) floating-ext"
msgstr "df! ( @var{ r df-addr --  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:7874 ../doc/gforth.texi:7875
#, no-wrap
msgid "df!"
msgstr "df!"

#. type: format
#: ../doc/gforth.texi:7878
#, no-wrap
msgid "@code{df!} ( @i{r df-addr -- }) floating-ext ``d-f-store''\n"
msgstr "@code{df!} ( @i{r df-addr -- }) floating-ext ``d-f-store''\n"

#. type: table
#: ../doc/gforth.texi:7881
msgid ""
"Store @i{r} as double-precision IEEE floating-point value to the address "
"@i{df-addr}."
msgstr "@i{r} を 倍精度 IEEE 浮動小数点値としてアドレス @i{df-addr} からに保存します。"

#. type: node
#: ../doc/gforth.texi:7883 ../doc/gforth.texi:8135 ../doc/gforth.texi:8136
#: ../doc/gforth.texi:8487
#, no-wrap
msgid "Address arithmetic"
msgstr "Address arithmetic"

#. type: cindex
#: ../doc/gforth.texi:7885
#, no-wrap
msgid "byte order"
msgstr "byte order"

#. type: cindex
#: ../doc/gforth.texi:7886
#, no-wrap
msgid "big-endian"
msgstr "big-endian"

#. type: cindex
#: ../doc/gforth.texi:7887
#, no-wrap
msgid "little-endian"
msgstr "little-endian"

#. type: cindex
#: ../doc/gforth.texi:7888
#, no-wrap
msgid "sign extension"
msgstr "sign extension"

#. type: cindex
#: ../doc/gforth.texi:7889
#, no-wrap
msgid "unaligned memory access"
msgstr "unaligned memory access"

#. type: table
#: ../doc/gforth.texi:7897
msgid ""
"This section is about memory accesses useful for communicating with other "
"software or other computers.  This means that the accesses are of a certain "
"bit width (independent of Gforth's cell width), are possibly not naturally "
"aligned and typically have a certain byte order that may be different from "
"the native byte order of the system that Gforth runs on."
msgstr "このセクションでは、 他のソフトウェアや他のコンピュータと通信する際に役立つメモリ・アクセスについて説明します。  これは、 アクセスが特定のビット幅であり(Gforth のセル幅とは独立)、 自然な並びでない可能性があり、 通常、 Gforth が実行されるシステムのネイティブなバイト順序(バイト・オーダー)とは異なる可能性がある特定のバイト順序を持つことを意味します。"

#. type: table
#: ../doc/gforth.texi:7899
msgid "We use the following prefixes:"
msgstr "私達は以下のプレフィックスを使います:"

#. type: table
#: ../doc/gforth.texi:7903
msgid "8 bits (character)"
msgstr "8ビット(文字;character)"

#. type: table
#: ../doc/gforth.texi:7905
msgid "16 bits"
msgstr "16ビット"

#. type: kindex
#: ../doc/gforth.texi:7905 ../doc/gforth.texi:24232 ../doc/gforth.texi:24233
#, no-wrap
msgid "l"
msgstr "l"

#. type: table
#: ../doc/gforth.texi:7907
msgid "32 bits"
msgstr "32ビット"

#. type: kindex
#: ../doc/gforth.texi:7907 ../doc/gforth.texi:32025 ../doc/gforth.texi:32026
#, no-wrap
msgid "x"
msgstr "x"

#. type: table
#: ../doc/gforth.texi:7909
msgid "64 bits represented as one cell"
msgstr "64 ビットを 1 つのセルとして表現"

#. type: item
#: ../doc/gforth.texi:7909
#, no-wrap
msgid "xd"
msgstr "xd"

#. type: table
#: ../doc/gforth.texi:7911
msgid "64 bits represented as two cells"
msgstr "64 ビットを 2 つのセルとして表現"

#. type: table
#: ../doc/gforth.texi:7918
msgid ""
"The @code{x}-prefix words do not work properly on 32-bit systems, so for "
"code that is intended to be portable to 32-bit systems you should use "
"@code{xd}-prefix words.  Note that @code{xd}-prefix words work on 64-bit "
"systems: there the upper cell is just 0 (for unsigned values)  or a sign "
"extension of the lower cell."
msgstr "@code{x} プレフィックスのワードは 32 ビット・システムでは正しく機能しないため、 32 ビット・システムに移植することを目的としたコードの場合は、 @code{xd} プレフィックスのワードを使用する必要があります。  注意: @code{xd} プレフィックスのワードは 64 ビット・システムでも動作することに注意してください。 64 ビット・システムでは、 上位のセルは単なる 0 (符号なし値の場合)、 または下位のセルの符号拡張です。"

#. type: table
#: ../doc/gforth.texi:7922
msgid ""
"The memory-access words below all work with arbitrarily (un)aligned "
"addresses (unlike @code{@@}, @code{!}, @code{f@@}, @code{f!}, which require "
"alignment on some hardware)."
msgstr "以下のメモリ・アクセス・ワード群はすべて、 任意の(非)アライメントされたアドレスで動作します(一部のハードウェアでアライメントが必要な @code{@@} や @code{!} や @code{f@@} や @code{f!} とは異なります)。"

#. type: findex
#: ../doc/gforth.texi:7923
#, no-wrap
msgid "w@@ ( @var{ c-addr -- u  } ) gforth-0.5"
msgstr "w@@ ( @var{ c-addr -- u  } ) gforth-0.5"

#. type: kindex
#: ../doc/gforth.texi:7924 ../doc/gforth.texi:7925
#, no-wrap
msgid "w@@"
msgstr "w@@"

#. type: format
#: ../doc/gforth.texi:7928
#, no-wrap
msgid "@code{w@@} ( @i{c-addr -- u }) gforth-0.5 ``w-fetch''\n"
msgstr "@code{w@@} ( @i{c-addr -- u }) gforth-0.5 ``w-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7930
msgid "@i{u} is the zero-extended 16-bit value stored at @i{c_addr}."
msgstr "@i{u} は @i{c_addr} に格納されているゼロ拡張された 16 ビット値(zero-extended 16-bit value)です。"

#. type: findex
#: ../doc/gforth.texi:7931
#, no-wrap
msgid "w! ( @var{ w c-addr --  } ) gforth-0.7"
msgstr "w! ( @var{ w c-addr --  } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:7932 ../doc/gforth.texi:7933
#, no-wrap
msgid "w!"
msgstr "w!"

#. type: format
#: ../doc/gforth.texi:7936
#, no-wrap
msgid "@code{w!} ( @i{w c-addr -- }) gforth-0.7 ``w-store''\n"
msgstr "@code{w!} ( @i{w c-addr -- }) gforth-0.7 ``w-store''\n"

#. type: table
#: ../doc/gforth.texi:7938
msgid "Store the bottom 16 bits of @i{w} at @i{c_addr}."
msgstr "@i{w} の下位 16 ビットを @i{c_addr} に格納します。"

#. type: findex
#: ../doc/gforth.texi:7939
#, no-wrap
msgid "l@@ ( @var{ c-addr -- u  } ) gforth-0.7"
msgstr "l@@ ( @var{ c-addr -- u  } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:7940 ../doc/gforth.texi:7941
#, no-wrap
msgid "l@@"
msgstr "l@@"

#. type: format
#: ../doc/gforth.texi:7944
#, no-wrap
msgid "@code{l@@} ( @i{c-addr -- u }) gforth-0.7 ``l-fetch''\n"
msgstr "@code{l@@} ( @i{c-addr -- u }) gforth-0.7 ``l-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7946
msgid "@i{u} is the zero-extended 32-bit value stored at @i{c_addr}."
msgstr "@i{u} は、 @i{c_addr} に格納されているゼロ拡張された 32 ビット値(zero-extended 32-bit value)です。"

#. type: findex
#: ../doc/gforth.texi:7947
#, no-wrap
msgid "l! ( @var{ w c-addr --  } ) gforth-0.7"
msgstr "l! ( @var{ w c-addr --  } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:7948 ../doc/gforth.texi:7949
#, no-wrap
msgid "l!"
msgstr "l!"

#. type: format
#: ../doc/gforth.texi:7952
#, no-wrap
msgid "@code{l!} ( @i{w c-addr -- }) gforth-0.7 ``l-store''\n"
msgstr "@code{l!} ( @i{w c-addr -- }) gforth-0.7 ``l-store''\n"

#. type: table
#: ../doc/gforth.texi:7954
msgid "Store the bottom 32 bits of @i{w} at @i{c_addr}."
msgstr "@i{w} の下位 32 ビットを @i{c_addr} に格納します。"

#. type: findex
#: ../doc/gforth.texi:7955
#, no-wrap
msgid "x@@ ( @var{ c-addr -- u  } ) gforth-1.0"
msgstr "x@@ ( @var{ c-addr -- u  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7956 ../doc/gforth.texi:7957
#, no-wrap
msgid "x@@"
msgstr "x@@"

#. type: format
#: ../doc/gforth.texi:7960
#, no-wrap
msgid "@code{x@@} ( @i{c-addr -- u }) gforth-1.0 ``x-fetch''\n"
msgstr "@code{x@@} ( @i{c-addr -- u }) gforth-1.0 ``x-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7962
msgid "@i{u} is the zero-extended 64-bit value stored at @i{c_addr}."
msgstr "@i{u} は、 @i{c_addr} に格納されているゼロ拡張された 64 ビット値です。"

#. type: findex
#: ../doc/gforth.texi:7963
#, no-wrap
msgid "x! ( @var{ w c-addr --  } ) gforth-1.0"
msgstr "x! ( @var{ w c-addr --  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7964 ../doc/gforth.texi:7965
#, no-wrap
msgid "x!"
msgstr "x!"

#. type: format
#: ../doc/gforth.texi:7968
#, no-wrap
msgid "@code{x!} ( @i{w c-addr -- }) gforth-1.0 ``x-store''\n"
msgstr "@code{x!} ( @i{w c-addr -- }) gforth-1.0 ``x-store''\n"

#. type: table
#: ../doc/gforth.texi:7970
msgid "Store the bottom 64 bits of @i{w} at @i{c_addr}."
msgstr "@i{w} の下位 64 ビットを @i{c_addr} に格納します。"

#. type: findex
#: ../doc/gforth.texi:7971
#, no-wrap
msgid "xd@@ ( @var{ c-addr -- ud  } ) gforth-1.0"
msgstr "xd@@ ( @var{ c-addr -- ud  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7972 ../doc/gforth.texi:7973
#, no-wrap
msgid "xd@@"
msgstr "xd@@"

#. type: format
#: ../doc/gforth.texi:7976
#, no-wrap
msgid "@code{xd@@} ( @i{c-addr -- ud }) gforth-1.0 ``x-d-fetch''\n"
msgstr "@code{xd@@} ( @i{c-addr -- ud }) gforth-1.0 ``x-d-fetch''\n"

#. type: table
#: ../doc/gforth.texi:7978
msgid "@i{ud} is the zero-extended 64-bit value stored at @i{c_addr}."
msgstr "@i{ud} は、 @i{c_addr} に格納されているゼロ拡張された 64 ビット値です。"

#. type: findex
#: ../doc/gforth.texi:7979
#, no-wrap
msgid "xd! ( @var{ ud c-addr --  } ) gforth-1.0"
msgstr "xd! ( @var{ ud c-addr --  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7980 ../doc/gforth.texi:7981
#, no-wrap
msgid "xd!"
msgstr "xd!"

#. type: format
#: ../doc/gforth.texi:7984
#, no-wrap
msgid "@code{xd!} ( @i{ud c-addr -- }) gforth-1.0 ``x-d-store''\n"
msgstr "@code{xd!} ( @i{ud c-addr -- }) gforth-1.0 ``x-d-store''\n"

#. type: table
#: ../doc/gforth.texi:7986
msgid "Store the bottom 64 bits of @i{ud} at @i{c_addr}."
msgstr "@i{ud} の下位 64 ビットを @i{c_addr} に格納します。"

#. type: table
#: ../doc/gforth.texi:7992
msgid ""
"For accesses with a specific byte order, you have to perform byte-order "
"adjustment immediately after a fetch (before the sign-extension), or "
"immediately before the store.  The results of these byte-order adjustment "
"words are always zero-extended."
msgstr "特定のバイト順序(byte order)でアクセスする場合は、 取得直後(符号拡張の前)、 または格納の直前にバイト順序調整を行う必要があります。  これらのバイト順調整ワードの結果は常にゼロ拡張(zero-extended)されます。"

#. type: findex
#: ../doc/gforth.texi:7993
#, no-wrap
msgid "wbe ( @var{ u1 -- u2   } ) gforth-1.0"
msgstr "wbe ( @var{ u1 -- u2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:7994 ../doc/gforth.texi:7995
#, no-wrap
msgid "wbe"
msgstr "wbe"

#. type: format
#: ../doc/gforth.texi:7998
#, no-wrap
msgid "@code{wbe} ( @i{u1 -- u2  }) gforth-1.0 ``wbe''\n"
msgstr "@code{wbe} ( @i{u1 -- u2  }) gforth-1.0 ``wbe''\n"

#. type: table
#: ../doc/gforth.texi:8002
msgid ""
"Convert 16-bit value in @i{u1} from native byte order to big-endian or from "
"big-endian to native byte order (the same operation)"
msgstr "@i{u1} の 16 ビット値をネイティブ・バイト順からビッグ・エンディアンに、 またはビッグ・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8004
#, no-wrap
msgid "wle ( @var{ u1 -- u2   } ) gforth-1.0"
msgstr "wle ( @var{ u1 -- u2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8005 ../doc/gforth.texi:8006
#, no-wrap
msgid "wle"
msgstr "wle"

#. type: format
#: ../doc/gforth.texi:8009
#, no-wrap
msgid "@code{wle} ( @i{u1 -- u2  }) gforth-1.0 ``wle''\n"
msgstr "@code{wle} ( @i{u1 -- u2  }) gforth-1.0 ``wle''\n"

#. type: table
#: ../doc/gforth.texi:8013
msgid ""
"Convert 16-bit value in @i{u1} from native byte order to little-endian or "
"from little-endian to native byte order (the same operation)"
msgstr "@i{u1} の 16 ビット値をネイティブ・バイト順からリトル・エンディアンに、 またはリトル・エンディアンからネイティブ・バイト順に変換します(両方の操作は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8015
#, no-wrap
msgid "lbe ( @var{ u1 -- u2   } ) gforth-1.0"
msgstr "lbe ( @var{ u1 -- u2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8016 ../doc/gforth.texi:8017
#, no-wrap
msgid "lbe"
msgstr "lbe"

#. type: format
#: ../doc/gforth.texi:8020
#, no-wrap
msgid "@code{lbe} ( @i{u1 -- u2  }) gforth-1.0 ``lbe''\n"
msgstr "@code{lbe} ( @i{u1 -- u2  }) gforth-1.0 ``lbe''\n"

#. type: table
#: ../doc/gforth.texi:8024
msgid ""
"Convert 32-bit value in @i{u1} from native byte order to big-endian or from "
"big-endian to native byte order (the same operation)"
msgstr "@i{u1} の 32 ビット値をネイティブ・バイト順からビッグ・エンディアンに、 またはビッグ・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8026
#, no-wrap
msgid "lle ( @var{ u1 -- u2   } ) gforth-1.0"
msgstr "lle ( @var{ u1 -- u2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8027 ../doc/gforth.texi:8028
#, no-wrap
msgid "lle"
msgstr "lle"

#. type: format
#: ../doc/gforth.texi:8031
#, no-wrap
msgid "@code{lle} ( @i{u1 -- u2  }) gforth-1.0 ``lle''\n"
msgstr "@code{lle} ( @i{u1 -- u2  }) gforth-1.0 ``lle''\n"

#. type: table
#: ../doc/gforth.texi:8035
msgid ""
"Convert 32-bit value in @i{u1} from native byte order to little-endian or "
"from little-endian to native byte order (the same operation)"
msgstr "@i{u1} の 32 ビット値をネイティブ・バイト順からリトル・エンディアンに、 またはリトル・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8037
#, no-wrap
msgid "xbe ( @var{ u1 -- u2   } ) gforth-1.0"
msgstr "xbe ( @var{ u1 -- u2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8038 ../doc/gforth.texi:8039
#, no-wrap
msgid "xbe"
msgstr "xbe"

#. type: format
#: ../doc/gforth.texi:8042
#, no-wrap
msgid "@code{xbe} ( @i{u1 -- u2  }) gforth-1.0 ``xbe''\n"
msgstr "@code{xbe} ( @i{u1 -- u2  }) gforth-1.0 ``xbe''\n"

#. type: table
#: ../doc/gforth.texi:8046
msgid ""
"Convert 64-bit value in @i{u1} from native byte order to big-endian or from "
"big-endian to native byte order (the same operation)"
msgstr "@i{u1} の 64 ビット値をネイティブ・バイト順からビッグ・エンディアンに、 またはビッグ・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8048
#, no-wrap
msgid "xle ( @var{ u1 -- u2   } ) gforth-1.0"
msgstr "xle ( @var{ u1 -- u2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8049 ../doc/gforth.texi:8050
#, no-wrap
msgid "xle"
msgstr "xle"

#. type: format
#: ../doc/gforth.texi:8053
#, no-wrap
msgid "@code{xle} ( @i{u1 -- u2  }) gforth-1.0 ``xle''\n"
msgstr "@code{xle} ( @i{u1 -- u2  }) gforth-1.0 ``xle''\n"

#. type: table
#: ../doc/gforth.texi:8057
msgid ""
"Convert 64-bit value in @i{u1} from native byte order to little-endian or "
"from little-endian to native byte order (the same operation)"
msgstr "@i{u1} の 64 ビット値をネイティブ・バイト順からリトル・エンディアンに、 またはリトル・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8059
#, no-wrap
msgid "xdbe ( @var{ ud1 -- ud2   } ) gforth-1.0"
msgstr "xdbe ( @var{ ud1 -- ud2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8060 ../doc/gforth.texi:8061
#, no-wrap
msgid "xdbe"
msgstr "xdbe"

#. type: format
#: ../doc/gforth.texi:8064
#, no-wrap
msgid "@code{xdbe} ( @i{ud1 -- ud2  }) gforth-1.0 ``xdbe''\n"
msgstr "@code{xdbe} ( @i{ud1 -- ud2  }) gforth-1.0 ``xdbe''\n"

#. type: table
#: ../doc/gforth.texi:8068
msgid ""
"Convert 64-bit value in @i{ud1} from native byte order to big-endian or from "
"big-endian to native byte order (the same operation)"
msgstr "@i{ud1} の 64 ビット値をネイティブ・バイト順からビッグ・エンディアンに、 またはビッグ・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: findex
#: ../doc/gforth.texi:8070
#, no-wrap
msgid "xdle ( @var{ ud1 -- ud2   } ) gforth-1.0"
msgstr "xdle ( @var{ ud1 -- ud2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8071 ../doc/gforth.texi:8072
#, no-wrap
msgid "xdle"
msgstr "xdle"

#. type: format
#: ../doc/gforth.texi:8075
#, no-wrap
msgid "@code{xdle} ( @i{ud1 -- ud2  }) gforth-1.0 ``xdle''\n"
msgstr "@code{xdle} ( @i{ud1 -- ud2  }) gforth-1.0 ``xdle''\n"

#. type: table
#: ../doc/gforth.texi:8079
msgid ""
"Convert 64-bit value in @i{ud1} from native byte order to little-endian or "
"from little-endian to native byte order (the same operation)"
msgstr "@i{ud1} の 64 ビット値をネイティブ・バイト順からリトル・エンディアンに、 またはリトル・エンディアンからネイティブ・バイト順に変換します(両方は同一の操作です)"

#. type: table
#: ../doc/gforth.texi:8084
msgid ""
"For signed fetches with a specific byte order, you have to perform a sign-"
"extension word after an unsigned fetch and a byte-order correction:"
msgstr "特定のバイト順序での符号付きでの取得の場合、 符号なし取得とバイト順序修正の後に符号拡張ワードを実行する必要があります:"

#. type: findex
#: ../doc/gforth.texi:8085
#, no-wrap
msgid "c>s ( @var{ x -- n  } ) gforth-1.0"
msgstr "c>s ( @var{ x -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8086 ../doc/gforth.texi:8087
#, no-wrap
msgid "c>s"
msgstr "c>s"

#. type: format
#: ../doc/gforth.texi:8090
#, no-wrap
msgid "@code{c>s} ( @i{x -- n }) gforth-1.0 ``c-to-s''\n"
msgstr "@code{c>s} ( @i{x -- n }) gforth-1.0 ``c-to-s''\n"

#. type: table
#: ../doc/gforth.texi:8092
msgid "Sign-extend the 8-bit value in @i{x} to cell @i{n}."
msgstr "@i{x} の 8 ビット値をセル @i{n} に符号拡張します。"

#. type: findex
#: ../doc/gforth.texi:8093
#, no-wrap
msgid "w>s ( @var{ x -- n  } ) gforth-1.0"
msgstr "w>s ( @var{ x -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8094 ../doc/gforth.texi:8095
#, no-wrap
msgid "w>s"
msgstr "w>s"

#. type: format
#: ../doc/gforth.texi:8098
#, no-wrap
msgid "@code{w>s} ( @i{x -- n }) gforth-1.0 ``w-to-s''\n"
msgstr "@code{w>s} ( @i{x -- n }) gforth-1.0 ``w-to-s''\n"

#. type: table
#: ../doc/gforth.texi:8100
msgid "Sign-extend the 16-bit value in @i{x} to cell @i{n}."
msgstr "@i{x} の 16 ビット値をセル @i{n} に符号拡張します。"

#. type: findex
#: ../doc/gforth.texi:8101
#, no-wrap
msgid "l>s ( @var{ x -- n  } ) gforth-1.0"
msgstr "l>s ( @var{ x -- n  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8102 ../doc/gforth.texi:8103
#, no-wrap
msgid "l>s"
msgstr "l>s"

#. type: format
#: ../doc/gforth.texi:8106
#, no-wrap
msgid "@code{l>s} ( @i{x -- n }) gforth-1.0 ``l-to-s''\n"
msgstr "@code{l>s} ( @i{x -- n }) gforth-1.0 ``l-to-s''\n"

#. type: table
#: ../doc/gforth.texi:8108
msgid "Sign-extend the 32-bit value in @i{x} to cell @i{n}."
msgstr "@i{x} の 32 ビット値をセル @i{n} に符号拡張します。"

#. type: findex
#: ../doc/gforth.texi:8109
#, no-wrap
msgid "x>s ( @var{ x -- n   } ) gforth-1.0"
msgstr "x>s ( @var{ x -- n   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8110 ../doc/gforth.texi:8111
#, no-wrap
msgid "x>s"
msgstr "x>s"

#. type: format
#: ../doc/gforth.texi:8114
#, no-wrap
msgid "@code{x>s} ( @i{x -- n  }) gforth-1.0 ``x>s''\n"
msgstr "@code{x>s} ( @i{x -- n  }) gforth-1.0 ``x>s''\n"

#. type: table
#: ../doc/gforth.texi:8116
msgid "Sign-extend the 64-bit value in @i{x} to cell @i{n}."
msgstr "@i{x} の 64 ビット値をセル @i{n} に符号拡張します。"

#. type: findex
#: ../doc/gforth.texi:8118
#, no-wrap
msgid "xd>s ( @var{ xd -- d   } ) gforth-1.0"
msgstr "xd>s ( @var{ xd -- d   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8119 ../doc/gforth.texi:8120
#, no-wrap
msgid "xd>s"
msgstr "xd>s"

#. type: format
#: ../doc/gforth.texi:8123
#, no-wrap
msgid "@code{xd>s} ( @i{xd -- d  }) gforth-1.0 ``xd>s''\n"
msgstr "@code{xd>s} ( @i{xd -- d  }) gforth-1.0 ``xd>s''\n"

#. type: table
#: ../doc/gforth.texi:8125
msgid "Sign-extend the 64-bit value in @var{xd} to double-ceel @var{d}."
msgstr "@var{xd} の 64 ビット値を 2倍長セル @var{d} に符号拡張します。"

#. type: table
#: ../doc/gforth.texi:8129
msgid "Overall, this leads to sequences like"
msgstr "これら全般を、 以下のような流れで使います:"

#. type: example
#: ../doc/gforth.texi:8133
#, no-wrap
msgid ""
"w@@ wbe w>s   \\ 16-bit unaligned signed big-endian fetch\n"
">r lle r> l! \\ 32-bit unaligned little-endian store\n"
msgstr ""
"w@@ wbe w>s   \\ 16ビット 非アライメント 符号付き ビッグ・エンディアン を取得し、\n"
">r lle r> l!  \\ 32-bit 非アライメント リトル・エンディアン として 格納\n"

#. type: cindex
#: ../doc/gforth.texi:8137
#, no-wrap
msgid "address arithmetic words"
msgstr "address arithmetic words"

#. type: table
#: ../doc/gforth.texi:8142
msgid ""
"Address arithmetic is the foundation on which you can build data structures "
"like arrays, records (@pxref{Structures}) and objects (@pxref{Object-"
"oriented Forth})."
msgstr "アドレス演算は、 配列やレコード(@pxref{Structures})やオブジェクト(@pxref{Object-oriented Forth})のようなデータ構造を構築可能な基礎基盤です。"

#. type: cindex
#: ../doc/gforth.texi:8143
#, no-wrap
msgid "address unit"
msgstr "address unit"

#. type: cindex
#: ../doc/gforth.texi:8144
#, no-wrap
msgid "au (address unit)"
msgstr "au (address unit)"

#. type: table
#: ../doc/gforth.texi:8151
msgid ""
"Standard Forth does not specify the sizes of the data types. Instead, it "
"offers a number of words for computing sizes and doing address arithmetic. "
"Address arithmetic is performed in terms of address units (aus); on most "
"systems the address unit is one byte. Note that a character may have more "
"than one au, so @code{chars} is no noop (on platforms where it is a noop, it "
"compiles to nothing)."
msgstr "標準 Forth では、 データ型のサイズは規定されていません。 代わりに、 サイズを計算したりアドレス演算を行うための多数のワードが提供されます。 アドレス演算はアドレス単位(au;Address Unit, aus;Address UnitS)で実行されます。 ほとんどのシステムでは、 1アドレス単位は 1 バイトです。 注意: 1 つの文字に複数 au が含まれる可能性があるため、 @code{chars} は何もしない(noop)訳ではないことに注意してください(noop であるプラットフォームでは、 @code{chars} は何もコンパイルしません)。"

#. type: table
#: ../doc/gforth.texi:8155
msgid ""
"The basic address arithmetic words are @code{+} and @code{-}.  E.g., if you "
"have the address of a cell, perform @code{1 cells +}, and you will have the "
"address of the next cell."
msgstr "基本的なアドレス算術ワードは @code{+} と @code{-} です。 たとえば、 セルのアドレスがわかっている場合、 @code{1 cells +} を実行すると、 次のセルのアドレスがわかります。"

#. type: cindex
#: ../doc/gforth.texi:8156
#, no-wrap
msgid "alignment of addresses for types"
msgstr "alignment of addresses for types"

#. type: table
#: ../doc/gforth.texi:8162
msgid ""
"Standard Forth also defines words for aligning addresses for specific types. "
"Many computers require that accesses to specific data types must only occur "
"at specific addresses; e.g., that cells may only be accessed at addresses "
"divisible by 4. Even if a machine allows unaligned accesses, it can usually "
"perform aligned accesses faster."
msgstr "標準 Forth では、 特定の型のアドレスをアライメントするためのワードも定義されています。 多くのコンピュータでは、 特定のデータ型へのアクセスは特定のアドレスでのみ行われる必要があります。 たとえば、 セルは 4 で割り切れるアドレスでのみアクセスできます。 マシンが非アライメント・アクセスを許可する場合でも、 通常はアライメント・アクセスの方が高速に実行できます。"

#. type: table
#: ../doc/gforth.texi:8166
msgid ""
"For the performance-conscious: alignment operations are usually only "
"necessary during the definition of a data structure, not during the (more "
"frequent) accesses to it."
msgstr "パフォーマンス重視で行く場合: 通常、 アライメント操作はデータ構造の定義中にのみ必要であり、 (より頻繁な)データ構造へのアクセス中には必要ありません。"

#. type: table
#: ../doc/gforth.texi:8169
msgid ""
"Standard Forth defines no words for character-aligning addresses; in "
"Forth-2012 all addresses are character-aligned."
msgstr "標準 Forth では、 文字のアドレス・アライメント用ワードは定義されていません。 Forth-2012 では、すべてのアドレスが文字単位でアライメントされています(all addresses are character-aligned)"

#. type: cindex
#: ../doc/gforth.texi:8170
#, no-wrap
msgid "@code{CREATE} and alignment"
msgstr "@code{CREATE} and alignment"

#. type: table
#: ../doc/gforth.texi:8174
msgid ""
"Standard Forth guarantees that addresses returned by @code{CREATE}d words "
"are cell-aligned; in addition, Gforth guarantees that these addresses are "
"aligned for all purposes."
msgstr "標準 Forth は、 @code{CREATE} されたワードによって返されるアドレスがセル・アライメントされていることを保証します。 さらに、Gforth は、 こ​​れらのアドレスがあらゆる目的に合わせてアライメント済みであることを保証します(addresses are aligned for all purposes)。"

#. type: table
#: ../doc/gforth.texi:8177
msgid ""
"Note that the Standard Forth word @code{char} has nothing to do with address "
"arithmetic."
msgstr "注意: 標準の Forth ワード @code{char} はアドレス演算とは何の関係もないことに注意してください。"

#. type: findex
#: ../doc/gforth.texi:8179
#, no-wrap
msgid "chars ( @var{ n1 -- n2   } ) core"
msgstr "chars ( @var{ n1 -- n2   } ) core"

#. type: kindex
#: ../doc/gforth.texi:8180 ../doc/gforth.texi:8181
#, no-wrap
msgid "chars"
msgstr "chars"

#. type: format
#: ../doc/gforth.texi:8184
#, no-wrap
msgid "@code{chars} ( @i{n1 -- n2  }) core ``chars''\n"
msgstr "@code{chars} ( @i{n1 -- n2  }) core ``chars''\n"

#. type: table
#: ../doc/gforth.texi:8186
msgid "@i{n2} is the number of address units of @i{n1} chars.\"\""
msgstr "@i{n1} 文字(char)が何アドレス単位になるかを @i{n2} に返します。"

#. type: findex
#: ../doc/gforth.texi:8188
#, no-wrap
msgid "char+ ( @var{ c-addr1 -- c-addr2  } ) core"
msgstr "char+ ( @var{ c-addr1 -- c-addr2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8189 ../doc/gforth.texi:8190
#, no-wrap
msgid "char+"
msgstr "char+"

#. type: format
#: ../doc/gforth.texi:8193
#, no-wrap
msgid "@code{char+} ( @i{c-addr1 -- c-addr2 }) core ``char-plus''\n"
msgstr "@code{char+} ( @i{c-addr1 -- c-addr2 }) core ``char-plus''\n"

#. type: table
#: ../doc/gforth.texi:8195
msgid "@code{1 chars +}."
msgstr "@code{1 chars +}."

#. type: findex
#: ../doc/gforth.texi:8196
#, no-wrap
msgid "char- ( @var{ c-addr1 -- c-addr2   } ) gforth-0.7"
msgstr "char- ( @var{ c-addr1 -- c-addr2   } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:8197 ../doc/gforth.texi:8198
#, no-wrap
msgid "char-"
msgstr "char-"

#. type: format
#: ../doc/gforth.texi:8201
#, no-wrap
msgid "@code{char-} ( @i{c-addr1 -- c-addr2  }) gforth-0.7 ``char-minus''\n"
msgstr "@code{char-} ( @i{c-addr1 -- c-addr2  }) gforth-0.7 ``char-minus''\n"

#. type: findex
#: ../doc/gforth.texi:8203
#, no-wrap
msgid "cells ( @var{ n1 -- n2  } ) core"
msgstr "cells ( @var{ n1 -- n2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8204 ../doc/gforth.texi:8205
#, no-wrap
msgid "cells"
msgstr "cells"

#. type: format
#: ../doc/gforth.texi:8208
#, no-wrap
msgid "@code{cells} ( @i{n1 -- n2 }) core ``cells''\n"
msgstr "@code{cells} ( @i{n1 -- n2 }) core ``cells''\n"

#. type: table
#: ../doc/gforth.texi:8210
msgid "@i{n2} is the number of address units of @i{n1} cells."
msgstr "@i{n1} 個のセルのアドレス単位の数を @i{n2} に取得します。"

#. type: findex
#: ../doc/gforth.texi:8211
#, no-wrap
msgid "cell+ ( @var{ a-addr1 -- a-addr2  } ) core"
msgstr "cell+ ( @var{ a-addr1 -- a-addr2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8212 ../doc/gforth.texi:8213
#, no-wrap
msgid "cell+"
msgstr "cell+"

#. type: format
#: ../doc/gforth.texi:8216
#, no-wrap
msgid "@code{cell+} ( @i{a-addr1 -- a-addr2 }) core ``cell-plus''\n"
msgstr "@code{cell+} ( @i{a-addr1 -- a-addr2 }) core ``cell-plus''\n"

#. type: code{#1}
#: ../doc/gforth.texi:8218
msgid "1 cells +"
msgstr "1 cells +"

#. type: findex
#: ../doc/gforth.texi:8219
#, no-wrap
msgid "cell- ( @var{ a-addr1 -- a-addr2  } ) core"
msgstr "cell- ( @var{ a-addr1 -- a-addr2  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8220 ../doc/gforth.texi:8221
#, no-wrap
msgid "cell-"
msgstr "cell-"

#. type: format
#: ../doc/gforth.texi:8224
#, no-wrap
msgid "@code{cell-} ( @i{a-addr1 -- a-addr2 }) core ``cell-minus''\n"
msgstr "@code{cell-} ( @i{a-addr1 -- a-addr2 }) core ``cell-minus''\n"

#. type: code{#1}
#: ../doc/gforth.texi:8226
msgid "1 cells -"
msgstr "1 cells -"

#. type: findex
#: ../doc/gforth.texi:8227
#, no-wrap
msgid "cell/ ( @var{ n1 -- n2  } ) gforth-1.0"
msgstr "cell/ ( @var{ n1 -- n2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8228 ../doc/gforth.texi:8229
#, no-wrap
msgid "cell/"
msgstr "cell/"

#. type: format
#: ../doc/gforth.texi:8232
#, no-wrap
msgid "@code{cell/} ( @i{n1 -- n2 }) gforth-1.0 ``cell-divide''\n"
msgstr "@code{cell/} ( @i{n1 -- n2 }) gforth-1.0 ``cell-divide''\n"

#. type: table
#: ../doc/gforth.texi:8234
msgid "@i{n2} is the number of cells that fit into @i{n1}"
msgstr "@i{n1} 個のアドレス単位の幅の中に入れられるセルの数が @i{n2} です"

#. type: findex
#: ../doc/gforth.texi:8235
#, no-wrap
msgid "cell ( @var{ -- u   } ) gforth-0.2"
msgstr "cell ( @var{ -- u   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:8236 ../doc/gforth.texi:8237
#, no-wrap
msgid "cell"
msgstr "cell"

#. type: format
#: ../doc/gforth.texi:8240
#, no-wrap
msgid "@code{cell} ( @i{-- u  }) gforth-0.2 ``cell''\n"
msgstr "@code{cell} ( @i{-- u  }) gforth-0.2 ``cell''\n"

#. type: table
#: ../doc/gforth.texi:8242
msgid "@code{Constant} -- @code{1 cells}"
msgstr "定数 -- @code{1 cells}"

#. type: findex
#: ../doc/gforth.texi:8244
#, no-wrap
msgid "aligned ( @var{ c-addr -- a-addr  } ) core"
msgstr "aligned ( @var{ c-addr -- a-addr  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8245 ../doc/gforth.texi:8246
#, no-wrap
msgid "aligned"
msgstr "aligned"

#. type: format
#: ../doc/gforth.texi:8249
#, no-wrap
msgid "@code{aligned} ( @i{c-addr -- a-addr }) core ``aligned''\n"
msgstr "@code{aligned} ( @i{c-addr -- a-addr }) core ``aligned''\n"

#. type: table
#: ../doc/gforth.texi:8251
msgid ""
"@i{a-addr} is the first aligned address greater than or equal to @i{c-addr}."
msgstr "@i{a-addr} は、 @i{c-addr} 以上の最初にアライメントされたアドレスです。"

#. type: findex
#: ../doc/gforth.texi:8252
#, no-wrap
msgid "floats ( @var{ n1 -- n2  } ) floating"
msgstr "floats ( @var{ n1 -- n2  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:8253 ../doc/gforth.texi:8254
#, no-wrap
msgid "floats"
msgstr "floats"

#. type: format
#: ../doc/gforth.texi:8257
#, no-wrap
msgid "@code{floats} ( @i{n1 -- n2 }) floating ``floats''\n"
msgstr "@code{floats} ( @i{n1 -- n2 }) floating ``floats''\n"

#. type: table
#: ../doc/gforth.texi:8259
msgid "@i{n2} is the number of address units of @i{n1} floats."
msgstr "@i{n2} は @i{n1} 個の浮動小数点数(float)のアドレスユニットの数です。"

#. type: findex
#: ../doc/gforth.texi:8260
#, no-wrap
msgid "float+ ( @var{ f-addr1 -- f-addr2  } ) floating"
msgstr "float+ ( @var{ f-addr1 -- f-addr2  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:8261 ../doc/gforth.texi:8262
#, no-wrap
msgid "float+"
msgstr "float+"

#. type: format
#: ../doc/gforth.texi:8265
#, no-wrap
msgid "@code{float+} ( @i{f-addr1 -- f-addr2 }) floating ``float-plus''\n"
msgstr "@code{float+} ( @i{f-addr1 -- f-addr2 }) floating ``float-plus''\n"

#. type: table
#: ../doc/gforth.texi:8267
msgid "@code{1 floats +}."
msgstr "@code{1 floats +}."

#. type: findex
#: ../doc/gforth.texi:8268
#, no-wrap
msgid "float ( @var{ -- u   } ) gforth-0.3"
msgstr "float ( @var{ -- u   } ) gforth-0.3"

#. type: kindex
#: ../doc/gforth.texi:8269 ../doc/gforth.texi:8270
#, no-wrap
msgid "float"
msgstr "float"

#. type: format
#: ../doc/gforth.texi:8273
#, no-wrap
msgid "@code{float} ( @i{-- u  }) gforth-0.3 ``float''\n"
msgstr "@code{float} ( @i{-- u  }) gforth-0.3 ``float''\n"

#. type: table
#: ../doc/gforth.texi:8275
msgid ""
"@code{Constant} -- the number of address units corresponding to a floating-"
"point number."
msgstr "定数 -- 浮動小数点数に対応するアドレスユニットの数。"

#. type: findex
#: ../doc/gforth.texi:8277
#, no-wrap
msgid "float/ ( @var{ n1 -- n2  } ) gforth-1.0"
msgstr "float/ ( @var{ n1 -- n2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8278 ../doc/gforth.texi:8279
#, no-wrap
msgid "float/"
msgstr "float/"

#. type: format
#: ../doc/gforth.texi:8282
#, no-wrap
msgid "@code{float/} ( @i{n1 -- n2 }) gforth-1.0 ``float-divide''\n"
msgstr "@code{float/} ( @i{n1 -- n2 }) gforth-1.0 ``float-divide''\n"

#. type: findex
#: ../doc/gforth.texi:8284
#, no-wrap
msgid "faligned ( @var{ c-addr -- f-addr  } ) floating"
msgstr "faligned ( @var{ c-addr -- f-addr  } ) floating"

#. type: kindex
#: ../doc/gforth.texi:8285 ../doc/gforth.texi:8286
#, no-wrap
msgid "faligned"
msgstr "faligned"

#. type: format
#: ../doc/gforth.texi:8289
#, no-wrap
msgid "@code{faligned} ( @i{c-addr -- f-addr }) floating ``f-aligned''\n"
msgstr "@code{faligned} ( @i{c-addr -- f-addr }) floating ``f-aligned''\n"

#. type: table
#: ../doc/gforth.texi:8291
msgid ""
"@i{f-addr} is the first float-aligned address greater than or equal to @i{c-"
"addr}."
msgstr "@i{f-addr} は、@i{c-addr} 以上の、 浮動小数点数にアライメントされた最初のアドレスです。"

#. type: findex
#: ../doc/gforth.texi:8292
#, no-wrap
msgid "sfloats ( @var{ n1 -- n2  } ) floating-ext"
msgstr "sfloats ( @var{ n1 -- n2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:8293 ../doc/gforth.texi:8294
#, no-wrap
msgid "sfloats"
msgstr "sfloats"

#. type: format
#: ../doc/gforth.texi:8297
#, no-wrap
msgid "@code{sfloats} ( @i{n1 -- n2 }) floating-ext ``s-floats''\n"
msgstr "@code{sfloats} ( @i{n1 -- n2 }) floating-ext ``s-floats''\n"

#. type: table
#: ../doc/gforth.texi:8300
msgid ""
"@i{n2} is the number of address units of @i{n1} single-precision IEEE "
"floating-point numbers."
msgstr "@i{n2} は、 @i{n1} 個の単精度 IEEE 浮動小数点数のアドレス単位の数です。"

#. type: findex
#: ../doc/gforth.texi:8301
#, no-wrap
msgid "sfloat+ ( @var{ sf-addr1 -- sf-addr2   } ) floating-ext"
msgstr "sfloat+ ( @var{ sf-addr1 -- sf-addr2   } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:8302 ../doc/gforth.texi:8303
#, no-wrap
msgid "sfloat+"
msgstr "sfloat+"

#. type: format
#: ../doc/gforth.texi:8306
#, no-wrap
msgid "@code{sfloat+} ( @i{sf-addr1 -- sf-addr2  }) floating-ext ``s-float-plus''\n"
msgstr "@code{sfloat+} ( @i{sf-addr1 -- sf-addr2  }) floating-ext ``s-float-plus''\n"

#. type: table
#: ../doc/gforth.texi:8308
msgid "@code{1 sfloats +}."
msgstr "@code{1 sfloats +}."

#. type: findex
#: ../doc/gforth.texi:8310
#, no-wrap
msgid "sfloat/ ( @var{ n1 -- n2  } ) gforth-1.0"
msgstr "sfloat/ ( @var{ n1 -- n2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8311 ../doc/gforth.texi:8312
#, no-wrap
msgid "sfloat/"
msgstr "sfloat/"

#. type: format
#: ../doc/gforth.texi:8315
#, no-wrap
msgid "@code{sfloat/} ( @i{n1 -- n2 }) gforth-1.0 ``dfloat-divide''\n"
msgstr "@code{sfloat/} ( @i{n1 -- n2 }) gforth-1.0 ``dfloat-divide''\n"

#. type: findex
#: ../doc/gforth.texi:8317
#, no-wrap
msgid "sfaligned ( @var{ c-addr -- sf-addr  } ) floating-ext"
msgstr "sfaligned ( @var{ c-addr -- sf-addr  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:8318 ../doc/gforth.texi:8319
#, no-wrap
msgid "sfaligned"
msgstr "sfaligned"

#. type: format
#: ../doc/gforth.texi:8322
#, no-wrap
msgid "@code{sfaligned} ( @i{c-addr -- sf-addr }) floating-ext ``s-f-aligned''\n"
msgstr "@code{sfaligned} ( @i{c-addr -- sf-addr }) floating-ext ``s-f-aligned''\n"

#. type: table
#: ../doc/gforth.texi:8325
msgid ""
"@i{sf-addr} is the first single-float-aligned address greater than or equal "
"to @i{c-addr}."
msgstr "@i{sf-addr} は、 @i{c-addr} 以上の、 最初の単精度浮動小数点数アライメント・アドレスです。"

#. type: findex
#: ../doc/gforth.texi:8326
#, no-wrap
msgid "dfloats ( @var{ n1 -- n2  } ) floating-ext"
msgstr "dfloats ( @var{ n1 -- n2  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:8327 ../doc/gforth.texi:8328
#, no-wrap
msgid "dfloats"
msgstr "dfloats"

#. type: format
#: ../doc/gforth.texi:8331
#, no-wrap
msgid "@code{dfloats} ( @i{n1 -- n2 }) floating-ext ``d-floats''\n"
msgstr "@code{dfloats} ( @i{n1 -- n2 }) floating-ext ``d-floats''\n"

#. type: table
#: ../doc/gforth.texi:8334
msgid ""
"@i{n2} is the number of address units of @i{n1} double-precision IEEE "
"floating-point numbers."
msgstr "@i{n2} は、 @i{n1} 個の倍精度 IEEE 浮動小数点数のアドレス単位の数です。"

#. type: findex
#: ../doc/gforth.texi:8335
#, no-wrap
msgid "dfloat+ ( @var{ df-addr1 -- df-addr2   } ) floating-ext"
msgstr "dfloat+ ( @var{ df-addr1 -- df-addr2   } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:8336 ../doc/gforth.texi:8337
#, no-wrap
msgid "dfloat+"
msgstr "dfloat+"

#. type: format
#: ../doc/gforth.texi:8340
#, no-wrap
msgid "@code{dfloat+} ( @i{df-addr1 -- df-addr2  }) floating-ext ``d-float-plus''\n"
msgstr "@code{dfloat+} ( @i{df-addr1 -- df-addr2  }) floating-ext ``d-float-plus''\n"

#. type: table
#: ../doc/gforth.texi:8342
msgid "@code{1 dfloats +}."
msgstr "@code{1 dfloats +}."

#. type: findex
#: ../doc/gforth.texi:8344
#, no-wrap
msgid "dfloat/ ( @var{ n1 -- n2  } ) gforth-1.0"
msgstr "dfloat/ ( @var{ n1 -- n2  } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8345 ../doc/gforth.texi:8346
#, no-wrap
msgid "dfloat/"
msgstr "dfloat/"

#. type: format
#: ../doc/gforth.texi:8349
#, no-wrap
msgid "@code{dfloat/} ( @i{n1 -- n2 }) gforth-1.0 ``sfloat-divide''\n"
msgstr "@code{dfloat/} ( @i{n1 -- n2 }) gforth-1.0 ``sfloat-divide''\n"

#. type: findex
#: ../doc/gforth.texi:8351
#, no-wrap
msgid "dfaligned ( @var{ c-addr -- df-addr  } ) floating-ext"
msgstr "dfaligned ( @var{ c-addr -- df-addr  } ) floating-ext"

#. type: kindex
#: ../doc/gforth.texi:8352 ../doc/gforth.texi:8353
#, no-wrap
msgid "dfaligned"
msgstr "dfaligned"

#. type: format
#: ../doc/gforth.texi:8356
#, no-wrap
msgid "@code{dfaligned} ( @i{c-addr -- df-addr }) floating-ext ``d-f-aligned''\n"
msgstr "@code{dfaligned} ( @i{c-addr -- df-addr }) floating-ext ``d-f-aligned''\n"

#. type: table
#: ../doc/gforth.texi:8359
msgid ""
"@i{df-addr} is the first double-float-aligned address greater than or equal "
"to @i{c-addr}."
msgstr "@i{df-addr} は、 @i{c-addr} 以上の、 最初の倍精度浮動小数点数アライメント・アドレスです。"

#. type: findex
#: ../doc/gforth.texi:8360
#, no-wrap
msgid "maxaligned ( @var{ addr1 -- addr2   } ) gforth-0.2"
msgstr "maxaligned ( @var{ addr1 -- addr2   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:8361 ../doc/gforth.texi:8362
#, no-wrap
msgid "maxaligned"
msgstr "maxaligned"

#. type: format
#: ../doc/gforth.texi:8365
#, no-wrap
msgid "@code{maxaligned} ( @i{addr1 -- addr2  }) gforth-0.2 ``maxaligned''\n"
msgstr "@code{maxaligned} ( @i{addr1 -- addr2  }) gforth-0.2 ``maxaligned''\n"

#. type: table
#: ../doc/gforth.texi:8369
msgid ""
"@i{addr2} is the first address after @i{addr1} that satisfies all alignment "
"restrictions.  maxaligned\""
msgstr "@i{addr2} は、 すべてのアライメント制限を満たす @i{addr1} 以上の最初のアドレスです。"

#. type: findex
#: ../doc/gforth.texi:8371
#, no-wrap
msgid "cfaligned ( @var{ addr1 -- addr2   } ) gforth-0.2"
msgstr "cfaligned ( @var{ addr1 -- addr2   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:8372 ../doc/gforth.texi:8373
#, no-wrap
msgid "cfaligned"
msgstr "cfaligned"

#. type: format
#: ../doc/gforth.texi:8376
#, no-wrap
msgid "@code{cfaligned} ( @i{addr1 -- addr2  }) gforth-0.2 ``cfaligned''\n"
msgstr "@code{cfaligned} ( @i{addr1 -- addr2  }) gforth-0.2 ``cfaligned''\n"

#. type: table
#: ../doc/gforth.texi:8379
msgid ""
"@i{addr2} is the first address after @i{addr1} that is aligned for a code "
"field (i.e., such that the corresponding body is maxaligned)."
msgstr "@i{addr2} は、 @i{addr1} 以上の最初のアドレスで、 コード・フィールド用にアライメントされています(つまり、 対応する本体(body)が maxalign されるようにします)。"

#. type: findex
#: ../doc/gforth.texi:8381
#, no-wrap
msgid "*aligned ( @var{ addr1 n -- addr2   } ) gforth-1.0"
msgstr "*aligned ( @var{ addr1 n -- addr2   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8382 ../doc/gforth.texi:8383
#, no-wrap
msgid "*aligned"
msgstr "*aligned"

#. type: format
#: ../doc/gforth.texi:8386
#, no-wrap
msgid "@code{*aligned} ( @i{addr1 n -- addr2  }) gforth-1.0 ``*aligned''\n"
msgstr "@code{*aligned} ( @i{addr1 n -- addr2  }) gforth-1.0 ``*aligned''\n"

#. type: table
#: ../doc/gforth.texi:8389
msgid ""
"@var{addr2} is the aligned version of @var{addr1} with respect to the "
"alignment @var{n}."
msgstr "@var{addr1} 以上で、 @var{n} でアライメントされた(@var{n} で割り切れる)アドレスを @var{addr2} に返します。"

#. type: findex
#: ../doc/gforth.texi:8391
#, no-wrap
msgid "*align ( @var{ n --   } ) gforth-1.0"
msgstr "*align ( @var{ n --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8392 ../doc/gforth.texi:8393
#, no-wrap
msgid "*align"
msgstr "*align"

#. type: format
#: ../doc/gforth.texi:8396
#, no-wrap
msgid "@code{*align} ( @i{n --  }) gforth-1.0 ``*align''\n"
msgstr "@code{*align} ( @i{n --  }) gforth-1.0 ``*align''\n"

#. type: table
#: ../doc/gforth.texi:8398
msgid "Align @code{here} with respect to the alignment @var{n}."
msgstr "@code{here} を @var{n} で割り切れるアドレスにアライメントします。"

#. type: findex
#: ../doc/gforth.texi:8400
#, no-wrap
msgid "waligned ( @var{ addr -- addr'   } ) gforth-1.0"
msgstr "waligned ( @var{ addr -- addr'   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8401 ../doc/gforth.texi:8402
#, no-wrap
msgid "waligned"
msgstr "waligned"

#. type: format
#: ../doc/gforth.texi:8405
#, no-wrap
msgid "@code{waligned} ( @i{addr -- addr'  }) gforth-1.0 ``waligned''\n"
msgstr "@code{waligned} ( @i{addr -- addr'  }) gforth-1.0 ``waligned''\n"

#. type: table
#: ../doc/gforth.texi:8407
msgid "@i{Addr'} is the next even address >= @i{addr}."
msgstr "@i{Addr'} は、 @i{addr} 以上、かつ、次の偶数アドレスです。"

#. type: findex
#: ../doc/gforth.texi:8409
#, no-wrap
msgid "walign ( @var{ --   } ) gforth-1.0"
msgstr "walign ( @var{ --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8410 ../doc/gforth.texi:8411
#, no-wrap
msgid "walign"
msgstr "walign"

#. type: format
#: ../doc/gforth.texi:8414
#, no-wrap
msgid "@code{walign} ( @i{--  }) gforth-1.0 ``walign''\n"
msgstr "@code{walign} ( @i{--  }) gforth-1.0 ``walign''\n"

#. type: table
#: ../doc/gforth.texi:8416
msgid "Align @code{here} to even."
msgstr "@code{here} を 偶数アドレスにアライメントします。"

#. type: findex
#: ../doc/gforth.texi:8418
#, no-wrap
msgid "laligned ( @var{ addr -- addr'   } ) gforth-1.0"
msgstr "laligned ( @var{ addr -- addr'   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8419 ../doc/gforth.texi:8420
#, no-wrap
msgid "laligned"
msgstr "laligned"

#. type: format
#: ../doc/gforth.texi:8423
#, no-wrap
msgid "@code{laligned} ( @i{addr -- addr'  }) gforth-1.0 ``laligned''\n"
msgstr "@code{laligned} ( @i{addr -- addr'  }) gforth-1.0 ``laligned''\n"

#. type: table
#: ../doc/gforth.texi:8425
msgid "@i{Addr'} is the next address >= @i{addr} divisible by 4."
msgstr "@i{Addr'} は、 @i{addr} 以上、 かつ、 4 で割り切れるアドレスです。"

#. type: findex
#: ../doc/gforth.texi:8427
#, no-wrap
msgid "lalign ( @var{ --   } ) gforth-1.0"
msgstr "lalign ( @var{ --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8428 ../doc/gforth.texi:8429
#, no-wrap
msgid "lalign"
msgstr "lalign"

#. type: format
#: ../doc/gforth.texi:8432
#, no-wrap
msgid "@code{lalign} ( @i{--  }) gforth-1.0 ``lalign''\n"
msgstr "@code{lalign} ( @i{--  }) gforth-1.0 ``lalign''\n"

#. type: table
#: ../doc/gforth.texi:8434
msgid "Align @code{here} to be divisible by 4."
msgstr "@code{here} を 4 で割り切れるアドレスにアライメントします。"

#. type: findex
#: ../doc/gforth.texi:8436
#, no-wrap
msgid "xaligned ( @var{ addr -- addr'   } ) gforth-1.0"
msgstr "xaligned ( @var{ addr -- addr'   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8437 ../doc/gforth.texi:8438
#, no-wrap
msgid "xaligned"
msgstr "xaligned"

#. type: format
#: ../doc/gforth.texi:8441
#, no-wrap
msgid "@code{xaligned} ( @i{addr -- addr'  }) gforth-1.0 ``xaligned''\n"
msgstr "@code{xaligned} ( @i{addr -- addr'  }) gforth-1.0 ``xaligned''\n"

#. type: table
#: ../doc/gforth.texi:8443
msgid "@i{Addr'} is the next address >= @i{addr} divisible by 8."
msgstr "@i{Addr'} を @i{addr} 以上、 かつ、 8 で割り切れるアドレスにします。"

#. type: findex
#: ../doc/gforth.texi:8445
#, no-wrap
msgid "xalign ( @var{ --   } ) gforth-1.0"
msgstr "xalign ( @var{ --   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8446 ../doc/gforth.texi:8447
#, no-wrap
msgid "xalign"
msgstr "xalign"

#. type: format
#: ../doc/gforth.texi:8450
#, no-wrap
msgid "@code{xalign} ( @i{--  }) gforth-1.0 ``xalign''\n"
msgstr "@code{xalign} ( @i{--  }) gforth-1.0 ``xalign''\n"

#. type: table
#: ../doc/gforth.texi:8452
msgid "Align @code{here} to be divisible by 8."
msgstr "@code{here} を 8 で割り切れるアドレスにアライメントします。"

#. type: table
#: ../doc/gforth.texi:8458
msgid ""
"The environmental query @code{address-unit-bits} (@pxref{Environmental "
"Queries}) and the following words may be useful to those who want to write "
"software portable to non-byte-addressed machines."
msgstr "環境クエリ @code{address-unit-bits} (@pxref{Environmental Queries}) と、 以下のワード群は、 バイトアドレスを持たないマシン(non-byte-addressed machines)に移植可能なソフトウェアを作成したい人に役立つかもしれません。"

#. type: findex
#: ../doc/gforth.texi:8459
#, no-wrap
msgid "/w ( @var{ -- u   } ) gforth-0.7"
msgstr "/w ( @var{ -- u   } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:8460 ../doc/gforth.texi:8461
#, no-wrap
msgid "/w"
msgstr "/w"

#. type: format
#: ../doc/gforth.texi:8464
#, no-wrap
msgid "@code{/w} ( @i{-- u  }) gforth-0.7 ``slash-w''\n"
msgstr "@code{/w} ( @i{-- u  }) gforth-0.7 ``slash-w''\n"

#. type: table
#: ../doc/gforth.texi:8466
msgid "address units for a 16-bit value"
msgstr "16ビット値に必要なアドレス単位"

#. type: findex
#: ../doc/gforth.texi:8468
#, no-wrap
msgid "/l ( @var{ -- u   } ) gforth-0.7"
msgstr "/l ( @var{ -- u   } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:8469 ../doc/gforth.texi:8470
#, no-wrap
msgid "/l"
msgstr "/l"

#. type: format
#: ../doc/gforth.texi:8473
#, no-wrap
msgid "@code{/l} ( @i{-- u  }) gforth-0.7 ``slash-l''\n"
msgstr "@code{/l} ( @i{-- u  }) gforth-0.7 ``slash-l''\n"

#. type: table
#: ../doc/gforth.texi:8475
msgid "address units for a 32-bit value"
msgstr "32ビット値に必要なアドレス単位"

#. type: findex
#: ../doc/gforth.texi:8477
#, no-wrap
msgid "/x ( @var{ -- u   } ) gforth-1.0"
msgstr "/x ( @var{ -- u   } ) gforth-1.0"

#. type: kindex
#: ../doc/gforth.texi:8478 ../doc/gforth.texi:8479
#, no-wrap
msgid "/x"
msgstr "/x"

#. type: format
#: ../doc/gforth.texi:8482
#, no-wrap
msgid "@code{/x} ( @i{-- u  }) gforth-1.0 ``slash-x''\n"
msgstr "@code{/x} ( @i{-- u  }) gforth-1.0 ``slash-x''\n"

#. type: table
#: ../doc/gforth.texi:8484
msgid "address units for a 64-bit value"
msgstr "64ビット値に必要なアドレス単位"

#. type: cindex
#: ../doc/gforth.texi:8489
#, no-wrap
msgid "memory block words"
msgstr "memory block words"

#. type: cindex
#: ../doc/gforth.texi:8490
#, no-wrap
msgid "character strings - moving and copying"
msgstr "character strings - moving and copying"

#. type: table
#: ../doc/gforth.texi:8495
msgid ""
"Memory blocks often represent character strings; For ways of storing "
"character strings in memory see @ref{String representations}.  For other "
"string-processing words see @ref{Displaying characters and strings}."
msgstr "メモリ・ブロックは多くの場合、 文字の連なり(character strings)を表します。 文字の連なりをメモリに保存する方法については、 @ref{String representations} を参照してください。  他の連なり処理ワード(string-processing words)については、 @ref{Displaying characters and strings} を参照してください。"

#. type: table
#: ../doc/gforth.texi:8500
msgid ""
"A few of these words work on address unit blocks.  In that case, you usually "
"have to insert @code{CHARS} before the word when working on character "
"strings.  Most words work on character blocks, and expect a char-aligned "
"address."
msgstr "これらのワードのいくつかは、 アドレス単位ブロック(address unit blocks)で機能します。  その場合、 文字の連なり(character strings)を扱う際には通常、 ワードの前に @code{CHARS} を挿入する必要があります。  ほとんどのワードは文字ブロック(character blocks)で機能し、 文字アライメント・アドレス(char-aligned address)を期待します。"

#. type: table
#: ../doc/gforth.texi:8504
msgid ""
"When copying characters between overlapping memory regions, use "
"@code{move}.  @code{Cmove} and @code{cmove>} tend to be slower than a well-"
"implemented @code{move}."
msgstr "重複するメモリ領域間で文字達をコピーする場合は、 @code{move} を使用します。  @code{cmove} と @code{cmove>} は、 適切に実装された @code{move} よりも遅くなる傾向があります。"

#. type: findex
#: ../doc/gforth.texi:8505
#, no-wrap
msgid "move ( @var{ c-from c-to ucount --  } ) core"
msgstr "move ( @var{ c-from c-to ucount --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8506 ../doc/gforth.texi:8507
#, no-wrap
msgid "move"
msgstr "move"

#. type: format
#: ../doc/gforth.texi:8510
#, no-wrap
msgid "@code{move} ( @i{c-from c-to ucount -- }) core ``move''\n"
msgstr "@code{move} ( @i{c-from c-to ucount -- }) core ``move''\n"

#. type: table
#: ../doc/gforth.texi:8513
msgid ""
"Copy the contents of @i{ucount} aus at @i{c-from} to @i{c-to}. @code{move} "
"works correctly even if the two areas overlap."
msgstr "@i{c-from} アドレスにある @i{ucount} 個のcharの内容を @i{c-to} アドレスにコピーします。 @code{move} は、 2 つの領域が重なっている場合でも正しく機能します。"

#. type: findex
#: ../doc/gforth.texi:8514
#, no-wrap
msgid "cmove ( @var{ c-from c-to u --  } ) string"
msgstr "cmove ( @var{ c-from c-to u --  } ) string"

#. type: kindex
#: ../doc/gforth.texi:8515 ../doc/gforth.texi:8516
#, no-wrap
msgid "cmove"
msgstr "cmove"

#. type: format
#: ../doc/gforth.texi:8519
#, no-wrap
msgid "@code{cmove} ( @i{c-from c-to u -- }) string ``c-move''\n"
msgstr "@code{cmove} ( @i{c-from c-to u -- }) string ``c-move''\n"

#. type: table
#: ../doc/gforth.texi:8524
msgid ""
"Copy the contents of @i{ucount} characters from data space at @i{c-from} to "
"@i{c-to}. The copy proceeds @code{char}-by-@code{char} from low address to "
"high address; i.e., for overlapping areas it is safe if @i{c-to}<=@i{c-from}."
msgstr "データ空間で @i{c-from} アドレスから @i{ucount} 個のcharの内容を @i{c-to} アドレスにコピーします。コピーは、  1 @code{char} ずつコピーしながら下位アドレスから上位アドレス方向へ進めます。 つまり、 重複領域の場合、 @i{c-to} <= @i{c-from} であれば安全です。"

#. type: findex
#: ../doc/gforth.texi:8525
#, no-wrap
msgid "cmove> ( @var{ c-from c-to u --  } ) string"
msgstr "cmove> ( @var{ c-from c-to u --  } ) string"

#. type: kindex
#: ../doc/gforth.texi:8526 ../doc/gforth.texi:8527
#, no-wrap
msgid "cmove>"
msgstr "cmove>"

#. type: format
#: ../doc/gforth.texi:8530
#, no-wrap
msgid "@code{cmove>} ( @i{c-from c-to u -- }) string ``c-move-up''\n"
msgstr "@code{cmove>} ( @i{c-from c-to u -- }) string ``c-move-up''\n"

#. type: table
#: ../doc/gforth.texi:8535
msgid ""
"Copy the contents of @i{ucount} characters from data space at @i{c-from} to "
"@i{c-to}. The copy proceeds @code{char}-by-@code{char} from high address to "
"low address; i.e., for overlapping areas it is safe if @i{c-to}>=@i{c-from}."
msgstr "データ空間で @i{c-from} アドレスから @i{ucount} 個のcharの内容を @i{c-to} アドレスにコピーします。 コピーは、 1 @code{char} ずつコピーし上位アドレスから下位アドレス方向に進みます。 つまり、 重複領域の場合、 @i{c-to} >= @i{c-from} であれば安全です。"

#. type: findex
#: ../doc/gforth.texi:8536
#, no-wrap
msgid "fill ( @var{ c-addr u c --  } ) core"
msgstr "fill ( @var{ c-addr u c --  } ) core"

#. type: kindex
#: ../doc/gforth.texi:8537 ../doc/gforth.texi:8538
#, no-wrap
msgid "fill"
msgstr "fill"

#. type: format
#: ../doc/gforth.texi:8541
#, no-wrap
msgid "@code{fill} ( @i{c-addr u c -- }) core ``fill''\n"
msgstr "@code{fill} ( @i{c-addr u c -- }) core ``fill''\n"

#. type: table
#: ../doc/gforth.texi:8543
msgid "Store @i{c} in @i{u} chars starting at @i{c-addr}."
msgstr "@i{c} を @i{c-addr} から @i{u} 個char単位で格納します。"

#. type: findex
#: ../doc/gforth.texi:8544
#, no-wrap
msgid "erase ( @var{ addr u --   } ) core-ext"
msgstr "erase ( @var{ addr u --   } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:8545 ../doc/gforth.texi:8546
#, no-wrap
msgid "erase"
msgstr "erase"

#. type: format
#: ../doc/gforth.texi:8549
#, no-wrap
msgid "@code{erase} ( @i{addr u --  }) core-ext ``erase''\n"
msgstr "@code{erase} ( @i{addr u --  }) core-ext ``erase''\n"

#. type: table
#: ../doc/gforth.texi:8551
msgid "Clear all bits in @i{u} aus starting at @i{addr}."
msgstr "@i{addr} から始まる @i{u} aus のすべてのビットをクリアします。"

#. type: findex
#: ../doc/gforth.texi:8553
#, no-wrap
msgid "blank ( @var{ c-addr u --   } ) string"
msgstr "blank ( @var{ c-addr u --   } ) string"

#. type: kindex
#: ../doc/gforth.texi:8554 ../doc/gforth.texi:8555
#, no-wrap
msgid "blank"
msgstr "blank"

#. type: format
#: ../doc/gforth.texi:8558
#, no-wrap
msgid "@code{blank} ( @i{c-addr u --  }) string ``blank''\n"
msgstr "@code{blank} ( @i{c-addr u --  }) string ``blank''\n"

#. type: table
#: ../doc/gforth.texi:8560
msgid "Store the space character into @i{u} chars starting at @i{c-addr}."
msgstr "スペース文字を @i{c-addr} アドレスから @i{u} 個char単位で格納します。"

#. type: findex
#: ../doc/gforth.texi:8562
#, no-wrap
msgid "insert ( @var{ string length buffer size --   } ) gforth-0.7"
msgstr "insert ( @var{ string length buffer size --   } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:8563 ../doc/gforth.texi:8564
#, no-wrap
msgid "insert"
msgstr "insert"

#. type: format
#: ../doc/gforth.texi:8567
#, no-wrap
msgid "@code{insert} ( @i{string length buffer size --  }) gforth-0.7 ``insert''\n"
msgstr "@code{insert} ( @i{string length buffer size --  }) gforth-0.7 ``insert''\n"

# s" frobnicate" mybuf adjust-buffer  mybuf 2@ move  ok
# s" bar" mybuf 2@ insert mybuf 2@ ." [" type ." ]" [barfrobnic] ok
#
# mybuf 2@ ." [" type ." ]" [frobnic   ]    ok
#
# \ バッファの大きさ(10)を超えるのを流し込んだ場合
# s" 0123456789ABCDEF" mybuf 2@ insert mybuf 2@ ." [" type ." ]" [0123456789] ok
#. type: table
#: ../doc/gforth.texi:8570
msgid ""
"inserts a string at the front of a buffer. The remaining bytes are moved on."
msgstr "バッファの先頭に文字列を挿入します。 残りのバイトは後ろにずらされます(訳注: sizeを超えた分は捨てられます)。"

#. type: findex
#: ../doc/gforth.texi:8572
#, no-wrap
msgid "delete ( @var{ buffer size u --   } ) gforth-0.7"
msgstr "delete ( @var{ buffer size u --   } ) gforth-0.7"

#. type: kindex
#: ../doc/gforth.texi:8573 ../doc/gforth.texi:8574
#, no-wrap
msgid "delete"
msgstr "delete"

#. type: format
#: ../doc/gforth.texi:8577
#, no-wrap
msgid "@code{delete} ( @i{buffer size u --  }) gforth-0.7 ``delete''\n"
msgstr "@code{delete} ( @i{buffer size u --  }) gforth-0.7 ``delete''\n"

# mybuf 2@ 3 delete mybuf 2@ ." [" type ." ]" [frobnic   ] ok
# mybuf 2@ 7 + c@ . 
# *the terminal*:21:14: error: Invalid memory address
# mybuf 2@ 7 + >>>c@<<< .
# mybuf 2@ 7 + .s <2> 94600741214112 17  ok 2
# mybuf 2@ 7 + + c@ . 114  ok 2
# mybuf 2@ drop 7 + c@  ok 3
# . 32  ok 2
# drop drop  ok
# mybuf 2@ drop 7 + c@ . 32  ok
#. type: table
#: ../doc/gforth.texi:8580
msgid ""
"deletes the first @var{u} bytes from a buffer and fills the rest at the end "
"with blanks."
msgstr "最初の @var{u} バイトをバッファから削除し、 その分前にずらして、 残りの最後のバイトを空白(0x20)で埋めます。"

#. type: findex
#: ../doc/gforth.texi:8582
#, no-wrap
msgid "compare ( @var{ c-addr1 u1 c-addr2 u2 -- n  } ) string"
msgstr "compare ( @var{ c-addr1 u1 c-addr2 u2 -- n  } ) string"

#. type: kindex
#: ../doc/gforth.texi:8583 ../doc/gforth.texi:8584
#, no-wrap
msgid "compare"
msgstr "compare"

#. type: format
#: ../doc/gforth.texi:8587
#, no-wrap
msgid "@code{compare} ( @i{c-addr1 u1 c-addr2 u2 -- n }) string ``compare''\n"
msgstr "@code{compare} ( @i{c-addr1 u1 c-addr2 u2 -- n }) string ``compare''\n"

#. type: table
#: ../doc/gforth.texi:8592
msgid ""
"Compare two strings lexicographically, based on the values of the bytes in "
"the strings (i.e., case-sensitive and without locale-specific collation "
"order orderings). If they are equal, @i{n} is 0; if the first string is "
"smaller, @i{n} is -1; if the first string is larger, @i{n} is 1."
msgstr "連なり(string)内のバイトの値に基づいて、 2 つの連なり(strings)を(英語の)辞書順(lexicographically)に比較します(つまり、 英大文字と小文字が区別され、 ロケール固有の照合順序は無視されます)。 2つが等しい場合、 @i{n} は 0 です。 最初の連なり(string)が小さい場合、 @i{n} は -1 です。 最初の連なり(string)が大きい場合、 @i{n} は 1 です。"

#. type: findex
#: ../doc/gforth.texi:8593
#, no-wrap
msgid "pad ( @var{ -- c-addr   } ) core-ext"
msgstr "pad ( @var{ -- c-addr   } ) core-ext"

#. type: kindex
#: ../doc/gforth.texi:8594 ../doc/gforth.texi:8595
#, no-wrap
msgid "pad"
msgstr "pad"

#. type: format
#: ../doc/gforth.texi:8598
#, no-wrap
msgid "@code{pad} ( @i{-- c-addr  }) core-ext ``pad''\n"
msgstr "@code{pad} ( @i{-- c-addr  }) core-ext ``pad''\n"

#. type: table
#: ../doc/gforth.texi:8602
msgid ""
"@var{c-addr} is the address of a transient region that can be used as "
"temporary data storage. At least 84 characters of space is available."
msgstr "@var{c-addr} は、 一時的なデータ・ストレージとして使用できる一時領域のアドレスです。 少なくとも 84 文字分の空間が使用可能です。"

#. type: node
#: ../doc/gforth.texi:8619 ../doc/gforth.texi:8620 ../doc/gforth.texi:8658
#, no-wrap
msgid "Characters"
msgstr "Characters"

#. type: node
#: ../doc/gforth.texi:8619 ../doc/gforth.texi:8658 ../doc/gforth.texi:8659
#: ../doc/gforth.texi:8685
#, no-wrap
msgid "String representations"
msgstr "String representations"

#. type: cindex
#: ../doc/gforth.texi:8621
#, no-wrap
msgid "Characters - chars/bytes vs. extended characters"
msgstr "Characters - chars/bytes vs. extended characters"

#. type: cindex
#: ../doc/gforth.texi:8622
#, no-wrap
msgid "character encoding"
msgstr "character encoding"

#. type: table
#: ../doc/gforth.texi:8626
msgid ""
"Forth supports chars (aka bytes), used by words such as @code{c@@}; these "
"can be used to represent an ASCII character."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8630
msgid ""
"Forth also supports extended characters, which may be represented by a "
"sequence of several bytes (i.e., several chars).  A common character "
"encoding is the UTF-8 representation of Unicode."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8638
msgid ""
"In general, most code does not have to worry about extended characters: In "
"the string representation it does not matter whether a byte is a part of an "
"extended character, or it is a character by itself, and words that consume "
"chars (like @code{emit}) also work when the extended character is "
"transferred as a sequence of chars.  Forth still provides words for dealing "
"with extended characters (@pxref{Xchars and Unicode})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8644
msgid ""
"In Unicode terms, chars are @i{code units}, whereas extended characters are "
"@i{code points}.  Note that an Unicode @i{abstract character} can consist of "
"a sequence of code points, but Forth (like other programming languages) has "
"no data type for individual abstract characters; of course, they can be "
"represented as strings."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8647
msgid ""
"You can use the usual integer words on chars and Xchars on the stack, but "
"Gforth also has some words for dealing with chars on the stack:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8648
#, no-wrap
msgid "toupper ( @var{ c1 -- c2  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8649 ../doc/gforth.texi:8650
#, no-wrap
msgid "toupper"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8653
#, no-wrap
msgid "@code{toupper} ( @i{c1 -- c2 }) gforth-0.2 ``toupper''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8656
msgid ""
"If @i{c1} is a lower-case ASCII character, @i{c2} is the equivalent upper-"
"case character, otherwise @i{c2} is @i{c1}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:8658 ../doc/gforth.texi:8685 ../doc/gforth.texi:8879
#, no-wrap
msgid "String and character literals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:8660
#, no-wrap
msgid "strings - see character strings"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:8661
#, no-wrap
msgid "character strings - representations"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:8662
#, no-wrap
msgid "counted strings"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8670
msgid ""
"Forth commonly represents strings as cell pair @i{c-addr u} on the stack; "
"@i{u} is the length of the string in bytes (aka chars), and @i{c-addr} is "
"the address of the first byte of the string.  Note that a code point may be "
"represented by a sequence of several chars in the string (and a Unicode "
"``abstract character'' may consist of several code points).  @xref{String "
"words}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8675
msgid ""
"Another string representation is used with the string library of words "
"containing @code{$}.  It represents the string on the stack through the "
"address of a cell-sized string handle, which can be located in, e.g., a "
"variable.  @xref{$tring words}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8684
msgid ""
"A legacy string representation are @dfn{counted strings}, represented on the "
"stack by @i{c-addr}. The char addressed by @i{c-addr} contains a character-"
"count, @i{n}, of the string and the string occupies the subsequent @i{n} "
"char addresses in memory.  Counted strings are limited to 255 bytes in "
"length.  While counted strings may look attractive due to needing only one "
"stack item, due to their limitations we recommend avoiding them, especially "
"as input parameters of words.  @xref{Counted string words}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:8685 ../doc/gforth.texi:8879 ../doc/gforth.texi:8880
#: ../doc/gforth.texi:9087
#, no-wrap
msgid "String words"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:8686
#, no-wrap
msgid "String and Character literals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:8687
#, no-wrap
msgid "character literals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:8688
#, no-wrap
msgid "string literals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:8689
#, no-wrap
msgid "literals for characters and strings"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8695
msgid ""
"The nicest way to write a string literal is to write it as "
"@code{\"@i{STRING}\"}.  You can use the same \\-escapes inside as for "
"@code{s\\\"}.  However, this way is non-standard, so you may want to use one "
"of the following words for improved portability:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8696
#, no-wrap
msgid "s\\\" ( @var{ compilation 'ccc\"' -- ; run-time -- c-addr u   } ) core-ext,file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8697 ../doc/gforth.texi:8698
#, no-wrap
msgid "s\\\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:8701
#, no-wrap
msgid "@code{s\\\"} ( @i{compilation 'ccc\"' -- ; run-time -- c-addr u  }) core-ext,file-ext ``s-backslash-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8721
msgid ""
"Like @code{S\"}, but translates C-like \\-escape-sequences, as follows: "
"@code{\\a} BEL (alert), @code{\\b} BS, @code{\\e} ESC (not in C99), "
"@code{\\f} FF, @code{\\n} newline, @code{\\r} CR, @code{\\t} HT, @code{\\v} "
"VT, @code{\\\"} \", @code{\\\\} \\, @code{\\}[0-7]@{1,3@} octal numerical "
"character value (non-standard), @code{\\x}[0-9a-f]@{0,2@} hex numerical "
"character value (standard only with two digits), @code{\\u}[0-9a-f]@{4@} for "
"unicode codepoints (auto-merges surrogate pairs), @code{\\U}[0-9a-f]@{8@} "
"for extended unicode code points; a @code{\\} before any other character is "
"reserved.  @* Note that @code{\\x}XX produces raw bytes, while @code{\\u}"
"XXXX and @code{\\U}XXXXXXXX produce code points for the current encoding.  E."
"g., if we use UTF-8 encoding and want to encode @\"a (code point U+00E4), "
"you can write the letter @\"a itself, or write @code{\\xc3\\xa4} (the UTF-8 "
"bytes for this code point), @code{\\u00e4}, or @code{\\U000000e4}.  @* Note "
"that, unlike in C, @code{\\n} produces the preferred newline sequence for "
"the host OS, which may consist of several chars.  I.e., @code{\"\\n\"} is "
"equivalent to @code{newline}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8723
#, no-wrap
msgid "S\" ( @var{ compilation 'ccc\"' -- ; run-time -- c-addr u   } ) core,file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8724 ../doc/gforth.texi:8725
#, no-wrap
msgid "S\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:8728
#, no-wrap
msgid "@code{S\"} ( @i{compilation 'ccc\"' -- ; run-time -- c-addr u  }) core,file ``s-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8740
msgid ""
"Compilation: Parse a string @i{ccc} delimited by a @code{\"} (double quote). "
"At run-time, return the length, @i{u}, and the start address, @i{c-addr} of "
"the string. Interpretation: parse the string as before, and return @i{c-"
"addr}, @i{u}. Gforth @code{allocate}s the string. The resulting memory leak "
"is usually not a problem; the exception is if you create strings containing "
"@code{S\"} and @code{evaluate} them; then the leak is not bounded by the "
"size of the interpreted files and you may want to @code{free} the strings.  "
"Forth-2012 only guarantees two buffers of 80 characters each, so in standard "
"programs you should assume that the string lives only until the next-but-one "
"@code{s\"}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8747
msgid ""
"Likewise, You can get the code @i{xc} of a character @i{C} with "
"@code{'@i{C}'}.  This way has been standardized since Forth-2012.  An older "
"way to get it is to use one of the following words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8748
#, no-wrap
msgid "char ( @var{ '<spaces>ccc' -- c   } ) core,xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8749 ../doc/gforth.texi:8750
#, no-wrap
msgid "char"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8753
#, no-wrap
msgid "@code{char} ( @i{'<spaces>ccc' -- c  }) core,xchar-ext ``char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8756
msgid ""
"Skip leading spaces. Parse the string @i{ccc} and return @i{c}, the display "
"code representing the first character of @i{ccc}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8758
#, no-wrap
msgid "[char] ( @var{ compilation '<spaces>ccc' -- ; run-time -- c   } ) core,xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8759 ../doc/gforth.texi:8760
#, no-wrap
msgid "[char]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8763
#, no-wrap
msgid "@code{[char]} ( @i{compilation '<spaces>ccc' -- ; run-time -- c  }) core,xchar-ext ``bracket-char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8768
msgid ""
"Compilation: skip leading spaces. Parse the string @i{ccc}. Run-time: return "
"@i{c}, the display code representing the first character of @i{ccc}.  "
"Interpretation semantics for this word are undefined."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8773
msgid ""
"You usually use @code{char} outside and @code{[char]} inside colon "
"definitions, or you just use @code{'@i{C}'}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8775
msgid "Note that, e.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:8778
#, no-wrap
msgid "\"C\" type\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8782
msgid "is (slightly) more efficient than"
msgstr ""

#. type: example
#: ../doc/gforth.texi:8785
#, no-wrap
msgid "'C' xemit\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8792
msgid ""
"because the latter converts the code point into a sequence of bytes and "
"individually @code{emit}s them.  Similarly, dealing with general characters "
"is usually more efficient when representing them as strings rather than code "
"points."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8795
msgid ""
"There are the following words for producing commonly-used characters and "
"strings that cannot be produced with @code{S\"} or @code{'@i{C}'}:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8796
#, no-wrap
msgid "newline ( @var{ -- c-addr u  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8797 ../doc/gforth.texi:8798
#, no-wrap
msgid "newline"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8801
#, no-wrap
msgid "@code{newline} ( @i{-- c-addr u }) gforth-0.5 ``newline''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8803
msgid "String containing the newline sequence of the host OS"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8804
#, no-wrap
msgid "bl ( @var{ -- c-char   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8805 ../doc/gforth.texi:8806
#, no-wrap
msgid "bl"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8809
#, no-wrap
msgid "@code{bl} ( @i{-- c-char  }) core ``b-l''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8811
msgid "@i{c-char} is the character value for a space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8813
#, no-wrap
msgid "#tab ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8814 ../doc/gforth.texi:8815
#, no-wrap
msgid "#tab"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8818
#, no-wrap
msgid "@code{#tab} ( @i{-- c  }) gforth-0.2 ``number-tab''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8820
#, no-wrap
msgid "#lf ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8821 ../doc/gforth.texi:8822
#, no-wrap
msgid "#lf"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8825
#, no-wrap
msgid "@code{#lf} ( @i{-- c  }) gforth-0.2 ``number-l-f''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8827
#, no-wrap
msgid "#cr ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8828 ../doc/gforth.texi:8829
#, no-wrap
msgid "#cr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8832
#, no-wrap
msgid "@code{#cr} ( @i{-- c  }) gforth-0.2 ``number-c-r''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8834
#, no-wrap
msgid "#ff ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8835 ../doc/gforth.texi:8836
#, no-wrap
msgid "#ff"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8839
#, no-wrap
msgid "@code{#ff} ( @i{-- c  }) gforth-0.2 ``number-f-f''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8841
#, no-wrap
msgid "#bs ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8842 ../doc/gforth.texi:8843
#, no-wrap
msgid "#bs"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8846
#, no-wrap
msgid "@code{#bs} ( @i{-- c  }) gforth-0.2 ``number-b-s''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8848
#, no-wrap
msgid "#del ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8849 ../doc/gforth.texi:8850
#, no-wrap
msgid "#del"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8853
#, no-wrap
msgid "@code{#del} ( @i{-- c  }) gforth-0.2 ``number-del''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8855
#, no-wrap
msgid "#bell ( @var{ -- c   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8856 ../doc/gforth.texi:8857
#, no-wrap
msgid "#bell"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8860
#, no-wrap
msgid "@code{#bell} ( @i{-- c  }) gforth-0.2 ``number-bell''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8862
#, no-wrap
msgid "#esc ( @var{ -- c   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8863 ../doc/gforth.texi:8864
#, no-wrap
msgid "#esc"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8867
#, no-wrap
msgid "@code{#esc} ( @i{-- c  }) gforth-0.5 ``number-esc''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8869
#, no-wrap
msgid "#eof ( @var{ -- c   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8870 ../doc/gforth.texi:8871
#, no-wrap
msgid "#eof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8874
#, no-wrap
msgid "@code{#eof} ( @i{-- c  }) gforth-0.7 ``number-e-o-f''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8876
msgid "actually EOT (ASCII code 4 aka @code{^D})"
msgstr ""

#. type: node
#: ../doc/gforth.texi:8879 ../doc/gforth.texi:9087 ../doc/gforth.texi:9088
#: ../doc/gforth.texi:9494
#, no-wrap
msgid "$tring words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8886
msgid ""
"Words that are used for memory blocks are also useful for strings, so for "
"words that move, copy, compare and search strings, see @ref{Memory Blocks}. "
"For words that display characters and strings, see @ref{Displaying "
"characters and strings}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:8888
msgid "The following words work on previously existing strings:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8889
#, no-wrap
msgid "str= ( @var{ c-addr1 u1 c-addr2 u2 -- f   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8890 ../doc/gforth.texi:8891
#, no-wrap
msgid "str="
msgstr ""

#. type: format
#: ../doc/gforth.texi:8894
#, no-wrap
msgid "@code{str=} ( @i{c-addr1 u1 c-addr2 u2 -- f  }) gforth-0.6 ``str-equals''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8896
#, no-wrap
msgid "str< ( @var{ c-addr1 u1 c-addr2 u2 -- f   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8897 ../doc/gforth.texi:8898
#, no-wrap
msgid "str<"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8901
#, no-wrap
msgid "@code{str<} ( @i{c-addr1 u1 c-addr2 u2 -- f  }) gforth-0.6 ``str-less-than''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8903
#, no-wrap
msgid "string-prefix? ( @var{ c-addr1 u1 c-addr2 u2 -- f   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8904 ../doc/gforth.texi:8905
#, no-wrap
msgid "string-prefix?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8908
#, no-wrap
msgid "@code{string-prefix?} ( @i{c-addr1 u1 c-addr2 u2 -- f  }) gforth-0.6 ``string-prefix-question''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8910
msgid "Is @var{c-addr2 u2} a prefix of @var{c-addr1 u1}?"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8912
#, no-wrap
msgid "string-suffix? ( @var{ c-addr1 u1 c-addr2 u2 -- f   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8913 ../doc/gforth.texi:8914
#, no-wrap
msgid "string-suffix?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8917
#, no-wrap
msgid "@code{string-suffix?} ( @i{c-addr1 u1 c-addr2 u2 -- f  }) gforth-1.0 ``string-suffix-question''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8919
msgid "Is @var{c-addr2 u2} a suffix of @var{c-addr1 u1}?"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8921
#, no-wrap
msgid "search ( @var{ c-addr1 u1 c-addr2 u2 -- c-addr3 u3 flag   } ) string"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8922 ../doc/gforth.texi:8923
#, no-wrap
msgid "search"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8926
#, no-wrap
msgid "@code{search} ( @i{c-addr1 u1 c-addr2 u2 -- c-addr3 u3 flag  }) string ``search''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8931
msgid ""
"Search the string specified by @i{c-addr1, u1} for the string specified by "
"@i{c-addr2, u2}. If @i{flag} is true: match was found at @i{c-addr3} with "
"@i{u3} characters remaining. If @i{flag} is false: no match was found; @i{c-"
"addr3, u3} are equal to @i{c-addr1, u1}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8933
#, no-wrap
msgid "scan ( @var{ c-addr1 u1 c -- c-addr2 u2  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8934 ../doc/gforth.texi:8935
#, no-wrap
msgid "scan"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8938
#, no-wrap
msgid "@code{scan} ( @i{c-addr1 u1 c -- c-addr2 u2 }) gforth-0.2 ``scan''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8942
msgid ""
"Skip all characters not equal to c.  The result starts with c or is empty.  "
"@code{Scan} is limited to single-byte (ASCII) characters.  Use @code{search} "
"to search for multi-byte characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8943
#, no-wrap
msgid "scan-back ( @var{ c-addr u1 c -- c-addr u2   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8944 ../doc/gforth.texi:8945
#, no-wrap
msgid "scan-back"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8948
#, no-wrap
msgid "@code{scan-back} ( @i{c-addr u1 c -- c-addr u2  }) gforth-0.7 ``scan-back''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8950
#, no-wrap
msgid "skip ( @var{ c-addr1 u1 c -- c-addr2 u2  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8951 ../doc/gforth.texi:8952
#, no-wrap
msgid "skip"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8955
#, no-wrap
msgid "@code{skip} ( @i{c-addr1 u1 c -- c-addr2 u2 }) gforth-0.2 ``skip''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8959
msgid ""
"Skip all characters equal to c.  The result starts with the first non-c "
"character, or it is empty.  @code{Scan} is limited to single-byte (ASCII) "
"characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8960
#, no-wrap
msgid "-trailing ( @var{ c_addr u1 -- c_addr u2   } ) string"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8961 ../doc/gforth.texi:8962
#, no-wrap
msgid "-trailing"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8965
#, no-wrap
msgid "@code{-trailing} ( @i{c_addr u1 -- c_addr u2  }) string ``dash-trailing''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8968
msgid ""
"Adjust the string specified by @i{c-addr, u1} to remove all trailing spaces. "
"@i{u2} is the length of the modified string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8970
#, no-wrap
msgid "/string ( @var{ c-addr1 u1 n -- c-addr2 u2  } ) string"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8971 ../doc/gforth.texi:8972
#, no-wrap
msgid "/string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8975
#, no-wrap
msgid "@code{/string} ( @i{c-addr1 u1 n -- c-addr2 u2 }) string ``slash-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8978
msgid ""
"Adjust the string specified by @i{c-addr1, u1} to remove @i{n} characters "
"from the start of the string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8979
#, no-wrap
msgid "safe/string ( @var{ c-addr1 u1 n -- c-addr2 u2  } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8980 ../doc/gforth.texi:8981
#, no-wrap
msgid "safe/string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8984
#, no-wrap
msgid "@code{safe/string} ( @i{c-addr1 u1 n -- c-addr2 u2 }) gforth-1.0 ``safe-slash-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8988
msgid ""
"Adjust the string specified by @i{c-addr1, u1} to remove @i{n} characters "
"from the start of the string.  Unlike @code{/string}, @code{safe/string} "
"removes at least 0 and at most @i{u1} characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:8989
#, no-wrap
msgid "cstring>sstring ( @var{ c-addr -- c-addr u   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:8990 ../doc/gforth.texi:8991
#, no-wrap
msgid "cstring>sstring"
msgstr ""

#. type: format
#: ../doc/gforth.texi:8994
#, no-wrap
msgid "@code{cstring>sstring} ( @i{c-addr -- c-addr u  }) gforth-0.2 ``cstring-to-sstring''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:8997
msgid ""
"@i{C-addr} is the start address of a zero-terminated string, @i{u} is its "
"length."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9003
msgid ""
"The following words compare case-insensitively for ASCII characters, but "
"case-sensitively for non-ASCII characters (like in lookup in wordlists)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9004
#, no-wrap
msgid "capscompare ( @var{ c-addr1 u1 c-addr2 u2 -- n  } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9005 ../doc/gforth.texi:9006
#, no-wrap
msgid "capscompare"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9009
#, no-wrap
msgid "@code{capscompare} ( @i{c-addr1 u1 c-addr2 u2 -- n }) gforth-0.7 ``capscompare''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9016
msgid ""
"Compare two strings lexicographically, based on the values of the bytes in "
"the strings, but comparing ASCII characters case-insensitively, and non-"
"ASCII characters case-sensitively and without locale-specific collation "
"order. If they are equal, @i{n} is 0; if the first string is smaller, @i{n} "
"is -1; if the first string is larger, @i{n} is 1."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9017
#, no-wrap
msgid "capsstring-prefix? ( @var{ c-addr1 u1 c-addr2 u2 -- f   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9018 ../doc/gforth.texi:9019
#, no-wrap
msgid "capsstring-prefix?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9022
#, no-wrap
msgid "@code{capsstring-prefix?} ( @i{c-addr1 u1 c-addr2 u2 -- f  }) gforth-1.0 ``capsstring-prefix?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9025
msgid ""
"Like @code{string-prefix?}, but case-insensitive for ASCII characters: Is "
"@var{c-addr2 u2} a prefix of @var{c-addr1 u1}?"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9027
#, no-wrap
msgid "capssearch ( @var{ c-addr1 u1 c-addr2 u2 -- c-addr3 u3 flag   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9028 ../doc/gforth.texi:9029
#, no-wrap
msgid "capssearch"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9032
#, no-wrap
msgid "@code{capssearch} ( @i{c-addr1 u1 c-addr2 u2 -- c-addr3 u3 flag  }) gforth-1.0 ``capssearch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9036
msgid ""
"Like @code{search}, but case-insensitive for ASCII characters: Search for "
"@i{c-addr2 u2} in @i{c-addr1 u1}; @i{flag} is true if found."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9040
msgid "The following words create or extend strings on the heap:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9041
#, no-wrap
msgid "s+ ( @var{ c-addr1 u1 c-addr2 u2 -- c-addr u   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9042 ../doc/gforth.texi:9043
#, no-wrap
msgid "s+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9046
#, no-wrap
msgid "@code{s+} ( @i{c-addr1 u1 c-addr2 u2 -- c-addr u  }) gforth-0.7 ``s-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9050
msgid ""
"@i{c-addr u} is a newly @code{allocate}d string that contains the "
"concatenation of @i{c-addr1 u1} (first) and @i{c-addr2 u2} (second)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9052
#, no-wrap
msgid "append ( @var{ c-addr1 u1 c-addr2 u2 -- c-addr u   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9053 ../doc/gforth.texi:9054
#, no-wrap
msgid "append"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9057
#, no-wrap
msgid "@code{append} ( @i{c-addr1 u1 c-addr2 u2 -- c-addr u  }) gforth-0.7 ``append''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9062
msgid ""
"@i{C-addr u} is the concatenation of @i{c-addr1 u1} (first) and @i{c-addr2 "
"u2} (second).  @i{c-addr1 u1} is an @code{allocate}d string, and "
"@code{append} @code{resize}s it (possibly moving it to a new address) to "
"accomodate @i{u} characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9064
#, no-wrap
msgid ">string-execute ( @var{ ... xt -- ... addr u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9065 ../doc/gforth.texi:9066
#, no-wrap
msgid ">string-execute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9069
#, no-wrap
msgid "@code{>string-execute} ( @i{... xt -- ... addr u  }) gforth-1.0 ``>string-execute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9075
msgid ""
"execute xt while the standard output (@code{type}, @code{emit}, and "
"everything that uses them) is redirected to a string.  The resulting string "
"is addr u, which is in @code{allocate}d memory; it is the responsibility of "
"the caller of @code{>string-execute} to @code{free} this string."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9079
msgid "One could define @code{s+} using @code{>string-execute}, as follows:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9082
msgid ""
": s+ ( c-addr1 u1 c-addr2 u2 -- c-addr u )  [: 2swap type type ;] >string-"
"execute ;"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9086
msgid ""
"For concatenating just two strings @code{>string-execute} is inefficient, "
"but for concatenating many strings @code{>string-execute} can be more "
"efficient."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9089
#, no-wrap
msgid "string words with $"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9095
msgid ""
"The following string library stores strings in ordinary cell-size variables "
"(string handles).  These handles contain a pointer to a cell-counted string "
"allocated from the heap.  The string library originates from bigFORTH."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9103
msgid ""
"Because there is only one permanent reference to the contents (the one in "
"the handle), the string can be relocated or deleted without worrying about "
"dangling references; this requires that the programmer uses references "
"produced by, e.g., @code{$@@} only for temporary purposes, i.e., these "
"references are not passed out, e.g., as return values or stored in global "
"memory, and words that may change the handle are not called while these "
"references exist."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9108
msgid ""
"This library is complemented by the cell-pair representation: You use the "
"$tring words for variable strings which are cumbersome with the c-addr u "
"representation.  You use the cell-pair representation for processing (e.g., "
"inspecting) strings while they do not change."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9109
#, no-wrap
msgid "$! ( @var{ addr1 u $addr --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9110 ../doc/gforth.texi:9111
#, no-wrap
msgid "$!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9114
#, no-wrap
msgid "@code{$!} ( @i{addr1 u $addr --  }) gforth-0.7 ``string-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9117
msgid ""
"stores a newly allocated string buffer at an address, frees the previous "
"buffer if necessary."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9119
#, no-wrap
msgid "$@@ ( @var{ $addr -- addr2 u   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9120 ../doc/gforth.texi:9121
#, no-wrap
msgid "$@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9124
#, no-wrap
msgid "@code{$@@} ( @i{$addr -- addr2 u  }) gforth-0.7 ``string-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9126
msgid "returns the stored string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9128
#, no-wrap
msgid "$@@len ( @var{ $addr -- u   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9129 ../doc/gforth.texi:9130
#, no-wrap
msgid "$@@len"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9133
#, no-wrap
msgid "@code{$@@len} ( @i{$addr -- u  }) gforth-0.7 ``string-fetch-len''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9135
msgid "returns the length of the stored string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9137
#, no-wrap
msgid "$!len ( @var{ u $addr --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9138 ../doc/gforth.texi:9139
#, no-wrap
msgid "$!len"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9142
#, no-wrap
msgid "@code{$!len} ( @i{u $addr --  }) gforth-0.7 ``string-store-len''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9146
msgid ""
"changes the length of the stored string.  Therefore we must change the "
"memory area and adjust address and count cell as well."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9148
#, no-wrap
msgid "$+!len ( @var{ u $addr -- addr   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9149 ../doc/gforth.texi:9150
#, no-wrap
msgid "$+!len"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9153
#, no-wrap
msgid "@code{$+!len} ( @i{u $addr -- addr  }) gforth-1.0 ``string-plus-store-len''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9156
msgid ""
"make room for u bytes at the end of the memory area referenced by $addr; "
"addr is the address of the first of these bytes."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9158
#, no-wrap
msgid "$del ( @var{ addr off u --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9159 ../doc/gforth.texi:9160
#, no-wrap
msgid "$del"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9163
#, no-wrap
msgid "@code{$del} ( @i{addr off u --  }) gforth-0.7 ``string-del''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9165
msgid "deletes @var{u} bytes from a string with offset @var{off}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9167
#, no-wrap
msgid "$ins ( @var{ addr1 u $addr off --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9168 ../doc/gforth.texi:9169
#, no-wrap
msgid "$ins"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9172
#, no-wrap
msgid "@code{$ins} ( @i{addr1 u $addr off --  }) gforth-0.7 ``string-ins''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9174
msgid "inserts a string at offset @var{off}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9176
#, no-wrap
msgid "$+! ( @var{ addr1 u $addr --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9177 ../doc/gforth.texi:9178
#, no-wrap
msgid "$+!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9181
#, no-wrap
msgid "@code{$+!} ( @i{addr1 u $addr --  }) gforth-0.7 ``string-plus-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9183
msgid "appends a string to another."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9185
#, no-wrap
msgid "c$+! ( @var{ char $addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9186 ../doc/gforth.texi:9187
#, no-wrap
msgid "c$+!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9190
#, no-wrap
msgid "@code{c$+!} ( @i{char $addr --  }) gforth-1.0 ``c-string-plus-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9192
msgid "append a character to a string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9194
#, no-wrap
msgid "$free ( @var{ $addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9195 ../doc/gforth.texi:9196
#, no-wrap
msgid "$free"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9199
#, no-wrap
msgid "@code{$free} ( @i{$addr --  }) gforth-1.0 ``string-free''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9201
msgid "free the string pointed to by addr, and set addr to 0"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9203
#, no-wrap
msgid "$init ( @var{ $addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9204 ../doc/gforth.texi:9205
#, no-wrap
msgid "$init"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9208
#, no-wrap
msgid "@code{$init} ( @i{$addr --  }) gforth-1.0 ``string-init''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9210
msgid "store an empty string there, regardless of what was in before"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9212
#, no-wrap
msgid "$split ( @var{ addr u char -- addr1 u1 addr2 u2   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9213 ../doc/gforth.texi:9214
#, no-wrap
msgid "$split"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9217
#, no-wrap
msgid "@code{$split} ( @i{addr u char -- addr1 u1 addr2 u2  }) gforth-0.7 ``string-split''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9220
msgid ""
"divides a string into two, with one char as separator (e.g. '?' for "
"arguments in an HTML query)"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9222
#, no-wrap
msgid "$iter ( @var{ .. $addr char xt -- ..   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9223 ../doc/gforth.texi:9224
#, no-wrap
msgid "$iter"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9227
#, no-wrap
msgid "@code{$iter} ( @i{.. $addr char xt -- ..  }) gforth-0.7 ``string-iter''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9232
msgid ""
"takes a string apart piece for piece, also with a character as separator. "
"For each part a passed token will be called. With this you can take apart "
"arguments -- separated with '&' -- at ease."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9234
#, no-wrap
msgid "$over ( @var{ addr u $addr off --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9235 ../doc/gforth.texi:9236
#, no-wrap
msgid "$over"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9239
#, no-wrap
msgid "@code{$over} ( @i{addr u $addr off --  }) gforth-1.0 ``string-over''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9241
msgid "overwrite string at offset off with addr u"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9243
#, no-wrap
msgid "$exec ( @var{ xt addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9244 ../doc/gforth.texi:9245
#, no-wrap
msgid "$exec"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9248
#, no-wrap
msgid "@code{$exec} ( @i{xt addr --  }) gforth-1.0 ``string-exec''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9251
msgid ""
"execute xt while the standard output (TYPE, EMIT, and everything that uses "
"them) is appended to the string variable addr."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9253
#, no-wrap
msgid "$tmp ( @var{ xt -- addr u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9254 ../doc/gforth.texi:9255
#, no-wrap
msgid "$tmp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9258
#, no-wrap
msgid "@code{$tmp} ( @i{xt -- addr u  }) gforth-1.0 ``string-t-m-p''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9260
msgid "generate a temporary string from the output of a word"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9262
#, no-wrap
msgid "$. ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9263 ../doc/gforth.texi:9264
#, no-wrap
msgid "$."
msgstr ""

#. type: format
#: ../doc/gforth.texi:9267
#, no-wrap
msgid "@code{$.} ( @i{addr --  }) gforth-1.0 ``string-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9269
msgid "print a string, shortcut"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9271
#, no-wrap
msgid "$slurp ( @var{ fid addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9272 ../doc/gforth.texi:9273
#, no-wrap
msgid "$slurp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9276
#, no-wrap
msgid "@code{$slurp} ( @i{fid addr --  }) gforth-1.0 ``string-slurp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9279
msgid ""
"Read the file @i{fid} until the end (without closing it) and put the read "
"data into the string at @i{addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9281
#, no-wrap
msgid "$slurp-file ( @var{ c-addr u addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9282 ../doc/gforth.texi:9283
#, no-wrap
msgid "$slurp-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9286
#, no-wrap
msgid "@code{$slurp-file} ( @i{c-addr u addr --  }) gforth-1.0 ``string-slurp-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9289
msgid ""
"Put all the data in the file named @i{c-addr u} into the string at @i{addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9291
#, no-wrap
msgid "$+slurp ( @var{ fid addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9292 ../doc/gforth.texi:9293
#, no-wrap
msgid "$+slurp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9296
#, no-wrap
msgid "@code{$+slurp} ( @i{fid addr --  }) gforth-1.0 ``string-plus-slurp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9299
msgid ""
"Read the file @i{fid} until the end (without closing it) and append the read "
"data to the string at @i{addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9301
#, no-wrap
msgid "$+slurp-file ( @var{ c-addr u addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9302 ../doc/gforth.texi:9303
#, no-wrap
msgid "$+slurp-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9306
#, no-wrap
msgid "@code{$+slurp-file} ( @i{c-addr u addr --  }) gforth-1.0 ``string-plus+slurp-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9309
msgid ""
"Append all the data in the file named @i{c-addr u} to the string at @i{addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9311
#, no-wrap
msgid "$[] ( @var{ u $[]addr -- addr'   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9312 ../doc/gforth.texi:9313
#, no-wrap
msgid "$[]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9316
#, no-wrap
msgid "@code{$[]} ( @i{u $[]addr -- addr'  }) gforth-1.0 ``string-array''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9319
msgid ""
"@i{Addr'} is the address of the @i{u}th element of the string array "
"@i{$[]addr}.  The array is resized if needed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9321
#, no-wrap
msgid "$[]! ( @var{ c-addr u n $[]addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9322 ../doc/gforth.texi:9323
#, no-wrap
msgid "$[]!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9326
#, no-wrap
msgid "@code{$[]!} ( @i{c-addr u n $[]addr --  }) gforth-1.0 ``string-array-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9329
msgid ""
"Store string @i{c-addr y} into the string array @i{$[]addr} at index @i{n}.  "
"The array is resized if needed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9331
#, no-wrap
msgid "$[]+! ( @var{ c-addr u n $[]addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9332 ../doc/gforth.texi:9333
#, no-wrap
msgid "$[]+!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9336
#, no-wrap
msgid "@code{$[]+!} ( @i{c-addr u n $[]addr --  }) gforth-1.0 ``string-array-plus-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9340
msgid ""
"Append the string @i{c-addr u} to the string at index @i{n}.  The array is "
"resized if needed.  Don't confuse this with @code{$+[]!}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9342
#, no-wrap
msgid "$+[]! ( @var{ c-addr u $[]addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9343 ../doc/gforth.texi:9344
#, no-wrap
msgid "$+[]!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9347
#, no-wrap
msgid "@code{$+[]!} ( @i{c-addr u $[]addr --  }) gforth-1.0 ``string-append-array''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9350
msgid ""
"Store the string @i{c-addr u} as the new last element of string array "
"@i{$[]addr}.  The array is resized if needed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9352
#, no-wrap
msgid "$[]@@ ( @var{ n $[]addr -- addr u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9353 ../doc/gforth.texi:9354
#, no-wrap
msgid "$[]@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9357
#, no-wrap
msgid "@code{$[]@@} ( @i{n $[]addr -- addr u  }) gforth-1.0 ``string-array-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9360
msgid ""
"fetch a string from array index @i{n} --- return the zero string if empty, "
"and don't accidentally grow the array."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9362
#, no-wrap
msgid "$[]# ( @var{ addr -- len   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9363 ../doc/gforth.texi:9364
#, no-wrap
msgid "$[]#"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9367
#, no-wrap
msgid "@code{$[]#} ( @i{addr -- len  }) gforth-1.0 ``string-array-num''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9369
msgid "return the number of elements in an array"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9371
#, no-wrap
msgid "$[]map ( @var{ addr xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9372 ../doc/gforth.texi:9373
#, no-wrap
msgid "$[]map"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9376
#, no-wrap
msgid "@code{$[]map} ( @i{addr xt --  }) gforth-1.0 ``string-array-map''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9379
msgid ""
"execute @var{xt} for all elements of the string array @var{addr}.  xt is "
"@var{( addr u -- )}, getting one string at a time"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9381
#, no-wrap
msgid "$[]slurp ( @var{ fid addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9382 ../doc/gforth.texi:9383
#, no-wrap
msgid "$[]slurp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9386
#, no-wrap
msgid "@code{$[]slurp} ( @i{fid addr --  }) gforth-1.0 ``string-array-slurp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9388
msgid "slurp a file @var{fid} line by line into a string array @var{addr}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9390
#, no-wrap
msgid "$[]slurp-file ( @var{ addr u $addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9391 ../doc/gforth.texi:9392
#, no-wrap
msgid "$[]slurp-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9395
#, no-wrap
msgid "@code{$[]slurp-file} ( @i{addr u $addr --  }) gforth-1.0 ``string-array-slurp-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9397
msgid ""
"slurp a named file @var{addr u} line by line into a string array @var{$addr}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9399
#, no-wrap
msgid "$[]. ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9400 ../doc/gforth.texi:9401
#, no-wrap
msgid "$[]."
msgstr ""

#. type: format
#: ../doc/gforth.texi:9404
#, no-wrap
msgid "@code{$[].} ( @i{addr --  }) gforth-1.0 ``string-array-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9406
msgid "print all array entries"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9408
#, no-wrap
msgid "$[]free ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9409 ../doc/gforth.texi:9410
#, no-wrap
msgid "$[]free"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9413
#, no-wrap
msgid "@code{$[]free} ( @i{addr --  }) gforth-1.0 ``string-array-free''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9417
msgid ""
"addr contains the address of a cell-counted string that contains the "
"addresses of a number of cell-counted strings; $[]free frees these strings, "
"frees the array, and sets addr to 0"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9419
#, no-wrap
msgid "$save ( @var{ $addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9420 ../doc/gforth.texi:9421
#, no-wrap
msgid "$save"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9424
#, no-wrap
msgid "@code{$save} ( @i{$addr --  }) gforth-1.0 ``string-save''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9426
msgid "push string to dictionary for savesys"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9428
#, no-wrap
msgid "$[]save ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9429 ../doc/gforth.texi:9430
#, no-wrap
msgid "$[]save"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9433
#, no-wrap
msgid "@code{$[]save} ( @i{addr --  }) gforth-1.0 ``string-array-save''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9435
msgid "push string array to dictionary for savesys"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9437
#, no-wrap
msgid "$boot ( @var{ $addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9438 ../doc/gforth.texi:9439
#, no-wrap
msgid "$boot"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9442
#, no-wrap
msgid "@code{$boot} ( @i{$addr --  }) gforth-1.0 ``string-boot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9445
msgid ""
"take string from dictionary to allocated memory.  clean dictionary "
"afterwards."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9447
#, no-wrap
msgid "$[]boot ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9448 ../doc/gforth.texi:9449
#, no-wrap
msgid "$[]boot"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9452
#, no-wrap
msgid "@code{$[]boot} ( @i{addr --  }) gforth-1.0 ``string-array-boot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9454
msgid "take string array from dictionary to allocated memory"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9456
#, no-wrap
msgid "$saved ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9457 ../doc/gforth.texi:9458
#, no-wrap
msgid "$saved"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9461
#, no-wrap
msgid "@code{$saved} ( @i{addr --  }) gforth-1.0 ``string-saved''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9463 ../doc/gforth.texi:9472
msgid "mark an address as booted/saved"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9465
#, no-wrap
msgid "$[]saved ( @var{ addr --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9466 ../doc/gforth.texi:9467
#, no-wrap
msgid "$[]saved"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9470
#, no-wrap
msgid "@code{$[]saved} ( @i{addr --  }) gforth-1.0 ``string-array-saved''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9474
#, no-wrap
msgid "$Variable ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9475 ../doc/gforth.texi:9476
#, no-wrap
msgid "$Variable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9479
#, no-wrap
msgid "@code{$Variable} ( @i{--  }) gforth-1.0 ``string-variable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9481 ../doc/gforth.texi:9490
msgid "A string variable which is preserved across savesystem"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9483
#, no-wrap
msgid "$[]Variable ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9484 ../doc/gforth.texi:9485
#, no-wrap
msgid "$[]Variable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9488
#, no-wrap
msgid "@code{$[]Variable} ( @i{--  }) gforth-1.0 ``string-array-variable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9503
msgid ""
"Counted strings store the length as byte at the address pointed to, followed "
"by the bytes of the string.  Their possible length is severely limited, and "
"you cannot create a substring in-place without destroying the input string.  "
"Therefore we recommend against using counted strings.  Nevertheless, if you "
"have to deal with counted strings, here are some words for that:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9504
#, no-wrap
msgid "count ( @var{ c-addr1 -- c-addr2 u  } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9505 ../doc/gforth.texi:9506
#, no-wrap
msgid "count"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9509
#, no-wrap
msgid "@code{count} ( @i{c-addr1 -- c-addr2 u }) core ``count''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9512
msgid ""
"@i{c-addr2} is the first character and @i{u} the length of the counted "
"string at @i{c-addr1}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9517
msgid ""
"The following word has no useful interpretation semantics (unlike "
"@code{s\"}) and no interpretive counterpart (unlike @code{[char]}), so you "
"should use it only inside colon definitions (if at all):"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9518
#, no-wrap
msgid "C\" ( @var{ compilation \"ccc<quote>\" -- ; run-time  -- c-addr   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9519 ../doc/gforth.texi:9520
#, no-wrap
msgid "C\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:9523
#, no-wrap
msgid "@code{C\"} ( @i{compilation \"ccc<quote>\" -- ; run-time  -- c-addr  }) core-ext ``c-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9528
msgid ""
"Compilation: parse a string @i{ccc} delimited by a @code{\"} (double quote). "
"At run-time, return @i{c-addr} which specifies the counted string @i{ccc}.  "
"Interpretation semantics are undefined."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9532
msgid "doc-place"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9532
#, no-wrap
msgid "string, ( @var{ c-addr u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9533 ../doc/gforth.texi:9534
#, no-wrap
msgid "string,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9537
#, no-wrap
msgid "@code{string,} ( @i{c-addr u --  }) gforth-0.2 ``string,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9539
msgid "puts down string as cstring"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9544
#, no-wrap
msgid "control structures"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9551
msgid ""
"Control structures in Forth cannot be used interpretively, only in a colon "
"definition@footnote{To be precise, they have no interpretation semantics "
"(@pxref{Interpretation and Compilation Semantics}).}. We do not like this "
"limitation, but have not seen a satisfying way around it yet, although many "
"schemes have been proposed."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9565
#, no-wrap
msgid "selection control structures"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9566
#, no-wrap
msgid "control structures for selection"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9568
#, no-wrap
msgid "@code{IF} control structure"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9574
#, no-wrap
msgid ""
"@i{flag}\n"
"IF\n"
"  @i{code}\n"
"ENDIF\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9579
msgid ""
"If @i{flag} is non-zero (as far as @code{IF} etc. are concerned, a cell with "
"any bit set represents truth) @i{code} is executed."
msgstr ""

#. type: example
#: ../doc/gforth.texi:9587
#, no-wrap
msgid ""
"@i{flag}\n"
"IF\n"
"  @i{code1}\n"
"ELSE\n"
"  @i{code2}\n"
"ENDIF\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9591
msgid ""
"If @var{flag} is true, @i{code1} is executed, otherwise @i{code2} is "
"executed."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9598
msgid ""
"You can use @code{THEN} instead of @code{ENDIF}. Indeed, @code{THEN} is "
"standard, and @code{ENDIF} is not, although it is quite popular. We "
"recommend using @code{ENDIF}, because it is less confusing for people who "
"also know other languages (and is not prone to reinforcing negative "
"prejudices against Forth in these people). Adding @code{ENDIF} to a system "
"that only supplies @code{THEN} is simple:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9600
#, no-wrap
msgid ": ENDIF   POSTPONE then ; immediate\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9604
msgid ""
"[According to @cite{Webster's New Encyclopedic Dictionary}, @dfn{then "
"(adv.)} has the following meanings:"
msgstr ""

#. type: quotation
#: ../doc/gforth.texi:9607
msgid ""
"... 2b: following next after in order ... 3d: as a necessary consequence (if "
"you were there, then you saw them)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9610
msgid ""
"Forth's @code{THEN} has the meaning 2b, whereas @code{THEN} in Pascal and "
"many other programming languages has the meaning 3d.]"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9616
msgid ""
"Gforth also provides the words @code{?DUP-IF} and @code{?DUP-0=-IF}, so you "
"can avoid using @code{?dup}. Using these alternatives is also more efficient "
"than using @code{?dup}. Definitions in Standard Forth for @code{ENDIF}, "
"@code{?DUP-IF} and @code{?DUP-0=-IF} are provided in @file{compat/control."
"fs}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9617
#, no-wrap
msgid "@code{CASE} control structure"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9626
#, no-wrap
msgid ""
"@i{x}\n"
"CASE\n"
"  @i{x1} OF @i{code1} ENDOF\n"
"  @i{x2} OF @i{code2} ENDOF\n"
"  @dots{}\n"
"  ( x ) @i{default-code} ( x )\n"
"ENDCASE ( )\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9635
msgid ""
"Executes the first @i{codei}, where the @i{xi} is equal to @i{x}.  If no "
"@i{xi} matches, the optional @i{default-code} is executed. The optional "
"default case can be added by simply writing the code after the last "
"@code{ENDOF}. It may use @i{x}, which is on top of the stack, but must not "
"consume it.  The value @i{x} is consumed by this construction (either by an "
"@code{OF} that matches, or by the @code{ENDCASE}, if no OF matches).  "
"Example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9646
#, no-wrap
msgid ""
": num-name ( n -- c-addr u )\n"
" case\n"
"   0 of s\" zero \" endof\n"
"   1 of s\" one \"  endof\n"
"   2 of s\" two \"  endof\n"
"   \\ default case:\n"
"   s\" other number\" \n"
"   rot \\ get n on top so ENDCASE can drop it\n"
" endcase ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9651
msgid ""
"You can also use (the non-standard) @code{?of} to use @code{case} as a "
"general selection structure for more than two alternatives.  @code{?Of} "
"takes a flag.  Example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9660
#, no-wrap
msgid ""
": sgn ( n1 -- n2 )\n"
"    \\ sign function\n"
"    case\n"
"\tdup 0< ?of drop -1 endof\n"
"\tdup 0> ?of drop 1 endof\n"
"\tdup \\ n1=0 -> n2=0; dup an item, to be consumed by ENDCASE\n"
"    endcase ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9666
msgid ""
"@progstyle To keep the code understandable, you should ensure that you "
"change the stack in the same way (wrt. number and types of stack items "
"consumed and pushed) on all paths through a selection structure."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9669
#, no-wrap
msgid "simple loops"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9670
#, no-wrap
msgid "loops without count"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9672
#, no-wrap
msgid "@code{WHILE} loop"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9680
#, no-wrap
msgid ""
"BEGIN\n"
"  @i{code1}\n"
"  @i{flag}\n"
"WHILE\n"
"  @i{code2}\n"
"REPEAT\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9685
msgid ""
"@i{code1} is executed and @i{flag} is computed. If it is true, @i{code2} is "
"executed and the loop is restarted; If @i{flag} is false, execution "
"continues after the @code{REPEAT}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9686
#, no-wrap
msgid "@code{UNTIL} loop"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9692
#, no-wrap
msgid ""
"BEGIN\n"
"  @i{code}\n"
"  @i{flag}\n"
"UNTIL\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9695
msgid "@i{code} is executed. The loop is restarted if @code{flag} is false."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9699
msgid ""
"@progstyle To keep the code understandable, a complete iteration of the loop "
"should not change the number and types of the items on the stacks."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9700
#, no-wrap
msgid "endless loop"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9701
#, no-wrap
msgid "loops, endless"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9706
#, no-wrap
msgid ""
"BEGIN\n"
"  @i{code}\n"
"AGAIN\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9709
msgid "This is an endless loop."
msgstr ""

#. type: node
#: ../doc/gforth.texi:9711 ../doc/gforth.texi:10196 ../doc/gforth.texi:10259
#, no-wrap
msgid "BEGIN loops with multiple exits"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9713
#, no-wrap
msgid "counted loops"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9714
#, no-wrap
msgid "loops, counted"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9715
#, no-wrap
msgid "@code{DO} loops"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9718
msgid "The basic counted loop is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9722
#, no-wrap
msgid ""
"@i{limit} @i{start} ?DO\n"
"  @i{body}\n"
"LOOP\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9727
msgid ""
"This performs one iteration for every integer, starting from @i{start} and "
"up to, but excluding @i{limit}. The counter, or @i{index}, can be accessed "
"with @code{i}. For example, the loop:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9731
#, no-wrap
msgid ""
"10 0 ?DO\n"
"  i .\n"
"LOOP\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9734
msgid "prints @code{0 1 2 3 4 5 6 7 8 9}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9738
msgid ""
"The index of the innermost loop can be accessed with @code{i}, the index of "
"the next loop with @code{j}, and the index of the third loop with @code{k}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9741
msgid ""
"You can access the limit of the innermost loop with @code{i'} and @code{i'}-"
"@code{i} with @code{delta-i}.  E.g., running"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9744
#, no-wrap
msgid ": foo 7 5 ?do cr i . i' . delta-i . loop ; \n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9747
msgid "prints"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9751
#, no-wrap
msgid ""
"5 7 2 \n"
"6 7 1\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9760
msgid ""
"The loop control data are kept on the return stack, so there are some "
"restrictions on mixing return stack accesses and counted loop words. In "
"particuler, if you put values on the return stack outside the loop, you "
"cannot read them inside the loop@footnote{well, not in a way that is "
"portable.}. If you put values on the return stack within a loop, you have to "
"remove them before the end of the loop and before accessing the index of the "
"loop."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9762
msgid "There are several variations on the counted loop:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9767
msgid ""
"@code{LEAVE} leaves the innermost counted loop immediately; execution "
"continues after the associated @code{LOOP} or @code{NEXT}. For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9770
#, no-wrap
msgid "10 0 ?DO  i DUP . 3 = IF LEAVE THEN LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9772 ../doc/gforth.texi:9783
msgid "prints @code{0 1 2 3}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9778
msgid ""
"@code{UNLOOP} prepares for an abnormal loop exit, e.g., via @code{EXIT}. "
"@code{UNLOOP} removes the loop control parameters from the return stack so "
"@code{EXIT} can get to its return address. For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9781
#, no-wrap
msgid ": demo 10 0 ?DO i DUP . 3 = IF UNLOOP EXIT THEN LOOP .\" Done\" ;\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9793
msgid ""
"If @i{start} is greater than @i{limit}, a @code{?DO} loop is entered (and "
"@code{LOOP} iterates until they become equal by wrap-around arithmetic). "
"This behaviour is usually not what you want. Therefore, Gforth offers "
"@code{+DO} and @code{U+DO} (as replacements for @code{?DO}), which do not "
"enter the loop if @i{start} is greater than @i{limit}; @code{+DO} is for "
"signed loop parameters, @code{U+DO} for unsigned loop parameters."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9800
msgid ""
"@code{?DO} can be replaced by @code{DO}. @code{DO} always enters the loop, "
"independent of the loop parameters. Do not use @code{DO}, even if you know "
"that the loop is entered in any case. Such knowledge tends to become invalid "
"during maintenance of a program, and then the @code{DO} will make trouble."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9805
msgid ""
"@code{LOOP} can be replaced with @code{@i{n} +LOOP}; this updates the index "
"by @i{n} instead of by 1. The loop is terminated when the border between "
"@i{limit-1} and @i{limit} is crossed. E.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9808
#, no-wrap
msgid "4 0 +DO  i .  2 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9811
msgid "prints @code{0 2}"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9814
#, no-wrap
msgid "4 1 +DO  i .  2 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9817
msgid "prints @code{1 3}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9819
#, no-wrap
msgid "negative increment for counted loops"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9820
#, no-wrap
msgid "counted loops with negative increment"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9822
msgid "The behaviour of @code{@i{n} +LOOP} is peculiar when @i{n} is negative:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9825
#, no-wrap
msgid "-1 0 ?DO  i .  -1 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9828 ../doc/gforth.texi:9870
msgid "prints @code{0 -1}"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9831
#, no-wrap
msgid "0 0 ?DO  i .  -1 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9833 ../doc/gforth.texi:9859 ../doc/gforth.texi:9882
msgid "prints nothing."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9836
msgid ""
"We recommend not combining @code{?DO} with @code{+LOOP}.  Gforth offers "
"several alternatives:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9841
msgid ""
"If you want @code{-1 +LOOP}'s behaviour of including an iteration where "
"@code{I}=limit, start the loop with @code{-[DO} or @code{U-[DO} (where the "
"@code{[} is inspired by the mathematical notation for inclusive ranges, e."
"g., [1,n]):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9844
#, no-wrap
msgid "-1 0 -[DO  i .  -1 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9847
msgid "prints @code{0 -1}."
msgstr ""

#. type: example
#: ../doc/gforth.texi:9850
#, no-wrap
msgid "0 0 -[DO  i .  -1 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9853
msgid "prints @code{0}."
msgstr ""

#. type: example
#: ../doc/gforth.texi:9856
#, no-wrap
msgid "0 -1 -[DO  i .  -1 +LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9864
msgid ""
"If you want to exclude the limit, you instead use @code{1 -LOOP} (or "
"generally @code{@i{u} -LOOP}) and start the loop with @code{?DO}, @code{-DO} "
"or @code{U-DO}.  @code{-LOOP} terminates the loop when the border between "
"@i{limit+1} and @i{limit} is crossed.  E.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9867
#, no-wrap
msgid "-2 0 -DO  i .  1 -LOOP\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9873
#, no-wrap
msgid "-1 0 -DO  i .  1 -LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9876
msgid "prints @code{0}"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9879
#, no-wrap
msgid "0 0 -DO  i .  1 -LOOP\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9887
msgid ""
"Unfortunately, @code{+DO}, @code{U+DO}, @code{-DO}, @code{U-DO} and @code{-"
"LOOP} are not defined in Standard Forth. However, an implementation for "
"these words that uses only standard words is provided in @file{compat/loops."
"fs}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9889
#, no-wrap
msgid "iterate over array"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9890
#, no-wrap
msgid "array, iterating over"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9901
msgid ""
"A common task is to iterate over the elements of an array, forwards or "
"backwards.  Iterating over the addresses of the elements has two benefits: "
"It avoids the need to keep the start address of the array around, reducing "
"the data stack load; and it avoids the need to perform address computations "
"in every iteration.  The disadvantage is that, starting with the usual array "
"representations @i{addr uelems} or @i{addr ubytes}, some processing is "
"required to produce a start and limit address.  Gforth has @code{bounds} for "
"getting there from the @i{addr ubytes} representation, so you can write a "
"forward loop through a cell array @code{v} as:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9906
#, no-wrap
msgid ""
"create v 1 , 3 , 7 ,\n"
": foo v 3 cells bounds U+DO i @ . cell +LOOP ;\n"
"foo\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9913
msgid ""
"which prints @code{1 3 7}.  Preprocessing the inputs for walking backwards "
"is more involved, so Gforth provide a loop construct of the form @code{MEM-"
"DO}...@code{LOOP} that does it for you: It takes an array in @i{addr ubytes} "
"representation and the element size, and iterates over the addresses of the "
"elements in backwards order:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9918
#, no-wrap
msgid ""
"create v 1 , 3 , 7 ,\n"
": foo1 v 3 cell array>mem MEM-DO i @ . LOOP ;\n"
"foo1\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9925
msgid ""
"This prints @code{7 3 1}.  @code{ARRAY>MEM} converts the @i{addr uelems "
"uelemsize} representation into the @i{addr ubytes uelemsize} representation "
"expected by @code{MEM-DO}.  This loop is finished with @code{LOOP} which "
"decrements by @i{uelemsize} when it finishes a @code{MEM-DO}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9928
msgid ""
"Gforth also adds @code{MEM+DO} for completeness.  It takes the same "
"parameters as @code{MEM-DO}, but walks forwards through the array:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9933
#, no-wrap
msgid ""
"create v 1 , 3 , 7 ,\n"
": foo2 v 3 cell array>mem MEM+DO i @ . LOOP ;\n"
"foo2\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9936
msgid "prints @code{1 3 7}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:9938
#, no-wrap
msgid "@code{FOR} loops"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9940
msgid "Another counted loop is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:9945
#, no-wrap
msgid ""
"@i{n}\n"
"FOR\n"
"  @i{body}\n"
"NEXT\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:9952
msgid ""
"This is the preferred loop of native code compiler writers who are too lazy "
"to optimize @code{?DO} loops properly. This loop structure is not defined in "
"Standard Forth. In Gforth, this loop iterates @i{n+1} times; @code{i} "
"produces values starting with @i{n} and ending with 0. Other Forth systems "
"may behave differently, even if they support @code{FOR} loops. To avoid "
"problems, don't use @code{FOR} loops."
msgstr ""

#. type: table
#: ../doc/gforth.texi:9956
msgid "The counted-loop words are:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9957
#, no-wrap
msgid "?DO ( @var{ compilation -- do-sys ; run-time w1 w2 -- | loop-sys   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9958 ../doc/gforth.texi:9959
#, no-wrap
msgid "?DO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9962
#, no-wrap
msgid "@code{?DO} ( @i{compilation -- do-sys ; run-time w1 w2 -- | loop-sys  }) core-ext ``question-do''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9964 ../doc/gforth.texi:9973 ../doc/gforth.texi:9982
#: ../doc/gforth.texi:10021 ../doc/gforth.texi:10030 ../doc/gforth.texi:10064
#: ../doc/gforth.texi:10073 ../doc/gforth.texi:10082 ../doc/gforth.texi:10091
#: ../doc/gforth.texi:10100 ../doc/gforth.texi:10109 ../doc/gforth.texi:10158
#: ../doc/gforth.texi:10167
msgid "@xref{Counted Loops}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9966
#, no-wrap
msgid "+DO ( @var{ compilation -- do-sys ; run-time n1 n2 -- | loop-sys   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9967 ../doc/gforth.texi:9968
#, no-wrap
msgid "+DO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9971
#, no-wrap
msgid "@code{+DO} ( @i{compilation -- do-sys ; run-time n1 n2 -- | loop-sys  }) gforth-0.2 ``plus-do''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9975
#, no-wrap
msgid "U+DO ( @var{ compilation -- do-sys ; run-time u1 u2 -- | loop-sys   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9976 ../doc/gforth.texi:9977
#, no-wrap
msgid "U+DO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9980
#, no-wrap
msgid "@code{U+DO} ( @i{compilation -- do-sys ; run-time u1 u2 -- | loop-sys  }) gforth-0.2 ``u-plus-do''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9984
#, no-wrap
msgid "bounds ( @var{ u1 u2 -- u3 u1  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9985 ../doc/gforth.texi:9986
#, no-wrap
msgid "bounds"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9989
#, no-wrap
msgid "@code{bounds} ( @i{u1 u2 -- u3 u1 }) gforth-0.2 ``bounds''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:9991
msgid ""
"Given a memory block represented by starting address @i{addr} and length "
"@i{u} in aus, produce the end address @i{addr+u} and the start address in "
"the right order for @code{u+do} or @code{?do}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:9992
#, no-wrap
msgid "-[do ( @var{ compilation -- do-sys ; run-time n1 n2 -- | loop-sys   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:9993 ../doc/gforth.texi:9994
#, no-wrap
msgid "-[do"
msgstr ""

#. type: format
#: ../doc/gforth.texi:9997
#, no-wrap
msgid "@code{-[do} ( @i{compilation -- do-sys ; run-time n1 n2 -- | loop-sys  }) gforth-experimental ``minus-bracket-do''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10001
msgid ""
"Start of a counted loop with negative stride; Skips the loop if @i{n2}"
"<@i{n1}; such a counted loop ends with @code{+loop} where the increment is "
"negative; it runs as long as @code{I}>=@i{n1}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10003
#, no-wrap
msgid "u-[do ( @var{ compilation -- do-sys ; run-time u1 u2 -- | loop-sys   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10004 ../doc/gforth.texi:10005
#, no-wrap
msgid "u-[do"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10008
#, no-wrap
msgid "@code{u-[do} ( @i{compilation -- do-sys ; run-time u1 u2 -- | loop-sys  }) gforth-experimental ``u-minus-bracket-do''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10012
msgid ""
"Start of a counted loop with negative stride; Skips the loop if @i{u2}"
"<@i{u1}; such a counted loop ends with @code{+loop} where the increment is "
"negative; it runs as long as @code{I}>=@i{u1}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10014
#, no-wrap
msgid "-DO ( @var{ compilation -- do-sys ; run-time n1 n2 -- | loop-sys   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10015 ../doc/gforth.texi:10016
#, no-wrap
msgid "-DO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10019
#, no-wrap
msgid "@code{-DO} ( @i{compilation -- do-sys ; run-time n1 n2 -- | loop-sys  }) gforth-0.2 ``minus-do''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10023
#, no-wrap
msgid "U-DO ( @var{ compilation -- do-sys ; run-time u1 u2 -- | loop-sys   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10024 ../doc/gforth.texi:10025
#, no-wrap
msgid "U-DO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10028
#, no-wrap
msgid "@code{U-DO} ( @i{compilation -- do-sys ; run-time u1 u2 -- | loop-sys  }) gforth-0.2 ``u-minus-do''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10033
msgid "doc-array>mem"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10033
#, no-wrap
msgid "mem+do ( @var{ compilation -- w xt do-sys; run-time addr ubytes +nstride --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10034 ../doc/gforth.texi:10035
#, no-wrap
msgid "mem+do"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10038
#, no-wrap
msgid "@code{mem+do} ( @i{compilation -- w xt do-sys; run-time addr ubytes +nstride --  }) gforth-experimental ``mem-plus-do''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10043
msgid ""
"Starts a counted loop that starts with @code{I} as @i{addr} and then steps "
"upwards through memory with @i{nstride} wide steps as long as @code{I}"
"<@i{addr}+@i{ubytes}.  Must be finished with @i{loop}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10045
#, no-wrap
msgid "mem-do ( @var{ compilation -- w xt do-sys; run-time addr ubytes +nstride --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10046 ../doc/gforth.texi:10047
#, no-wrap
msgid "mem-do"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10050
#, no-wrap
msgid "@code{mem-do} ( @i{compilation -- w xt do-sys; run-time addr ubytes +nstride --  }) gforth-experimental ``mem-minus-do''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10055
msgid ""
"Starts a counted loop that starts with @code{I} as @i{addr}+@i{ubytes}-"
"@i{ustride} and then steps backwards through memory with -@i{nstride} wide "
"steps as long as @code{I}>=@i{addr}.  Must be finished with @i{loop}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10057
#, no-wrap
msgid "DO ( @var{ compilation -- do-sys ; run-time w1 w2 -- loop-sys   } ) core"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10062
#, no-wrap
msgid "@code{DO} ( @i{compilation -- do-sys ; run-time w1 w2 -- loop-sys  }) core ``DO''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10066
#, no-wrap
msgid "FOR ( @var{ compilation -- do-sys ; run-time u -- loop-sys   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10067 ../doc/gforth.texi:10068
#, no-wrap
msgid "FOR"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10071
#, no-wrap
msgid "@code{FOR} ( @i{compilation -- do-sys ; run-time u -- loop-sys  }) gforth-0.2 ``FOR''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10075
#, no-wrap
msgid "LOOP ( @var{ compilation do-sys -- ; run-time loop-sys1 -- | loop-sys2   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10076 ../doc/gforth.texi:10077
#, no-wrap
msgid "LOOP"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10080
#, no-wrap
msgid "@code{LOOP} ( @i{compilation do-sys -- ; run-time loop-sys1 -- | loop-sys2  }) core ``LOOP''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10084
#, no-wrap
msgid "+LOOP ( @var{ compilation do-sys -- ; run-time loop-sys1 n -- | loop-sys2   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10085 ../doc/gforth.texi:10086
#, no-wrap
msgid "+LOOP"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10089
#, no-wrap
msgid "@code{+LOOP} ( @i{compilation do-sys -- ; run-time loop-sys1 n -- | loop-sys2  }) core ``plus-loop''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10093
#, no-wrap
msgid "-LOOP ( @var{ compilation do-sys -- ; run-time loop-sys1 u -- | loop-sys2   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10094 ../doc/gforth.texi:10095
#, no-wrap
msgid "-LOOP"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10098
#, no-wrap
msgid "@code{-LOOP} ( @i{compilation do-sys -- ; run-time loop-sys1 u -- | loop-sys2  }) gforth-0.2 ``minus-loop''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10102
#, no-wrap
msgid "NEXT ( @var{ compilation do-sys -- ; run-time loop-sys1 -- | loop-sys2   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10103 ../doc/gforth.texi:10104
#, no-wrap
msgid "NEXT"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10107
#, no-wrap
msgid "@code{NEXT} ( @i{compilation do-sys -- ; run-time loop-sys1 -- | loop-sys2  }) gforth-0.2 ``NEXT''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10111
#, no-wrap
msgid "i ( @var{ R:n -- R:n n  } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10112 ../doc/gforth.texi:10113
#, no-wrap
msgid "i"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10116
#, no-wrap
msgid "@code{i} ( @i{R:n -- R:n n }) core ``i''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10118
msgid "@i{n} is the index of the innermost counted loop."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10119
#, no-wrap
msgid "j ( @var{ R:n R:w1 R:w2 -- n R:n R:w1 R:w2  } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10120 ../doc/gforth.texi:10121
#, no-wrap
msgid "j"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10124
#, no-wrap
msgid "@code{j} ( @i{R:n R:w1 R:w2 -- n R:n R:w1 R:w2 }) core ``j''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10126
msgid "@i{n} is the index of the next-to-innermost counted loop."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10127
#, no-wrap
msgid "k ( @var{ R:n R:w1 R:w2 R:w3 R:w4 -- n R:n R:w1 R:w2 R:w3 R:w4  } ) gforth-0.3"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10128 ../doc/gforth.texi:10129
#, no-wrap
msgid "k"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10132
#, no-wrap
msgid "@code{k} ( @i{R:n R:w1 R:w2 R:w3 R:w4 -- n R:n R:w1 R:w2 R:w3 R:w4 }) gforth-0.3 ``k''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10134
msgid "@i{n} is the index of the third-innermost counted loop."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10135
#, no-wrap
msgid "i' ( @var{ R:w R:w2 -- R:w R:w2 w  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10136 ../doc/gforth.texi:10137
#, no-wrap
msgid "i'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10140
#, no-wrap
msgid "@code{i'} ( @i{R:w R:w2 -- R:w R:w2 w }) gforth-0.2 ``i-tick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10142
msgid "The limit of the innermost counted loop"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10143
#, no-wrap
msgid "delta-i ( @var{ r:ulimit r:u -- r:ulimit r:u u2  } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10144 ../doc/gforth.texi:10145
#, no-wrap
msgid "delta-i"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10148
#, no-wrap
msgid "@code{delta-i} ( @i{r:ulimit r:u -- r:ulimit r:u u2 }) gforth-1.0 ``delta-i''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10150
msgid "@i{u2}=@code{I'}-@code{I} (difference between limit and index)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10151
#, no-wrap
msgid "LEAVE ( @var{ compilation -- ; run-time loop-sys --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10152 ../doc/gforth.texi:10153
#, no-wrap
msgid "LEAVE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10156
#, no-wrap
msgid "@code{LEAVE} ( @i{compilation -- ; run-time loop-sys --  }) core ``LEAVE''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10160
#, no-wrap
msgid "?LEAVE ( @var{ compilation -- ; run-time f | f loop-sys --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10161 ../doc/gforth.texi:10162
#, no-wrap
msgid "?LEAVE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10165
#, no-wrap
msgid "@code{?LEAVE} ( @i{compilation -- ; run-time f | f loop-sys --  }) gforth-0.2 ``question-leave''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10169
#, no-wrap
msgid "unloop ( @var{ R:w1 R:w2 --  } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10170 ../doc/gforth.texi:10171
#, no-wrap
msgid "unloop"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10174
#, no-wrap
msgid "@code{unloop} ( @i{R:w1 R:w2 -- }) core ``unloop''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10176
#, no-wrap
msgid "DONE ( @var{ compilation do-sys -- ; run-time --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10177 ../doc/gforth.texi:10178
#, no-wrap
msgid "DONE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10181
#, no-wrap
msgid "@code{DONE} ( @i{compilation do-sys -- ; run-time --  }) gforth-0.2 ``DONE''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10183
msgid "resolves all LEAVEs up to the do-sys"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10195
msgid ""
"The standard does not allow using @code{CS-PICK} and @code{CS-ROLL} on @i{do-"
"sys}. Gforth allows it, except for the do-sys produced by @code{MEM+DO} and "
"@code{MEM-DO}, but it's your job to ensure that for every @code{?DO} etc. "
"there is exactly one @code{UNLOOP} on any path through the definition "
"(@code{LOOP} etc. compile an @code{UNLOOP} on the fall-through path). Also, "
"you have to ensure that all @code{LEAVE}s are resolved (by using one of the "
"loop-ending words or @code{DONE})."
msgstr ""

#. type: node
#: ../doc/gforth.texi:10196 ../doc/gforth.texi:10259 ../doc/gforth.texi:10346
#, no-wrap
msgid "General control structures with CASE"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:10197
#, no-wrap
msgid "@code{Begin} loops with multiple exits"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10198
#, no-wrap
msgid "Multiple exits from @code{begin}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10202
msgid ""
"For counted loops, you can use @code{leave} in several places.  For "
"@code{begin} loops, you have the following options:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10205
msgid ""
"Use @code{exit} (possibly several times) in the loop to leave not just the "
"loop, but the whole colon definition.  E.g.,:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10217
#, no-wrap
msgid ""
": foo\n"
"  begin\n"
"    condition1 while\n"
"      condition2 if\n"
"        exit-code2 exit then\n"
"      condition3 if\n"
"        exit-code3 exit then\n"
"    ...\n"
"  repeat\n"
"  exit-code1 ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10223
msgid ""
"The disadvantage of this approach is that, if you want to have some common "
"code afterwards, you either have to wrap @code{foo} in another word that "
"contains the common code, or you have to call the common code several times, "
"from each exit-code."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10227
msgid ""
"Another approach is to use several @code{while}s in a @code{begin} loop.  "
"You have to append a @code{then} behind the loop for every additional "
"@code{while}.  E.g.,;"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10234
#, no-wrap
msgid ""
"begin\n"
"  condition1 while\n"
"    condition2 while\n"
"      condition3 while\n"
"again then then then\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10240
msgid ""
"Here I used @code{again} at the end of the loop so that I would have a "
"@code{then} for each @code{while}; @code{repeat} would result in one less "
"@code{then}, but otherwise the same behaviour.  For an explanation of why "
"this works, @xref{Arbitrary control structures}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10244
msgid ""
"We can have common code afterwards, but, as presented above, we cannot have "
"different exit-codes for the different exits.  You can have these different "
"exit-codes, as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10253
#, no-wrap
msgid ""
"begin\n"
"  condition1 while\n"
"    condition2 while\n"
"      condition3 while\n"
"again then exit-code3\n"
"else exit-code2 then\n"
"else exit-code1 then\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10258
msgid ""
"This is relatively hard to comprehend, because the exit-codes are relatively "
"far from the exit conditions (it does not help that we are not used to such "
"control structures, either)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:10259 ../doc/gforth.texi:10346 ../doc/gforth.texi:10347
#: ../doc/gforth.texi:10659
#, no-wrap
msgid "Arbitrary control structures"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:10260
#, no-wrap
msgid "General control structures with @code{case}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10261
#, no-wrap
msgid "@code{case} as generalized control structure"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10262
#, no-wrap
msgid "general control structures (@code{case})"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10268
msgid ""
"Gforth provides an extended @code{case} that solves the problems of the "
"multi-exit loops discussed above, and offers additional options.  You can "
"find a portable implementation of this extended @code{case} in @file{compat/"
"caseext.fs}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10272
msgid ""
"There are three additional words in the extension.  The first is @code{?of} "
"which allows general tests (rather than just testing for equality) in a "
"@code{case}; e.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10280
#, no-wrap
msgid ""
": sgn ( n -- -1|0|1 )\n"
"  ( n ) case\n"
"    dup 0 < ?of drop -1 endof\n"
"    dup 0 > ?of drop 1  endof\n"
"    \\ otherwise leave the 0 on the stack\n"
"  0 endcase ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10287
msgid ""
"Note that @code{endcase} drops a value, which works fine much of the time "
"with @code{of}, but usually not with @code{?of}, so we leave a 0 on the "
"stack for @code{endcase} to drop.  The n that is passed into @code{sgn} is "
"also 0 if neither @code{?of} triggers, and that is then passed out."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10290
msgid ""
"The second additional word is @code{next-case}, which allows turning "
"@code{case} into a loop.  Our triple-exit loop becomes:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10299
#, no-wrap
msgid ""
"case\n"
"  condition1 ?of exit-code1 endof\n"
"  condition2 ?of exit-code2 endof\n"
"  condition3 ?of exit-code3 endof\n"
"  ...\n"
"next-case\n"
"common code afterwards\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10307
msgid ""
"As you can see, this solves both problems of the variants discussed above "
"(@pxref{BEGIN loops with multiple exits}).  Note that @code{next-case} does "
"not drop a value, unlike @code{endcase}.@footnote{@code{Next-case} has a "
"@code{-}, unlike the other @code{case} words, because VFX Forth contains a "
"@code{nextcase} that drops a value.}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10312
msgid ""
"The last additional word is @code{contof}, which is used instead of "
"@code{endof} and starts the next iteration instead of leaving the loop.  "
"This can be used in ways similar to Dijkstra's guarded command @i{do}, e.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10319
#, no-wrap
msgid ""
": gcd ( n1 n2 -- n )\n"
"    case\n"
"        2dup > ?of tuck - contof\n"
"        2dup < ?of over - contof\n"
"    endcase ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10324
msgid ""
"Here the two @code{?of}s have different ways of continuing the loop; when "
"neither @code{?of} triggers, the two numbers are equal and are the gcd.  "
"@code{Endcase} drops one of them, leaving the other as n."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10327
msgid ""
"You can also combine these words.  Here's an example that uses each of the "
"@code{case} words once, except @code{endcase}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10337
#, no-wrap
msgid ""
": collatz ( u -- )\n"
"    \\ print the 3n+1 sequence starting at u until we reach 1\n"
"    case\n"
"        dup .\n"
"        1 of endof\n"
"        dup 1 and ?of 3 * 1+ contof\n"
"        2/\n"
"    next-case ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10345
msgid ""
"This example keeps the current value of the sequence on the stack.  If it is "
"1, the @code{of} triggers, drops the value, and leaves the @code{case} "
"structure.  For odd numbers, the @code{?of} triggers, computes 3n+1, and "
"starts the next iteration with @code{contof}.  Otherwise, if the number is "
"even, it is divided by 2, and the loop is restarted with @code{next-case}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:10346 ../doc/gforth.texi:10659 ../doc/gforth.texi:10660
#: ../doc/gforth.texi:10752
#, no-wrap
msgid "Calls and returns"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10348
#, no-wrap
msgid "control structures, user-defined"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10350
#, no-wrap
msgid "control-flow stack"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10355
msgid ""
"Standard Forth permits and supports using control structures in a non-nested "
"way. Information about incomplete control structures is stored on the "
"control-flow stack. This stack may be implemented on the Forth data stack, "
"and this is what we have done in Gforth."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10356
#, no-wrap
msgid "@code{orig}, control-flow stack item"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10357
#, no-wrap
msgid "@code{dest}, control-flow stack item"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10362
msgid ""
"An @i{orig} entry represents an unresolved forward branch, a @i{dest} entry "
"represents a backward branch target. A few words are the basis for building "
"any control structure possible (except control structures that need storage, "
"like calls, coroutines, and backtracking)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10364
#, no-wrap
msgid "IF ( @var{ compilation -- orig ; run-time f --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10365 ../doc/gforth.texi:10366
#, no-wrap
msgid "IF"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10369
#, no-wrap
msgid "@code{IF} ( @i{compilation -- orig ; run-time f --  }) core ``IF''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10373
msgid ""
"At run-time, if @i{f}=0, execution continues after the @code{THEN} (or "
"@code{ELSE}) that consumes the @i{orig}, otherwise right after the @code{IF} "
"(@pxref{Selection})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10375
#, no-wrap
msgid "AHEAD ( @var{ compilation -- orig ; run-time --   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10376 ../doc/gforth.texi:10377
#, no-wrap
msgid "AHEAD"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10380
#, no-wrap
msgid "@code{AHEAD} ( @i{compilation -- orig ; run-time --  }) tools-ext ``AHEAD''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10383
msgid ""
"At run-time, execution continues after the @code{THEN} that consumes the "
"@i{orig}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10385
#, no-wrap
msgid "THEN ( @var{ compilation orig -- ; run-time --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10386 ../doc/gforth.texi:10387
#, no-wrap
msgid "THEN"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10390
#, no-wrap
msgid "@code{THEN} ( @i{compilation orig -- ; run-time --  }) core ``THEN''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10394
msgid ""
"The @code{IF}, @code{AHEAD}, @code{ELSE} or @code{WHILE} that pushed "
"@i{orig} jumps right after the @code{THEN} (@pxref{Selection})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10396
#, no-wrap
msgid "BEGIN ( @var{ compilation -- dest ; run-time --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10397 ../doc/gforth.texi:10398
#, no-wrap
msgid "BEGIN"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10401
#, no-wrap
msgid "@code{BEGIN} ( @i{compilation -- dest ; run-time --  }) core ``BEGIN''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10405
msgid ""
"The @code{UNTIL}, @code{AGAIN} or @code{REPEAT} that consumes the @i{dest} "
"jumps right behind the @code{BEGIN} (@pxref{Simple Loops})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10407
#, no-wrap
msgid "UNTIL ( @var{ compilation dest -- ; run-time f --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10408 ../doc/gforth.texi:10409
#, no-wrap
msgid "UNTIL"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10412
#, no-wrap
msgid "@code{UNTIL} ( @i{compilation dest -- ; run-time f --  }) core ``UNTIL''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10416
msgid ""
"At run-time, if @i{f}=0, execution continues after the @code{BEGIN} that "
"produced @i{dest}, otherwise right after the @code{UNTIL} (@pxref{Simple "
"Loops})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10418
#, no-wrap
msgid "AGAIN ( @var{ compilation dest -- ; run-time --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10419 ../doc/gforth.texi:10420
#, no-wrap
msgid "AGAIN"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10423
#, no-wrap
msgid "@code{AGAIN} ( @i{compilation dest -- ; run-time --  }) core-ext ``AGAIN''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10426
msgid ""
"At run-time, execution continues after the @code{BEGIN} that produced the "
"@i{dest} (@pxref{Simple Loops})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10428
#, no-wrap
msgid "CS-PICK ( @var{ orig0/dest0 orig1/dest1 ... origu/destu u -- ... orig0/dest0   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10429 ../doc/gforth.texi:10430
#, no-wrap
msgid "CS-PICK"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10433
#, no-wrap
msgid "@code{CS-PICK} ( @i{orig0/dest0 orig1/dest1 ... origu/destu u -- ... orig0/dest0  }) tools-ext ``c-s-pick''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10435
#, no-wrap
msgid "CS-ROLL ( @var{ destu/origu .. dest0/orig0 u -- .. dest0/orig0 destu/origu   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10436 ../doc/gforth.texi:10437
#, no-wrap
msgid "CS-ROLL"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10440
#, no-wrap
msgid "@code{CS-ROLL} ( @i{destu/origu .. dest0/orig0 u -- .. dest0/orig0 destu/origu  }) tools-ext ``c-s-roll''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10442
#, no-wrap
msgid "CS-DROP ( @var{ dest --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10443 ../doc/gforth.texi:10444
#, no-wrap
msgid "CS-DROP"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10447
#, no-wrap
msgid "@code{CS-DROP} ( @i{dest --  }) gforth-1.0 ``CS-DROP''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10455
msgid ""
"The Standard words @code{CS-PICK} and @code{CS-ROLL} allow you to manipulate "
"the control-flow stack in a portable way. Without them, you would need to "
"know how many stack items are occupied by a control-flow entry (many systems "
"use one cell. In Gforth they currently take three, but this may change in "
"the future)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10458
msgid ""
"@code{CS-PICK} can only pick a dest and @code{CS-DROP} can only drop a dest, "
"because an orig must be resolved exactly once."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10460
msgid "Some standard control structure words are built from these words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10462
#, no-wrap
msgid "ELSE ( @var{ compilation orig1 -- orig2 ; run-time --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10463 ../doc/gforth.texi:10464
#, no-wrap
msgid "ELSE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10467
#, no-wrap
msgid "@code{ELSE} ( @i{compilation orig1 -- orig2 ; run-time --  }) core ``ELSE''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10472
msgid ""
"At run-time, execution continues after the @code{THEN} that consumes the "
"@i{orig}; the @code{IF}, @code{AHEAD}, @code{ELSE} or @code{WHILE} that "
"pushed @i{orig1} jumps right after the @code{ELSE}.  (@pxref{Selection})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10474
#, no-wrap
msgid "WHILE ( @var{ compilation dest -- orig dest ; run-time f --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10475 ../doc/gforth.texi:10476
#, no-wrap
msgid "WHILE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10479
#, no-wrap
msgid "@code{WHILE} ( @i{compilation dest -- orig dest ; run-time f --  }) core ``WHILE''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10484
msgid ""
"At run-time, if @i{f}=0, execution continues after the @code{REPEAT} (or "
"@code{THEN} or @code{ELSE}) that consumes the @i{orig}, otherwise right "
"after the @code{WHILE} (@pxref{Simple Loops})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10486
#, no-wrap
msgid "REPEAT ( @var{ compilation orig dest -- ; run-time --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10487 ../doc/gforth.texi:10488
#, no-wrap
msgid "REPEAT"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10491
#, no-wrap
msgid "@code{REPEAT} ( @i{compilation orig dest -- ; run-time --  }) core ``REPEAT''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10496
msgid ""
"At run-time, execution continues after the @code{BEGIN} that produced the "
"@i{dest}; the @code{WHILE}, @code{IF}, @code{AHEAD} or @code{ELSE} that "
"pushed @i{orig} jumps right after the @code{REPEAT}.  (@pxref{Simple Loops})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10502
msgid "Gforth adds some more control-structure words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10504
#, no-wrap
msgid "ENDIF ( @var{ compilation orig -- ; run-time --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10505 ../doc/gforth.texi:10506
#, no-wrap
msgid "ENDIF"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10509
#, no-wrap
msgid "@code{ENDIF} ( @i{compilation orig -- ; run-time --  }) gforth-0.2 ``ENDIF''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10511
msgid "Same as @code{THEN}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10513
#, no-wrap
msgid "?dup-IF ( @var{ compilation -- orig ; run-time n -- n|   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10514 ../doc/gforth.texi:10515
#, no-wrap
msgid "?dup-IF"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10518
#, no-wrap
msgid "@code{?dup-IF} ( @i{compilation -- orig ; run-time n -- n|  }) gforth-0.2 ``question-dupe-if''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10522
msgid ""
"This is the preferred alternative to the idiom \"@code{?DUP IF}\", since it "
"can be better handled by tools like stack checkers. Besides, it's faster."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10524
#, no-wrap
msgid "?DUP-0=-IF ( @var{ compilation -- orig ; run-time n -- n|   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10525 ../doc/gforth.texi:10526
#, no-wrap
msgid "?DUP-0=-IF"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10529
#, no-wrap
msgid "@code{?DUP-0=-IF} ( @i{compilation -- orig ; run-time n -- n|  }) gforth-0.2 ``question-dupe-zero-equals-if''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10534
msgid "Another group of control structure words are:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10536
#, no-wrap
msgid "case ( @var{ compilation  -- case-sys ; run-time  --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10537 ../doc/gforth.texi:10538
#, no-wrap
msgid "case"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10541
#, no-wrap
msgid "@code{case} ( @i{compilation  -- case-sys ; run-time  --  }) core-ext ``case''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10543
msgid "Start a @code{case} structure."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10545
#, no-wrap
msgid "endcase ( @var{ compilation case-sys -- ; run-time x --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10546 ../doc/gforth.texi:10547
#, no-wrap
msgid "endcase"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10550
#, no-wrap
msgid "@code{endcase} ( @i{compilation case-sys -- ; run-time x --  }) core-ext ``end-case''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10556
msgid ""
"Finish the @code{case} structure; drop x, and continue behind the "
"@code{endcase}.  Dropping x is useful in the original @code{case} construct "
"(with only @code{of}s), but you may have to supply an x in other cases "
"(especially when using @code{?of})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10558
#, no-wrap
msgid "next-case ( @var{ compilation case-sys -- ; run-time --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10559 ../doc/gforth.texi:10560
#, no-wrap
msgid "next-case"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10563
#, no-wrap
msgid "@code{next-case} ( @i{compilation case-sys -- ; run-time --  }) gforth-1.0 ``next-case''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10567
msgid ""
"Restart the @code{case} loop by jumping to the matching @code{case}.  Note "
"that @code{next-case} does not drop a cell, unlike @code{endcase}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10569
#, no-wrap
msgid "of ( @var{ compilation  -- of-sys ; run-time x1 x2 -- |x1   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10570 ../doc/gforth.texi:10571
#, no-wrap
msgid "of"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10574
#, no-wrap
msgid "@code{of} ( @i{compilation  -- of-sys ; run-time x1 x2 -- |x1  }) core-ext ``of''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10577
msgid ""
"If x1=x2, continue (dropping both); otherwise, leave x1 on the stack and "
"jump behind @code{endof} or @code{contof}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10579
#, no-wrap
msgid "?of ( @var{ compilation  -- of-sys ; run-time  f --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10580 ../doc/gforth.texi:10581
#, no-wrap
msgid "?of"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10584
#, no-wrap
msgid "@code{?of} ( @i{compilation  -- of-sys ; run-time  f --  }) gforth-1.0 ``question-of''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10587
msgid ""
"If f is true, continue; otherwise, jump behind @code{endof} or @code{contof}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10589
#, no-wrap
msgid "endof ( @var{ compilation case-sys1 of-sys -- case-sys2 ; run-time  --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10590 ../doc/gforth.texi:10591
#, no-wrap
msgid "endof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10594
#, no-wrap
msgid "@code{endof} ( @i{compilation case-sys1 of-sys -- case-sys2 ; run-time  --  }) core-ext ``end-of''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10597
msgid ""
"Exit the enclosing @code{case} structure by jumping behind @code{endcase}/"
"@code{next-case}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10599
#, no-wrap
msgid "contof ( @var{ compilation case-sys1 of-sys -- case-sys2 ; run-time  --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10600 ../doc/gforth.texi:10601
#, no-wrap
msgid "contof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10604
#, no-wrap
msgid "@code{contof} ( @i{compilation case-sys1 of-sys -- case-sys2 ; run-time  --  }) gforth-1.0 ``cont-of''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10607
msgid "Restart the @code{case} loop by jumping to the enclosing @code{case}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10613
msgid ""
"Internally, @i{of-sys} is an @code{orig}; and @i{case-sys} is a cell and "
"some stack-depth information, 0 or more @code{orig}s, and a @code{dest}."
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:10614
#, no-wrap
msgid "Programming Style"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10615
#, no-wrap
msgid "control structures programming style"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10616
#, no-wrap
msgid "programming style, arbitrary control structures"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10622
msgid ""
"In order to ensure readability we recommend that you do not create arbitrary "
"control structures directly, but define new control structure words for the "
"control structure you want and use these words in your program. For example, "
"instead of writing:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10629
#, no-wrap
msgid ""
"BEGIN\n"
"  ...\n"
"IF [ 1 CS-ROLL ]\n"
"  ...\n"
"AGAIN THEN\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10633
msgid "we recommend defining control structure words, e.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10638
#, no-wrap
msgid ""
": WHILE ( DEST -- ORIG DEST )\n"
" POSTPONE IF\n"
" 1 CS-ROLL ; immediate\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10642
#, no-wrap
msgid ""
": REPEAT ( orig dest -- )\n"
" POSTPONE AGAIN\n"
" POSTPONE THEN ; immediate\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10646
msgid "and then using these to create the control structure:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10653
#, no-wrap
msgid ""
"BEGIN\n"
"  ...\n"
"WHILE\n"
"  ...\n"
"REPEAT\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10658
msgid ""
"That's much easier to read, isn't it? Of course, @code{REPEAT} and "
"@code{WHILE} are predefined, so in this example it would not be necessary to "
"define them."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10661
#, no-wrap
msgid "calling a definition"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10662
#, no-wrap
msgid "returning from a definition"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10664
#, no-wrap
msgid "recursive definitions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10670
msgid ""
"A definition can be called simply be writing the name of the definition to "
"be called. Normally a definition is invisible during its own definition. If "
"you want to write a directly recursive definition, you can use "
"@code{recursive} to make the current definition visible, or @code{recurse} "
"to call the current definition directly."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10672
#, no-wrap
msgid "recursive ( @var{ compilation -- ; run-time --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10673 ../doc/gforth.texi:10674
#, no-wrap
msgid "recursive"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10677
#, no-wrap
msgid "@code{recursive} ( @i{compilation -- ; run-time --  }) gforth-0.2 ``recursive''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10680
msgid ""
"Make the current definition visible, enabling it to call itself recursively."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10682
#, no-wrap
msgid "recurse ( @var{ ... -- ...   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10683 ../doc/gforth.texi:10684
#, no-wrap
msgid "recurse"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10687
#, no-wrap
msgid "@code{recurse} ( @i{... -- ...  }) core ``recurse''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10689
msgid "Alias to the current definition."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10700
msgid ""
"@progstyle I prefer using @code{recursive} to @code{recurse}, because "
"calling the definition by name is more descriptive (if the name is well-"
"chosen) than the somewhat cryptic @code{recurse}.  E.g., in a quicksort "
"implementation, it is much better to read (and think) ``now sort the "
"partitions'' than to read ``now do a recursive call''."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10702
msgid "For mutual recursion, use @code{Defer}red words, like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10705
#, no-wrap
msgid ""
"Defer foo\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10708
#, no-wrap
msgid ""
": bar ( ... -- ... )\n"
" ... foo ... ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10712
#, no-wrap
msgid ""
":noname ( ... -- ... )\n"
" ... bar ... ;\n"
"IS foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10715
msgid "Deferred words are discussed in more detail in @ref{Deferred Words}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10718
msgid ""
"The current definition returns control to the calling definition when the "
"end of the definition is reached or @code{EXIT} is encountered."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10719
#, no-wrap
msgid "EXIT ( @var{ compilation -- ; run-time nest-sys --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10720 ../doc/gforth.texi:10721
#, no-wrap
msgid "EXIT"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10724
#, no-wrap
msgid "@code{EXIT} ( @i{compilation -- ; run-time nest-sys --  }) core ``EXIT''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10731
msgid ""
"Return to the calling definition; usually used as a way of forcing an early "
"return from a definition. Before @code{EXIT}ing you must clean up the return "
"stack and @code{UNLOOP} any outstanding @code{?DO}...@code{LOOP}s.  Use "
"@code{;s} for a tickable word that behaves like @code{exit} in the absence "
"of locals."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10733
#, no-wrap
msgid "?EXIT ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10734 ../doc/gforth.texi:10735
#, no-wrap
msgid "?EXIT"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10738
#, no-wrap
msgid "@code{?EXIT} ( @i{--  }) gforth-0.2 ``?EXIT''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10740
msgid "Return to the calling definition if @i{f} is true."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10742
#, no-wrap
msgid ";s ( @var{ R:w --  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10743 ../doc/gforth.texi:10744
#, no-wrap
msgid ";s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10747
#, no-wrap
msgid "@code{;s} ( @i{R:w -- }) gforth-0.2 ``semis''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10749
msgid "The primitive compiled by @code{EXIT}."
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10754 ../doc/gforth.texi:10822 ../doc/gforth.texi:10823
#, no-wrap
msgid "exceptions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10763
msgid ""
"If a word detects an error condition that it cannot handle, it can "
"@code{throw} an exception.  In the simplest case, this will terminate your "
"program, and report an appropriate error."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10764
#, no-wrap
msgid "throw ( @var{ y1 .. ym nerror -- y1 .. ym / z1 .. zn error   } ) exception"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10765 ../doc/gforth.texi:10766
#, no-wrap
msgid "throw"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10769
#, no-wrap
msgid "@code{throw} ( @i{y1 .. ym nerror -- y1 .. ym / z1 .. zn error  }) exception ``throw''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10773
msgid ""
"If @i{nerror} is 0, drop it and continue.  Otherwise, transfer control to "
"the next dynamically enclosing exception handler, reset the stacks "
"accordingly, and push @i{nerror}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10775
#, no-wrap
msgid "fast-throw ( @var{ ... wball -- ... wball  } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10776 ../doc/gforth.texi:10777
#, no-wrap
msgid "fast-throw"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10780
#, no-wrap
msgid "@code{fast-throw} ( @i{... wball -- ... wball }) gforth-experimental ``fast-throw''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10783
msgid ""
"Lightweight @code{throw} variant: only for non-zero balls, and does not "
"store a backtrace or deal with missing @code{catch}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10795
msgid ""
"@code{Throw} consumes a cell-sized error number on the stack. There are some "
"predefined error numbers in Standard Forth (see @file{errors.fs}).  In "
"Gforth (and most other systems) you can use the iors produced by various "
"words as error numbers (e.g., a typical use of @code{allocate} is "
"@code{allocate throw}).  Gforth also provides the word @code{exception} to "
"define your own error numbers (with decent error reporting); a Standard "
"Forth version of this word (but without the error messages) is available in "
"@code{compat/except.fs}.  And finally, you can use your own error numbers "
"(anything outside the range -4095..0), but won't get nice error messages, "
"only numbers.  For example, try:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10801
#, no-wrap
msgid ""
"-10 throw                    \\ Standard defined\n"
"-267 throw                   \\ system defined\n"
"s\" my error\" exception throw \\ user defined\n"
"7 throw                      \\ arbitrary number\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10803
#, no-wrap
msgid "exception ( @var{ addr u -- n   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10804 ../doc/gforth.texi:10805
#, no-wrap
msgid "exception"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10808
#, no-wrap
msgid "@code{exception} ( @i{addr u -- n  }) gforth-0.2 ``exception''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10813
msgid ""
"@var{n} is a previously unused @code{throw} value in the range "
"(-4095...-256). Consecutive calls to @code{exception} return consecutive "
"decreasing numbers. Gforth uses the string @var{addr u} as an error message."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10820
msgid ""
"There are also cases where you have a word (typically modeled after POSIX' "
"@code{strerror}) for converting an error number into a string.  You can use "
"the following word to get these strings into Gforth's error handling:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10821
#, no-wrap
msgid "exceptions ( @var{ xt n1 -- n2   } ) gforth-1.0"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10826
#, no-wrap
msgid "@code{exceptions} ( @i{xt n1 -- n2  }) gforth-1.0 ``exceptions''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10833
msgid ""
"@i{Xt} @code{( +n -- c-addr u )} converts an error number in the range "
"0<=@i{n}<@i{n1} into an error message.  @code{Exceptions} reserves @i{n1} "
"error codes in the range n2-n1<n3<=n2.  When (at some later point in time) "
"the Gforth error code @i{n3} in that range is thrown, it pushes @i{n2-n3} "
"and then executes @i{xt} to produce the error message."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10839
msgid ""
"As an example, if the @code{errno} errors (and the conversion using "
"@code{strerror}) was not already directly supported by Gforth, you could tie "
"@code{strerror} in as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10848
#, no-wrap
msgid ""
"' strerror 1536 exceptions constant errno-base\n"
": errno-ior ( -- n )\n"
"\\ n is the Gforth ior corresponding to the value in errno, so\n"
"\\ we have to convert between the ranges here.\n"
"\\ ERRNO is not a Gforth word, so you  would have to use the\n"
"\\ C interface to access it.\n"
"  errno errno-base over - swap 0<> and ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10854
msgid ""
"When you call a C function (with the C interface) and its return value "
"indictes that an error happened, you can then perform @code{errno-ior throw} "
"to produce an exception with the proper error message (such as ``Permission "
"denied'')."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10857
msgid ""
"A common idiom to @code{THROW} a specific @i{err#} if a flag is true is this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10860
#, no-wrap
msgid "@code{( flag ) 0<> @i{err#} and throw}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10869
msgid ""
"Your program can provide exception handlers to catch exceptions.  An "
"exception handler can be used to correct the problem, or to clean up some "
"data structures and just throw the exception to the next exception handler.  "
"Note that @code{throw} jumps to the dynamically innermost exception "
"handler.  The system's exception handler is outermost, and just prints an "
"error and restarts command-line interpretation (or, in batch mode (i.e., "
"while processing the shell command line), leaves Gforth)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10871
msgid "The Standard Forth way to catch exceptions is @code{catch}:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10872
#, no-wrap
msgid "catch ( @var{ x1 .. xn xt -- y1 .. ym 0 / z1 .. zn error   } ) exception"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10873 ../doc/gforth.texi:10874
#, no-wrap
msgid "catch"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10877
#, no-wrap
msgid "@code{catch} ( @i{x1 .. xn xt -- y1 .. ym 0 / z1 .. zn error  }) exception ``catch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10883
msgid ""
"@code{Executes} @i{xt}.  If execution returns normally, @code{catch} pushes "
"0 on the stack.  If execution returns through @code{throw}, all the stacks "
"are reset to the depth on entry to @code{catch}, and the TOS (the @i{xt} "
"position) is replaced with the throw code."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10885
#, no-wrap
msgid "nothrow ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10886 ../doc/gforth.texi:10887
#, no-wrap
msgid "nothrow"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10890
#, no-wrap
msgid "@code{nothrow} ( @i{--  }) gforth-0.7 ``nothrow''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10895
msgid ""
"Use this (or the standard sequence @code{['] false catch 2drop})  after a "
"@code{catch} or @code{endtry} that does not rethrow; this ensures that the "
"next @code{throw} will record a backtrace."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10900
msgid ""
"The most common use of exception handlers is to clean up the state when an "
"error happens.  E.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10907
#, no-wrap
msgid ""
"base @@ >r hex \\ actually the HEX should be inside foo to protect\n"
"              \\ against exceptions between HEX and CATCH\n"
"['] foo catch ( nerror|0 )\n"
"r> base !\n"
"( nerror|0 ) throw \\ pass it on\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10911
msgid ""
"A use of @code{catch} for handling the error @code{myerror} might look like "
"this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10918
#, no-wrap
msgid ""
"['] foo catch\n"
"CASE\n"
"  myerror OF ... ( do something about it ) nothrow ENDOF\n"
"  dup throw \\ default: pass other errors on, do nothing on non-errors\n"
"ENDCASE\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10922
msgid ""
"Having to wrap the code into a separate word is often cumbersome, therefore "
"Gforth provides an alternative syntax:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10931
#, no-wrap
msgid ""
"TRY\n"
"  @i{code1}\n"
"  IFERROR\n"
"    @i{code2}\n"
"  THEN\n"
"  @i{code3}\n"
"ENDTRY\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10938
msgid ""
"This performs @i{code1}.  If @i{code1} completes normally, execution "
"continues with @i{code3}.  If there is an exception in @i{code1} or before "
"@code{endtry}, the stacks are reset to the depth during @code{try}, the "
"throw value is pushed on the data stack, and execution continues at "
"@i{code2}, and finally falls through to @i{code3}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10939
#, no-wrap
msgid "try ( @var{ compilation  -- orig ; run-time  -- R:sys1   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10940 ../doc/gforth.texi:10941
#, no-wrap
msgid "try"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10944
#, no-wrap
msgid "@code{try} ( @i{compilation  -- orig ; run-time  -- R:sys1  }) gforth-0.5 ``try''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10946
msgid "Start an exception-catching region."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10948
#, no-wrap
msgid "endtry ( @var{ compilation  -- ; run-time  R:sys1 --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10949 ../doc/gforth.texi:10950
#, no-wrap
msgid "endtry"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10953
#, no-wrap
msgid "@code{endtry} ( @i{compilation  -- ; run-time  R:sys1 --  }) gforth-0.5 ``endtry''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10955
msgid "End an exception-catching region."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:10957
#, no-wrap
msgid "iferror ( @var{ compilation  orig1 -- orig2 ; run-time  --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:10958 ../doc/gforth.texi:10959
#, no-wrap
msgid "iferror"
msgstr ""

#. type: format
#: ../doc/gforth.texi:10962
#, no-wrap
msgid "@code{iferror} ( @i{compilation  orig1 -- orig2 ; run-time  --  }) gforth-0.7 ``iferror''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10966
msgid ""
"Starts the exception handling code (executed if there is an exception "
"between @code{try} and @code{endtry}).  This part has to be finished with "
"@code{then}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:10971
msgid ""
"If you don't need @i{code2}, you can write @code{restore} instead of "
"@code{iferror then}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10978
#, no-wrap
msgid ""
"TRY\n"
"  @i{code1}\n"
"RESTORE\n"
"  @i{code3}\n"
"ENDTRY\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:10980
#, no-wrap
msgid "unwind-protect"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10982
msgid "The cleanup example from above in this syntax:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:10992
#, no-wrap
msgid ""
"base @@ @{ oldbase @}\n"
"TRY\n"
"  hex foo \\ now the hex is placed correctly\n"
"  0       \\ value for throw\n"
"RESTORE\n"
"  oldbase base !\n"
"ENDTRY\n"
"throw\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:10998
msgid ""
"An additional advantage of this variant is that an exception between "
"@code{restore} and @code{endtry} (e.g., from the user pressing @kbd{Ctrl-C}) "
"restarts the execution of the code after @code{restore}, so the base will be "
"restored under all circumstances."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11007
msgid ""
"However, you have to ensure that this code does not cause an exception "
"itself, otherwise the @code{iferror}/@code{restore} code will loop.  "
"Moreover, you should also make sure that the stack contents needed by the "
"@code{iferror}/@code{restore} code exist everywhere between @code{try} and "
"@code{endtry}; in our example this is achived by putting the data in a local "
"before the @code{try} (you cannot use the return stack because the exception "
"frame (@i{sys1}) is in the way there)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11009
msgid "This kind of usage corresponds to Lisp's @code{unwind-protect}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11010
#, no-wrap
msgid "@code{recover} (old Gforth versions)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11013
msgid ""
"If you do not want this exception-restarting behaviour, you achieve this as "
"follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11020
#, no-wrap
msgid ""
"TRY\n"
"  @i{code1}\n"
"ENDTRY-IFERROR\n"
"  @i{code2}\n"
"THEN\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11025
msgid ""
"If there is an exception in @i{code1}, then @i{code2} is executed, otherwise "
"execution continues behind the @code{then} (or in a possible @code{else} "
"branch).  This corresponds to the construct"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11032
#, no-wrap
msgid ""
"TRY\n"
"  @i{code1}\n"
"RECOVER\n"
"  @i{code2}\n"
"ENDTRY\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11038
msgid ""
"in Gforth before version 0.7.  So you can directly replace @code{recover}-"
"using code; however, we recommend that you check if it would not be better "
"to use one of the other @code{try} variants while you are at it."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11048
msgid ""
"To ease the transition, Gforth provides two compatibility files: "
"@file{endtry-iferror.fs} provides the @code{try ... endtry-iferror ... then} "
"syntax (but not @code{iferror} or @code{restore}) for old systems; "
"@file{recover-endtry.fs} provides the @code{try ... recover ... endtry} "
"syntax on new systems, so you can use that file as a stopgap to run old "
"programs.  Both files work on any system (they just do nothing if the system "
"already has the syntax it implements), so you can unconditionally "
"@code{require} one of these files, even if you use a mix old and new systems."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11049
#, no-wrap
msgid "restore ( @var{ compilation  orig1 -- ; run-time  --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11050 ../doc/gforth.texi:11051
#, no-wrap
msgid "restore"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11054
#, no-wrap
msgid "@code{restore} ( @i{compilation  orig1 -- ; run-time  --  }) gforth-0.7 ``restore''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11057
msgid ""
"Starts restoring code, that is executed if there is an exception, and if "
"there is no exception."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11059
#, no-wrap
msgid "endtry-iferror ( @var{ compilation  orig1 -- orig2 ; run-time  R:sys1 --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11060 ../doc/gforth.texi:11061
#, no-wrap
msgid "endtry-iferror"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11064
#, no-wrap
msgid "@code{endtry-iferror} ( @i{compilation  orig1 -- orig2 ; run-time  R:sys1 --  }) gforth-0.7 ``endtry-iferror''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11070
msgid ""
"End an exception-catching region while starting exception-handling code "
"outside that region (executed if there is an exception between @code{try} "
"and @code{endtry-iferror}).  This part has to be finished with @code{then} "
"(or @code{else}...@code{then})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11074
msgid "Here's the error handling example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11084
#, no-wrap
msgid ""
"TRY\n"
"  foo\n"
"ENDTRY-IFERROR\n"
"  CASE\n"
"    myerror OF ... ( do something about it ) nothrow ENDOF\n"
"    throw \\ pass other errors on\n"
"  ENDCASE\n"
"THEN\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11091
msgid ""
"@progstyle As usual, you should ensure that the stack depth is statically "
"known at the end: either after the @code{throw} for passing on errors, or "
"after the @code{ENDTRY} (or, if you use @code{catch}, after the end of the "
"selection construct for handling the error)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11095
msgid ""
"There are two alternatives to @code{throw}: @code{Abort\"} is conditional "
"and you can provide an error message.  @code{Abort} just produces an "
"``Aborted'' error."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11101
msgid ""
"The problem with these words is that exception handlers cannot differentiate "
"between different @code{abort\"}s; they just look like @code{-2 throw} to "
"them (the error message cannot be accessed by standard programs).  Similar "
"@code{abort} looks like @code{-1 throw} to exception handlers."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11102
#, no-wrap
msgid "ABORT\" ( @var{ compilation 'ccc\"' -- ; run-time f --   } ) core,exception-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11103 ../doc/gforth.texi:11104
#, no-wrap
msgid "ABORT\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:11107
#, no-wrap
msgid "@code{ABORT\"} ( @i{compilation 'ccc\"' -- ; run-time f --  }) core,exception-ext ``abort-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11111
msgid ""
"If any bit of @i{f} is non-zero, perform the function of @code{-2 throw}, "
"displaying the string @i{ccc} if there is no exception frame on the "
"exception stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11113
#, no-wrap
msgid "abort ( @var{ ?? -- ??   } ) core,exception-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11114 ../doc/gforth.texi:11115
#, no-wrap
msgid "abort"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11118
#, no-wrap
msgid "@code{abort} ( @i{?? -- ??  }) core,exception-ext ``abort''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11120
msgid "@code{-1 throw}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11126
msgid ""
"For problems that are not that awful that you need to abort execution, you "
"can just display a warning.  The variable @code{warnings} allows to tune how "
"many warnings you see."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11127
#, no-wrap
msgid "WARNING\" ( @var{ compilation 'ccc\"' -- ; run-time f --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11128 ../doc/gforth.texi:11129
#, no-wrap
msgid "WARNING\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:11132
#, no-wrap
msgid "@code{WARNING\"} ( @i{compilation 'ccc\"' -- ; run-time f --  }) gforth-1.0 ``WARNING\"''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11134
msgid "if @i{f} is non-zero, display the string @i{ccc} as warning message."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11136
#, no-wrap
msgid "warnings ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11137 ../doc/gforth.texi:11138
#, no-wrap
msgid "warnings"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11141
#, no-wrap
msgid "@code{warnings} ( @i{-- addr  }) gforth-0.2 ``warnings''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11143
msgid "set warnings level to"
msgstr ""

#. type: item
#: ../doc/gforth.texi:11144
#, no-wrap
msgid "0"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11146
msgid "turns warnings off"
msgstr ""

#. type: item
#: ../doc/gforth.texi:11146
#, no-wrap
msgid "-1"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11148
msgid "turns normal warnings on"
msgstr ""

#. type: item
#: ../doc/gforth.texi:11148
#, no-wrap
msgid "-2"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11150
msgid "turns beginner warnings on"
msgstr ""

#. type: item
#: ../doc/gforth.texi:11150
#, no-wrap
msgid "-3"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11152
msgid "pedantic warnings on"
msgstr ""

#. type: item
#: ../doc/gforth.texi:11152
#, no-wrap
msgid "-4"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11154
msgid "turns warnings into errors (including beginner warnings)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11161
#, no-wrap
msgid "defining words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11164
msgid ""
"Defining words are used to extend Forth by creating new entries in the "
"dictionary."
msgstr ""

#. type: node
#: ../doc/gforth.texi:11181 ../doc/gforth.texi:11182 ../doc/gforth.texi:11251
#, no-wrap
msgid "CREATE"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11183
#, no-wrap
msgid "simple defining words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11184
#, no-wrap
msgid "defining words, simple"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11189
msgid ""
"Defining words are used to create new entries in the dictionary. The "
"simplest defining word is @code{CREATE}. @code{CREATE} is used like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11192
#, no-wrap
msgid "CREATE new-word1\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11201
msgid ""
"@code{CREATE} is a parsing word, i.e., it takes an argument from the input "
"stream (@code{new-word1} in our example).  It generates a dictionary entry "
"for @code{new-word1}. When @code{new-word1} is executed, all that it does is "
"leave an address on the stack. The address represents the value of the data "
"space pointer (@code{HERE}) at the time that @code{new-word1} was defined. "
"Therefore, @code{CREATE} is a way of associating a name with the address of "
"a region of memory."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11202
#, no-wrap
msgid "Create ( @var{ \"name\" --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11203 ../doc/gforth.texi:11204
#, no-wrap
msgid "Create"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11207
#, no-wrap
msgid "@code{Create} ( @i{\"name\" --  }) core ``Create''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11216
msgid ""
"Note that Standard Forth guarantees only for @code{create} that its body is "
"in dictionary data space (i.e., where @code{here}, @code{allot} etc. work, "
"@pxref{Dictionary allocation}).  Also, in Standard Forth only @code{create}d "
"words can be modified with @code{does>} (@pxref{User-defined Defining "
"Words}).  And in Standard Forth @code{>body} can only be applied to "
"@code{create}d words."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11220
msgid ""
"By extending this example to reserve some memory in data space, we end up "
"with something like a @i{variable}. Here are two different ways to do it:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11224
#, no-wrap
msgid ""
"CREATE new-word2 1 cells allot  \\ reserve 1 cell - initial value undefined\n"
"CREATE new-word3 4 ,            \\ reserve 1 cell and initialise it (to 4)\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11228
msgid ""
"The variable can be examined and modified using @code{@@} (``fetch'') and "
"@code{!} (``store'') like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11232
#, no-wrap
msgid ""
"new-word2 @@ .      \\ get address, fetch from it and display\n"
"1234 new-word2 !   \\ new value, get address, store to it\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11234
#, no-wrap
msgid "arrays"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11237
msgid ""
"A similar mechanism can be used to create arrays. For example, an 80-"
"character text input buffer:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11240
#, no-wrap
msgid ""
"CREATE text-buf 80 chars allot\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11243
#, no-wrap
msgid ""
"text-buf 0 chars + c@@ \\ the 1st character (offset 0)\n"
"text-buf 3 chars + c@@ \\ the 4th character (offset 3)\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11249
msgid ""
"You can build arbitrarily complex data structures by allocating appropriate "
"areas of memory. For further discussions of this, and to learn about some "
"Gforth tools that make it easier, @xref{Structures}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:11251 ../doc/gforth.texi:11338 ../doc/gforth.texi:11339
#: ../doc/gforth.texi:11458
#, no-wrap
msgid "Constants"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11253
#, no-wrap
msgid "variables"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11259
msgid ""
"The previous section showed how a sequence of commands could be used to "
"generate a variable.  As a final refinement, the whole code sequence can be "
"wrapped up in a defining word (pre-empting the subject of the next section), "
"making it easier to create new variables:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11263
#, no-wrap
msgid ""
": myvariableX ( \"name\" -- a-addr ) CREATE 1 cells allot ;\n"
": myvariable0 ( \"name\" -- a-addr ) CREATE 0 , ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11266
#, no-wrap
msgid ""
"myvariableX foo \\ variable foo starts off with an unknown value\n"
"myvariable0 joe \\ whilst joe is initialised to 0\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11270
#, no-wrap
msgid ""
"45 3 * foo !   \\ set foo to 135\n"
"1234 joe !     \\ set joe to 1234\n"
"3 joe +!       \\ increment joe by 3.. to 1237\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11282
msgid ""
"Not surprisingly, there is no need to define @code{myvariable}, since Forth "
"already has a definition @code{Variable}. Standard Forth does not guarantee "
"that a @code{Variable} is initialised when it is created (i.e., it may "
"behave like @code{myvariableX}). In contrast, Gforth's @code{Variable} "
"initialises the variable to 0 (i.e., it behaves exactly like "
"@code{myvariable0}). Forth also provides @code{2Variable} and "
"@code{fvariable} for double and floating-point variables, respectively -- "
"they are initialised to 0. and 0e in Gforth. If you use a @code{Variable} to "
"store a boolean, you can use @code{on} and @code{off} to toggle its state."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11283
#, no-wrap
msgid "Variable ( @var{ \"name\" --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11284 ../doc/gforth.texi:11285
#, no-wrap
msgid "Variable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11288
#, no-wrap
msgid "@code{Variable} ( @i{\"name\" --  }) core ``Variable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11291
msgid ""
"Define @i{name} and reserve a cell starting at @i{addr}.  @i{name} run-time: "
"@code{( -- addr )}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11293
#, no-wrap
msgid "AVariable ( @var{ \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11294 ../doc/gforth.texi:11295
#, no-wrap
msgid "AVariable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11298
#, no-wrap
msgid "@code{AVariable} ( @i{\"name\" --  }) gforth-0.2 ``AVariable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11302
msgid ""
"Works like @code{variable}, but (when used in cross-compiled code) tells the "
"cross-compiler that the cell stored in the variable is an address."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11304
#, no-wrap
msgid "2Variable ( @var{ \"name\" --   } ) double"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11305 ../doc/gforth.texi:11306
#, no-wrap
msgid "2Variable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11309
#, no-wrap
msgid "@code{2Variable} ( @i{\"name\" --  }) double ``two-variable''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11311
#, no-wrap
msgid "fvariable ( @var{ \"name\" --   } ) floating"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11312 ../doc/gforth.texi:11313
#, no-wrap
msgid "fvariable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11316
#, no-wrap
msgid "@code{fvariable} ( @i{\"name\" --  }) floating ``f-variable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11320
msgid "Finally, for buffers of arbitrary length there is"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11321
#, no-wrap
msgid "buffer: ( @var{ u \"name\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11322 ../doc/gforth.texi:11323
#, no-wrap
msgid "buffer:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11326
#, no-wrap
msgid "@code{buffer:} ( @i{u \"name\" --  }) core-ext ``buffer-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11330
msgid ""
"Define @i{name} and reserve @i{u} bytes starting at @i{addr}.  @i{name} run-"
"time: @code{( -- addr )}.  Gforth initializes the reserved bytes to 0, but "
"the standard does not guarantee this."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11340
#, no-wrap
msgid "constants"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11344
msgid ""
"@code{Constant} allows you to declare a fixed value and refer to it by name. "
"For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11348
#, no-wrap
msgid ""
"12 Constant INCHES-PER-FOOT\n"
"3E+08 fconstant SPEED-O-LIGHT\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11360
msgid ""
"A @code{Variable} can be both read and written, so its run-time behaviour is "
"to supply an address through which its current value can be manipulated. In "
"contrast, the value of a @code{Constant} cannot be changed once it has been "
"declared@footnote{Well, often it can be -- but not in a Standard, portable "
"way. It's safer to use a @code{Value} (read on).} so it's not necessary to "
"supply the address -- it is more efficient to return the value of the "
"constant directly. That's exactly what happens; the run-time effect of a "
"constant is to put its value on the top of the stack (You can find one way "
"of implementing @code{Constant} in @ref{User-defined Defining Words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11363
msgid ""
"Forth also provides @code{2Constant} and @code{fconstant} for defining "
"double and floating-point constants, respectively."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11364
#, no-wrap
msgid "Constant ( @var{ w \"name\" --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11365 ../doc/gforth.texi:11366
#, no-wrap
msgid "Constant"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11369
#, no-wrap
msgid "@code{Constant} ( @i{w \"name\" --  }) core ``Constant''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11371
msgid "Define a constant @i{name} with value @i{w}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11373
msgid "@i{name} execution: @i{-- w}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11375
#, no-wrap
msgid "AConstant ( @var{ addr \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11376 ../doc/gforth.texi:11377
#, no-wrap
msgid "AConstant"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11380
#, no-wrap
msgid "@code{AConstant} ( @i{addr \"name\" --  }) gforth-0.2 ``AConstant''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11383
msgid ""
"Like @code{constant}, but defines a constant for an address (this only makes "
"a difference in the cross-compiler)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11385
#, no-wrap
msgid "2Constant ( @var{ w1 w2 \"name\" --   } ) double"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11386 ../doc/gforth.texi:11387
#, no-wrap
msgid "2Constant"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11390
#, no-wrap
msgid "@code{2Constant} ( @i{w1 w2 \"name\" --  }) double ``two-constant''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11392
#, no-wrap
msgid "fconstant ( @var{ r \"name\" --   } ) floating"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11393 ../doc/gforth.texi:11394
#, no-wrap
msgid "fconstant"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11397
#, no-wrap
msgid "@code{fconstant} ( @i{r \"name\" --  }) floating ``f-constant''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11426
msgid ""
"Constants in Forth behave differently from their equivalents in other "
"programming languages. In other languages, a constant (such as an EQU in "
"assembler or a #define in C) only exists at compile-time; in the executable "
"program the constant has been translated into an absolute number and, unless "
"you are using a symbolic debugger, it's impossible to know what abstract "
"thing that number represents. In Forth a constant has an entry in the header "
"space and remains there after the code that uses it has been defined. In "
"fact, it must remain in the dictionary since it has run-time duties to "
"perform. For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11430
#, no-wrap
msgid ""
"12 Constant INCHES-PER-FOOT\n"
": FEET-TO-INCHES ( n1 -- n2 ) INCHES-PER-FOOT * ;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11432
#, no-wrap
msgid "in-lining of constants"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11439
msgid ""
"When @code{FEET-TO-INCHES} is executed, it will in turn execute the xt "
"associated with the constant @code{INCHES-PER-FOOT}. If you use @code{see} "
"to decompile the definition of @code{FEET-TO-INCHES}, you can see that it "
"makes a call to @code{INCHES-PER-FOOT}. Some Forth compilers attempt to "
"optimise constants by in-lining them where they are used. You can force "
"Gforth to in-line a constant like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11442
#, no-wrap
msgid ": FEET-TO-INCHES ( n1 -- n2 ) [ INCHES-PER-FOOT ] LITERAL * ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11448
msgid ""
"If you use @code{see} to decompile @i{this} version of @code{FEET-TO-"
"INCHES}, you can see that @code{INCHES-PER-FOOT} is no longer present. To "
"understand how this works, read @ref{Interpret/Compile states}, and "
"@ref{Literals}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11456
msgid ""
"In-lining constants in this way might improve execution time fractionally, "
"and can ensure that a constant is now only referenced at compile-time. "
"However, the definition of the constant still remains in the dictionary. "
"Some Forth compilers provide a mechanism for controlling a second dictionary "
"for holding transient words such that this second dictionary can be deleted "
"later in order to recover memory space. However, there is no standard way of "
"doing this."
msgstr ""

#. type: node
#: ../doc/gforth.texi:11458 ../doc/gforth.texi:11536 ../doc/gforth.texi:11537
#: ../doc/gforth.texi:11587
#, no-wrap
msgid "Varues"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11460
#, no-wrap
msgid "values"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11466
msgid ""
"A @code{Value} behaves like a @code{Constant}, but it can be changed.  "
"@code{TO} is a parsing word that changes a @code{Values}.  In Gforth (not in "
"Standard Forth) you can access (and change) a @code{value} also with "
"@code{>body}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11469
msgid "Here are some examples:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11475
#, no-wrap
msgid ""
"12 Value APPLES     \\ Define APPLES with an initial value of 12\n"
"34 TO APPLES        \\ Change the value of APPLES. TO is a parsing word\n"
"1 ' APPLES >body +! \\ Increment APPLES.  Non-standard usage.\n"
"APPLES              \\ puts 35 on the top of the stack.\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11477
#, no-wrap
msgid "Value ( @var{ w \"name\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11478 ../doc/gforth.texi:11479
#, no-wrap
msgid "Value"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11482
#, no-wrap
msgid "@code{Value} ( @i{w \"name\" --  }) core-ext ``Value''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11485
msgid ""
"Define @i{name} with the initial value @i{w}; this value can be changed with "
"@code{to @i{name}} or @code{->@i{name}}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11487
msgid "@i{name} execution: @i{-- w2}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11489
#, no-wrap
msgid "AValue ( @var{ w \"name\" --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11490 ../doc/gforth.texi:11491
#, no-wrap
msgid "AValue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11494
#, no-wrap
msgid "@code{AValue} ( @i{w \"name\" --  }) gforth-0.6 ``AValue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11497
msgid ""
"Like @code{value}, but defines a value for an address (this only makes a "
"difference in the cross-compiler)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11499
#, no-wrap
msgid "2Value ( @var{ d \"name\" --   } ) double-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11500 ../doc/gforth.texi:11501
#, no-wrap
msgid "2Value"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11504
#, no-wrap
msgid "@code{2Value} ( @i{d \"name\" --  }) double-ext ``two-value''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11506
#, no-wrap
msgid "fvalue ( @var{ r \"name\" --   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11507 ../doc/gforth.texi:11508
#, no-wrap
msgid "fvalue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11511
#, no-wrap
msgid "@code{fvalue} ( @i{r \"name\" --  }) floating-ext ``f-value''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11515
msgid ""
"Define @i{name} @code{( -- r1 )} where @i{r1} initially is @i{r}; this value "
"can be changed with @code{to @i{name}} or @code{->@i{name}}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11517
#, no-wrap
msgid "TO ( @var{ value \"name\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11518 ../doc/gforth.texi:11519
#, no-wrap
msgid "TO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11522
#, no-wrap
msgid "@code{TO} ( @i{value \"name\" --  }) core-ext ``TO''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11524
msgid "changes the value of @var{name} to @var{value}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11526
#, no-wrap
msgid "+TO ( @var{ value \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11527 ../doc/gforth.texi:11528
#, no-wrap
msgid "+TO"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11531
#, no-wrap
msgid "@code{+TO} ( @i{value \"name\" --  }) gforth-1.0 ``+TO''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11533
msgid "increments the value of @var{name} by @var{value}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11538
#, no-wrap
msgid "varues"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11544
msgid ""
"Sometimes you want to take the address of a value-like word.  Because this "
"has some disadvantages, Gforth asks you to be explicit about it, and use "
"@code{varue} (named that way because it combines characteristics of a "
"variable and a value) to declare the name."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11545
#, no-wrap
msgid "Varue ( @var{ w \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11546 ../doc/gforth.texi:11547
#, no-wrap
msgid "Varue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11550
#, no-wrap
msgid "@code{Varue} ( @i{w \"name\" --  }) gforth-1.0 ``Varue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11553
msgid ""
"Like @code{value}, but you can also use @code{addr @i{name}}; in the future, "
"varues may be less efficient than values."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11555
#, no-wrap
msgid "2varue ( @var{ x1 x2 \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11556 ../doc/gforth.texi:11557
#, no-wrap
msgid "2varue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11560
#, no-wrap
msgid "@code{2varue} ( @i{x1 x2 \"name\" --  }) gforth-1.0 ``2varue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11563
msgid ""
"Like @code{2value}, but you can also use @code{addr @i{name}}; in the "
"future, 2varues may be less efficient than 2values."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11565
#, no-wrap
msgid "fvarue ( @var{ r \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11566 ../doc/gforth.texi:11567
#, no-wrap
msgid "fvarue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11570
#, no-wrap
msgid "@code{fvarue} ( @i{r \"name\" --  }) gforth-1.0 ``fvarue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11573
msgid ""
"Like @code{fvalue}, but you can also use @code{addr @i{name}}; in the "
"future, fvarues may be less efficient than fvalues."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11575
#, no-wrap
msgid "addr ( @var{ \"name\" -- addr   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11576 ../doc/gforth.texi:11577
#, no-wrap
msgid "addr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11580
#, no-wrap
msgid "@code{addr} ( @i{\"name\" -- addr  }) gforth-1.0 ``addr''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11584
msgid ""
"provides the address @var{addr} of the varue, 2varue, or fvarue @var{name} "
"or a local @i{name} defined with one of @code{wa: ca: da: fa: xta:}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11589 ../doc/gforth.texi:11704
#, no-wrap
msgid "colon definitions"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11594
#, no-wrap
msgid ""
": name ( ... -- ... )\n"
"    word1 word2 word3 ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11599
msgid ""
"Creates a word called @code{name} that, upon execution, executes @code{word1 "
"word2 word3}. @code{name} is a @dfn{(colon) definition}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11604
msgid ""
"The explanation above is somewhat superficial. For simple examples of colon "
"definitions see @ref{Your first definition}.  For an in-depth discussion of "
"some of the issues involved, @xref{Interpretation and Compilation Semantics}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11605
#, no-wrap
msgid ": ( @var{ \"name\" -- colon-sys   } ) core"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:11606
#, no-wrap
msgid ":"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11609
#, no-wrap
msgid "@code{:} ( @i{\"name\" -- colon-sys  }) core ``colon''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11611
#, no-wrap
msgid "; ( @var{ compilation colon-sys -- ; run-time nest-sys --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11612 ../doc/gforth.texi:11613
#, no-wrap
msgid ";"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11616
#, no-wrap
msgid "@code{;} ( @i{compilation colon-sys -- ; run-time nest-sys --  }) core ``semicolon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11621
msgid ""
"We plan to to perform automatic inlining eventually, but for now you can "
"perform inlining with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11622
#, no-wrap
msgid "inline: ( @var{ \"name\" -- inline:-sys   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11623 ../doc/gforth.texi:11624
#, no-wrap
msgid "inline:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11627
#, no-wrap
msgid "@code{inline:} ( @i{\"name\" -- inline:-sys  }) gforth-experimental ``inline-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11635
msgid ""
"Start inline colon definition.  The code between @code{inline:} and @code{;"
"inline} has to compile (not perform) the code to be inlined, but the "
"resulting definition @i{name} is a colon definition that performs the "
"inlined code.  Note that the compiling code must have the stack effect "
"@code{( -- )}, otherwise you will get an error when Gforth tries to create "
"the colon definition for @i{name}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11637
#, no-wrap
msgid ";inline ( @var{ inline:-sys --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11638 ../doc/gforth.texi:11639
#, no-wrap
msgid ";inline"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11642
#, no-wrap
msgid "@code{;inline} ( @i{inline:-sys --  }) gforth-experimental ``semi-inline''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11644
msgid "end inline definition started with @code{inline:}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11648
msgid "As an example, you can define an inlined word and use it with"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11652
#, no-wrap
msgid ""
"inline: my2dup ( a b -- a b a b )\n"
"    ]] over over [[ ;inline\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11657
#, no-wrap
msgid ""
"#1. my2dup d. d.\n"
": foo my2dup ;\n"
"#1. foo d. d.\n"
"see foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11666
msgid ""
"Inline words are related to macros (@pxref{Macros}); the difference is that "
"a macro has immediate compilation semantics while an @code{inline:}-defined "
"word has default compilation semantics; this means that you normally use a "
"macro only inside a colon definition, while you can use an @code{inline:} "
"word also interpretively.  But that also means that you can do some things "
"with macros that you cannot do as an @code{inline:} word.  E.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11672
#, no-wrap
msgid ""
"\\ Doesn't work:\n"
"\\   inline: endif ]] then [[ ;inline\n"
"\\ Instead, write a macro:\n"
": endif ]] then [[ ; immediate\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11679
msgid ""
"Conversely, for words that would be fine as non-immediate colon definitions, "
"define them as non-immediate colon definitions or (if utmost performance is "
"required) as @code{inline:} words; don't define them as macros, because then "
"you cannot properly use them interpretively:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11684
#, no-wrap
msgid ""
": another2dup ]] over over [[ ; immediate\n"
"\\ Doesn't work:\n"
"\\   #1. another2dup d. d.\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11689
msgid ""
"You may wonder why you have to write compiling code between @code{inline:} "
"and @code{;inline}.  That's because the implementation of an inline word "
"like @code{my2dup} above works similar to:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11693
#, no-wrap
msgid ""
": compile-my2dup ( xt -- )\n"
"    drop ]] over over [[ ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11696
#, no-wrap
msgid ""
": my2dup [ 0 compile-my2dup ] ;\n"
"' compile-my2dup set-optimizer\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11701
msgid ""
"The @code{DROP} and @code{0} are there because @code{compile-my2dup} is the "
"implementation of @code{compile,} for @code{my2dup}, and @code{compile,} "
"expects an xt (@pxref{User-defined compile-comma})."
msgstr ""

#. type: node
#: ../doc/gforth.texi:11702 ../doc/gforth.texi:11781 ../doc/gforth.texi:11782
#: ../doc/gforth.texi:11833
#, no-wrap
msgid "Quotations"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11705
#, no-wrap
msgid "defining words without name"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11709
msgid ""
"Sometimes you want to define an @dfn{anonymous word}; a word without a name. "
"You can do this with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11710
#, no-wrap
msgid ":noname ( @var{ -- xt colon-sys   } ) core-ext"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:11711
#, no-wrap
msgid ":noname"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11714
#, no-wrap
msgid "@code{:noname} ( @i{-- xt colon-sys  }) core-ext ``colon-no-name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11720
msgid ""
"This leaves the execution token for the word on the stack after the closing "
"@code{;}. Here's an example in which a deferred word is initialised with an "
"@code{xt} from an anonymous colon definition:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11726
#, no-wrap
msgid ""
"Defer deferred\n"
":noname ( ... -- ... )\n"
"  ... ;\n"
"IS deferred\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11731
msgid ""
"Gforth provides an alternative way of doing this, using two separate words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11732
#, no-wrap
msgid "noname ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11733 ../doc/gforth.texi:11734
#, no-wrap
msgid "noname"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11737
#, no-wrap
msgid "@code{noname} ( @i{--  }) gforth-0.2 ``noname''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11741
msgid ""
"The next defined word will be anonymous. The defining word will leave the "
"input stream alone. The xt of the defined word will be given by "
"@code{latestxt}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11743
#, no-wrap
msgid "execution token of last defined word"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11744
#, no-wrap
msgid "latestxt ( @var{ -- xt   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11745 ../doc/gforth.texi:11746
#, no-wrap
msgid "latestxt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11749
#, no-wrap
msgid "@code{latestxt} ( @i{-- xt  }) gforth-0.6 ``latestxt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11751
msgid "@i{xt} is the execution token of the last word defined."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11757
msgid ""
"The previous example can be rewritten using @code{noname} and "
"@code{latestxt}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11763
#, no-wrap
msgid ""
"Defer deferred\n"
"noname : ( ... -- ... )\n"
"  ... ;\n"
"latestxt IS deferred\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11767
msgid "@code{noname} works with any defining word, not just @code{:}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11772
msgid ""
"@code{latestxt} also works when the last word was not defined as "
"@code{noname}.  It does not work for combined words, though.  It also has "
"the useful property that is is valid as soon as the header for a definition "
"has been built. Thus:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11775
#, no-wrap
msgid "latestxt . : foo [ latestxt . ] ; ' foo .\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11779
msgid "prints 3 numbers; the last two are the same."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11783
#, no-wrap
msgid "quotations"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11784
#, no-wrap
msgid "nested colon definitions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11785
#, no-wrap
msgid "colon definitions, nesting"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11792
msgid ""
"A quotation is an anonymous colon definition inside another colon "
"definition.  Quotations are useful when dealing with words that consume an "
"execution token, like @code{catch} or @code{outfile-execute}.  E.g. consider "
"the following example of using @code{outfile-execute} (@pxref{Redirection}):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11796 ../doc/gforth.texi:16899
#, no-wrap
msgid ""
": some-warning ( n -- )\n"
"    cr .\" warning# \" . ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11799 ../doc/gforth.texi:16902
#, no-wrap
msgid ""
": print-some-warning ( n -- )\n"
"    ['] some-warning stderr outfile-execute ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11804
msgid ""
"Here we defined @code{some-warning} as a helper word whose xt we could pass "
"to outfile-execute.  Instead, we can use a quotation to define such a word "
"anonymously inside @code{print-some-warning}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11808
#, no-wrap
msgid ""
": print-some-warning ( n -- )\n"
"  [: cr .\" warning# \" . ;] stderr outfile-execute ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11812
msgid ""
"The quotation is bouded by @code{[:} and @code{;]}.  It produces an "
"execution token at run-time."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11813
#, no-wrap
msgid "[: ( @var{ compile-time: -- quotation-sys flag colon-sys   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11814 ../doc/gforth.texi:11815
#, no-wrap
msgid "[:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11818
#, no-wrap
msgid "@code{[:} ( @i{compile-time: -- quotation-sys flag colon-sys  }) gforth-1.0 ``bracket-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11820
msgid "Starts a quotation"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11822
#, no-wrap
msgid ";] ( @var{ compile-time: quotation-sys -- ; run-time: -- xt   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11823 ../doc/gforth.texi:11824
#, no-wrap
msgid ";]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11827
#, no-wrap
msgid "@code{;]} ( @i{compile-time: quotation-sys -- ; run-time: -- xt  }) gforth-1.0 ``semi-bracket''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11829
msgid "ends a quotation"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:11834
#, no-wrap
msgid "Supplying the name of a defined word"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11835
#, no-wrap
msgid "names for defined words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11836
#, no-wrap
msgid "defining words, name given in a string"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11841
msgid ""
"By default, a defining word takes the name for the defined word from the "
"input stream. Sometimes you want to supply the name from a string. You can "
"do this with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:11842
#, no-wrap
msgid "nextname ( @var{ c-addr u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:11843 ../doc/gforth.texi:11844
#, no-wrap
msgid "nextname"
msgstr ""

#. type: format
#: ../doc/gforth.texi:11847
#, no-wrap
msgid "@code{nextname} ( @i{c-addr u --  }) gforth-0.2 ``nextname''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11850
msgid ""
"The next defined word will have the name @var{c-addr u}; the defining word "
"will leave the input stream alone."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11854
msgid "For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11857
#, no-wrap
msgid "s\" foo\" nextname create\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11861
msgid "is equivalent to:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11864
#, no-wrap
msgid "create foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11868
msgid "@code{nextname} works with any defining word."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11872
#, no-wrap
msgid "user-defined defining words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11873
#, no-wrap
msgid "defining words, user-defined"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11874
#, no-wrap
msgid "defining defining words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11880
msgid ""
"You can define new defining words in terms of any existing defining word, "
"but @code{:} and @code{create}...@code{does>}/@code{set-does>} are "
"particularly flexible, whereas the children of, e.g., @code{constant} are "
"all just constants."
msgstr ""

#. type: node
#: ../doc/gforth.texi:11894 ../doc/gforth.texi:11895 ../doc/gforth.texi:11973
#, no-wrap
msgid "User-defined defining words with colon definitions"
msgstr ""

#. type: node
#: ../doc/gforth.texi:11894 ../doc/gforth.texi:11973 ../doc/gforth.texi:12124
#, no-wrap
msgid "User-defined defining words using CREATE"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11900
msgid ""
"You can create a new defining word by wrapping defining-time code around an "
"existing defining word and putting the sequence in a colon definition."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11911
msgid ""
"For example, suppose that you have a word @code{stats} that gathers "
"statistics about colon definitions given the @i{xt} of the definition, and "
"you want every colon definition in your application to make a call to "
"@code{stats}. You can define and use a new version of @code{:} like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11916
#, no-wrap
msgid ""
": stats\n"
"  ( xt -- ) DUP .\" (Gathering statistics for \" . .\" )\"\n"
"  ... ;  \\ other code\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11918
#, no-wrap
msgid ""
": my: : latestxt postpone literal ['] stats compile, ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11920
#, no-wrap
msgid "my: foo + - ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11923
msgid "When @code{foo} is defined using @code{my:} these steps occur:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:11927
msgid "@code{my:} is executed."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:11932
msgid ""
"The @code{:} within the definition (the one between @code{my:} and "
"@code{latestxt}) is executed, and does just what it always does; it parses "
"the input stream for a name, builds a dictionary header for the name "
"@code{foo} and switches @code{state} from interpret to compile."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:11935
msgid ""
"The word @code{latestxt} is executed. It puts the @i{xt} for the word that "
"is being defined -- @code{foo} -- onto the stack."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:11939
msgid ""
"The code that was produced by @code{postpone literal} is executed; this "
"causes the value on the stack to be compiled as a literal in the code area "
"of @code{foo}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:11948
msgid ""
"The code @code{['] stats} compiles a literal into the definition of "
"@code{my:}. When @code{compile,} is executed, that literal -- the execution "
"token for @code{stats} -- is layed down in the code area of @code{foo} , "
"following the literal@footnote{Strictly speaking, the mechanism that "
"@code{compile,} uses to convert an @i{xt} into something in the code area is "
"implementation-dependent. A threaded implementation might spit out the "
"execution token directly whilst another implementation might spit out a "
"native code sequence.}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:11953
msgid ""
"At this point, the execution of @code{my:} is complete, and control returns "
"to the text interpreter. The text interpreter is in compile state, so "
"subsequent text @code{+ -} is compiled into the definition of @code{foo} and "
"the @code{;} terminates the definition as always."
msgstr ""

#. type: table
#: ../doc/gforth.texi:11958
msgid ""
"You can use @code{see} to decompile a word that was defined using @code{my:} "
"and see how it is different from a normal @code{:} definition. For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11967
#, no-wrap
msgid ""
": bar + - ;  \\ like foo but using : rather than my:\n"
"see bar\n"
": bar\n"
"  + - ;\n"
"see foo\n"
": foo\n"
"  `foo stats + - ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11970
msgid "@code{`foo} is another way of writing @code{['] foo}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:11973 ../doc/gforth.texi:12124 ../doc/gforth.texi:12173
#, no-wrap
msgid "CREATE..DOES> applications"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:11974
#, no-wrap
msgid "User-defined defining words using create"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11975
#, no-wrap
msgid "@code{CREATE} ... @code{DOES>}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11980
msgid ""
"If you want the words defined with your defining words to behave differently "
"from words defined with standard defining words, you can write your defining "
"word like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11986
#, no-wrap
msgid ""
": def-word ( \"name\" -- )\n"
"    CREATE @i{code1}\n"
"DOES> ( ... -- ... )\n"
"    @i{code2} ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:11988
#, no-wrap
msgid "def-word name\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:11990
#, no-wrap
msgid "child words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:11996
msgid ""
"This fragment defines a @dfn{defining word} @code{def-word} and then "
"executes it.  When @code{def-word} executes, it @code{CREATE}s a new word "
"@code{name}, and executes the code @i{code1}. The code @i{code2} is not "
"executed at this time. The word @code{name} is sometimes called a "
"@dfn{child} of @code{def-word}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12002
msgid ""
"When you execute @code{name}, the address of the body of @code{name} is put "
"on the data stack and @i{code2} is executed (the address of the body of "
"@code{name} is the address @code{HERE} returns immediately after the "
"@code{CREATE}, i.e., the address a @code{create}d word returns by default)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12012
msgid ""
"You can use @code{def-word} to define a set of child words that behave "
"similarly; they all have a common run-time behaviour determined by "
"@i{code2}. Typically, the @i{code1} sequence builds a data area in the body "
"of the child word. The structure of the data is common to all children of "
"@code{def-word}, but the data values are specific -- and private -- to each "
"child word. When a child word is executed, the address of its private data "
"area is passed as a parameter on TOS to be used and manipulated@footnote{It "
"is legitimate both to read and write to this data area.} by @i{code2}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12015
msgid ""
"The two fragments of code that make up the defining words act (are executed) "
"at two completely separate times:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:12020
msgid ""
"At @i{define time}, the defining word executes @i{code1} to generate a child "
"word"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:12024
msgid ""
"At @i{child execution time}, when a child word is invoked, @i{code2} is "
"executed, using parameters (data) that are private and specific to the child "
"word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12028
msgid ""
"Another way of understanding the behaviour of @code{def-word} and "
"@code{name} is to say that, if you make the following definitions:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12031
#, no-wrap
msgid ""
": def-word1 ( \"name\" -- )\n"
"    CREATE @i{code1} ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12034
#, no-wrap
msgid ""
": action1 ( ... -- ... )\n"
"    @i{code2} ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12036
#, no-wrap
msgid "def-word1 name1\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12040
msgid "Then using @code{name1 action1} is equivalent to using @code{name}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12041
#, no-wrap
msgid "@code{CREATE} ... @code{SET-DOES>}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12043
msgid "Another way of writing @code{def-word} is (@pxref{Quotations}):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12048
#, no-wrap
msgid ""
": def-word ( \"name\" -- ; name execution: ... -- ... )\n"
"    create @i{code1}\n"
"    [: @i{code2} ;] set-does> ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12055
msgid ""
"Gforth actually compiles the code using @code{does>} into code equivalent to "
"the latter code.  An advantage of the @code{set-does>} approach is that you "
"can put other code behind it and you can use it inside control structures "
"without needing workarounds.  A disadvantage is that it is Gforth-specific."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12057
msgid "A classic example is that you can define @code{CONSTANT} in this way:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12063
#, no-wrap
msgid ""
": CONSTANT ( w \"name\" -- )\n"
"    CREATE ,\n"
"DOES> ( -- w )\n"
"    @@ ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12067
msgid "or equivalently"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12072
#, no-wrap
msgid ""
": CONSTANT ( w \"name\" -- ; name execution: -- w )\n"
"    create ,\n"
"    ['] @@ set-does> ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12085
msgid ""
"When you create a constant with @code{5 CONSTANT five}, a set of define-time "
"actions take place; first a new word @code{five} is created, then the value "
"5 is laid down in the body of @code{five} with @code{,}. When @code{five} is "
"executed, the address of the body is put on the stack, and @code{@@} "
"retrieves the value 5. The word @code{five} has no code of its own; it "
"simply contains a data field and the xt of the quotation or of @code{@@}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12092
msgid ""
"The final example in this section is intended to remind you that space "
"reserved in @code{CREATE}d words is @i{data} space and therefore can be both "
"read and written by a Standard program@footnote{Exercise: use this example "
"as a starting point for your own implementation of @code{Value} and "
"@code{TO} -- if you get stuck, investigate the behaviour of @code{'} and "
"@code{[']}.}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12098
#, no-wrap
msgid ""
": foo ( \"name\" -- )\n"
"    CREATE -1 ,\n"
"DOES> ( -- )\n"
"    @@ . ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12101
#, no-wrap
msgid ""
"foo first-word\n"
"foo second-word\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12103
#, no-wrap
msgid "123 ' first-word >BODY !\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12113
msgid ""
"If @code{first-word} had been a @code{CREATE}d word, we could simply have "
"executed it to get the address of its data field. However, since it was "
"defined to have @code{DOES>} actions, its execution semantics are to perform "
"those @code{DOES>} actions. To get the address of its data field it's "
"necessary to use @code{'} to get its xt, then @code{>BODY} to translate the "
"xt into the address of the data field.  When you execute @code{first-word}, "
"it will display @code{123}. When you execute @code{second-word} it will "
"display @code{-1}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12114
#, no-wrap
msgid "stack effect of @code{DOES>}-parts"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12115
#, no-wrap
msgid "@code{DOES>}-parts, stack effect"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12122
msgid ""
"In the examples above the stack comment after the @code{DOES>} specifies the "
"stack effect of the defined words, not the stack effect of the following "
"code (the following code expects the address of the body on the top of "
"stack, which is not reflected in the stack comment). This is the convention "
"that I use and recommend (it clashes a bit with using locals declarations "
"for stack effect specification, though)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:12124 ../doc/gforth.texi:12173 ../doc/gforth.texi:12282
#, no-wrap
msgid "CREATE..DOES> details"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:12125
#, no-wrap
msgid "Applications of @code{CREATE..DOES>}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12126
#, no-wrap
msgid "@code{CREATE} ... @code{DOES>}, applications"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12129
msgid "You may wonder how to use this feature. Here are some usage patterns:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12130
#, no-wrap
msgid "factoring similar colon definitions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12136
msgid ""
"When you see a sequence of code occurring several times, and you can "
"identify a meaning, you will factor it out as a colon definition. When you "
"see similar colon definitions, you can factor them using @code{CREATE.."
"DOES>}. E.g., an assembler usually defines several words that look very "
"similar:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12141
#, no-wrap
msgid ""
": ori, ( reg-target reg-source n -- )\n"
"    0 asm-reg-reg-imm ;\n"
": andi, ( reg-target reg-source n -- )\n"
"    1 asm-reg-reg-imm ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12145
msgid "This could be factored with:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12150
#, no-wrap
msgid ""
": reg-reg-imm ( op-code -- )\n"
"    CREATE ,\n"
"DOES> ( reg-target reg-source n -- )\n"
"    @@ asm-reg-reg-imm ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12153
#, no-wrap
msgid ""
"0 reg-reg-imm ori,\n"
"1 reg-reg-imm andi,\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12155
#, no-wrap
msgid "currying"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12161
msgid ""
"Another view of @code{CREATE..DOES>} is to consider it as a crude way to "
"supply a part of the parameters for a word (known as @dfn{currying} in the "
"functional language community). E.g., @code{+} needs two parameters. "
"Creating versions of @code{+} with one parameter fixed can be done like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12167
#, no-wrap
msgid ""
": curry+ ( n1 \"name\" -- )\n"
"    CREATE ,\n"
"DOES> ( n2 -- n1+n2 )\n"
"    @@ + ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12170
#, no-wrap
msgid ""
" 3 curry+ 3+\n"
"-2 curry+ 2-\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:12173 ../doc/gforth.texi:12282 ../doc/gforth.texi:12283
#: ../doc/gforth.texi:12407
#, no-wrap
msgid "Advanced does> usage example"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:12174
#, no-wrap
msgid "The gory details of @code{CREATE..DOES>}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12175
#, no-wrap
msgid "@code{CREATE} ... @code{DOES>}, details"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12177
#, no-wrap
msgid "DOES> ( @var{ compilation colon-sys1 -- colon-sys2   } ) core"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12182
#, no-wrap
msgid "@code{DOES>} ( @i{compilation colon-sys1 -- colon-sys2  }) core ``does''\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12185
#, no-wrap
msgid "@code{DOES>} in a separate definition"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12189
msgid ""
"This means that you need not use @code{CREATE} and @code{DOES>} in the same "
"definition; you can put the @code{DOES>}-part in a separate definition. This "
"allows us to, e.g., select among different @code{DOES>}-parts:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12193
#, no-wrap
msgid ""
": does1 \n"
"DOES> ( ... -- ... )\n"
"    code1 ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12197
#, no-wrap
msgid ""
": does2\n"
"DOES> ( ... -- ... )\n"
"    code2 ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12205
#, no-wrap
msgid ""
": def-word ( ... -- ... )\n"
"    create ...\n"
"    IF\n"
"       does1\n"
"    ELSE\n"
"       does2\n"
"    ENDIF ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12210
msgid ""
"In this example, the selection of whether to use @code{does1} or "
"@code{does2} is made at definition-time; at the time that the child word is "
"@code{CREATE}d."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12214
msgid ""
"Note that the property of @code{does>} to end the definition makes it "
"necessary to introduce extra definitions @code{does1} and @code{does2}.  You "
"can avoid that with @code{set-does>}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12223
#, no-wrap
msgid ""
": def-word ( ... -- ... )\n"
"    create ...\n"
"    IF\n"
"       [: code1 ;] set-does>\n"
"    ELSE\n"
"       [: code2 ;] set-does>\n"
"    ENDIF ;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12225
#, no-wrap
msgid "@code{DOES>} in interpretation state"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12232
msgid ""
"In a standard program you can apply a @code{DOES>}-part only if the last "
"word was defined with @code{CREATE}. In Gforth, the @code{DOES>}-part will "
"override the behaviour of the last word defined in any case. In a standard "
"program, you can use @code{DOES>} only in a colon definition. In Gforth, you "
"can also use it in interpretation state, in a kind of one-shot mode; for "
"example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12237
#, no-wrap
msgid ""
"CREATE name ( ... -- ... )\n"
"  @i{initialization}\n"
"DOES>\n"
"  @i{code} ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12241
msgid "is equivalent to the standard:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12247
#, no-wrap
msgid ""
":noname\n"
"DOES>\n"
"    @i{code} ;\n"
"CREATE name EXECUTE ( ... -- ... )\n"
"    @i{initialization}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12252
msgid ""
"Gforth also supports quotations in interpreted code, and quotations save and "
"restore the current definition, so you can also write the example above also "
"as:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12257
#, no-wrap
msgid ""
"CREATE name ( ... -- ... )\n"
"  @i{initialization}\n"
"[: @i{code} ;] set-does>\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12259
#, no-wrap
msgid "set-does> ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12260 ../doc/gforth.texi:12261
#, no-wrap
msgid "set-does>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12264
#, no-wrap
msgid "@code{set-does>} ( @i{xt --  }) gforth-1.0 ``set-does>''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12269
msgid ""
"Changes the current word such that it pushes its body address and then "
"executes @i{xt}.  Also changes the @code{compile,} implementation "
"accordingly.  Call @code{set-optimizer} afterwards if you want a more "
"efficient implementation."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12271
#, no-wrap
msgid ">body ( @var{ xt -- a_addr   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12272 ../doc/gforth.texi:12273
#, no-wrap
msgid ">body"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12276
#, no-wrap
msgid "@code{>body} ( @i{xt -- a_addr  }) core ``to-body''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12279
msgid ""
"Get the address of the body of the word represented by @i{xt} (the address "
"of the word's data field)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:12282 ../doc/gforth.texi:12407 ../doc/gforth.texi:12501
#, no-wrap
msgid "User-defined TO and DEFER@@"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12287
msgid ""
"The MIPS disassembler (@file{arch/mips/disasm.fs}) contains many words for "
"disassembling instructions, that follow a very repetetive scheme:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12291
#, no-wrap
msgid ""
":noname @var{disasm-operands} s\" @var{inst-name}\" type ;\n"
"@var{entry-num} cells @var{table} + !\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12295
msgid ""
"Of course, this inspires the idea to factor out the commonalities to allow a "
"definition like"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12298
#, no-wrap
msgid "@var{disasm-operands} @var{entry-num} @var{table} define-inst @var{inst-name}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12303
msgid ""
"The parameters @var{disasm-operands} and @var{table} are usually "
"correlated.  Moreover, before I wrote the disassembler, there already "
"existed code that defines instructions like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12306 ../doc/gforth.texi:12385
#, no-wrap
msgid "@var{entry-num} @var{inst-format} @var{inst-name}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12310
msgid ""
"This code comes from the assembler and resides in @file{arch/mips/insts.fs}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12313
msgid ""
"So I had to define the @var{inst-format} words that performed the scheme "
"above when executed.  At first I chose to use run-time code-generation:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12319
#, no-wrap
msgid ""
": @var{inst-format} ( entry-num \"name\" -- ; compiled code: addr w -- )\n"
"  :noname Postpone @var{disasm-operands}\n"
"  name Postpone sliteral Postpone type Postpone ;\n"
"  swap cells @var{table} + ! ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12322
msgid "Note that this supplies the other two parameters of the scheme above."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12325
msgid ""
"An alternative would have been to write this using @code{create}/"
"@code{does>}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12336
#, no-wrap
msgid ""
": @var{inst-format} ( entry-num \"name\" -- )\n"
"  here name string, ( entry-num c-addr ) \\ parse and save \"name\"\n"
"  noname create , ( entry-num )\n"
"  latestxt swap cells @var{table} + !\n"
"does> ( addr w -- )\n"
"  \\ disassemble instruction w at addr\n"
"  @@ >r \n"
"  @var{disasm-operands}\n"
"  r> count type ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12341
msgid ""
"Somehow the first solution is simpler, mainly because it's simpler to shift "
"a string from definition-time to use-time with @code{sliteral} than with "
"@code{string,} and friends."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12346
msgid ""
"I wrote a lot of words following this scheme and soon thought about "
"factoring out the commonalities among them.  Note that this uses a two-level "
"defining word, i.e., a word that defines ordinary defining words."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12353
msgid ""
"This time a solution involving @code{postpone} and friends seemed more "
"difficult (try it as an exercise), so I decided to use a @code{create}/"
"@code{does>} word; since I was already at it, I also used @code{create}/"
"@code{does>} for the lower level (try using @code{postpone} etc. as an "
"exercise), resulting in the following definition:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12371
#, no-wrap
msgid ""
": define-format ( disasm-xt table-xt -- )\n"
"    \\ define an instruction format that uses disasm-xt for\n"
"    \\ disassembling and enters the defined instructions into table\n"
"    \\ table-xt\n"
"    create 2,\n"
"does> ( u \"inst\" -- )\n"
"    \\ defines an anonymous word for disassembling instruction inst,\n"
"    \\ and enters it as u-th entry into table-xt\n"
"    2@@ swap here name string, ( u table-xt disasm-xt c-addr ) \\ remember string\n"
"    noname create 2,      \\ define anonymous word\n"
"    execute latestxt swap ! \\ enter xt of defined word into table-xt\n"
"does> ( addr w -- )\n"
"    \\ disassemble instruction w at addr\n"
"    2@@ >r ( addr w disasm-xt R: c-addr )\n"
"    execute ( R: c-addr ) \\ disassemble operands\n"
"    r> count type ; \\ print name \n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12376
msgid ""
"Note that the tables here (in contrast to above) do the @code{cells +} by "
"themselves (that's why you have to pass an xt).  This word is used in the "
"following way:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12379
#, no-wrap
msgid "' @var{disasm-operands} ' @var{table} define-format @var{inst-format}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12382
msgid "As shown above, the defined instruction format is then used like this:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12391
msgid ""
"In terms of currying, this kind of two-level defining word provides the "
"parameters in three stages: first @var{disasm-operands} and @var{table}, "
"then @var{entry-num} and @var{inst-name}, finally @code{addr w}, i.e., the "
"instruction to be disassembled."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12395
msgid ""
"Of course this did not quite fit all the instruction format names used in "
"@file{insts.fs}, so I had to define a few wrappers that conditioned the "
"parameters into the right form."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12404
msgid ""
"If you have trouble following this section, don't worry.  First, this is "
"involved and takes time (and probably some playing around) to understand; "
"second, this is the first two-level @code{create}/@code{does>} word I have "
"written in seventeen years of Forth; and if I did not have @file{insts.fs} "
"to start with, I may well have elected to use just a one-level defining word "
"(with some repeating of parameters when using the defining word). So it is "
"not necessary to understand this, but it may improve your understanding of "
"Forth."
msgstr ""

#. type: node
#: ../doc/gforth.texi:12407 ../doc/gforth.texi:12501 ../doc/gforth.texi:12637
#, no-wrap
msgid "User-defined compile-comma"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:12408
#, no-wrap
msgid "User-defined @code{to} and @code{defer@@}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12414
msgid ""
"Gforth's values have several operators: @code{to} (to which @code{is} is an "
"alias, and @code{defer!} takes an xt instead of a name in the input stream), "
"@code{+to}, @code{addr}, and @code{action-of} (where @code{defer@@} takes an "
"xt instead of a name in the input stream)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12416
msgid "Gforth allows you to change the @code{(to)} action of a word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12417
#, no-wrap
msgid "(to) ( @var{ val operation xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12418 ../doc/gforth.texi:12419
#, no-wrap
msgid "(to)"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12422
#, no-wrap
msgid "@code{(to)} ( @i{val operation xt --  }) gforth-1.0 ``paren-to''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12426
msgid ""
"@i{xt} is of a value like word @i{name}.  Stores @i{val} @code{to} "
"@i{name}.  @i{operation} selects between @code{to}, @code{+to}, @code{addr}, "
"and @code{action-of}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12428
#, no-wrap
msgid "to-table: ( @var{ \"name\" \"xt1\" .. \"xtn\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12429 ../doc/gforth.texi:12430
#, no-wrap
msgid "to-table:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12433
#, no-wrap
msgid "@code{to-table:} ( @i{\"name\" \"xt1\" .. \"xtn\" --  }) gforth-experimental ``to-table-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12437
msgid ""
"create a table with entries for @code{TO}, @code{+TO}, @code{ADDR}, and "
"@code{ACTION-OF}.  Use @code{n/a} to mark unsupported operations."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12439
#, no-wrap
msgid "to-method: ( @var{ xt table \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12440 ../doc/gforth.texi:12441
#, no-wrap
msgid "to-method:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12444
#, no-wrap
msgid "@code{to-method:} ( @i{xt table \"name\" --  }) gforth-experimental ``to-method-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12447
msgid ""
"create a to-method, where @var{xt} computes the address to access the field, "
"and @var{table} contains the operators to store to it."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12449
#, no-wrap
msgid "set-to ( @var{ to-xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12450 ../doc/gforth.texi:12451
#, no-wrap
msgid "set-to"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12454
#, no-wrap
msgid "@code{set-to} ( @i{to-xt --  }) gforth-1.0 ``set-to''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12457
msgid ""
"Sets the implementation of the @code{(to) ( val xt -- )} method of the "
"current word to @i{to-xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12459
#, no-wrap
msgid "n/a ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12460 ../doc/gforth.texi:12461
#, no-wrap
msgid "n/a"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12464
#, no-wrap
msgid "@code{n/a} ( @i{--  }) gforth-experimental ``not-available''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12468
msgid ""
"this word can be ticked, but throws an ``Operation not supported'' exception "
"on interpretation and compilation.  Use this for methods and alike that "
"aren't supported."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12476
msgid ""
"@code{(to)} is a word used inside @code{to}: it stores the value at run-"
"time.  The general stack effect of @code{(to)} method is @code{( val "
"operation xt -- )}, where @i{xt} identifies the word stored into, "
"@i{operation} the actual variant of @code{to}-like operations, and @i{val} "
"is the value (of appropriate type) stored there."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12484
msgid ""
"You shall implement the @code{to}-method using @code{to-table:} to create a "
"type-specific table of operations (not specified slots at the end of the "
"table are filled up with @code{n/a}), and using @code{to-method:} together "
"with the operation to get from the @i{xt} of the value to its data field "
"(usually @code{>body} for values in the dictionary, but value-style data can "
"also reside in structures or user areas)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12486 ../doc/gforth.texi:27832
msgid "E.g., one can implement @code{fvalue} as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12490
#, no-wrap
msgid ""
"to-table: f!-table f! f+!\n"
"' >body f!-table to-method: fvalue-to\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12495
#, no-wrap
msgid ""
": fvalue ( r \"name\" -- ; name: -- r )\n"
"  create f,\n"
"  ['] f@@ set-does>\n"
"  ['] fvalue-to set-to ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12499 ../doc/gforth.texi:12602 ../doc/gforth.texi:27844
#: ../doc/gforth.texi:27864
#, no-wrap
msgid ""
"5e fvalue foo\n"
": bar foo 1e f+ to foo ;\n"
"see bar\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:12501 ../doc/gforth.texi:12637 ../doc/gforth.texi:12638
#: ../doc/gforth.texi:12718
#, no-wrap
msgid "Creating from a prototype"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:12502
#, no-wrap
msgid "User-defined @code{compile,}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12506
msgid ""
"You can also change the implementation of @code{compile,} for a word, with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12507
#, no-wrap
msgid "set-optimizer ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12508 ../doc/gforth.texi:12509
#, no-wrap
msgid "set-optimizer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12512
#, no-wrap
msgid "@code{set-optimizer} ( @i{xt --  }) gforth-1.0 ``set-optimizer''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12519
msgid ""
"Changes the current word such that @code{compile,}ing it executes @i{xt} "
"(with the same stack contents as passed to @code{compile,}).  Note that "
"@code{compile,} must be consistent with @code{execute}, so you must use "
"@code{set-optimizer} only to install a more efficient implementation of the "
"same behaviour."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12521
#, no-wrap
msgid "opt: ( @var{ compilation -- colon-sys2 ; run-time -- nest-sys   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12522 ../doc/gforth.texi:12523
#, no-wrap
msgid "opt:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12526
#, no-wrap
msgid "@code{opt:} ( @i{compilation -- colon-sys2 ; run-time -- nest-sys  }) gforth-1.0 ``opt:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12530
msgid ""
"Starts a nameless colon definition; when it is complete, this colon "
"definition will become the @code{compile,} implementation of the latest word "
"(before the @code{opt:})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12540
msgid ""
"Note that the resulting @code{compile,} must still be equivalent to "
"@code{postpone literal postpone execute}, so @code{set-optimizer} is useful "
"for efficiency, not for changing the behaviour.  There is nothing that "
"prevents you from shooting yourself in the foot, however.  You can check "
"whether your uses of @code{set-optimizer} are correct by comparing the "
"results when you use it with the results you get when you disable your uses "
"by first defining"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12543
#, no-wrap
msgid ": set-optimizer drop ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12547
msgid ""
"As an example of the use of @code{set-optimizer}, we can enhance one of the "
"definitions of @code{CONSTANT} above as follows."
msgstr ""

#. type: example
#: ../doc/gforth.texi:12554
#, no-wrap
msgid ""
": CONSTANT ( n \"name\" -- ; name: -- n )\n"
"  create ,\n"
"  ['] @@ set-does>\n"
"  [: >body @@ postpone literal ;] set-optimizer\n"
";\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12558
msgid ""
"The only change is the addition of the @code{set-optimizer} line.  When you "
"define a constant and compile it:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12562
#, no-wrap
msgid ""
"5 constant five\n"
": foo five ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12571
msgid ""
"the compiled @code{five} in @code{foo} is now compiled to the literal 5 "
"instead of a generic invocation of @code{five}.  The quotation has the same "
"stack effect as @code{compile,}: @code{( xt -- )}.  The passed xt belongs to "
"the @code{compile,}d word, i.e., @code{five} in the example.  In the example "
"the xt is first converted to the body address, then the value 5 at that "
"place is fetched, and that value is compiled with the @code{postpone "
"literal} (@pxref{Literals})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12581
msgid ""
"This use of @code{set-optimizer} assumes that the user does not change the "
"value of a constant with, e.g., @code{6 ' five >body !}.  While @code{five} "
"has been defined with @code{create}, that is an implementation detail of "
"@code{CONSTANT}, and if you don't document it, the user must not rely on "
"it.  And if you use @code{set-optimizer} in a way that assumes that the body "
"does not change (like is done here), you must not document that "
"@code{create} is used; and conversely, if you document it, you have to write "
"the @code{compile,} implementation such that it can deal with changing "
"bodies."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12584
msgid ""
"Another example is a better-optimized variant of the @code{fvalue} example "
"above:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12588 ../doc/gforth.texi:27851
#, no-wrap
msgid ""
": compile-fvalue-to ( xt-value-to -- )\n"
"  drop ]] >body f! [[ ;\n"
"  \n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12592
#, no-wrap
msgid ""
": fvalue-to ( r xt -- )\n"
"  >body f! ;\n"
"' compile-fvalue-to set-optimizer\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12598
#, no-wrap
msgid ""
": fvalue ( r \"name\" -- ; name: -- r )\n"
"  create f,\n"
"  ['] f@@ set-does>\n"
"  [: >body ]] literal f@@ [[ ;] set-optimizer\n"
"  ['] fvalue-to set-to ;\n"
"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12611
msgid ""
"Compare the code for @code{bar} with the one for the earlier definition.  "
"Here we see the optimization of both the code for reading the fvalue (coming "
"from the @code{set-optimizer} in @code{fvalue}) and for writing the fvalue "
"(coming from the @code{set-optimizer} applied to @code{fvalue-to}.  Because "
"an fvalue can change (unlike a constant), the reading part (inside "
"@code{fvalue}) compiles the address and a @code{f@@} that is performed at "
"run-time."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12619
msgid ""
"For @code{fvalue-to}, the @code{compile,} implementation basically just "
"compiles the code executed by @code{fvalue} inline.  The compilation "
"semantics of @code{to} compiles the address as literal and then the "
"@code{(to)} implementation (i.e., @code{fvalue-to}).  In this process the "
"@code{>body} is optimized away."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12622
msgid ""
"In practice Gforth's @code{fvalue} includes a few additional twists, e.g., "
"to support @code{+TO}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12626
msgid ""
"Note that the call to @code{set-optimizer} has to be performed after the "
"call to @code{set-does>} (or @code{does>}, because @code{set-does>} "
"overwrites the @code{compile,} implementation itself."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12632
msgid ""
"As we can see in the @code{fvalue-to} example, we can also apply @code{set-"
"optimizer} to individual words rather than inside a defining word like "
"@code{constant} or @code{fvalue}.  In this case, the xt of the word passed "
"to optimizer is usually unnecessary and is @code{drop}ped, as in "
"@code{compile-fvalue-to}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12635
msgid ""
"The engine @code{gforth-itc} uses @code{,} for @code{compile,} and @code{set-"
"optimizer} has no effect there."
msgstr ""

#. type: node
#: ../doc/gforth.texi:12637 ../doc/gforth.texi:12718 ../doc/gforth.texi:12719
#: ../doc/gforth.texi:12743
#, no-wrap
msgid "Making a word current"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12643
msgid ""
"In the above we show how to define a word by first using @code{create}, and "
"then modifying it with @code{set-does>}, @code{set-to}, @code{set-optimizer} "
"etc."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12649
msgid ""
"An alternative way is to create a prototype using these words, and then "
"create a new word from that prototype.  This kind of copying does not cover "
"the body, so that has to be allocated and initialized explicitly.  Taking "
"@code{fvalue} above, we could instead define it as:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12655
#, no-wrap
msgid ""
"create fvalue-prototype ( -- r )\n"
"['] f@@ set-does>\n"
"[: >body ]] literal f@@ [[ ;] set-optimizer\n"
"['] fvalue-to set-to\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12658
#, no-wrap
msgid ""
": fvalue ( r \"name\" -- ; name: -- r )\n"
"  ``fvalue-prototype create-from f, reveal ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12665
msgid ""
"An advantage of this approach is that creating @code{fvalue} words is now "
"faster, because it does not need to first duplicate the header methods of "
"@code{create}, modify them, and eventually deduplicate them.  But this "
"advantage is only relevant if the number of words created with this defining "
"word is huge."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12666
#, no-wrap
msgid "create-from ( @var{ nt \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12667 ../doc/gforth.texi:12668
#, no-wrap
msgid "create-from"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12671
#, no-wrap
msgid "@code{create-from} ( @i{nt \"name\" --  }) gforth-1.0 ``create-from''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12679
msgid ""
"Create a word @i{name} that behaves like @i{nt}, but with an empty body.  "
"@i{nt} must be the nt of a named word.  The resulting header is not yet "
"revealed.  Creating a word with @code{create-from} without using any "
"@code{set-} words is faster than if you create a word using @code{set-} "
"words, @code{immediate}, or @code{does>}.  You can use @code{noname} with "
"@code{create-from}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12681
#, no-wrap
msgid "reveal ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12682 ../doc/gforth.texi:12683
#, no-wrap
msgid "reveal"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12686
#, no-wrap
msgid "@code{reveal} ( @i{--  }) gforth-0.2 ``reveal''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12689
msgid ""
"Put the current word in the wordlist current at the time of the header "
"definition."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12694
msgid ""
"The performance advantage does not extend to using @code{noname} with the "
"defining word.  Therefore we also have"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12695
#, no-wrap
msgid "noname-from ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12696 ../doc/gforth.texi:12697
#, no-wrap
msgid "noname-from"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12700
#, no-wrap
msgid "@code{noname-from} ( @i{xt --  }) gforth-1.0 ``noname-from''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12703
msgid ""
"Create a nameless word that behaves like @i{xt}, but with an empty body.  "
"@i{xt} must be the nt of a nameless word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12707
msgid "Here's a usage example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12711
#, no-wrap
msgid ""
"``fvalue-prototype noname create-from\n"
"latestnt constant noname-fvalue-prototype\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12715
#, no-wrap
msgid ""
": noname-fvalue ( r -- xt ; xt execution: -- r )\n"
"  noname-fvalue-prototype noname-from f,\n"
"  latestxt ;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12720
#, no-wrap
msgid "Modifying a word defined earlier"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12726
msgid ""
"Many words mentioned above, such as @code{immediate} or @code{set-optimizer} "
"change the ``current'' or ``most recently defined'' word.  Sometimes you "
"want to change an earlier word.  You can do this with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12727
#, no-wrap
msgid "make-latest ( @var{ nt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12728 ../doc/gforth.texi:12729
#, no-wrap
msgid "make-latest"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12732
#, no-wrap
msgid "@code{make-latest} ( @i{nt --  }) gforth-1.0 ``make-latest''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12739
msgid ""
"Make @i{nt} the latest definition, which can be manipulated by "
"@code{immediate} and @code{set-*} operations.  If you have used (especially "
"compiled) the word referred to by nt already, do not change the behaviour of "
"the word (only its implementation), otherwise you may get a surprising mix "
"of behaviours that is not consistent between Gforth engines and versions."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12748
msgid ""
"A frequent use of @code{create}...@code{does>} is for transferring some "
"values from definition-time to run-time.  Gforth supports this use with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12749
#, no-wrap
msgid "const-does> ( @var{ run-time: w*uw r*ur uw ur \"name\" --   } ) gforth-obsolete"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12750 ../doc/gforth.texi:12751
#, no-wrap
msgid "const-does>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12754
#, no-wrap
msgid "@code{const-does>} ( @i{run-time: w*uw r*ur uw ur \"name\" --  }) gforth-obsolete ``const-does''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12756
msgid "Defines @var{name} and returns."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12759
msgid ""
"@var{name} execution: pushes @var{w*uw r*ur}, then performs the code "
"following the @code{const-does>}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12763
msgid "A typical use of this word is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12768
#, no-wrap
msgid ""
": curry+ ( n1 \"name\" -- )\n"
"1 0 CONST-DOES> ( n2 -- n1+n2 )\n"
"    + ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12770
#, no-wrap
msgid "3 curry+ 3+\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12774
msgid ""
"Here the @code{1 0} means that 1 cell and 0 floats are transferred from "
"definition to run-time."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12776
msgid "The advantages of using @code{const-does>} are:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:12782
msgid ""
"You don't have to deal with storing and retrieving the values, i.e., your "
"program becomes more writable and readable."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:12787
msgid ""
"When using @code{does>}, you have to introduce a @code{@@} that cannot be "
"optimized away (because you could change the data using @code{>body}..."
"@code{!}); @code{const-does>} avoids this problem."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12792
msgid ""
"A Standard Forth implementation of @code{const-does>} is available in "
"@file{compat/const-does.fs}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:12796
#, no-wrap
msgid "deferred words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12801
msgid ""
"The defining word @code{Defer} allows you to define a word by name without "
"defining its behaviour; the definition of its behaviour is deferred. Here "
"are two situation where this can be useful:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:12807
msgid ""
"Where you want to allow the behaviour of a word to be altered later, and for "
"all precompiled references to the word to change when its behaviour is "
"changed."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:12809
msgid "For mutual recursion; @xref{Calls and returns}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12816
msgid ""
"In the following example, @code{foo} always invokes the version of "
"@code{greet} that prints ``@code{Good morning}'' whilst @code{bar} always "
"invokes the version that prints ``@code{Hello}''. There is no way of getting "
"@code{foo} to use the later version without re-ordering the source code and "
"recompiling it."
msgstr ""

#. type: example
#: ../doc/gforth.texi:12822
#, no-wrap
msgid ""
": greet .\" Good morning\" ;\n"
": foo ... greet ... ;\n"
": greet .\" Hello\" ;\n"
": bar ... greet ... ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12828
msgid ""
"This problem can be solved by defining @code{greet} as a @code{Defer}red "
"word. The behaviour of a @code{Defer}red word can be defined and redefined "
"at any time by using @code{IS} to associate the xt of a previously-defined "
"word with it. The previous example becomes:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12836
#, no-wrap
msgid ""
"Defer greet ( -- )\n"
": foo ... greet ... ;\n"
": bar ... greet ... ;\n"
": greet1 ( -- ) .\" Good morning\" ;\n"
": greet2 ( -- ) .\" Hello\" ;\n"
"' greet2 IS greet  \\ make greet behave like greet2\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12842
msgid ""
"@progstyle You should write a stack comment for every deferred word, and put "
"only XTs into deferred words that conform to this stack effect.  Otherwise "
"it's too difficult to use the deferred word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12847
msgid ""
"A deferred word can be used to improve the statistics-gathering example from "
"@ref{User-defined Defining Words}; rather than edit the application's source "
"code to change every @code{:} to a @code{my:}, do this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12856
#, no-wrap
msgid ""
": real: : ;     \\ retain access to the original\n"
"defer :         \\ redefine as a deferred word\n"
"' my: IS :      \\ use special version of :\n"
"\\\n"
"\\ load application here\n"
"\\\n"
"' real: IS :    \\ go back to the original\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12861
msgid ""
"One thing to note is that @code{IS} has special compilation semantics, such "
"that it parses the name at compile time (like @code{TO}):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12865
#, no-wrap
msgid ""
": set-greet ( xt -- )\n"
"  IS greet ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12867
#, no-wrap
msgid "' greet1 set-greet\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12870
msgid "In situations where @code{IS} does not fit, use @code{defer!} instead."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12877
msgid ""
"A deferred word can only inherit execution semantics from the xt (because "
"that is all that an xt can represent -- for more discussion of this "
"@pxref{Tokens for Words}); by default it will have default interpretation "
"and compilation semantics deriving from this execution semantics.  However, "
"you can change the interpretation and compilation semantics of the deferred "
"word in the usual ways:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12882
#, no-wrap
msgid ""
": bar .... ; immediate\n"
"Defer fred immediate\n"
"Defer jim\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:12885
#, no-wrap
msgid ""
"' bar IS jim  \\ jim has default semantics\n"
"' bar IS fred \\ fred is immediate\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12887
#, no-wrap
msgid "Defer ( @var{ \"name\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12888 ../doc/gforth.texi:12889
#, no-wrap
msgid "Defer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12892
#, no-wrap
msgid "@code{Defer} ( @i{\"name\" --  }) core-ext ``Defer''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12896
msgid ""
"Define a deferred word @i{name}; its execution semantics can be set with "
"@code{defer!} or @code{is} (and they have to, before first executing "
"@i{name}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12898
#, no-wrap
msgid "defer! ( @var{ xt xt-deferred --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12899 ../doc/gforth.texi:12900
#, no-wrap
msgid "defer!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12903
#, no-wrap
msgid "@code{defer!} ( @i{xt xt-deferred --  }) core-ext ``defer-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12905
msgid "Changes the @code{defer}red word @var{xt-deferred} to execute @var{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12907
#, no-wrap
msgid "IS ( @var{ value \"name\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12908 ../doc/gforth.texi:12909
#, no-wrap
msgid "IS"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12912
#, no-wrap
msgid "@code{IS} ( @i{value \"name\" --  }) core-ext ``IS''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12914
msgid "changes the @code{defer}red word @var{name} to execute @var{value}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12916
#, no-wrap
msgid "defer@@ ( @var{ xt-deferred -- xt   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12917 ../doc/gforth.texi:12918
#, no-wrap
msgid "defer@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12921
#, no-wrap
msgid "@code{defer@@} ( @i{xt-deferred -- xt  }) core-ext ``new-defer-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12924
msgid ""
"@i{xt} represents the word currently associated with the deferred word @i{xt-"
"deferred}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12926
#, no-wrap
msgid "action-of ( @var{ interpretation \"name\" -- xt; compilation \"name\" -- ; run-time -- xt   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12927 ../doc/gforth.texi:12928
#, no-wrap
msgid "action-of"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12931
#, no-wrap
msgid "@code{action-of} ( @i{interpretation \"name\" -- xt; compilation \"name\" -- ; run-time -- xt  }) core-ext ``action-of''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12933
msgid "@i{Xt} is the XT that is currently assigned to @i{name}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:12940
msgid ""
"Definitions of these Forth-2012 words in Forth-94 are provided in "
"@file{compat/defer.fs}.  In addition, Gforth provides:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12941
#, no-wrap
msgid "defers ( @var{ compilation \"name\" -- ; run-time ... -- ...   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12942 ../doc/gforth.texi:12943
#, no-wrap
msgid "defers"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12946
#, no-wrap
msgid "@code{defers} ( @i{compilation \"name\" -- ; run-time ... -- ...  }) gforth-0.2 ``defers''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12950
msgid ""
"Compiles the present contents of the deferred word @i{name} into the current "
"definition.  I.e., this produces static binding as if @i{name} was not "
"deferred."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12952
#, no-wrap
msgid "wrap-xt ( @var{ xt1 xt2 xt: xt3 -- ...   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12953 ../doc/gforth.texi:12954
#, no-wrap
msgid "wrap-xt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12957
#, no-wrap
msgid "@code{wrap-xt} ( @i{xt1 xt2 xt: xt3 -- ...  }) gforth-1.0 ``wrap-xt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12960
msgid "Set deferred word xt2 to xt1 and execute xt3.  Restore afterwards."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12962
#, no-wrap
msgid "preserve ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12963 ../doc/gforth.texi:12964
#, no-wrap
msgid "preserve"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12967
#, no-wrap
msgid "@code{preserve} ( @i{\"name\" --  }) gforth-1.0 ``preserve''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12970
msgid "emit code that reverts a deferred word to the state at compilation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12981
msgid ""
"The defining word @code{Forward} in @code{forward.fs} allows you to create "
"forward references, which are resolved automatically, and do not incur "
"additional costs like the indirection of @code{Defer}.  However, these "
"forward definitions only work for colon definitions."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12982
#, no-wrap
msgid "forward ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12983 ../doc/gforth.texi:12984
#, no-wrap
msgid "forward"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12987
#, no-wrap
msgid "@code{forward} ( @i{\"name\" --  }) gforth-1.0 ``forward''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:12992
msgid ""
"Defines a forward reference to a colon definition.  Defining a colon "
"definition with the same name in the same wordlist resolves the forward "
"references.  Use @code{.unresolved} to check whether any forwards are "
"unresolved."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:12994
#, no-wrap
msgid ".unresolved ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:12995 ../doc/gforth.texi:12996
#, no-wrap
msgid ".unresolved"
msgstr ""

#. type: format
#: ../doc/gforth.texi:12999
#, no-wrap
msgid "@code{.unresolved} ( @i{--  }) gforth-1.0 ``.unresolved''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13001
msgid "print all unresolved forward references"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13006
#, no-wrap
msgid "aliases"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13007
#, no-wrap
msgid "synonyms"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13012
msgid ""
"The defining word @code{synonym} allows you to define a word by name that "
"has the same behaviour as some other word. Here are two situation where this "
"can be useful:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:13018
msgid ""
"When you want access to a word's definition from a different word list (for "
"an example of this, see the definition of the @code{Root} word list in the "
"Gforth source)."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:13022
msgid ""
"When you want to create a synonym; a definition that can be known by either "
"of two names (for example, @code{THEN} and @code{ENDIF} are synonyms)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13024
#, no-wrap
msgid "Synonym ( @var{ \"name\" \"oldname\" --   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13025 ../doc/gforth.texi:13026
#, no-wrap
msgid "Synonym"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13029
#, no-wrap
msgid "@code{Synonym} ( @i{\"name\" \"oldname\" --  }) tools-ext ``Synonym''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13033
msgid ""
"Define @i{name} to behave the same way as @i{oldname}: Same interpretation "
"semantics, same compilation semantics, same @code{to}/@code{defer!} and "
"@code{defer@@} semantics."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13040
msgid ""
"Gforth also offers the non-standard @code{alias}, that does not inherit the "
"compilation semantics, @code{to}/@code{defer!} or @code{defer@@} semantics "
"from its parent.  You can then change, e.g., the compilation semantics with, "
"e.g., @code{immediate}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13041
#, no-wrap
msgid "Alias ( @var{ xt \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13042 ../doc/gforth.texi:13043
#, no-wrap
msgid "Alias"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13046
#, no-wrap
msgid "@code{Alias} ( @i{xt \"name\" --  }) gforth-0.2 ``Alias''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13050
msgid ""
"Define @i{name} as a word that performs @i{xt}.  Unlike for deferred words, "
"aliases don't have an indirection overhead when compiled."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13054 ../doc/gforth.texi:15464 ../doc/gforth.texi:19981
#: ../doc/gforth.texi:30351 ../doc/gforth.texi:30395
msgid "Example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13057
#, no-wrap
msgid ""
": foo ... ; immediate\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13061
#, no-wrap
msgid ""
"' foo Alias bar1           \\ bar1 is not an immediate word\n"
"' foo Alias bar2 immediate \\ bar2 is an immediate word\n"
"synonym bar3 foo           \\ bar3 is an immediate word\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13066
msgid ""
"Both synonyms and aliases have a different nt than the original, but ticking "
"it (or using @code{name>interpret}) produces the same xt as the original "
"(@pxref{Tokens for Words})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13069
#, no-wrap
msgid "semantics, interpretation and compilation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13081
msgid ""
"The @dfn{interpretation semantics} of a (named) word are what the text "
"interpreter does when it encounters the word in interpret state. It also "
"appears in some other contexts, e.g., the execution token returned by "
"@code{' @i{word}} identifies the interpretation semantics of @i{word} (in "
"other words, @code{' @i{word} execute} is equivalent to interpret-state text "
"interpretation of @code{@i{word}})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13088
msgid ""
"The @dfn{compilation semantics} of a (named) word are what the text "
"interpreter does when it encounters the word in compile state. It also "
"appears in other contexts, e.g, @code{POSTPONE @i{word}} "
"compiles@footnote{In standard terminology, ``appends to the current "
"definition''.} the compilation semantics of @i{word}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13093
msgid ""
"Most words have default compilation semantics: compile the execution "
"semantics (stack effect @code{( -- )}).  But a number of words have other "
"compilation semantics, documented for the individual word (including its "
"stack effect)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13094
#, no-wrap
msgid "execution semantics"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13100
msgid ""
"The standard also talks about @dfn{execution semantics}.  In the standard it "
"never differs from the interpretation semantics if both are defined, but one "
"or both of them may not be defined.  Gforth makes no difference between "
"interpretation and execution semantics, so these terms are used "
"interchangeably."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13106
msgid ""
"In Gforth (since 1.0) all words have defined interpretation/execution "
"semantics.  For many words that have no defined interpretation nor execution "
"semantics in the standard (e.g., @code{if}), the interpretation/execution "
"semantics in Gforth are to perform the compilation semantics."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13115
msgid ""
"In the standard, execution semantics are used to define interpretation and "
"compilation semantics by default: By default, the interpretation semantics "
"of a word are to @code{execute} its execution semantics, and the compilation "
"semantics of a word are to @code{compile,} its execution semantics."
"@footnote{In standard terminology: The default interpretation semantics are "
"its execution semantics; the default compilation semantics are to append its "
"execution semantics to the execution semantics of the current definition.}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13120
msgid ""
"Unnamed words (@pxref{Anonymous Definitions}) cannot be encountered by the "
"text interpreter, ticked, or @code{postpone}d.  Such a word is represented "
"by its xt (@pxref{Tokens for Words}), and the behaviour when this xt is "
"@code{execute}d is called its execution semantics."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13124
#, no-wrap
msgid "compile-only words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13126
msgid "You can change the semantics of the most-recently defined word:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13128
#, no-wrap
msgid "immediate ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13129 ../doc/gforth.texi:13130
#, no-wrap
msgid "immediate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13133
#, no-wrap
msgid "@code{immediate} ( @i{--  }) core ``immediate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13136
msgid ""
"Make the compilation semantics of a word be to @code{execute} the execution "
"semantics."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13138
#, no-wrap
msgid "compile-only ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13139 ../doc/gforth.texi:13140
#, no-wrap
msgid "compile-only"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13143
#, no-wrap
msgid "@code{compile-only} ( @i{--  }) gforth-0.2 ``compile-only''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13146
msgid ""
"Mark the last definition as compile-only; as a result, the text interpreter "
"and @code{'} will warn when they encounter such a word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13148
#, no-wrap
msgid "restrict ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13149 ../doc/gforth.texi:13150
#, no-wrap
msgid "restrict"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13153
#, no-wrap
msgid "@code{restrict} ( @i{--  }) gforth-0.2 ``restrict''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13155
msgid "A synonym for @code{compile-only}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13161
msgid ""
"By convention, words with non-default compilation semantics (e.g., immediate "
"words) often have names surrounded with brackets (e.g., @code{[']}, "
"@pxref{Execution token})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13164
msgid ""
"Note that ticking (@code{'}) a compile-only word gives a warning (``<word> "
"is compile-only'')."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:13171
#, no-wrap
msgid "Combined Words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13172
#, no-wrap
msgid "combined words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13176
msgid ""
"Gforth allows you to define @dfn{combined words} -- words that have an "
"arbitrary combination of interpretation and compilation semantics."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13177
#, no-wrap
msgid "interpret/compile: ( @var{ interp-xt comp-xt \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13178 ../doc/gforth.texi:13179
#, no-wrap
msgid "interpret/compile:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13182
#, no-wrap
msgid "@code{interpret/compile:} ( @i{interp-xt comp-xt \"name\" --  }) gforth-0.2 ``interpret/compile:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13193
msgid ""
"This feature was introduced for implementing @code{TO} and @code{S\"}. I "
"recommend that you do not define such words, as cute as they may be: they "
"make it hard to get at both parts of the word in some contexts.  E.g., "
"assume you want to get an execution token for the compilation part. Instead, "
"define two words, one that embodies the interpretation part, and one that "
"embodies the compilation part.  Once you have done that, you can define a "
"combined word with @code{interpret/compile:} for the convenience of your "
"users."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13197
msgid ""
"You might try to use this feature to provide an optimizing implementation of "
"the default compilation semantics of a word. For example, by defining:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13203
#, no-wrap
msgid ""
":noname\n"
"   foo bar ;\n"
":noname\n"
"   POSTPONE foo POSTPONE bar ;\n"
"interpret/compile: opti-foobar\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13207
msgid "as an optimizing version of:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13211
#, no-wrap
msgid ""
": foobar\n"
"    foo bar ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13218
msgid ""
"Unfortunately, this does not work correctly with @code{[compile]}, because "
"@code{[compile]} assumes that the compilation semantics of all "
"@code{interpret/compile:} words are non-default. I.e., @code{[compile] opti-"
"foobar} would compile compilation semantics, whereas @code{[compile] foobar} "
"would compile interpretation semantics."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13219
#, no-wrap
msgid "state-smart words (are a bad idea)"
msgstr ""

#. type: anchor{#1}
#: ../doc/gforth.texi:13225
msgid "state-smartness"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13225
msgid ""
"Some people try to use @dfn{state-smart} words to emulate the feature "
"provided by @code{interpret/compile:} (words are state-smart if they check "
"@code{STATE} during execution). E.g., they would try to code @code{foobar} "
"like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13234
#, no-wrap
msgid ""
": foobar\n"
"  STATE @@\n"
"  IF ( compilation state )\n"
"    POSTPONE foo POSTPONE bar\n"
"  ELSE\n"
"    foo bar\n"
"  ENDIF ; immediate\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13248
msgid ""
"Although this works if @code{foobar} is only processed by the text "
"interpreter, it does not work in other contexts (like @code{'} or "
"@code{POSTPONE}). E.g., @code{' foobar} will produce an execution token for "
"a state-smart word, not for the interpretation semantics of the original "
"@code{foobar}; when you execute this execution token (directly with "
"@code{EXECUTE} or indirectly through @code{COMPILE,}) in compile state, the "
"result will not be what you expected (i.e., it will not perform @code{foo "
"bar}). State-smart words are a bad idea. Simply don't write "
"them@footnote{For a more detailed discussion of this topic, see M. Anton "
"Ertl, @cite{@uref{https://www.complang.tuwien.ac.at/papers/ertl98.ps.gz,"
"@code{State}-smartness---Why it is Evil and How to Exorcise it}}, EuroForth "
"'98.}!"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13252
#, no-wrap
msgid "tokens for words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13256
msgid ""
"This section describes the creation and use of tokens that represent words."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13273
msgid ""
"An @dfn{execution token} (@emph{xt}) represents some behaviour of a word.  "
"You can use @code{execute} to invoke the behaviour represented by the xt and "
"@code{compile,} (@pxref{Macros}) to compile it into the current definition.  "
"Other uses include deferred words (@pxref{Deferred Words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13282
msgid ""
"In particular, there is @emph{the} execution token of a word that represents "
"its interpretation semantics aka execution semantics.@footnote{The Forth "
"standard has words with undefined interpretation semantics (e.g., "
"@code{r@@}) and words without defined execution semantics (e.g., @code{s\"}) "
"and words with neither (e.g., @code{if}), but in cases where both "
"interpretation and execution semantics are defined, they are the same; so we "
"treat them as being the same.}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13283
#, no-wrap
msgid "prefix @code{`}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13284
#, no-wrap
msgid "@code{`} prefix"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13287
msgid ""
"For a named word @i{x}, you can use @code{`@i{x}} to get its execution token:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13293
#, no-wrap
msgid ""
"5 `. ( n xt )\n"
"execute ( )      \\ execute the xt (i.e., \".\")\n"
": foo `. execute ;\n"
"5 foo\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13295
#, no-wrap
msgid "tick (')"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13298
msgid ""
"However, the @code{`} prefix is a Gforth extension, so you may prefer to use "
"the standard Forth words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13299
#, no-wrap
msgid "' ( @var{ \"name\" -- xt   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13300 ../doc/gforth.texi:13301
#, no-wrap
msgid "'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13304
#, no-wrap
msgid "@code{'} ( @i{\"name\" -- xt  }) core ``tick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13308 ../doc/gforth.texi:13319
msgid ""
"@i{xt} represents @i{name}'s interpretation semantics. Perform @code{-14 "
"throw} if the word has no interpretation semantics."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13310
#, no-wrap
msgid "['] ( @var{ compilation. \"name\" -- ; run-time. -- xt   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13311 ../doc/gforth.texi:13312
#, no-wrap
msgid "[']"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13315
#, no-wrap
msgid "@code{[']} ( @i{compilation. \"name\" -- ; run-time. -- xt  }) core ``bracket-tick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13325
msgid ""
"These are parsing words (whereas @code{`@i{x}} is treated as a literal by a "
"recognizer), and you may find the behaviour in interpreted and compiled code "
"unintuitive:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13338
#, no-wrap
msgid ""
"5 ' .   ( n xt ) \n"
"execute ( )      \\ execute the xt of .\n"
"\\ does not work as intended:\n"
"\\ : foo ' . ;\n"
"\\ 5 foo execute\n"
"\\ instead:\n"
": foo ['] . ;\n"
"5 foo execute    \\ execute the xt of .\n"
"\\ Usage of ' in colon definition:\n"
": bar ' execute ;\n"
"5 bar .          \\ execute the xt of .\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13345
msgid ""
"@code{'} parses at run-time, so if you put it in a colon definition, as in "
"@code{bar}, it does not consume the next word in the colon definition, but "
"the next word at run-time (i.e., the @code{.} in the invocation of "
"@code{bar}).  If you want to put a literal xt in a colon definition without "
"writing @code{`@i{x}}, write @code{['] @i{x}}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13349
msgid ""
"Gforth's @code{`@i{x}}, @code{'} and @code{[']} warn when you use them on "
"compile-only words, because such usage may be non-portable between different "
"Forth systems."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13352
msgid ""
"You can avoid that warning as well as the portability problems by defining "
"an immediate variant of the word, e.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13356
#, no-wrap
msgid ""
": if postpone if ; immediate\n"
": test [ ' if execute ] .\" test\" then ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13360
msgid ""
"The resulting execution token performs the compilation semantics of "
"@code{if} when @code{execute}d."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13365
msgid ""
"Another way to get an xt is @code{:noname} or @code{latestxt} "
"(@pxref{Anonymous Definitions}).  For anonymous words this gives an xt for "
"the only behaviour the word has (the execution semantics), but you can also "
"use it after defining a named word to get its xt."
msgstr ""

#. type: example
#: ../doc/gforth.texi:13369
#, no-wrap
msgid ""
":noname .\" hello\" ;\n"
"execute\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13372
msgid "An xt occupies one cell and can be manipulated like any other cell."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13378
msgid ""
"In Standard Forth the xt is just an abstract data type (i.e., defined by the "
"operations that produce or consume it).  The concrete implementation (since "
"Gforth 1.0) is the body address (for old hands: PFA) of the word; in Gforth "
"0.7 and earlier, the xt was implemented as code field addres (CFA, 2 cells "
"before the PFA)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13379
#, no-wrap
msgid "execute ( @var{ xt --  } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13380 ../doc/gforth.texi:13381
#, no-wrap
msgid "execute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13384
#, no-wrap
msgid "@code{execute} ( @i{xt -- }) core ``execute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13386
msgid "Perform the semantics represented by the execution token, @i{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13387
#, no-wrap
msgid "execute-exit ( @var{ compilation -- ; run-time xt nest-sys --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13388 ../doc/gforth.texi:13389
#, no-wrap
msgid "execute-exit"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13392
#, no-wrap
msgid "@code{execute-exit} ( @i{compilation -- ; run-time xt nest-sys --  }) gforth-1.0 ``execute-exit''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13396
msgid ""
"Execute @code{xt} and return from the current definition, in a tail-call-"
"optimized way: The return address @code{nest-sys} and the locals are "
"deallocated before executing @code{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13398
#, no-wrap
msgid "perform ( @var{ a-addr --  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13399 ../doc/gforth.texi:13400
#, no-wrap
msgid "perform"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13403
#, no-wrap
msgid "@code{perform} ( @i{a-addr -- }) gforth-0.2 ``perform''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13405
msgid "@code{@@ execute}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13408
msgid "@code{Noop} is sometimes used to have a placeholder execution token:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13409
#, no-wrap
msgid "noop ( @var{ --  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13410 ../doc/gforth.texi:13411
#, no-wrap
msgid "noop"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13414
#, no-wrap
msgid "@code{noop} ( @i{-- }) gforth-0.2 ``noop''\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13421
#, no-wrap
msgid "name token"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13422
#, no-wrap
msgid "nt (name token)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13426
msgid ""
"Gforth represents named words by the @dfn{name token}, (@i{nt}).  The name "
"token is a cell-sized abstract data type that occurs as argument or result "
"of the words below."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13435
msgid ""
"Since Gforth 1.0, for most words the concrete implementation of their nt is "
"the same address as its xt (this is the primary nt for the xt).  However, "
"synonyms, aliases, and words defined with @code{interpret/compile:} get "
"their xt from another word, but still have an nt of their own (that is "
"different from the xt).  Therefore, you cannot use xts and nts "
"interchangeably, even if you are prepared to write code specific to Gforth "
"1.0.  You do not get these alternate nts for the xt with @code{>name}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13438
msgid ""
"You get the nt of a word @i{x} with @code{``@i{x}} (since Gforth 1.0)  or "
"with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13439
#, no-wrap
msgid "find-name ( @var{ c-addr u -- nt | 0   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13440 ../doc/gforth.texi:13441
#, no-wrap
msgid "find-name"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13444
#, no-wrap
msgid "@code{find-name} ( @i{c-addr u -- nt | 0  }) gforth-0.2 ``find-name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13447
msgid ""
"Find the name @i{c-addr u} in the current search order. Return its @i{nt}, "
"if found, otherwise 0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13449
#, no-wrap
msgid "find-name-in ( @var{ c-addr u wid -- nt | 0   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13450 ../doc/gforth.texi:13451
#, no-wrap
msgid "find-name-in"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13454
#, no-wrap
msgid "@code{find-name-in} ( @i{c-addr u wid -- nt | 0  }) gforth-1.0 ``find-name-in''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13458
msgid ""
"search the word list identified by @i{wid} for the definition named by the "
"string at @i{c-addr u}. Return its @i{nt}, if found, otherwise 0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13460
#, no-wrap
msgid "latest ( @var{ -- nt   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13461 ../doc/gforth.texi:13462
#, no-wrap
msgid "latest"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13465
#, no-wrap
msgid "@code{latest} ( @i{-- nt  }) gforth-0.6 ``latest''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13468
msgid ""
"@var{nt} is the name token of the last word defined; it is 0 if the last "
"word has no name."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13470
#, no-wrap
msgid "latestnt ( @var{ -- nt   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13471 ../doc/gforth.texi:13472
#, no-wrap
msgid "latestnt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13475
#, no-wrap
msgid "@code{latestnt} ( @i{-- nt  }) gforth-1.0 ``latestnt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13477
msgid "@i{nt} is the name token of the last word defined."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13479
#, no-wrap
msgid ">name ( @var{ xt -- nt|0   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13480 ../doc/gforth.texi:13481
#, no-wrap
msgid ">name"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13484
#, no-wrap
msgid "@code{>name} ( @i{xt -- nt|0  }) gforth-0.2 ``to-name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13491
msgid ""
"The primary name token @i{nt} of the word represented by @i{xt}.  Returns 0 "
"if @i{xt} is not an xt (using a heuristic check that has a small chance of "
"misidentifying a non-xt as xt), or if the primary nt is of an unnamed word.  "
"As of Gforth 1.0, every xt has a primary nt, but other named words may have "
"the same interpretation sematics xt."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13493
#, no-wrap
msgid "xt>name ( @var{ xt -- nt   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13494 ../doc/gforth.texi:13495
#, no-wrap
msgid "xt>name"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13498
#, no-wrap
msgid "@code{xt>name} ( @i{xt -- nt  }) gforth-1.0 ``xt-to-name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13501
msgid ""
"Produces the primary nt for an xt.  If @i{xt} is not an xt, @i{nt} is not "
"guaranteed to be an nt."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13505
msgid "You can get all the nts in a wordlist with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13506
#, no-wrap
msgid "traverse-wordlist ( @var{ ... xt wid -- ...   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13507 ../doc/gforth.texi:13508
#, no-wrap
msgid "traverse-wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13511
#, no-wrap
msgid "@code{traverse-wordlist} ( @i{... xt wid -- ...  }) tools-ext ``traverse-wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13515
msgid ""
"perform @i{xt} ( ... nt -- f ... ) once for every word @i{nt} in the "
"wordlist @i{wid}, until @i{f} is false or the wordlist is exhausted.  @i{xt} "
"is free to use the stack underneath."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13520
msgid ""
"You can use the nt to access the interpretation and compilation semantics of "
"a word, its name, and the next word in the wordlist:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13521
#, no-wrap
msgid "name>interpret ( @var{ nt -- xt   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13522 ../doc/gforth.texi:13523
#, no-wrap
msgid "name>interpret"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13526
#, no-wrap
msgid "@code{name>interpret} ( @i{nt -- xt  }) tools-ext ``name-to-interpret''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13529
msgid "@i{xt} represents the interpretation semantics of the word @i{nt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13531
#, no-wrap
msgid "name>compile ( @var{ nt -- w xt   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13532 ../doc/gforth.texi:13533
#, no-wrap
msgid "name>compile"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13536
#, no-wrap
msgid "@code{name>compile} ( @i{nt -- w xt  }) tools-ext ``name-to-compile''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13538
msgid "@i{w xt} is the compilation token for the word @i{nt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13540
#, no-wrap
msgid "name>string ( @var{ nt -- addr u   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13541 ../doc/gforth.texi:13542
#, no-wrap
msgid "name>string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13545
#, no-wrap
msgid "@code{name>string} ( @i{nt -- addr u  }) tools-ext ``name-to-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13547
msgid "@i{addr count} is the name of the word represented by @i{nt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13549
#, no-wrap
msgid "id. ( @var{ nt --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13550 ../doc/gforth.texi:13551
#, no-wrap
msgid "id."
msgstr ""

#. type: format
#: ../doc/gforth.texi:13554
#, no-wrap
msgid "@code{id.} ( @i{nt --  }) gforth-0.6 ``i-d-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13556
msgid "Print the name of the word represented by @var{nt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13558
#, no-wrap
msgid ".id ( @var{ nt --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13559 ../doc/gforth.texi:13560
#, no-wrap
msgid ".id"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13563
#, no-wrap
msgid "@code{.id} ( @i{nt --  }) gforth-0.6 ``dot-i-d''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13565
msgid "F83 name for @code{id.}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13567
#, no-wrap
msgid "name>link ( @var{ nt1 -- nt2 / 0   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13568 ../doc/gforth.texi:13569
#, no-wrap
msgid "name>link"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13572
#, no-wrap
msgid "@code{name>link} ( @i{nt1 -- nt2 / 0  }) gforth-1.0 ``name-to-link''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13575
msgid ""
"For a word @i{nt1}, returns the previous word @i{nt2} in the same wordlist, "
"or 0 if there is no previous word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13584
msgid ""
"A nameless word usually has no interpretation nor compilation semantics, no "
"name, and it's not in a wordlist.  But in Gforth (since 1.0) all words are "
"equal, so even nameless words have an nt (but they are in no wordlist).  You "
"can get that nt with @code{latestnt}, and the words above that consume nts "
"do something reasonable for these nts."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13587
msgid ""
"As a usage example, the following code lists all the words in @code{forth-"
"wordlist} with non-default compilation semantics:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13592
#, no-wrap
msgid ""
": ndcs-words ( wid -- )\n"
"  [: dup name>compile ['] compile, <> if over id. then 2drop true ;]\n"
"  swap traverse-wordlist ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13594
#, no-wrap
msgid "forth-wordlist ndcs-words\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13602
msgid ""
"This code assumes that a word has default compilation semantics if the xt "
"part of its compilation token is the xt of @code{compile,}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13604
#, no-wrap
msgid "name field address"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13605
#, no-wrap
msgid "NFA"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13616
msgid ""
"The closest thing to the nt in older Forth systems is the name field address "
"(NFA), but there are significant differences: in older Forth systems each "
"word had a unique NFA, LFA, CFA and PFA (in this order, or LFA, NFA, CFA, "
"PFA) and there were words for getting from one to the next.  In contrast, in "
"Gforth several nts can get the same xt from @code{name>interpret} xt; there "
"is a link field in the structure identified by the name token, but searching "
"usually uses a hash table external to these structures; the name in Gforth "
"has a cell-wide count-and-flags field, and the nt is not implemented as the "
"address of that count field."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13621
#, no-wrap
msgid "compilation token"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13622
#, no-wrap
msgid "ct (compilation token)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13630
msgid ""
"The compilation semantics of a named word is represented by a "
"@dfn{compilation token} consisting of two cells: @i{w xt}. The top cell "
"@i{xt} is an execution token. The compilation semantics represented by the "
"compilation token can be performed with @code{execute}, which consumes the "
"whole compilation token, with an additional stack effect determined by the "
"represented compilation semantics."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13640
msgid ""
"At present, the @i{w} part of a compilation token is an execution token, and "
"the @i{xt} part represents either @code{execute} or @code{compile,}"
"@footnote{Depending upon the compilation semantics of the word. If the word "
"has default compilation semantics, the @i{xt} will represent "
"@code{compile,}. Otherwise (e.g., for immediate words), the @i{xt} will "
"represent @code{execute}.}. However, don't rely on that knowledge, unless "
"necessary; future versions of Gforth may introduce unusual compilation "
"tokens (e.g., a compilation token that represents the compilation semantics "
"of a literal)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13644
msgid ""
"You get the compilation token of, e.g., @code{if} in a standard way with "
"@code{name>compile}, e.g., @code{`if name>compile}, but there are also "
"parsing words to get the compilation token of a word:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13645
#, no-wrap
msgid "[COMP'] ( @var{ compilation \"name\" -- ; run-time -- w xt   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13646 ../doc/gforth.texi:13647
#, no-wrap
msgid "[COMP']"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13650
#, no-wrap
msgid "@code{[COMP']} ( @i{compilation \"name\" -- ; run-time -- w xt  }) gforth-0.2 ``bracket-comp-tick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13652 ../doc/gforth.texi:13661
msgid "Compilation token @i{w xt} represents @i{name}'s compilation semantics."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13654
#, no-wrap
msgid "COMP' ( @var{ \"name\" -- w xt   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13655 ../doc/gforth.texi:13656
#, no-wrap
msgid "COMP'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13659
#, no-wrap
msgid "@code{COMP'} ( @i{\"name\" -- w xt  }) gforth-0.2 ``comp-tick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13668
msgid ""
"You can perform the compilation semantics represented by the compilation "
"token with @code{execute}.  You can compile the compilation semantics with "
"@code{postpone,}. I.e., @code{``@i{x} name>compile postpone,} is equivalent "
"to @code{postpone @i{x}}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13669
#, no-wrap
msgid "postpone, ( @var{ w xt --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13670 ../doc/gforth.texi:13671
#, no-wrap
msgid "postpone,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13674
#, no-wrap
msgid "@code{postpone,} ( @i{w xt --  }) gforth-0.2 ``postpone-comma''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13677
msgid ""
"Compile the compilation semantics represented by the compilation token @i{w "
"xt}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13683
#, no-wrap
msgid "compiling words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13684
#, no-wrap
msgid "macros"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13693
msgid ""
"In contrast to most other languages, Forth has no strict boundary between "
"compilation and run-time.  E.g., you can run arbitrary code between defining "
"words (or for computing data used by defining words like @code{constant}). "
"Moreover, @code{Immediate} (@pxref{Interpretation and Compilation Semantics} "
"and @code{[}...@code{]} (see below) allow running arbitrary code while "
"compiling a colon definition (exception: you must not allot dictionary "
"space)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13706
msgid ""
"The simplest and most frequent example is to compute a literal during "
"compilation.  E.g., the following definition prints an array of strings, one "
"string per line:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13712
#, no-wrap
msgid ""
": .strings ( addr u -- ) \\ gforth\n"
"    2* cells bounds U+DO\n"
"\tcr i 2@@ type\n"
"    2 cells +LOOP ;  \n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13717
msgid ""
"With a simple-minded compiler like Gforth's, this computes @code{2 cells} on "
"every loop iteration.  You can compute this value once and for all at "
"compile time and compile it into the definition like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13723
#, no-wrap
msgid ""
": .strings ( addr u -- ) \\ gforth\n"
"    2* cells bounds U+DO\n"
"\tcr i 2@@ type\n"
"    [ 2 cells ] literal +LOOP ;  \n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13733
msgid ""
"@code{[} switches the text interpreter to interpret state (you will get an "
"@code{ok} prompt if you type this example interactively and insert a newline "
"between @code{[} and @code{]}), so it performs the interpretation semantics "
"of @code{2 cells}; this computes a number.  @code{]} switches the text "
"interpreter back into compile state.  It then performs @code{Literal}'s "
"compilation semantics, which are to compile this number into the current "
"word.  You can decompile the word with @code{see .strings} to see the effect "
"on the compiled code."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13736
msgid ""
"You can also optimize the @code{2* cells} into @code{[ 2 cells ] literal *} "
"in this way."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13737
#, no-wrap
msgid "[ ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13738 ../doc/gforth.texi:13739
#, no-wrap
msgid "["
msgstr ""

#. type: format
#: ../doc/gforth.texi:13742
#, no-wrap
msgid "@code{[} ( @i{--  }) core ``left-bracket''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13744
msgid "Enter interpretation state. Immediate word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13746
#, no-wrap
msgid "] ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13747 ../doc/gforth.texi:13748
#, no-wrap
msgid "]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13751
#, no-wrap
msgid "@code{]} ( @i{--  }) core ``right-bracket''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13753
msgid "Enter compilation state."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13755
#, no-wrap
msgid "Literal ( @var{ compilation n -- ; run-time -- n   } ) core"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13760
#, no-wrap
msgid "@code{Literal} ( @i{compilation n -- ; run-time -- n  }) core ``Literal''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13764
msgid ""
"Compilation semantics: compile the run-time semantics.@* Run-time Semantics: "
"push @i{n}.@* Interpretation semantics: undefined."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13766
#, no-wrap
msgid "ALiteral ( @var{ compilation addr -- ; run-time -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13767 ../doc/gforth.texi:13768
#, no-wrap
msgid "ALiteral"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13771
#, no-wrap
msgid "@code{ALiteral} ( @i{compilation addr -- ; run-time -- addr  }) gforth-0.2 ``ALiteral''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13774
msgid ""
"Works like @code{literal}, but (when used in cross-compiled code) tells the "
"cross-compiler that the literal is an address."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13776
#, no-wrap
msgid "]L ( @var{ compilation: n -- ; run-time: -- n   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13777 ../doc/gforth.texi:13778
#, no-wrap
msgid "]L"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13781
#, no-wrap
msgid "@code{]L} ( @i{compilation: n -- ; run-time: -- n  }) gforth-0.5 ``]L''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13783
msgid "equivalent to @code{] literal}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13788
msgid ""
"There are also words for compiling other data types than single cells as "
"literals:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13789
#, no-wrap
msgid "2Literal ( @var{ compilation w1 w2 -- ; run-time  -- w1 w2   } ) double"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13790 ../doc/gforth.texi:13791
#, no-wrap
msgid "2Literal"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13794
#, no-wrap
msgid "@code{2Literal} ( @i{compilation w1 w2 -- ; run-time  -- w1 w2  }) double ``two-literal''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13797
msgid ""
"Compile appropriate code such that, at run-time, @i{w1 w2} are placed on the "
"stack. Interpretation semantics are undefined."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13799
#, no-wrap
msgid "FLiteral ( @var{ compilation r -- ; run-time -- r   } ) floating"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13800 ../doc/gforth.texi:13801
#, no-wrap
msgid "FLiteral"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13804
#, no-wrap
msgid "@code{FLiteral} ( @i{compilation r -- ; run-time -- r  }) floating ``f-literal''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13807
msgid ""
"Compile appropriate code such that, at run-time, @i{r} is placed on the "
"(floating-point) stack. Interpretation semantics are undefined."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13809
#, no-wrap
msgid "SLiteral ( @var{ Compilation c-addr1 u ; run-time -- c-addr2 u   } ) string"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13810 ../doc/gforth.texi:13811
#, no-wrap
msgid "SLiteral"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13814
#, no-wrap
msgid "@code{SLiteral} ( @i{Compilation c-addr1 u ; run-time -- c-addr2 u  }) string ``SLiteral''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13819
msgid ""
"Compilation: compile the string specified by @i{c-addr1}, @i{u} into the "
"current definition. Run-time: return @i{c-addr2 u} describing the address "
"and length of the string."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13822
#, no-wrap
msgid "colon-sys, passing data across @code{:}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13823
#, no-wrap
msgid "@code{:}, passing data across"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13827
msgid ""
"You might be tempted to pass data from outside a colon definition to the "
"inside on the data stack.  This does not work, because @code{:} puhes a "
"colon-sys, making stuff below unaccessible.  E.g., this does not work:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13830
#, no-wrap
msgid "5 : foo literal ; \\ error: \"unstructured\"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13834
msgid ""
"Instead, you have to pass the value in some other way, e.g., through a "
"variable:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13839
#, no-wrap
msgid ""
"variable temp\n"
"5 temp !\n"
": foo [ temp @@ ] literal ;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:13845
#, no-wrap
msgid "compiling compilation semantics"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13850
msgid ""
"@code{Literal} and friends compile data values into the current definition.  "
"You can also write words that compile other words into the current "
"definition.  E.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13854
#, no-wrap
msgid ""
": compile-+ ( -- ) \\ compiled code: ( n1 n2 -- n )\n"
"  POSTPONE + ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13858
#, no-wrap
msgid ""
": foo ( n1 n2 -- n )\n"
"  [ compile-+ ] ;\n"
"1 2 foo .\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13869
msgid ""
"This is equivalent to @code{: foo + ;} (@code{see foo} to check this).  What "
"happens in this example? @code{Postpone} compiles the compilation semantics "
"of @code{+} into @code{compile-+}; later the text interpreter executes "
"@code{compile-+} and thus the compilation semantics of +, which compile (the "
"execution semantics of) @code{+} into @code{foo}.@footnote{A recent RFI "
"answer requires that compiling words should only be executed in compile "
"state, so this example is not guaranteed to work on all standard systems, "
"but on any decent system it will work.}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13870
#, no-wrap
msgid "postpone ( @var{ \"name\" --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13871 ../doc/gforth.texi:13872
#, no-wrap
msgid "postpone"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13875
#, no-wrap
msgid "@code{postpone} ( @i{\"name\" --  }) core ``postpone''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13877
msgid "Compiles the compilation semantics of @i{name}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13883
msgid ""
"Compiling words like @code{compile-+} are usually immediate (or similar)  so "
"you do not have to switch to interpret state to execute them; modifying the "
"last example accordingly produces:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13888
#, no-wrap
msgid ""
": [compile-+] ( compilation: --; interpretation: -- )\n"
"  \\ compiled code: ( n1 n2 -- n )\n"
"  POSTPONE + ; immediate\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13892
#, no-wrap
msgid ""
": foo ( n1 n2 -- n )\n"
"  [compile-+] ;\n"
"1 2 foo .\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13898
msgid ""
"You will occassionally find the need to POSTPONE several words; putting "
"POSTPONE before each such word is cumbersome, so Gforth provides a more "
"convenient syntax: @code{]] ... [[}.  This allows us to write @code{[compile-"
"+]} as:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13902
#, no-wrap
msgid ""
": [compile-+] ( compilation: --; interpretation: -- )\n"
"  ]] + [[ ; immediate\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:13904
#, no-wrap
msgid "]] ( @var{ --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:13905 ../doc/gforth.texi:13906
#, no-wrap
msgid "]]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:13909
#, no-wrap
msgid "@code{]]} ( @i{--  }) gforth-0.6 ``right-bracket-bracket''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13913
msgid ""
"Switch into postpone state: All words and recognizers are processed as if "
"they were preceded by @code{postpone}.  Postpone state ends when @code{[[} "
"is recognized."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13922
msgid ""
"The unusual direction of the brackets indicates their function: @code{]]} "
"switches from compilation to postponing (i.e., compilation of compilation), "
"just like @code{]} switches from immediate execution (interpretation) to "
"compilation.  Conversely, @code{[[} switches from postponing to compilation, "
"ananlogous to @code{[} which switches from compilation to immediate "
"execution."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13927
msgid ""
"The real advantage of @code{]] }...@code{ [[} becomes apparent when there "
"are many words to POSTPONE.  E.g., the word @code{compile-map-array} "
"(@pxref{Advanced macros Tutorial}) can be written much shorter as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13935
#, no-wrap
msgid ""
": compile-map-array ( compilation: xt -- ; run-time: ... addr u -- ... )\n"
"\\ at run-time, execute xt ( ... x -- ... ) for each element of the\n"
"\\ array beginning at addr and containing u elements\n"
"  @{: xt: xt :@}\n"
"  ]] cells over + swap ?do\n"
"    i @@ xt 1 cells +loop [[ ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13938
#, no-wrap
msgid ""
": sum-array ( addr u -- n )\n"
"  0 [ ' + compile-map-array ] ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13941
msgid "If you then say @code{see sum-array}, it shows the following code:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13947
#, no-wrap
msgid ""
": sum-array\n"
"  #0 over + swap ?do\n"
"    i @ + #8 +LOOP\n"
";\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13951
msgid ""
"In addition to @code{]]}...@code{[[}, this example shows off some other "
"features:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:13958
msgid ""
"It uses a defer-flavoured (defined with @code{xt:} local @code{xt}; "
"mentioning the local inside @code{]]}...@code{[[} results in @code{compile,}"
"ing the xt in the local."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:13963
msgid ""
"It uses the literal @code{1} inside @code{]]}...@code{[[}.  This results in "
"@code{postpone}ing the @code{1}, i.e. compiling it when @code{compile-map-"
"array} is run."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:13967
msgid ""
"When @code{compile-map-array} is run, @code{1 cells} is compiled and "
"optimized into @code{#8} by Gforth's constant folding."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13976
msgid ""
"Note that parsing words such as @code{s\\\"} don't parse at postpone time "
"and therefore not inside @code{]]}...@code{[[}.  Instead of @code{s\\\" "
"mystring\\n\"} you can use the string recognizer and write "
"@code{\"mystring\\n\"}, which works inside @code{]]}...@code{[[}.  Likewise "
"for the parsing word @code{[']} and the recognizer notation starting with "
"@code{`}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13980
msgid ""
"But if you prefer to use @code{s\\\"} (or have a parsing word that has no "
"recognizer replacement), you can do it by switching back to compilation:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:13983
#, no-wrap
msgid "]] ... [[ s\\\" mystring\\n\" ]] 2literal ... [[\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:13987
msgid ""
"Definitions of @code{]]} and friends in Standard Forth are provided in "
"@file{compat/macros.fs}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:13990
msgid ""
"Immediate compiling words are similar to macros in other languages (in "
"particular, Lisp).  The important differences to macros in, e.g., C are:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:13996
msgid ""
"You use the same language for defining and processing macros, not a separate "
"preprocessing language and processor."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14003
msgid ""
"Consequently, the full power of Forth is available in macro definitions.  E."
"g., you can perform arbitrarily complex computations, or generate different "
"code conditionally or in a loop (e.g., @pxref{Advanced macros Tutorial}).  "
"This power is very useful when writing a parser generators or other code-"
"generating software."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14010
msgid ""
"Macros defined using @code{postpone} etc. deal with the language at a higher "
"level than strings; name binding happens at macro definition time, so you "
"can avoid the pitfalls of name collisions that can happen in C macros.  Of "
"course, Forth is a liberal language and also allows to shoot yourself in the "
"foot with text-interpreted macros like"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14013
#, no-wrap
msgid ": [compile-+] s\" +\" evaluate ; immediate\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14017
msgid ""
"Apart from binding the name at macro use time, using @code{evaluate} also "
"makes your definition @code{state}-smart (@pxref{state-smartness})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14023
msgid ""
"You may want the macro to compile a number into a word.  The word to do it "
"is @code{literal}, but you have to @code{postpone} it, so its compilation "
"semantics take effect when the macro is executed, not when it is compiled:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14027
#, no-wrap
msgid ""
": [compile-5] ( -- ) \\ compiled code: ( -- n )\n"
"  5 POSTPONE literal ; immediate\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14030
#, no-wrap
msgid ""
": foo [compile-5] ;\n"
"foo .\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14035
msgid ""
"You may want to pass parameters to a macro, that the macro should compile "
"into the current definition.  If the parameter is a number, then you can use "
"@code{postpone literal} (similar for other values)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14038
msgid ""
"If you want to pass a word that is to be compiled, the usual way is to pass "
"an execution token and @code{compile,} it:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14042
#, no-wrap
msgid ""
": twice1 ( xt -- ) \\ compiled code: ... -- ...\n"
"  dup compile, compile, ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14045
#, no-wrap
msgid ""
": 2+ ( n1 -- n2 )\n"
"  [ ' 1+ twice1 ] ;\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14047
#, no-wrap
msgid "compile, ( @var{ xt --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14048 ../doc/gforth.texi:14049
#, no-wrap
msgid "compile,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14052
#, no-wrap
msgid "@code{compile,} ( @i{xt --  }) core-ext ``compile-comma''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14056
msgid ""
"Append the semantics represented by @i{xt} to the current definition.  When "
"the resulting code fragment is run, it behaves the same as if @i{xt} is "
"@code{execute}d."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14062
msgid ""
"An alternative available in Gforth, that allows you to pass the compilation "
"semantics as parameters is to use the compilation token (@pxref{Compilation "
"token}).  The same example in this technique:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14066
#, no-wrap
msgid ""
": twice ( ... ct -- ... ) \\ compiled code: ... -- ...\n"
"  2dup 2>r execute 2r> execute ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14069
#, no-wrap
msgid ""
": 2+ ( n1 -- n2 )\n"
"  [ comp' 1+ twice ] ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14074
msgid ""
"In the example above @code{2>r} and @code{2r>} ensure that @code{twice} "
"works even if the executed compilation semantics has an effect on the data "
"stack."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14078
msgid ""
"You can also define complete definitions with these words; this provides an "
"alternative to using @code{does>} (@pxref{User-defined Defining Words}).  E."
"g., instead of"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14084
#, no-wrap
msgid ""
": curry+ ( n1 \"name\" -- )\n"
"    CREATE ,\n"
"DOES> ( n2 -- n1+n2 )\n"
"    @@ + ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14087
msgid "you could define"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14092
#, no-wrap
msgid ""
": curry+ ( n1 \"name\" -- )\n"
"  \\ name execution: ( n2 -- n1+n2 )\n"
"  >r : r> POSTPONE literal POSTPONE + POSTPONE ; ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14095
#, no-wrap
msgid ""
"-3 curry+ 3-\n"
"see 3-\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14099
msgid ""
"The sequence @code{>r : r>} is necessary, because @code{:} puts a colon-sys "
"on the data stack that makes everything below it unaccessible."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14106
msgid ""
"This way of writing defining words is sometimes more, sometimes less "
"convenient than using @code{does>} (@pxref{Advanced does> usage example}).  "
"One advantage of this method is that it can be optimized better, because the "
"compiler knows that the value compiled with @code{literal} is fixed, whereas "
"the data associated with a @code{create}d word can be changed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14107
#, no-wrap
msgid "[compile] ( @var{ compilation \"name\" -- ; run-time ? -- ?   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14108 ../doc/gforth.texi:14109
#, no-wrap
msgid "[compile]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14112
#, no-wrap
msgid "@code{[compile]} ( @i{compilation \"name\" -- ; run-time ? -- ?  }) core-ext ``bracket-compile''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14119
msgid ""
"Legacy word.  Use @code{postpone} instead.  Works like @code{postpone} if "
"@i{name} has non-default compilation semantics.  If @i{name} has default "
"compilation semantics (i.e., is a normal word), compiling @code{[compile] "
"@i{name}} is equivalent to compiling @i{name} (i.e. @code{[compile]} is "
"redundant in this case."
msgstr ""

#. type: node
#: ../doc/gforth.texi:14123 ../doc/gforth.texi:15336 ../doc/gforth.texi:15337
#: ../doc/gforth.texi:15489
#, no-wrap
msgid "The Input Stream"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14125
#, no-wrap
msgid "interpreter - outer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14151
msgid ""
"The text interpreter@footnote{This is an expanded version of the material in "
"@ref{Introducing the Text Interpreter}.} is an endless loop that processes "
"input from the current input device. It is also called the outer "
"interpreter, in contrast to the inner interpreter (@pxref{Engine}) which "
"executes the compiled Forth code on interpretive implementations."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14152
#, no-wrap
msgid "interpret state"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14153
#, no-wrap
msgid "compile state"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14157
msgid ""
"The text interpreter operates in one of two states: @dfn{interpret state} "
"and @dfn{compile state}. The current state is defined by the aptly-named "
"variable @code{state}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14162
msgid ""
"This section starts by describing how the text interpreter behaves when it "
"is in interpret state, processing input from the user input device -- the "
"keyboard. This is the mode that a Forth system is in after it starts up."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14163
#, no-wrap
msgid "input buffer"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14164
#, no-wrap
msgid "terminal input buffer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14175
msgid ""
"The text interpreter works from an area of memory called the @dfn{input "
"buffer}@footnote{When the text interpreter is processing input from the "
"keyboard, this area of memory is called the @dfn{terminal input buffer} "
"(TIB) and is addressed by the (obsolescent) words @code{TIB} and "
"@code{#TIB}.}, which stores your keyboard input when you press the @key{RET} "
"key. Starting at the beginning of the input buffer, it skips leading spaces "
"(called @dfn{delimiters}) then parses a string (a sequence of non-space "
"characters) until it reaches either a space character or the end of the "
"buffer. Having parsed a string, it makes two attempts to process it:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14176
#, no-wrap
msgid "dictionary"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14185
msgid ""
"It looks for the string in a @dfn{dictionary} of definitions. If the string "
"is found, the string names a @dfn{definition} (also known as a @dfn{word}) "
"and the dictionary search returns information that allows the text "
"interpreter to perform the word's @dfn{interpretation semantics}. In most "
"cases, this simply means that the word will be executed."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14192
msgid ""
"If the string is not found in the dictionary, the text interpreter attempts "
"to treat it as a number, using the rules described in @ref{Number "
"Conversion}. If the string represents a legal number in the current radix, "
"the number is pushed onto a parameter stack (the data stack for integers, "
"the floating-point stack for floating-point numbers)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14200
msgid ""
"If both attempts fail, the text interpreter discards the remainder of the "
"input buffer, issues an error message and waits for more input. If one of "
"the attempts succeeds, the text interpreter repeats the parsing process "
"until the whole of the input buffer has been processed, at which point it "
"prints the status message ``@code{ ok}'' and waits for more input."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14203
#, no-wrap
msgid "parse area"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14213
msgid ""
"The text interpreter keeps track of its position in the input buffer by "
"updating a variable called @code{>IN} (pronounced ``to-in''). The value of "
"@code{>IN} starts out as 0, indicating an offset of 0 from the start of the "
"input buffer. The region from offset @code{>IN @@} to the end of the input "
"buffer is called the @dfn{parse area}@footnote{In other words, the text "
"interpreter processes the contents of the input buffer by parsing strings "
"from the parse area until the parse area is empty.}.  This example shows how "
"@code{>IN} changes as the text interpreter parses the input buffer:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14217
#, no-wrap
msgid ""
": remaining source >in @@ /string\n"
"  cr .\" ->\" type .\" <-\" ; immediate \n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14219
#, no-wrap
msgid ""
"1 2 3 remaining + remaining . \n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14221
#, no-wrap
msgid ": foo 1 2 3 remaining swap remaining ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14225
msgid "The result is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14229
#, no-wrap
msgid ""
"->+ remaining .<-\n"
"->.<-5  ok\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14232
#, no-wrap
msgid ""
"->SWAP remaining ;-<\n"
"->;<-  ok\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14240
msgid ""
"The value of @code{>IN} can also be modified by a word in the input buffer "
"that is executed by the text interpreter.  This means that a word can "
"``trick'' the text interpreter into either skipping a section of the input "
"buffer@footnote{This is how parsing words work.} or into parsing a section "
"twice. For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14244
#, no-wrap
msgid ""
": lat .\" <<foo>>\" ;\n"
": flat .\" <<bar>>\" >IN DUP @@ 3 - SWAP ! ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14250
msgid ""
"When @code{flat} is executed, this output is produced@footnote{Exercise for "
"the reader: what would happen if the @code{3} were replaced with @code{4}?}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14253
#, no-wrap
msgid "<<bar>><<foo>>\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14258
msgid ""
"This technique can be used to work around some of the interoperability "
"problems of parsing words.  Of course, it's better to avoid parsing words "
"where possible."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14261
msgid "Two important notes about the behaviour of the text interpreter:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14266
msgid ""
"It processes each input string to completion before parsing additional "
"characters from the input buffer."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14268
msgid ""
"It treats the input buffer as a read-only region (and so must your code)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14273
msgid ""
"When the text interpreter is in compile state, its behaviour changes in "
"these ways:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14280
msgid ""
"If a parsed string is found in the dictionary, the text interpreter will "
"perform the word's @dfn{compilation semantics}. In most cases, this simply "
"means that the execution semantics of the word will be appended to the "
"current definition."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14283
msgid ""
"When a number is encountered, it is compiled into the current definition (as "
"a literal) rather than being pushed onto a parameter stack."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14286
msgid ""
"If an error occurs, @code{state} is modified to put the text interpreter "
"back into interpret state."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14289
msgid ""
"Each time a line is entered from the keyboard, Gforth prints "
"``@code{ compiled}'' rather than `` @code{ok}''."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14291 ../doc/gforth.texi:14372
#, no-wrap
msgid "text interpreter - input sources"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14294
msgid ""
"When the text interpreter is using an input device other than the keyboard, "
"its behaviour changes in these ways:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14300
msgid ""
"When the parse area is empty, the text interpreter attempts to refill the "
"input buffer from the input source. When the input source is exhausted, the "
"input source is set back to the previous input source."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14303
msgid ""
"It doesn't print out ``@code{ ok}'' or ``@code{ compiled}'' messages each "
"time the parse area is emptied."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14306
msgid ""
"If an error occurs, the input source is set back to the user input device."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14309
msgid "You can read about this in more detail in @ref{Input Sources}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14310
#, no-wrap
msgid ">in ( @var{ -- addr   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14311 ../doc/gforth.texi:14312
#, no-wrap
msgid ">in"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14315
#, no-wrap
msgid "@code{>in} ( @i{-- addr  }) core ``to-in''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14319
msgid ""
"@code{uvar} variable -- @i{a-addr} is the address of a cell containing the "
"char offset from the start of the input buffer to the start of the parse "
"area."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14321
#, no-wrap
msgid "source ( @var{ -- addr u   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14322 ../doc/gforth.texi:14323
#, no-wrap
msgid "source"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14326
#, no-wrap
msgid "@code{source} ( @i{-- addr u  }) core ``source''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14329
msgid "Return address @i{addr} and length @i{u} of the current input buffer"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14332
#, no-wrap
msgid "tib ( @var{ -- addr   } ) core-ext-obsolescent"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14333 ../doc/gforth.texi:14334
#, no-wrap
msgid "tib"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14337
#, no-wrap
msgid "@code{tib} ( @i{-- addr  }) core-ext-obsolescent ``t-i-b''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14339
#, no-wrap
msgid "#tib ( @var{ -- addr   } ) core-ext-obsolescent"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14340 ../doc/gforth.texi:14341
#, no-wrap
msgid "#tib"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14344
#, no-wrap
msgid "@code{#tib} ( @i{-- addr  }) core-ext-obsolescent ``number-t-i-b''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14349
msgid ""
"@code{uvar} variable -- @i{a-addr} is the address of a cell containing the "
"number of characters in the terminal input buffer. OBSOLESCENT: "
"@code{source} superceeds the function of this word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14352
#, no-wrap
msgid "interpret ( @var{ ... -- ...   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14353 ../doc/gforth.texi:14354
#, no-wrap
msgid "interpret"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14357
#, no-wrap
msgid "@code{interpret} ( @i{... -- ...  }) gforth-0.2 ``interpret''\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:14369 ../doc/gforth.texi:14370 ../doc/gforth.texi:14471
#, no-wrap
msgid "Input Sources"
msgstr ""

#. type: node
#: ../doc/gforth.texi:14369 ../doc/gforth.texi:14471 ../doc/gforth.texi:14472
#: ../doc/gforth.texi:14567
#, no-wrap
msgid "Number Conversion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14371
#, no-wrap
msgid "input sources"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14377
msgid ""
"By default, the text interpreter processes input from the user input device "
"(the keyboard) when Forth starts up. The text interpreter can process input "
"from any of these sources:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14381
msgid "The user input device -- the keyboard."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14383
msgid "A file, using the words described in @ref{Forth source files}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14385
msgid "A block, using the words described in @ref{Blocks}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14387
msgid "A text string, using @code{evaluate}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14391
msgid ""
"A program can identify the current input device from the values of "
"@code{source-id} and @code{blk}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14393
#, no-wrap
msgid "source-id ( @var{ -- 0 | -1 | fileid   } ) core-ext,file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14394 ../doc/gforth.texi:14395
#, no-wrap
msgid "source-id"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14398
#, no-wrap
msgid "@code{source-id} ( @i{-- 0 | -1 | fileid  }) core-ext,file ``source-i-d''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14403
msgid ""
"Return 0 (the input source is the user input device), -1 (the input source "
"is a string being processed by @code{evaluate}) or a @i{fileid} (the input "
"source is the file specified by @i{fileid})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14405
#, no-wrap
msgid "blk ( @var{ -- addr   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14406 ../doc/gforth.texi:14407
#, no-wrap
msgid "blk"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14410
#, no-wrap
msgid "@code{blk} ( @i{-- addr  }) block ``b-l-k''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14413
msgid ""
"@code{uvar} variable -- This cell contains the current block number (or 0 if "
"the current input source is not a block)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14416
#, no-wrap
msgid "save-input ( @var{ -- x1 .. xn n   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14417 ../doc/gforth.texi:14418
#, no-wrap
msgid "save-input"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14421
#, no-wrap
msgid "@code{save-input} ( @i{-- x1 .. xn n  }) core-ext ``save-input''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14425
msgid ""
"The @i{n} entries @i{xn - x1} describe the current state of the input source "
"specification, in some platform-dependent way that can be used by "
"@code{restore-input}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14427
#, no-wrap
msgid "restore-input ( @var{ x1 .. xn n -- flag   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14428 ../doc/gforth.texi:14429
#, no-wrap
msgid "restore-input"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14432
#, no-wrap
msgid "@code{restore-input} ( @i{x1 .. xn n -- flag  }) core-ext ``restore-input''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14441
msgid ""
"Attempt to restore the input source specification to the state described by "
"the @i{n} entries @i{xn - x1}. @i{flag} is true if the restore fails.  In "
"Gforth with the new input code, it fails only with a flag that can be used "
"to throw again; it is also possible to save and restore between different "
"active input streams. Note that closing the input streams must happen in the "
"reverse order as they have been opened, but in between everything is allowed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14444
#, no-wrap
msgid "evaluate ( @var{ ... addr u -- ...   } ) core,block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14445 ../doc/gforth.texi:14446
#, no-wrap
msgid "evaluate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14449
#, no-wrap
msgid "@code{evaluate} ( @i{... addr u -- ...  }) core,block ``evaluate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14455
msgid ""
"Save the current input source specification. Store @code{-1} in @code{source-"
"id} and @code{0} in @code{blk}. Set @code{>IN} to @code{0} and make the "
"string @i{c-addr u} the input source and input buffer. Interpret. When the "
"parse area is empty, restore the input source specification."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14457
#, no-wrap
msgid "query ( @var{ --   } ) core-ext-obsolescent"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14458 ../doc/gforth.texi:14459
#, no-wrap
msgid "query"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14462
#, no-wrap
msgid "@code{query} ( @i{--  }) core-ext-obsolescent ``query''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14466
msgid ""
"Make the user input device the input source. Receive input into the Terminal "
"Input Buffer. Set @code{>IN} to zero. OBSOLESCENT: superceeded by "
"@code{accept}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:14471 ../doc/gforth.texi:14567 ../doc/gforth.texi:14568
#: ../doc/gforth.texi:14569 ../doc/gforth.texi:14640
#, no-wrap
msgid "Interpret/Compile states"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14473
#, no-wrap
msgid "number conversion"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14478
msgid ""
"You get an overview of how the text interpreter converts its numeric input "
"in @ref{Literals in source code}.  This section describes some related words."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14487
msgid ""
"By default, the number base used for integer number conversion is given by "
"the contents of the variable @code{base}.  Note that a lot of confusion can "
"result from unexpected values of @code{base}.  If you change @code{base} "
"anywhere, make sure to save the old value and restore it afterwards; better "
"yet, use @code{base-execute}, which does this for you.  In general I "
"recommend keeping @code{base} decimal, and using the prefixes described in "
"@ref{Literals in source code} for the popular non-decimal bases."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14488
#, no-wrap
msgid "base-execute ( @var{ i*x xt u -- j*x   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14489 ../doc/gforth.texi:14490
#, no-wrap
msgid "base-execute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14493
#, no-wrap
msgid "@code{base-execute} ( @i{i*x xt u -- j*x  }) gforth-0.7 ``base-execute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14496
msgid ""
"execute @i{xt} with the content of @code{BASE} being @i{u}, and restoring "
"the original @code{BASE} afterwards."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14498
#, no-wrap
msgid "base ( @var{ -- a-addr   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14499 ../doc/gforth.texi:14500
#, no-wrap
msgid "base"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14503
#, no-wrap
msgid "@code{base} ( @i{-- a-addr  }) core ``base''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14508
msgid ""
"@code{User} variable -- @i{a-addr} is the address of a cell that stores the "
"number base used by default for number conversion during input and output.  "
"Don't store to @code{base}, use @code{base-execute} instead."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14510
#, no-wrap
msgid "hex ( @var{ --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14511 ../doc/gforth.texi:14512
#, no-wrap
msgid "hex"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14515
#, no-wrap
msgid "@code{hex} ( @i{--  }) core-ext ``hex''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14518
msgid ""
"Set @code{base} to &16 (hexadecimal).  Don't use @code{hex}, use @code{base-"
"execute} instead."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14520
#, no-wrap
msgid "decimal ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14521 ../doc/gforth.texi:14522
#, no-wrap
msgid "decimal"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14525
#, no-wrap
msgid "@code{decimal} ( @i{--  }) core ``decimal''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14528
msgid ""
"Set @code{base} to &10 (decimal).  Don't use @code{decimal}, use @code{base-"
"execute} instead."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14530
#, no-wrap
msgid "dpl ( @var{ -- a-addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14531 ../doc/gforth.texi:14532
#, no-wrap
msgid "dpl"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14535
#, no-wrap
msgid "@code{dpl} ( @i{-- a-addr  }) gforth-0.2 ``Decimal-PLace''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14541
msgid ""
"@code{User} variable -- @i{a-addr} is the address of a cell that stores the "
"\t\t position of the decimal point in the most recent numeric conversion.  "
"Initialised to -1. After the conversion of a number containing no decimal "
"point, @code{dpl} is -1. After the conversion of @code{2.} it holds 0. After "
"the conversion of 234123.9 it contains 1, and so forth."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14544
#, no-wrap
msgid "number conversion - traps for the unwary"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14547
msgid "Number conversion has a number of traps for the unwary:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14553
msgid ""
"You cannot determine the current number base using the code sequence "
"@code{base @@ .} -- the number base is always 10 in the current number base. "
"Instead, use something like @code{base @@ dec.}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14556
msgid ""
"There is a word @code{bin} but it does @i{not} set the number base! "
"(@pxref{General files})."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14560
msgid ""
"Standard Forth requires the @code{.} of a double-precision number to be the "
"final character in the string.  Gforth allows the @code{.} to be anywhere."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14562
msgid "The number conversion process does not check for overflow."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14566
msgid ""
"You can read numbers into your programs with the words described in "
"@ref{Line input and conversion}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:14567 ../doc/gforth.texi:14640 ../doc/gforth.texi:14641
#: ../doc/gforth.texi:14877
#, no-wrap
msgid "Interpreter Directives"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14582
msgid ""
"A standard program is not permitted to change @code{state} explicitly. "
"However, it can change @code{state} implicitly, using the words @code{[} and "
"@code{]}. When @code{[} is executed it switches @code{state} to interpret "
"state, and therefore the text interpreter starts interpreting. When @code{]} "
"is executed it switches @code{state} to compile state and therefore the text "
"interpreter starts compiling. The most common usage for these words is for "
"switching into interpret state and back from within a colon definition; this "
"technique can be used to compile a literal (for an example, "
"@pxref{Literals}) or for conditional compilation (for an example, "
"@pxref{Interpreter Directives})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14642
#, no-wrap
msgid "interpreter directives"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14643
#, no-wrap
msgid "conditional compilation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14651
msgid ""
"These words are usually used in interpret state; typically to control which "
"parts of a source file are processed by the text interpreter. There are only "
"a few Standard Forth Standard words, but Gforth supplements these with a "
"rich set of immediate control structure words to compensate for the fact "
"that the non-immediate versions can only be used in compile state "
"(@pxref{Control Structures}). Typical usage:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14656
#, no-wrap
msgid ""
"[undefined] \\G [if]\n"
"  : \\G ... ; immediate\n"
"[endif]\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14660
msgid ""
"So if the system does not define @code{\\G}, compile some replacement code "
"(with possibly reduced functionality)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14662
#, no-wrap
msgid "[IF] ( @var{ flag --   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14663 ../doc/gforth.texi:14664
#, no-wrap
msgid "[IF]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14667
#, no-wrap
msgid "@code{[IF]} ( @i{flag --  }) tools-ext ``bracket-if''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14676
msgid ""
"If flag is @code{TRUE} do nothing (and therefore execute subsequent words as "
"normal). If flag is @code{FALSE}, parse and discard words from the parse "
"area (refilling it if necessary using @code{REFILL}) including nested "
"instances of @code{[IF]}..  @code{[ELSE]}.. @code{[THEN]} and @code{[IF]}.. "
"@code{[THEN]} until the balancing @code{[ELSE]} or @code{[THEN]} has been "
"parsed and discarded. Immediate word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14678
#, no-wrap
msgid "[ELSE] ( @var{ --   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14679 ../doc/gforth.texi:14680
#, no-wrap
msgid "[ELSE]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14683
#, no-wrap
msgid "@code{[ELSE]} ( @i{--  }) tools-ext ``bracket-else''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14694
msgid ""
"Parse and discard words from the parse area (refilling it if necessary using "
"@code{REFILL}) including nested instances of @code{[IF]}..  @code{[ELSE]}.. "
"@code{[THEN]} and @code{[IF]}.. @code{[THEN]} until the balancing "
"@code{[THEN]} has been parsed and discarded.  @code{[ELSE]} only gets "
"executed if the balancing @code{[IF]} was @code{TRUE}; if it was "
"@code{FALSE}, @code{[IF]} would have parsed and discarded the @code{[ELSE]}, "
"leaving the subsequent words to be executed as normal.  Immediate word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14696
#, no-wrap
msgid "[THEN] ( @var{ --   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14697 ../doc/gforth.texi:14698
#, no-wrap
msgid "[THEN]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14701
#, no-wrap
msgid "@code{[THEN]} ( @i{--  }) tools-ext ``bracket-then''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14704
msgid ""
"Do nothing; used as a marker for other words to parse and discard up to. "
"Immediate word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14706
#, no-wrap
msgid "[ENDIF] ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14707 ../doc/gforth.texi:14708
#, no-wrap
msgid "[ENDIF]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14711
#, no-wrap
msgid "@code{[ENDIF]} ( @i{--  }) gforth-0.2 ``bracket-end-if''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14713
msgid "Do nothing; synonym for @code{[THEN]}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14716
#, no-wrap
msgid "[defined] ( @var{ \"<spaces>name\" -- flag   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14717 ../doc/gforth.texi:14718
#, no-wrap
msgid "[defined]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14721
#, no-wrap
msgid "@code{[defined]} ( @i{\"<spaces>name\" -- flag  }) tools-ext ``bracket-defined''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14723
msgid "returns true if name is found in current search order"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14725
#, no-wrap
msgid "[undefined] ( @var{ \"<spaces>name\" -- flag   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14726 ../doc/gforth.texi:14727
#, no-wrap
msgid "[undefined]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14730
#, no-wrap
msgid "@code{[undefined]} ( @i{\"<spaces>name\" -- flag  }) tools-ext ``bracket-undefined''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14732
msgid "returns false if name is found in current search order"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14735
#, no-wrap
msgid "[IFDEF] ( @var{ \"<spaces>name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14736 ../doc/gforth.texi:14737
#, no-wrap
msgid "[IFDEF]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14740
#, no-wrap
msgid "@code{[IFDEF]} ( @i{\"<spaces>name\" --  }) gforth-0.2 ``bracket-if-def''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14744
msgid ""
"If name is found in the current search-order, behave like @code{[IF]} with a "
"@code{TRUE} flag, otherwise behave like @code{[IF]} with a @code{FALSE} "
"flag. Immediate word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14746
#, no-wrap
msgid "[IFUNDEF] ( @var{ \"<spaces>name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14747 ../doc/gforth.texi:14748
#, no-wrap
msgid "[IFUNDEF]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14751
#, no-wrap
msgid "@code{[IFUNDEF]} ( @i{\"<spaces>name\" --  }) gforth-0.2 ``bracket-if-un-def''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14755
msgid ""
"If name is not found in the current search-order, behave like @code{[IF]} "
"with a @code{TRUE} flag, otherwise behave like @code{[IF]} with a "
"@code{FALSE} flag. Immediate word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14758
#, no-wrap
msgid "[?DO] ( @var{ n-limit n-index --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14759 ../doc/gforth.texi:14760
#, no-wrap
msgid "[?DO]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14763
#, no-wrap
msgid "@code{[?DO]} ( @i{n-limit n-index --  }) gforth-0.2 ``bracket-question-do''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14765
#, no-wrap
msgid "[DO] ( @var{ n-limit n-index --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14766 ../doc/gforth.texi:14767
#, no-wrap
msgid "[DO]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14770
#, no-wrap
msgid "@code{[DO]} ( @i{n-limit n-index --  }) gforth-0.2 ``bracket-do''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14772
#, no-wrap
msgid "[LOOP] ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14773 ../doc/gforth.texi:14774
#, no-wrap
msgid "[LOOP]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14777
#, no-wrap
msgid "@code{[LOOP]} ( @i{--  }) gforth-0.2 ``bracket-loop''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14779
#, no-wrap
msgid "[+LOOP] ( @var{ n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14780 ../doc/gforth.texi:14781
#, no-wrap
msgid "[+LOOP]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14784
#, no-wrap
msgid "@code{[+LOOP]} ( @i{n --  }) gforth-0.2 ``bracket-question-plus-loop''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14786
#, no-wrap
msgid "[FOR] ( @var{ n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14787 ../doc/gforth.texi:14788
#, no-wrap
msgid "[FOR]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14791
#, no-wrap
msgid "@code{[FOR]} ( @i{n --  }) gforth-0.2 ``bracket-for''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14793
#, no-wrap
msgid "[NEXT] ( @var{ n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14794 ../doc/gforth.texi:14795
#, no-wrap
msgid "[NEXT]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14798
#, no-wrap
msgid "@code{[NEXT]} ( @i{n --  }) gforth-0.2 ``bracket-next''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14800
#, no-wrap
msgid "[I] ( @var{ run-time -- n   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14801 ../doc/gforth.texi:14802
#, no-wrap
msgid "[I]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14805
#, no-wrap
msgid "@code{[I]} ( @i{run-time -- n  }) gforth-0.2 ``bracket-i''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14810
msgid ""
"At run-time, @code{[I]} pushes the loop index of the text-interpretation-"
"time @code{[do]} iteration.  If you want to process the index at "
"interpretation time, interpret @code{[I]} interpretevely, or use @code{INT-"
"[I]}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14812
#, no-wrap
msgid "INT-[I] ( @var{ -- n   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14813 ../doc/gforth.texi:14814
#, no-wrap
msgid "INT-[I]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14817
#, no-wrap
msgid "@code{INT-[I]} ( @i{-- n  }) gforth-1.0 ``int-bracket-i''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14820
msgid ""
"Push the loop index of the @code{[do]} iteration at text interpretation time."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14823
#, no-wrap
msgid "[BEGIN] ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14824 ../doc/gforth.texi:14825
#, no-wrap
msgid "[BEGIN]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14828
#, no-wrap
msgid "@code{[BEGIN]} ( @i{--  }) gforth-0.2 ``bracket-begin''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14830
#, no-wrap
msgid "[UNTIL] ( @var{ flag --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14831 ../doc/gforth.texi:14832
#, no-wrap
msgid "[UNTIL]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14835
#, no-wrap
msgid "@code{[UNTIL]} ( @i{flag --  }) gforth-0.2 ``bracket-until''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14837
#, no-wrap
msgid "[AGAIN] ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14838 ../doc/gforth.texi:14839
#, no-wrap
msgid "[AGAIN]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14842
#, no-wrap
msgid "@code{[AGAIN]} ( @i{--  }) gforth-0.2 ``bracket-again''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14844
#, no-wrap
msgid "[WHILE] ( @var{ flag --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14845 ../doc/gforth.texi:14846
#, no-wrap
msgid "[WHILE]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14849
#, no-wrap
msgid "@code{[WHILE]} ( @i{flag --  }) gforth-0.2 ``bracket-while''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14851
#, no-wrap
msgid "[REPEAT] ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14852 ../doc/gforth.texi:14853
#, no-wrap
msgid "[REPEAT]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14856
#, no-wrap
msgid "@code{[REPEAT]} ( @i{--  }) gforth-0.2 ``bracket-repeat''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14865
msgid ""
"You can use @code{#line} to change Gforth's idea about the current source "
"line number and source file.  This is useful in cases where the Forth file "
"is generated from some other source code file, and you want to get, e.g. "
"error messages etc. that refer to the original source code; then the Forth-"
"code generator needs to insert @code{#line} lines in the Forth code wherever "
"appropriate."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14866
#, no-wrap
msgid "#line ( @var{ \"u\" \"[\"file\"]\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14867 ../doc/gforth.texi:14868
#, no-wrap
msgid "#line"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14871
#, no-wrap
msgid "@code{#line} ( @i{\"u\" \"[\"file\"]\" --  }) gforth-1.0 ``#line''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14874
msgid ""
"Set the line number to @i{u} and (if present) the file name to @i{file}.  "
"Consumes the rest of the line."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14879
#, no-wrap
msgid "recongizers"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14886
msgid ""
"When the text interpreter processes source code, it divides the code into "
"blank-delimited strings, and then calls recognizers to identify them as "
"words, numbers, etc., until one recognizer identifies (recognizes) the "
"string; if the string is not recognized, the text interpreter reports an "
"error (@code{undefined word})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14891
msgid ""
"The usual way to deal with recognizers is to just write code that one of "
"them identifies (@pxref{Default Recognizers}); however, you can also "
"manipulate them (@pxref{Dealing with existing Recognizers}) or even define "
"new ones (@pxref{Defining Recognizers})."
msgstr ""

#. type: node
#: ../doc/gforth.texi:14898 ../doc/gforth.texi:14899 ../doc/gforth.texi:15012
#, no-wrap
msgid "Default Recognizers"
msgstr ""

#. type: node
#: ../doc/gforth.texi:14898 ../doc/gforth.texi:15012 ../doc/gforth.texi:15013
#: ../doc/gforth.texi:15298
#, no-wrap
msgid "Dealing with existing Recognizers"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:14900
#, no-wrap
msgid "Recognizers normal usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14906
msgid ""
"The standard Forth text interpreter recognizes words in the search order "
"(@code{rec-nt}), integer numbers (@code{rec-num}), and floating point "
"numbers (@code{rec-float}).  By default Gforth also recognizes syntaxes for"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14911
msgid "strings, e.g., @code{\"mystring\"}, with @code{rec-string}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14914
msgid "complex numbers, e.g., @code{0e+1ei}, with @code{rec-complex}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14918
msgid ""
"storing a value or changing a defered word, e.g., @code{->myvalue}, with "
"@code{rec-to}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14922
msgid ""
"the xt representing the interpretation semantics of a word, e.g., "
"@code{`dup}, with @code{rec-tick}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14925
msgid "the nt of a word, e.g., @code{``mysynonym}, with @code{rec-dtick}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14929
msgid ""
"an address in the body of a word, e.g., @code{<myarray+8>}, with @code{rec-"
"body}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14933
msgid ""
"an access to an environment variable of the operating system, e.g., "
"@code{$@{HOME@}}, with @code{rec-env}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14936
msgid ""
"a word in a vocabulary, e.g., @code{myvoc1:myvoc2:myword}, with @code{rec-"
"scope}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14939
msgid ""
"using a specific recognizer to recognize something, e.g., @code{float?1.}, , "
"with @code{rec-meta}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14944
msgid ""
"You can use @code{locate} (@pxref{Locating source code definitions}) to "
"determine which recognizer recognizes a piece of source code.  E.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:14948
#, no-wrap
msgid ""
"defer mydefer\n"
"locate ->mydefer\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14953
msgid ""
"will show that @code{rec-to} recognizes @code{->mydefer}.  However, if the "
"recognizer recognizes a dictionary word (e.g., the scope recognizer), locate "
"will show that word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14955
msgid ""
"You can see which recognizers are used and the order of recognizers with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:14956
#, no-wrap
msgid ".recognizers ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:14957 ../doc/gforth.texi:14958
#, no-wrap
msgid ".recognizers"
msgstr ""

#. type: format
#: ../doc/gforth.texi:14961
#, no-wrap
msgid "@code{.recognizers} ( @i{--  }) gforth-experimental ``dot-recognizers''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:14966
msgid ""
"Print the current recognizer order, with the first-searched recognizer "
"leftmost (unlike .order).  The inverted @code{~} is displayed instead of "
"@code{rec-}, which is the common prefix of all recognizers."
msgstr ""

#. type: table
#: ../doc/gforth.texi:14974
msgid ""
"Recognizers are typically designed to avoid matching the same strings as "
"other recognizers.  E.g., @code{rec-env} (the environment variable "
"recognizer) requires braces to avoid a conflict with the number recognizer "
"for input strings like @code{$ADD}.  There are a few exceptions to this "
"policy, however:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14981
msgid ""
"Word names can be anything, so they can conflict with any other recognizer "
"(and the search order is searched before other recognizers)."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14985
msgid ""
"However, they tend not to start with @code{0} (and if they do, they contain "
"special characters), so if your base is @code{hex}, it is a good practice to "
"let your numbers start with @code{0}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14990
msgid ""
"In the code bases we have looked at, starting words with @code{'} (quote aka "
"tick) is much more common than starting them with @code{`} (backquote aka "
"backtick), so the recognizers for the xt and the nt use @code{`} to reduce "
"the number of conflicts."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:14999
msgid ""
"Both the integer recognizer @code{rec-num} and the floating-point recognizer "
"@code{rec-float} recognize, e.g., @code{1.}.  Because @code{rec-num} is (by "
"default) first, @code{1.} is recognized as a double-cell integer.  If you "
"change the recognizer order to use @code{rec-float} first, @code{1.} is "
"recognized as a floating-point number, but loading code written in standard "
"Forth may behave in a non-standard way."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15004
msgid ""
"In any case, it's a good practice to avoid that conflict in your own code as "
"follows: Always write double-cell integers with a number prefix, e.g., "
"@code{#1.}; and always write floating-point numbers with an @code{e}, e.g., "
"@code{1e}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15009
msgid ""
"We have seen a few word names that start with @code{->}.  You can avoid a "
"conflict by using @code{to myvalue} or @code{to?->myvalue} (the latter works "
"with @code{postpone})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15014
#, no-wrap
msgid "Recognizers, dealing with"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15021
msgid ""
"A recognizer is a word to which you pass a string.  If the recognizer "
"recognizes the string, it typically returns some data and the xt of a word "
"for processing the data; this word is called the translator.  If the "
"recognizer does not recognize the string, it returns the xt of "
"@code{notfound}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15023
msgid "All recognizers have the stack effect ( c-addr u -- ... xt )."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15037
msgid ""
"Recognizers take a string and return some data and a translator for "
"interpreting that data.  Gforth implements that translator as xt (executing "
"it will perform the appropriate action to handle the token in the current "
"state), but other Forth systems may implement it as actual table, with three "
"xts inside.  The first xt is the interpretation/run-time xt, it performs the "
"interpretation semantics on the data (usually, this means it just leaves the "
"data on the stack).  The second xt performs the compilation semantics, it "
"gets the data and the run-time semantics xt.  The third xt perfoms the "
"postpone semantics, it also gets the data and the run-time semantics xt.  "
"You can use @code{>postpone} to postpone the run-time xt."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15042
msgid ""
"Recognizers are organized as stack, so you can arrange the sequence of "
"recognizers in the same way as the vocabulary stack.  Recognizer stacks are "
"themselves recognizers, i.e. they are executable, take a string and return a "
"translator."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15043
#, no-wrap
msgid "notfound ( @var{ state --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15044 ../doc/gforth.texi:15045
#, no-wrap
msgid "notfound"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15048
#, no-wrap
msgid "@code{notfound} ( @i{state --  }) gforth-experimental ``notfound''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15050
msgid "If a recognizer fails, it returns @code{notfound}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15052
#, no-wrap
msgid "rec-nt ( @var{ addr u -- nt translate-nt | notfound   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15053 ../doc/gforth.texi:15054
#, no-wrap
msgid "rec-nt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15057
#, no-wrap
msgid "@code{rec-nt} ( @i{addr u -- nt translate-nt | notfound  }) gforth-experimental ``rec-nt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15059
msgid "recognize a name token"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15061
#, no-wrap
msgid "rec-num ( @var{ addr u -- n/d table | notfound   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15062 ../doc/gforth.texi:15063
#, no-wrap
msgid "rec-num"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15066
#, no-wrap
msgid "@code{rec-num} ( @i{addr u -- n/d table | notfound  }) gforth-experimental ``rec-num''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15068
msgid "converts a number to a single/double integer"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15070
#, no-wrap
msgid "rec-float ( @var{ addr u -- r translate-float | notfound   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15071 ../doc/gforth.texi:15072
#, no-wrap
msgid "rec-float"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15075
#, no-wrap
msgid "@code{rec-float} ( @i{addr u -- r translate-float | notfound  }) gforth-experimental ``rec-float''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15077
msgid "recognize floating point numbers"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15079
#, no-wrap
msgid "rec-string ( @var{ addr u -- addr u' r:string | rectype-null   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15080 ../doc/gforth.texi:15081
#, no-wrap
msgid "rec-string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15084
#, no-wrap
msgid "@code{rec-string} ( @i{addr u -- addr u' r:string | rectype-null  }) gforth-experimental ``rec-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15087
msgid ""
"Convert strings enclosed in double quotes into string literals, escapes are "
"treated as in @code{S\\\"}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15089
#, no-wrap
msgid "rec-to ( @var{ addr u -- xt n r:to | rectype-null   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15090 ../doc/gforth.texi:15091
#, no-wrap
msgid "rec-to"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15094
#, no-wrap
msgid "@code{rec-to} ( @i{addr u -- xt n r:to | rectype-null  }) gforth-experimental ``rec-to''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15099
msgid ""
"words prefixed with @code{->} are treated as if preceeded by @code{TO}, with "
"@code{+>} as @code{+TO}, with @code{'>} as @code{ADDR}, with @code{@@>} as "
"@code{ACTION-OF}, and with @code{=>} as @code{IS}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15101
#, no-wrap
msgid "rec-tick ( @var{ addr u -- xt rectype-num | rectype-null   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15102 ../doc/gforth.texi:15103
#, no-wrap
msgid "rec-tick"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15106
#, no-wrap
msgid "@code{rec-tick} ( @i{addr u -- xt rectype-num | rectype-null  }) gforth-experimental ``rec-tick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15109
msgid ""
"words prefixed with @code{`} return their xt.  Example: @code{`dup} gives "
"the xt of dup"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15111
#, no-wrap
msgid "rec-dtick ( @var{ addr u -- nt rectype-num | rectype-null   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15112 ../doc/gforth.texi:15113
#, no-wrap
msgid "rec-dtick"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15116
#, no-wrap
msgid "@code{rec-dtick} ( @i{addr u -- nt rectype-num | rectype-null  }) gforth-experimental ``rec-dtick''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15119
msgid ""
"words prefixed with @code{``} return their nt.  Example: @code{``S\"} gives "
"the nt of @code{S\"}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15121
#, no-wrap
msgid "rec-body ( @var{ addr u -- xt translate-tick | translate-null   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15122 ../doc/gforth.texi:15123
#, no-wrap
msgid "rec-body"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15126
#, no-wrap
msgid "@code{rec-body} ( @i{addr u -- xt translate-tick | translate-null  }) gforth-experimental ``rec-body''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15129
msgid ""
"words bracketed with @code{'<'} @code{'>'} return their body.  Example: "
"@code{<dup>} gives the body of dup"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15131
#, no-wrap
msgid "get-recognizers ( @var{ -- xt1 .. xtn n   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15132 ../doc/gforth.texi:15133
#, no-wrap
msgid "get-recognizers"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15136
#, no-wrap
msgid "@code{get-recognizers} ( @i{-- xt1 .. xtn n  }) gforth-experimental ``get-recognizers''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15138
msgid "push the content on the recognizer stack"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15140
#, no-wrap
msgid "set-recognizers ( @var{ xt1 .. xtn n --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15141 ../doc/gforth.texi:15142
#, no-wrap
msgid "set-recognizers"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15145
#, no-wrap
msgid "@code{set-recognizers} ( @i{xt1 .. xtn n --  }) gforth-experimental ``set-recognizers''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15147
msgid "set the recognizer stack from content on the stack"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15149
#, no-wrap
msgid "recognize ( @var{ addr u rec-addr -- ... rectype   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15150 ../doc/gforth.texi:15151
#, no-wrap
msgid "recognize"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15154
#, no-wrap
msgid "@code{recognize} ( @i{addr u rec-addr -- ... rectype  }) gforth-experimental ``recognize''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15156
msgid "apply a recognizer stack to a string, delivering a token"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15158
#, no-wrap
msgid "recognizer-sequence: ( @var{ xt1 .. xtn n \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15159 ../doc/gforth.texi:15160
#, no-wrap
msgid "recognizer-sequence:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15163
#, no-wrap
msgid "@code{recognizer-sequence:} ( @i{xt1 .. xtn n \"name\" --  }) gforth-experimental ``recognizer-sequence:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15167
msgid ""
"concatenate a stack of recognizers to one recognizer with the name "
"@i{\"name\"}.  @i{xtn} is tried first, @i{xt1} last, just like on the "
"recognizer stack"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15169
#, no-wrap
msgid "forth-recognize ( @var{ c-addr u -- ... translate-xt   } ) recognizer"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15170 ../doc/gforth.texi:15171
#, no-wrap
msgid "forth-recognize"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15174
#, no-wrap
msgid "@code{forth-recognize} ( @i{c-addr u -- ... translate-xt  }) recognizer ``forth-recognize''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15176
msgid "The system recognizer"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15178
#, no-wrap
msgid "forth-recognizer ( @var{ -- xt   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15179 ../doc/gforth.texi:15180
#, no-wrap
msgid "forth-recognizer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15183
#, no-wrap
msgid "@code{forth-recognizer} ( @i{-- xt  }) gforth-experimental ``forth-recognizer''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15186
msgid ""
"backward compatible to Matthias Trute recognizer API.  This construct turns "
"a deferred word into a value-like word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15188
#, no-wrap
msgid "set-forth-recognize ( @var{ xt --   } ) recognizer"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15189 ../doc/gforth.texi:15190
#, no-wrap
msgid "set-forth-recognize"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15193
#, no-wrap
msgid "@code{set-forth-recognize} ( @i{xt --  }) recognizer ``set-forth-recognize''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15195
msgid "Change the system recognizer"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15197
#, no-wrap
msgid "translate: ( @var{ int-xt comp-xt post-xt \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15198 ../doc/gforth.texi:15199
#, no-wrap
msgid "translate:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15202
#, no-wrap
msgid "@code{translate:} ( @i{int-xt comp-xt post-xt \"name\" --  }) gforth-experimental ``translate:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15206
msgid ""
"create a new recognizer table.  Items are in order of @var{STATE} value, "
"which are 0 or negative.  Up to 7 slots are available for extensions."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15208
#, no-wrap
msgid "translate-nt ( @var{ i*x nt -- j*x   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15209 ../doc/gforth.texi:15210
#, no-wrap
msgid "translate-nt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15213
#, no-wrap
msgid "@code{translate-nt} ( @i{i*x nt -- j*x  }) gforth-experimental ``translate-nt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15215
msgid "translate a name token"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15217
#, no-wrap
msgid "translate-num ( @var{ x -- | x   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15218 ../doc/gforth.texi:15219
#, no-wrap
msgid "translate-num"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15222
#, no-wrap
msgid "@code{translate-num} ( @i{x -- | x  }) gforth-experimental ``translate-num''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15224
msgid "translate a number"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15226
#, no-wrap
msgid "translate-dnum ( @var{ dx -- | dx   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15227 ../doc/gforth.texi:15228
#, no-wrap
msgid "translate-dnum"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15231
#, no-wrap
msgid "@code{translate-dnum} ( @i{dx -- | dx  }) gforth-experimental ``translate-dnum''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15233
msgid "translate a double number"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15236
msgid "doc-translate-float"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15236
#, no-wrap
msgid "try-recognize ( @var{ addr u xt -- results | false   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15237 ../doc/gforth.texi:15238
#, no-wrap
msgid "try-recognize"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15241
#, no-wrap
msgid "@code{try-recognize} ( @i{addr u xt -- results | false  }) gforth-experimental ``try-recognize''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15247
msgid ""
"For nested recognizers: try to recognize @var{addr u}, and execute @var{xt} "
"to check if the result is desired.  If @var{xt} returns false, clean up all "
"side effects of the recognizer, and return false.  Otherwise return the "
"results of the call to @var{xt}, of which the topmost is non-zero."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15249
#, no-wrap
msgid ">interpret ( @var{ translator --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15250 ../doc/gforth.texi:15251
#, no-wrap
msgid ">interpret"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15254
#, no-wrap
msgid "@code{>interpret} ( @i{translator --  }) gforth-experimental ``>interpret''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15256
msgid "perform interpreter action of translator"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15258
#, no-wrap
msgid ">compile ( @var{ translator --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15259 ../doc/gforth.texi:15260
#, no-wrap
msgid ">compile"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15263
#, no-wrap
msgid "@code{>compile} ( @i{translator --  }) gforth-experimental ``>compile''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15265
msgid "perform compile action of translator"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15267
#, no-wrap
msgid ">postpone ( @var{ translator --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15268 ../doc/gforth.texi:15269
#, no-wrap
msgid ">postpone"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15272
#, no-wrap
msgid "@code{>postpone} ( @i{translator --  }) gforth-experimental ``>postpone''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15274
msgid "perform postpone action of translator"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15276
#, no-wrap
msgid "translate-method: ( @var{ \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15277 ../doc/gforth.texi:15278
#, no-wrap
msgid "translate-method:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15281
#, no-wrap
msgid "@code{translate-method:} ( @i{\"name\" --  }) gforth-experimental ``translate-method:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15285
msgid ""
"create a new translate method, extending the translator table.  You can "
"assign an xt to an existing rectype by using @var{xt rectype} @code{to} "
"@var{translator}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15287
#, no-wrap
msgid "translate-state ( @var{ xt --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15288 ../doc/gforth.texi:15289
#, no-wrap
msgid "translate-state"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15292
#, no-wrap
msgid "@code{translate-state} ( @i{xt --  }) gforth-experimental ``translate-state''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15295
msgid ""
"change the current state of the system so that executing a translator "
"matches the translate-method passsed as @var{xt}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15305
#, no-wrap
msgid "hooks in the text interpreter"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15307
#, no-wrap
msgid "before-line ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15308 ../doc/gforth.texi:15309
#, no-wrap
msgid "before-line"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15312
#, no-wrap
msgid "@code{before-line} ( @i{--  }) gforth-1.0 ``before-line''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15314
msgid "Deferred word called before the text interpreter parses the next line"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15316
#, no-wrap
msgid "before-word ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15317 ../doc/gforth.texi:15318
#, no-wrap
msgid "before-word"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15321
#, no-wrap
msgid "@code{before-word} ( @i{--  }) gforth-0.7 ``before-word''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15323
msgid "Deferred word called before the text interpreter parses the next word"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15325
#, no-wrap
msgid "line-end-hook ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15326 ../doc/gforth.texi:15327
#, no-wrap
msgid "line-end-hook"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15330
#, no-wrap
msgid "@code{line-end-hook} ( @i{--  }) gforth-0.7 ``line-end-hook''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15332
msgid "called at every end-of-line when text-interpreting from a file"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15338
#, no-wrap
msgid "input stream"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15345
msgid ""
"The text interpreter reads from the input stream, which can come from "
"several sources (@pxref{Input Sources}).  Some words, in particular defining "
"words, but also words like @code{'}, read parameters from the input stream "
"instead of from the stack."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15353
msgid ""
"Such words are called parsing words, because they parse the input stream.  "
"Parsing words are hard to use in other words, because it is hard to pass "
"program-generated parameters through the input stream.  They also usually "
"have an unintuitive combination of interpretation and compilation semantics "
"when implemented naively, leading to various approaches that try to produce "
"a more intuitive behaviour (@pxref{Combined words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15359
msgid ""
"It should be obvious by now that parsing words are a bad idea.  If you want "
"to implement a parsing word for convenience, also provide a factor of the "
"word that does not parse, but takes the parameters on the stack.  To "
"implement the parsing word on top if it, you can use the following words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15360
#, no-wrap
msgid "parse ( @var{ xchar \"ccc<xchar>\" -- c-addr u   } ) core-ext,xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15361 ../doc/gforth.texi:15362
#, no-wrap
msgid "parse"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15365
#, no-wrap
msgid "@code{parse} ( @i{xchar \"ccc<xchar>\" -- c-addr u  }) core-ext,xchar-ext ``parse''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15369
msgid ""
"Parse @i{ccc}, delimited by @i{xchar}, in the parse area. @i{c-addr u} "
"specifies the parsed string within the parse area. If the parse area was "
"empty, @i{u} is 0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15371
#, no-wrap
msgid "string-parse ( @var{ c-addr1 u1 \"ccc<string>\" -- c-addr2 u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15372 ../doc/gforth.texi:15373
#, no-wrap
msgid "string-parse"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15376
#, no-wrap
msgid "@code{string-parse} ( @i{c-addr1 u1 \"ccc<string>\" -- c-addr2 u2  }) gforth-1.0 ``string-parse''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15380
msgid ""
"Parse @i{ccc}, delimited by the string @i{c-addr1 u1}, in the parse area. "
"@i{c-addr2 u2} specifies the parsed string within the parse area. If the "
"parse area was empty, @i{u2} is 0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15382
#, no-wrap
msgid "parse-name ( @var{ \"name\" -- c-addr u   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15383 ../doc/gforth.texi:15384
#, no-wrap
msgid "parse-name"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15387
#, no-wrap
msgid "@code{parse-name} ( @i{\"name\" -- c-addr u  }) core-ext ``parse-name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15389
msgid "Get the next word from the input buffer"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15391
#, no-wrap
msgid "parse-word ( @var{ -- c-addr u   } ) gforth-obsolete"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15392 ../doc/gforth.texi:15393
#, no-wrap
msgid "parse-word"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15396
#, no-wrap
msgid "@code{parse-word} ( @i{-- c-addr u  }) gforth-obsolete ``parse-word''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15399
msgid ""
"old name for @code{parse-name}; this word has a conflicting behaviour in "
"some other systems."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15401
#, no-wrap
msgid "name ( @var{ -- c-addr u   } ) gforth-obsolete"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15402 ../doc/gforth.texi:15403
#, no-wrap
msgid "name"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15406
#, no-wrap
msgid "@code{name} ( @i{-- c-addr u  }) gforth-obsolete ``name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15408
msgid "old name for @code{parse-name}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15410
#, no-wrap
msgid "word ( @var{ char \"<chars>ccc<char>-- c-addr   } ) core"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15415
#, no-wrap
msgid "@code{word} ( @i{char \"<chars>ccc<char>-- c-addr  }) core ``word''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15424
msgid ""
"Skip leading delimiters. Parse @i{ccc}, delimited by @i{char}, in the parse "
"area. @i{c-addr} is the address of a transient region containing the parsed "
"string in counted-string format. If the parse area was empty or contained no "
"characters other than delimiters, the resulting string has zero length. A "
"program may replace characters within the counted string. OBSOLESCENT: the "
"counted string has a trailing space that is not included in its length."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15426
#, no-wrap
msgid "refill ( @var{ -- flag   } ) core-ext,block-ext,file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15427 ../doc/gforth.texi:15428
#, no-wrap
msgid "refill"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15431
#, no-wrap
msgid "@code{refill} ( @i{-- flag  }) core-ext,block-ext,file-ext ``refill''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15445
msgid ""
"Attempt to fill the input buffer from the input source.  When the input "
"source is the user input device, attempt to receive input into the terminal "
"input device. If successful, make the result the input buffer, set "
"@code{>IN} to 0 and return true; otherwise return false. When the input "
"source is a block, add 1 to the value of @code{BLK} to make the next block "
"the input source and current input buffer, and set @code{>IN} to 0; return "
"true if the new value of @code{BLK} is a valid block number, false "
"otherwise. When the input source is a text file, attempt to read the next "
"line from the file. If successful, make the result the current input buffer, "
"set @code{>IN} to 0 and return true; otherwise, return false.  A successful "
"result includes receipt of a line containing 0 characters."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15451
msgid ""
"If you have to deal with a parsing word that does not have a non-parsing "
"factor, you can use @code{execute-parsing} to pass a string to it:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15452
#, no-wrap
msgid "execute-parsing ( @var{ ... addr u xt -- ...   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15453 ../doc/gforth.texi:15454
#, no-wrap
msgid "execute-parsing"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15457
#, no-wrap
msgid "@code{execute-parsing} ( @i{... addr u xt -- ...  }) gforth-0.6 ``execute-parsing''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15460
msgid ""
"Make @i{addr u} the current input source, execute @i{xt @code{( ... "
"-- ... )}}, then restore the previous input source."
msgstr ""

#. type: example
#: ../doc/gforth.texi:15469
#, no-wrap
msgid ""
"5 s\" foo\" ' constant execute-parsing\n"
"\\ equivalent to\n"
"5 constant foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15473
msgid ""
"A definition of this word in Standard Forth is provided in @file{compat/"
"execute-parsing.fs}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15476
msgid ""
"If you want to run a parsing word on a file, the following word should help:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15477
#, no-wrap
msgid "execute-parsing-file ( @var{ i*x fileid xt -- j*x   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15478 ../doc/gforth.texi:15479
#, no-wrap
msgid "execute-parsing-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15482
#, no-wrap
msgid "@code{execute-parsing-file} ( @i{i*x fileid xt -- j*x  }) gforth-0.6 ``execute-parsing-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15485
msgid ""
"Make @i{fileid} the current input source, execute @i{xt @code{( i*x -- "
"j*x )}}, then restore the previous input source."
msgstr ""

#. type: node
#: ../doc/gforth.texi:15489 ../doc/gforth.texi:16008 ../doc/gforth.texi:16009
#: ../doc/gforth.texi:16433
#, no-wrap
msgid "Environmental Queries"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15491
#, no-wrap
msgid "word lists"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15492
#, no-wrap
msgid "header space"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15497
msgid ""
"A wordlist is a list of named words; you can add new words and look up words "
"by name (and you can remove words in a restricted way with markers).  Every "
"named (and @code{reveal}ed) word is in one wordlist."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15498
#, no-wrap
msgid "search order stack"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15503
msgid ""
"The text interpreter searches the wordlists present in the search order (a "
"stack of wordlists), from the top to the bottom.  Within each wordlist, the "
"search starts conceptually at the newest word; i.e., if two words in a "
"wordlist have the same name, the newer word is found."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15504
#, no-wrap
msgid "compilation word list"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15507
msgid ""
"New words are added to the @dfn{compilation wordlist} (aka current wordlist)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15513
msgid ""
"A word list is identified by a cell-sized word list identifier (@i{wid})  in "
"much the same way as a file is identified by a file handle. The numerical "
"value of the wid has no (portable) meaning, and might change from session to "
"session."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15519
msgid ""
"The Standard Forth ``Search order'' word set is intended to provide a set of "
"low-level tools that allow various different schemes to be implemented. "
"Gforth also provides @code{vocabulary}, a traditional Forth word.  "
"@file{compat/vocabulary.fs} provides an implementation in Standard Forth."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15529
#, no-wrap
msgid "forth-wordlist ( @var{ -- wid   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15530 ../doc/gforth.texi:15531
#, no-wrap
msgid "forth-wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15534
#, no-wrap
msgid "@code{forth-wordlist} ( @i{-- wid  }) search ``forth-wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15539
msgid ""
"@code{Constant} -- @i{wid} identifies the word list that includes all of the "
"standard words provided by Gforth. When Gforth is invoked, this word list is "
"the compilation word list and is at the top of the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15541
#, no-wrap
msgid "definitions ( @var{ --   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15542 ../doc/gforth.texi:15543
#, no-wrap
msgid "definitions"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15546
#, no-wrap
msgid "@code{definitions} ( @i{--  }) search ``definitions''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15549
msgid ""
"Set the compilation word list to be the same as the word list that is "
"currently at the top of the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15551
#, no-wrap
msgid "get-current ( @var{ -- wid   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15552 ../doc/gforth.texi:15553
#, no-wrap
msgid "get-current"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15556
#, no-wrap
msgid "@code{get-current} ( @i{-- wid  }) search ``get-current''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15558
msgid "@i{wid} is the identifier of the current compilation word list."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15560
#, no-wrap
msgid "set-current ( @var{ wid --   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15561 ../doc/gforth.texi:15562
#, no-wrap
msgid "set-current"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15565
#, no-wrap
msgid "@code{set-current} ( @i{wid --  }) search ``set-current''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15567
msgid "Set the compilation word list to the word list identified by @i{wid}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15569
#, no-wrap
msgid "get-order ( @var{ -- widn .. wid1 n   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15570 ../doc/gforth.texi:15571
#, no-wrap
msgid "get-order"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15574
#, no-wrap
msgid "@code{get-order} ( @i{-- widn .. wid1 n  }) search ``get-order''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15580
msgid ""
"Copy the search order to the data stack. The current search order has @i{n} "
"entries, of which @i{wid1} represents the wordlist that is searched first "
"(the word list at the top of the search order) and @i{widn} represents the "
"wordlist that is searched last."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15582
#, no-wrap
msgid "set-order ( @var{ widn .. wid1 n --   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15583 ../doc/gforth.texi:15584
#, no-wrap
msgid "set-order"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15587
#, no-wrap
msgid "@code{set-order} ( @i{widn .. wid1 n --  }) search ``set-order''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15595
msgid ""
"If @var{n}=0, empty the search order.  If @var{n}=-1, set the search order "
"to the implementation-defined minimum search order (for Gforth, this is the "
"word list @code{Root}). Otherwise, replace the existing search order with "
"the @var{n} wid entries such that @var{wid1} represents the word list that "
"will be searched first and @var{widn} represents the word list that will be "
"searched last."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15597
#, no-wrap
msgid "wordlist ( @var{ -- wid   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15598 ../doc/gforth.texi:15599
#, no-wrap
msgid "wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15602
#, no-wrap
msgid "@code{wordlist} ( @i{-- wid  }) search ``wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15604
msgid "Create a new, empty word list represented by @i{wid}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15606
#, no-wrap
msgid "table ( @var{ -- wid   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15607 ../doc/gforth.texi:15608
#, no-wrap
msgid "table"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15611
#, no-wrap
msgid "@code{table} ( @i{-- wid  }) gforth-0.2 ``table''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15613
msgid "Create a lookup table (case-sensitive, no warnings)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15615
#, no-wrap
msgid "cs-wordlist ( @var{ -- wid   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15616 ../doc/gforth.texi:15617
#, no-wrap
msgid "cs-wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15620
#, no-wrap
msgid "@code{cs-wordlist} ( @i{-- wid  }) gforth-1.0 ``cs-wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15622
msgid "Create a case-sensitive wordlist."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15624
#, no-wrap
msgid "cs-vocabulary ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15625 ../doc/gforth.texi:15626
#, no-wrap
msgid "cs-vocabulary"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15629
#, no-wrap
msgid "@code{cs-vocabulary} ( @i{\"name\" --  }) gforth-1.0 ``cs-vocabulary''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15631
msgid "Create a case-sensitive vocabulary"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15633
#, no-wrap
msgid ">order ( @var{ wid --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15634 ../doc/gforth.texi:15635
#, no-wrap
msgid ">order"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15638
#, no-wrap
msgid "@code{>order} ( @i{wid --  }) gforth-0.5 ``to-order''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15640
msgid "Push @var{wid} on the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15642
#, no-wrap
msgid "previous ( @var{ --   } ) search-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15643 ../doc/gforth.texi:15644
#, no-wrap
msgid "previous"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15647
#, no-wrap
msgid "@code{previous} ( @i{--  }) search-ext ``previous''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15649
msgid "Drop the wordlist at the top of the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15651
#, no-wrap
msgid "also ( @var{ --   } ) search-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15652 ../doc/gforth.texi:15653
#, no-wrap
msgid "also"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15656
#, no-wrap
msgid "@code{also} ( @i{--  }) search-ext ``also''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15660
msgid ""
"Like @code{DUP} for the search order. Usually used before a vocabulary (e."
"g., @code{also Forth}); the combined effect is to push the wordlist "
"represented by the vocabulary on the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15662
#, no-wrap
msgid "Forth ( @var{ --   } ) search-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15663 ../doc/gforth.texi:15664
#, no-wrap
msgid "Forth"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15667
#, no-wrap
msgid "@code{Forth} ( @i{--  }) search-ext ``Forth''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15670
msgid ""
"Replace the @i{wid} at the top of the search order with the @i{wid} "
"associated with the word list @code{forth-wordlist}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15672
#, no-wrap
msgid "Only ( @var{ --   } ) search-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15673 ../doc/gforth.texi:15674
#, no-wrap
msgid "Only"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15677
#, no-wrap
msgid "@code{Only} ( @i{--  }) search-ext ``Only''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15680
msgid ""
"Set the search order to the implementation-defined minimum search order (for "
"Gforth, this is the word list @code{Root})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15682
#, no-wrap
msgid "order ( @var{ --   } ) search-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15683 ../doc/gforth.texi:15684
#, no-wrap
msgid "order"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15687
#, no-wrap
msgid "@code{order} ( @i{--  }) search-ext ``order''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15692
msgid ""
"Print the search order and the compilation word list.  The word lists are "
"printed in the order in which they are searched (which is reversed with "
"respect to the conventional way of displaying stacks). The compilation word "
"list is displayed last."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15694
#, no-wrap
msgid ".voc ( @var{ wid --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15695 ../doc/gforth.texi:15696
#, no-wrap
msgid ".voc"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15699
#, no-wrap
msgid "@code{.voc} ( @i{wid --  }) gforth-0.2 ``dot-voc''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15703
msgid ""
"print the name of the wordlist represented by @var{wid}.  Can only print "
"names defined with @code{vocabulary} or @code{wordlist constant}, otherwise "
"prints @samp{address}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15706
#, no-wrap
msgid "find ( @var{ c-addr -- xt +-1 | c-addr 0   } ) core,search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15707 ../doc/gforth.texi:15708
#, no-wrap
msgid "find"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15711
#, no-wrap
msgid "@code{find} ( @i{c-addr -- xt +-1 | c-addr 0  }) core,search ``find''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15728
msgid ""
"Search all word lists in the current search order for the definition named "
"by the counted string at @i{c-addr}.  If the definition is not found, return "
"0. If the definition is found return 1 (if the definition has non-default "
"compilation semantics) or -1 (if the definition has default compilation "
"semantics).  The @i{xt} returned in interpret state represents the "
"interpretation semantics.  The @i{xt} returned in compile state represented "
"either the compilation semantics (for non-default compilation semantics) or "
"the run-time semantics that the compilation semantics would @code{compile,} "
"(for default compilation semantics).  The ANS Forth standard does not "
"specify clearly what the returned @i{xt} represents (and also talks about "
"immediacy instead of non-default compilation semantics), so this word is "
"questionable in portable programs.  If non-portability is ok, @code{find-"
"name} and friends are better (@pxref{Name token})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15730
#, no-wrap
msgid "search-wordlist ( @var{ c-addr count wid -- 0 | xt +-1   } ) search"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15731 ../doc/gforth.texi:15732
#, no-wrap
msgid "search-wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15735
#, no-wrap
msgid "@code{search-wordlist} ( @i{c-addr count wid -- 0 | xt +-1  }) search ``search-wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15743
msgid ""
"Search the word list identified by @i{wid} for the definition named by the "
"string at @i{c-addr count}.  If the definition is not found, return 0. If "
"the definition is found return 1 (if the definition is immediate) or -1 (if "
"the definition is not immediate) together with the @i{xt}.  In Gforth, the "
"@i{xt} returned represents the interpretation semantics.  ANS Forth does not "
"specify clearly what @i{xt} represents."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15746
#, no-wrap
msgid "words ( @var{ --   } ) tools"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15751
#, no-wrap
msgid "@code{words} ( @i{--  }) tools ``words''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15754
msgid ""
"Display a list of all of the definitions in the word list at the top of the "
"search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15756
#, no-wrap
msgid "vlist ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15757 ../doc/gforth.texi:15758
#, no-wrap
msgid "vlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15761
#, no-wrap
msgid "@code{vlist} ( @i{--  }) gforth-0.2 ``vlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15763
msgid "Old (pre-Forth-83) name for @code{WORDS}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15765
#, no-wrap
msgid "wordlist-words ( @var{ wid --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15766 ../doc/gforth.texi:15767
#, no-wrap
msgid "wordlist-words"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15770
#, no-wrap
msgid "@code{wordlist-words} ( @i{wid --  }) gforth-0.6 ``wordlist-words''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15772
msgid "Display the contents of the wordlist wid."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15774
#, no-wrap
msgid "mwords ( @var{ [\"pattern\"] --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15775 ../doc/gforth.texi:15776
#, no-wrap
msgid "mwords"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15779
#, no-wrap
msgid "@code{mwords} ( @i{[\"pattern\"] --  }) gforth-1.0 ``mwords''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15784
msgid ""
"list all words matching the optional parameter @var{pattern}; if none, all "
"words match.  Words are listed old to new.  Pattern match like @code{search} "
"(default), you can switch to globbing with @code{' mword-filename-match is "
"mword-match}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15789
#, no-wrap
msgid "Root ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15790 ../doc/gforth.texi:15791
#, no-wrap
msgid "Root"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15794
#, no-wrap
msgid "@code{Root} ( @i{--  }) gforth-0.2 ``Root''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15798
msgid ""
"Add the root wordlist to the search order stack.  This vocabulary makes up "
"the minimum search order and contains only a search-order words."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15800
#, no-wrap
msgid "Vocabulary ( @var{ \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15801 ../doc/gforth.texi:15802
#, no-wrap
msgid "Vocabulary"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15805
#, no-wrap
msgid "@code{Vocabulary} ( @i{\"name\" --  }) gforth-0.2 ``Vocabulary''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15810
msgid ""
"Create a definition \"name\" and associate a new word list with it.  The run-"
"time effect of \"name\" is to replace the @i{wid} at the top of the search "
"order with the @i{wid} associated with the new word list."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15812
#, no-wrap
msgid "seal ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15813 ../doc/gforth.texi:15814
#, no-wrap
msgid "seal"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15817
#, no-wrap
msgid "@code{seal} ( @i{--  }) gforth-0.2 ``seal''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15820
msgid ""
"Remove all word lists from the search order stack other than the word list "
"that is currently on the top of the search order stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15822
#, no-wrap
msgid "vocs ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15823 ../doc/gforth.texi:15824
#, no-wrap
msgid "vocs"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15827
#, no-wrap
msgid "@code{vocs} ( @i{--  }) gforth-0.2 ``vocs''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15829
msgid "List vocabularies and wordlists defined in the system."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15831
#, no-wrap
msgid "current ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15832 ../doc/gforth.texi:15833
#, no-wrap
msgid "current"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15836
#, no-wrap
msgid "@code{current} ( @i{-- addr  }) gforth-0.2 ``current''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15838
msgid "@code{Variable} -- holds the @i{wid} of the compilation word list."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15840
#, no-wrap
msgid "context ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15841 ../doc/gforth.texi:15842
#, no-wrap
msgid "context"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15845
#, no-wrap
msgid "@code{context} ( @i{-- addr  }) gforth-0.2 ``context''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15848
msgid ""
"@code{context} @code{@@} is the @i{wid} of the word list at the top of the "
"search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:15851
#, no-wrap
msgid "map-vocs ( @var{ ... xt -- ...   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:15852 ../doc/gforth.texi:15853
#, no-wrap
msgid "map-vocs"
msgstr ""

#. type: format
#: ../doc/gforth.texi:15856
#, no-wrap
msgid "@code{map-vocs} ( @i{... xt -- ...  }) gforth-1.0 ``map-vocs''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15859
msgid ""
"Perform xt ( ... wid -- ... ) for all wordlists (including tables and cs-"
"wordlists) in the system."
msgstr ""

#. type: node
#: ../doc/gforth.texi:15868 ../doc/gforth.texi:15869 ../doc/gforth.texi:15910
#, no-wrap
msgid "Vocabularies"
msgstr ""

#. type: node
#: ../doc/gforth.texi:15868 ../doc/gforth.texi:15910 ../doc/gforth.texi:15911
#: ../doc/gforth.texi:15988
#, no-wrap
msgid "Why use word lists?"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15870
#, no-wrap
msgid "Vocabularies, detailed explanation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15874
msgid ""
"Here is an example of creating and using a new wordlist using Standard Forth "
"words:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:15878
#, no-wrap
msgid ""
"wordlist constant my-new-words-wordlist\n"
": my-new-words get-order nip my-new-words-wordlist swap set-order ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:15881 ../doc/gforth.texi:15902
#, no-wrap
msgid ""
"\\ add it to the search order\n"
"also my-new-words\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:15886
#, no-wrap
msgid ""
"\\ alternatively, add it to the search order and make it\n"
"\\ the compilation word list\n"
"also my-new-words definitions\n"
"\\ type \"order\" to see the problem\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15893
msgid ""
"The problem with this example is that @code{order} has no way to associate "
"the name @code{my-new-words} with the wid of the word list (in Gforth, "
"@code{order} and @code{vocs} will display @code{???} for a wid that has no "
"associated name). There is no Standard way of associating a name with a wid."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15896
msgid ""
"In Gforth, this example can be re-coded using @code{vocabulary}, which "
"associates a name with a wid:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:15899
#, no-wrap
msgid ""
"vocabulary my-new-words\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:15907
#, no-wrap
msgid ""
"\\ alternatively, add it to the search order and make it\n"
"\\ the compilation word list\n"
"my-new-words definitions\n"
"\\ type \"order\" to see that the problem is solved\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15912
#, no-wrap
msgid "word lists - why use them?"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15915
msgid "Here are some reasons why people use wordlists:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15943
msgid ""
"To prevent a set of words from being used outside the context in which they "
"are valid. Two classic examples of this are an integrated editor (all of the "
"edit commands are defined in a separate word list; the search order is set "
"to the editor word list when the editor is invoked; the old search order is "
"restored when the editor is terminated) and an integrated assembler (the op-"
"codes for the machine are defined in a separate word list which is used when "
"a @code{CODE} word is defined)."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15951
msgid ""
"To organize the words of an application or library into a user-visible set "
"(in @code{forth-wordlist} or some other common wordlist) and a set of helper "
"words used just for the implementation (hidden in a separate wordlist).  "
"This keeps @code{words}' output smaller, separates implementation and "
"interface, and reduces the chance of name conflicts within the common "
"wordlist."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15960
msgid ""
"To prevent a name-space clash between multiple definitions with the same "
"name. For example, when building a cross-compiler you might have a word "
"@code{IF} that generates conditional code for your target system. By placing "
"this definition in a different word list you can control whether the host "
"system's @code{IF} or the target system's @code{IF} get used in any "
"particular context by controlling the order of the word lists on the search "
"order stack."
msgstr ""

#. type: table
#: ../doc/gforth.texi:15964
msgid "The downsides of using wordlists are:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15969
msgid "Debugging becomes more cumbersome."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15979
msgid ""
"Name conflicts worked around with wordlists are still there, and you have to "
"arrange the search order carefully to get the desired results; if you forget "
"to do that, you get hard-to-find errors (as in any case where you read the "
"code differently from the compiler; @code{see} can help seeing which of "
"several possible words the name resolves to in such cases).  @code{See} "
"displays just the name of the words, not what wordlist they belong to, so it "
"might be misleading.  Using unique names is a better approach to avoid name "
"conflicts."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:15985
msgid ""
"You have to explicitly undo any changes to the search order.  In many cases "
"it would be more convenient if this happened implicitly.  Gforth currently "
"does not provide such a feature, but it may do so in the future."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:15990
#, no-wrap
msgid "word lists - example"
msgstr ""

#. type: table
#: ../doc/gforth.texi:15996
msgid ""
"The following example is from the @uref{https://www.complang.tuwien.ac.at/"
"forth/garbage-collection.zip, garbage collector} and uses wordlists to "
"separate public words from helper words:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16005
#, no-wrap
msgid ""
"get-current ( wid )\n"
"vocabulary garbage-collector also garbage-collector definitions\n"
"... \\ define helper words\n"
"( wid ) set-current \\ restore original (i.e., public) compilation wordlist\n"
"... \\ define the public (i.e., API) words\n"
"    \\ they can refer to the helper words\n"
"previous \\ restore original search order (helper words become invisible)\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16010
#, no-wrap
msgid "environmental queries"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16016
msgid ""
"Forth-94 introduced the idea of ``environmental queries'' as a way for a "
"program running on a system to determine certain characteristics of the "
"system.  The Standard specifies a number of strings that might be recognised "
"by a system, and a way of querying them:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16017
#, no-wrap
msgid "environment? ( @var{ c-addr u -- false / ... true   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16018 ../doc/gforth.texi:16019
#, no-wrap
msgid "environment?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16022
#, no-wrap
msgid "@code{environment?} ( @i{c-addr u -- false / ... true  }) core ``environment-query''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16027
msgid ""
"@i{c-addr, u} specify a counted string. If the string is not recognised, "
"return a @code{false} flag. Otherwise return a @code{true} flag and some "
"(string-specific) information about the queried string."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16036
msgid ""
"Note that, whilst the documentation for (e.g.)  @code{ADDRESS-UNIT-BITS} "
"shows it returning one cell on the stack, querying it using "
"@code{environment?} will return an additional item; the @code{true} flag "
"that shows that the string was recognised; so for querying @code{ADDRESS-"
"UNIT-BITS} the stack effect of @code{environment?} is @code{( c-addr u -- n "
"true )}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16041
msgid "Several environmental queries deal with the system's limits:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16042
#, no-wrap
msgid "ADDRESS-UNIT-BITS ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16043 ../doc/gforth.texi:16044
#, no-wrap
msgid "ADDRESS-UNIT-BITS"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16047
#, no-wrap
msgid "@code{ADDRESS-UNIT-BITS} ( @i{-- n  }) environment ``ADDRESS-UNIT-BITS''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16049
msgid "Size of one address unit, in bits."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16051
#, no-wrap
msgid "MAX-CHAR ( @var{ -- u   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16052 ../doc/gforth.texi:16053
#, no-wrap
msgid "MAX-CHAR"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16056
#, no-wrap
msgid "@code{MAX-CHAR} ( @i{-- u  }) environment ``MAX-CHAR''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16058
msgid "Maximum value of any character in the character set"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16060
#, no-wrap
msgid "/COUNTED-STRING ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16061 ../doc/gforth.texi:16062
#, no-wrap
msgid "/COUNTED-STRING"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16065
#, no-wrap
msgid "@code{/COUNTED-STRING} ( @i{-- n  }) environment ``slash-counted-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16067
msgid "Maximum size of a counted string, in characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16069
#, no-wrap
msgid "/HOLD ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16070 ../doc/gforth.texi:16071
#, no-wrap
msgid "/HOLD"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16074
#, no-wrap
msgid "@code{/HOLD} ( @i{-- n  }) environment ``slash-hold''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16076
msgid "Size of the pictured numeric string output buffer, in characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16078
#, no-wrap
msgid "/PAD ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16079 ../doc/gforth.texi:16080
#, no-wrap
msgid "/PAD"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16083
#, no-wrap
msgid "@code{/PAD} ( @i{-- n  }) environment ``slash-pad''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16085
msgid "Size of the scratch area pointed to by @code{PAD}, in characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16087
#, no-wrap
msgid "CORE ( @var{ -- f   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16088 ../doc/gforth.texi:16089
#, no-wrap
msgid "CORE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16092
#, no-wrap
msgid "@code{CORE} ( @i{-- f  }) environment ``CORE''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16094
msgid "True if the complete core word set is present. Always true for Gforth."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16096
#, no-wrap
msgid "CORE-EXT ( @var{ -- f   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16097 ../doc/gforth.texi:16098
#, no-wrap
msgid "CORE-EXT"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16101
#, no-wrap
msgid "@code{CORE-EXT} ( @i{-- f  }) environment ``CORE-EXT''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16103
msgid ""
"True if the complete core extension word set is present. Always true for "
"Gforth."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16105
#, no-wrap
msgid "FLOORED ( @var{ -- f   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16106 ../doc/gforth.texi:16107
#, no-wrap
msgid "FLOORED"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16110
#, no-wrap
msgid "@code{FLOORED} ( @i{-- f  }) environment ``FLOORED''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16112
msgid "True if @code{/} etc. perform floored division"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16114
#, no-wrap
msgid "MAX-N ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16115 ../doc/gforth.texi:16116
#, no-wrap
msgid "MAX-N"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16119
#, no-wrap
msgid "@code{MAX-N} ( @i{-- n  }) environment ``MAX-N''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16121
msgid "Largest usable signed integer."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16123
#, no-wrap
msgid "MAX-U ( @var{ -- u   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16124 ../doc/gforth.texi:16125
#, no-wrap
msgid "MAX-U"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16128
#, no-wrap
msgid "@code{MAX-U} ( @i{-- u  }) environment ``MAX-U''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16130
msgid "Largest usable unsigned integer."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16132
#, no-wrap
msgid "MAX-D ( @var{ -- d   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16133 ../doc/gforth.texi:16134
#, no-wrap
msgid "MAX-D"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16137
#, no-wrap
msgid "@code{MAX-D} ( @i{-- d  }) environment ``MAX-D''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16139
msgid "Largest usable signed double."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16141
#, no-wrap
msgid "MAX-UD ( @var{ -- ud   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16142 ../doc/gforth.texi:16143
#, no-wrap
msgid "MAX-UD"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16146
#, no-wrap
msgid "@code{MAX-UD} ( @i{-- ud  }) environment ``MAX-UD''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16148
msgid "Largest usable unsigned double."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16150
#, no-wrap
msgid "return-stack-cells ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16151 ../doc/gforth.texi:16152
#, no-wrap
msgid "return-stack-cells"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16155
#, no-wrap
msgid "@code{return-stack-cells} ( @i{-- n  }) environment ``return-stack-cells''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16157
msgid "Maximum size of the return stack, in cells."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16159
#, no-wrap
msgid "stack-cells ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16160 ../doc/gforth.texi:16161
#, no-wrap
msgid "stack-cells"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16164
#, no-wrap
msgid "@code{stack-cells} ( @i{-- n  }) environment ``stack-cells''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16166
msgid "Maximum size of the data stack, in cells."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16168
#, no-wrap
msgid "floating-stack ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16169 ../doc/gforth.texi:16170
#, no-wrap
msgid "floating-stack"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16173
#, no-wrap
msgid "@code{floating-stack} ( @i{-- n  }) environment ``floating-stack''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16176
msgid ""
"@var{n} is non-zero, showing that Gforth maintains a separate floating-point "
"stack of depth @var{n}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16178
#, no-wrap
msgid "#locals ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16179 ../doc/gforth.texi:16180
#, no-wrap
msgid "#locals"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16183
#, no-wrap
msgid "@code{#locals} ( @i{-- n  }) environment ``number-locals''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16185
msgid "The maximum number of locals in a definition"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16187
#, no-wrap
msgid "wordlists ( @var{ -- n   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16188 ../doc/gforth.texi:16189
#, no-wrap
msgid "wordlists"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16192
#, no-wrap
msgid "@code{wordlists} ( @i{-- n  }) environment ``wordlists''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16194
msgid "the maximum number of wordlists usable in the search order"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16196
#, no-wrap
msgid "max-float ( @var{ -- r   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16197 ../doc/gforth.texi:16198
#, no-wrap
msgid "max-float"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16201
#, no-wrap
msgid "@code{max-float} ( @i{-- r  }) environment ``max-float''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16204
msgid ""
"The largest usable floating-point number (implemented as largest finite "
"number in Gforth)"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16206
#, no-wrap
msgid "XCHAR-ENCODING ( @var{ -- addr u   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16207 ../doc/gforth.texi:16208
#, no-wrap
msgid "XCHAR-ENCODING"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16211
#, no-wrap
msgid "@code{XCHAR-ENCODING} ( @i{-- addr u  }) environment ``XCHAR-ENCODING''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16217
msgid ""
"Returns a printable ASCII string that reperesents the encoding, and use the "
"preferred MIME name (if any) or the name in @url{http://www.iana.org/"
"assignments/character-sets} like ``ISO-LATIN-1'' or ``UTF-8'', with the "
"exception of ``ASCII'', where we prefer the alias ``ASCII''."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16219
#, no-wrap
msgid "MAX-XCHAR ( @var{ -- xchar   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16220 ../doc/gforth.texi:16221
#, no-wrap
msgid "MAX-XCHAR"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16224
#, no-wrap
msgid "@code{MAX-XCHAR} ( @i{-- xchar  }) environment ``MAX-XCHAR''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16226
msgid "Maximal value for xchar.  This depends on the encoding."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16228
#, no-wrap
msgid "XCHAR-MAXMEM ( @var{ -- u   } ) environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16229 ../doc/gforth.texi:16230
#, no-wrap
msgid "XCHAR-MAXMEM"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16233
#, no-wrap
msgid "@code{XCHAR-MAXMEM} ( @i{-- u  }) environment ``XCHAR-MAXMEM''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16235
msgid "Maximal memory consumed by an xchar in address units"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16243
msgid ""
"Several environemtal queries are there for determining the presence of the "
"Forth-94 version of a wordset; they all have the stack effect @code{( -- "
"f )} if the string is present (so the @code{environment?} stack effect for "
"these queries is @code{( c-addr u -- false / f true )}."
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:16266
msgid ""
"block block-ext double double-ext exception exception-ext facility facility-"
"ext file file-ext floating floating-ext locals locals-ext memory-alloc "
"memory-alloc-ext tools tools-ext search-order search-order-ext string string-"
"ext"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16271
msgid ""
"These wordset queries were rarely used and implemented, so Forth-2012 did "
"not introduce a way to query for the Forth-2012 variants of the wordsets.  "
"Instead, the idea is that you use @code{[defined]} (@pxref{Interpreter "
"Directives}) instead."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16288
msgid ""
"Forth-200x (a group that works on the next standard; the documents that they "
"produce are also called Forth-200x) defines extension queries for the "
"extension proposals once they finish changing (CfV stage), so programs using "
"these proposals can check whether a system has them, and maybe load the "
"reference implementation (if one exists).  If @code{environment?} finds such "
"a query, then the corresponding proposal on @url{www.forth200x.org} is "
"implemented on the system (but the absence tells you nothing, as usual with "
"@code{environment?}).  These queries have the stack effect @code{( -- )}, "
"which means that for them @code{environment?} has the stack effect @code{( c-"
"addr u -- false / true )}, which is more convenient than that of wordset "
"queries.  A number of these proposals have been incorporated into "
"Forth-2012.  The extension queries are also not particularly popular among "
"Forth system implementors, so going for @code{[defined]} may be the better "
"approach.  Anyway, Gforth implements the following extension queries:"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:16312
msgid ""
"X:2value X:buffer X:deferred X:defined X:ekeys X:escaped-strings X:extension-"
"query X:fp-stack X:ftrunc X:fvalue X:locals X:n-to-r X:number-prefixes X:"
"parse-name X:required X:s-escape-quote X:s-to-f X:structures X:synonym X:"
"text-substitution X:throw-iors X:traverse-wordlist X:xchar"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16314
msgid "In addition, Gforth implements the following Gforth-specific queries:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16315
#, no-wrap
msgid "gforth ( @var{ -- c-addr u   } ) gforth-environment"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16320
#, no-wrap
msgid "@code{gforth} ( @i{-- c-addr u  }) gforth-environment ``gforth''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16324
msgid ""
"Counted string representing a version string for this version of Gforth (for "
"versions>0.3.0).  The version strings of the various versions are guaranteed "
"to be ordered lexicographically."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16326
#, no-wrap
msgid "os-class ( @var{ -- c-addr u   } ) gforth-environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16327 ../doc/gforth.texi:16328
#, no-wrap
msgid "os-class"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16331
#, no-wrap
msgid "@code{os-class} ( @i{-- c-addr u  }) gforth-environment ``os-class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16333
msgid "Counted string representing a description of the host operating system."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16335
#, no-wrap
msgid "os-type ( @var{ -- c-addr u   } ) gforth-environment"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16336 ../doc/gforth.texi:16337
#, no-wrap
msgid "os-type"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16340
#, no-wrap
msgid "@code{os-type} ( @i{-- c-addr u  }) gforth-environment ``os-type''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16342
msgid "Counted string equal to \"$host_os\""
msgstr ""

#. type: table
#: ../doc/gforth.texi:16347
msgid ""
"The Standard requires that the header space used for environmental queries "
"be distinct from the header space used for definitions."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16355
msgid ""
"Typically, a Forth system supports environmental queries by creating a set "
"of definitions in a wordlist that is @i{only} used for environmental "
"queries; that is what Gforth does. There is no Standard way of adding "
"definitions to the set of recognised environmental queries, but in Gforth "
"and other systems that use the wordlist mechanism, the wordlist used to "
"honour environmental queries can be manipulated just like any other word "
"list."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16356
#, no-wrap
msgid "environment-wordlist ( @var{ -- wid   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16357 ../doc/gforth.texi:16358
#, no-wrap
msgid "environment-wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16361
#, no-wrap
msgid "@code{environment-wordlist} ( @i{-- wid  }) gforth-0.2 ``environment-wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16364
msgid ""
"@i{wid} identifies the word list that is searched by environmental queries "
"(present in SwiftForth and VFX)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16366
#, no-wrap
msgid "environment ( @var{ --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16367 ../doc/gforth.texi:16368
#, no-wrap
msgid "environment"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16371
#, no-wrap
msgid "@code{environment} ( @i{--  }) gforth-0.6 ``environment''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16374
msgid ""
"A vocabulary for @code{environment-wordlist} (present in Win32Forth and VFX)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16380
msgid "Here are some examples of using environmental queries:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16388
#, no-wrap
msgid ""
"s\" address-unit-bits\" environment? 0=\n"
"[IF]\n"
"     cr .( environmental attribute address-units-bits unknown... ) cr\n"
"[ELSE]\n"
"     drop \\ ensure balanced stack effect\n"
"[THEN]\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16397
#, no-wrap
msgid ""
"\\ this might occur in the prelude of a standard program that uses THROW\n"
"s\" exception\" environment? [IF]\n"
"   0= [IF]\n"
"      : throw abort\" exception thrown\" ;\n"
"   [THEN]\n"
"[ELSE] \\ we don't know, so make sure\n"
"   : throw abort\" exception thrown\" ;\n"
"[THEN]\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16400
#, no-wrap
msgid ""
"s\" gforth\" environment? [IF] .( Gforth version ) TYPE\n"
"                        [ELSE] .( Not Gforth..) [THEN]\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16414
#, no-wrap
msgid ""
"\\ a program using v*\n"
"s\" gforth\" environment? [IF]\n"
"  s\" 0.5.0\" compare 0< [IF] \\ v* is a primitive since 0.5.0\n"
"   : v* ( f_addr1 nstride1 f_addr2 nstride2 ucount -- r )\n"
"     >r swap 2swap swap 0e r> 0 ?DO\n"
"       dup f@@ over + 2swap dup f@@ f* f+ over + 2swap\n"
"     LOOP\n"
"     2drop 2drop ; \n"
"  [THEN]\n"
"[ELSE] \\ \n"
"  : v* ( f_addr1 nstride1 f_addr2 nstride2 ucount -- r )\n"
"  ...\n"
"[THEN]\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16417
msgid "Here is an example of adding a definition to the environment word list:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16423
#, no-wrap
msgid ""
"get-current environment-wordlist set-current\n"
"true constant block\n"
"true constant block-ext\n"
"set-current\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16426
msgid ""
"You can see what definitions are in the environment word list like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16429
#, no-wrap
msgid "environment-wordlist wordlist-words\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:16433 ../doc/gforth.texi:17278 ../doc/gforth.texi:17279
#: ../doc/gforth.texi:17662
#, no-wrap
msgid "Blocks"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16435
#, no-wrap
msgid "files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16436
#, no-wrap
msgid "I/O - file-handling"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16441
msgid ""
"Gforth provides facilities for accessing files that are stored in the host "
"operating system's file-system. Files that are processed by Gforth can be "
"divided into two categories:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:16445
msgid ""
"Files that are processed by the Text Interpreter (@dfn{Forth source files})."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:16447
msgid "Files that are processed by some other program (@dfn{general files})."
msgstr ""

#. type: node
#: ../doc/gforth.texi:16458 ../doc/gforth.texi:16459 ../doc/gforth.texi:16461
#: ../doc/gforth.texi:16620
#, no-wrap
msgid "Forth source files"
msgstr ""

#. type: node
#: ../doc/gforth.texi:16458 ../doc/gforth.texi:16620 ../doc/gforth.texi:16621
#: ../doc/gforth.texi:16885
#, no-wrap
msgid "General files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16460
#, no-wrap
msgid "including files"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16465
msgid ""
"The simplest way to interpret the contents of a file is to use one of these "
"two formats:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16469
#, no-wrap
msgid ""
"include mysource.fs\n"
"s\" mysource.fs\" included\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16474
msgid ""
"You usually want to include a file only if it is not included already (by, "
"say, another source file). In that case, you can use one of these three "
"formats:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16479
#, no-wrap
msgid ""
"require mysource.fs\n"
"needs mysource.fs\n"
"s\" mysource.fs\" required\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16481
#, no-wrap
msgid "stack effect of included files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16482
#, no-wrap
msgid "including files, stack effect"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16486
msgid ""
"It is good practice to write your source files such that interpreting them "
"does not change the stack. Source files designed in this way can be used "
"with @code{required} and friends without complications. For example:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:16489
#, no-wrap
msgid "1024 require foo.fs drop\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16497
msgid ""
"Here you want to pass the argument 1024 (e.g., a buffer size) to @file{foo."
"fs}.  Interpreting @file{foo.fs} has the stack effect ( n -- n ), which "
"allows its use with @code{require}.  Of course with such parameters to "
"required files, you have to ensure that the first @code{require} fits for "
"all uses (i.e., @code{require} it early in the master load file)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16498
#, no-wrap
msgid "include-file ( @var{ i*x wfileid -- j*x   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16499 ../doc/gforth.texi:16500
#, no-wrap
msgid "include-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16503
#, no-wrap
msgid "@code{include-file} ( @i{i*x wfileid -- j*x  }) file ``include-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16506
msgid ""
"Interpret (process using the text interpreter) the contents of the file "
"@var{wfileid}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16508
#, no-wrap
msgid "included ( @var{ i*x c-addr u -- j*x   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16509 ../doc/gforth.texi:16510
#, no-wrap
msgid "included"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16513
#, no-wrap
msgid "@code{included} ( @i{i*x c-addr u -- j*x  }) file ``included''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16516
msgid ""
"@code{include-file} the file whose name is given by the string @var{c-addr "
"u}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16518
#, no-wrap
msgid "included? ( @var{ c-addr u -- f   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16519 ../doc/gforth.texi:16520
#, no-wrap
msgid "included?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16523
#, no-wrap
msgid "@code{included?} ( @i{c-addr u -- f  }) gforth-0.2 ``included?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16530
msgid ""
"True only if the file @var{c-addr u} is in the list of earlier included "
"files. If the file has been loaded, it may have been specified as, say, "
"@file{foo.fs} and found somewhere on the Forth search path. To return "
"@code{true} from @code{included?}, you must specify the exact path to the "
"file, even if that is @file{./foo.fs}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16532
#, no-wrap
msgid "include ( @var{ ... \"file\" -- ...   } ) file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16533 ../doc/gforth.texi:16534
#, no-wrap
msgid "include"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16537
#, no-wrap
msgid "@code{include} ( @i{... \"file\" -- ...  }) file-ext ``include''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16539
msgid "@code{include-file} the file @var{file}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16541
#, no-wrap
msgid "required ( @var{ i*x addr u -- i*x   } ) file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16542 ../doc/gforth.texi:16543
#, no-wrap
msgid "required"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16546
#, no-wrap
msgid "@code{required} ( @i{i*x addr u -- i*x  }) file-ext ``required''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16551
msgid ""
"@code{include-file} the file with the name given by @var{addr u}, if it is "
"not @code{included} (or @code{required})  already. Currently this works by "
"comparing the name of the file (with path) against the names of earlier "
"included files."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16553
#, no-wrap
msgid "require ( @var{ ... \"file\" -- ...   } ) file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16554 ../doc/gforth.texi:16555
#, no-wrap
msgid "require"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16558
#, no-wrap
msgid "@code{require} ( @i{... \"file\" -- ...  }) file-ext ``require''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16560
msgid "@code{include-file} @var{file} only if it is not included already."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16562
#, no-wrap
msgid "needs ( @var{ ... \"name\" -- ...   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16563 ../doc/gforth.texi:16564
#, no-wrap
msgid "needs"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16567
#, no-wrap
msgid "@code{needs} ( @i{... \"name\" -- ...  }) gforth-0.2 ``needs''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16569
msgid ""
"An alias for @code{require}; exists on other systems (e.g., Win32Forth)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16571
#, no-wrap
msgid "\\\\\\ ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16572 ../doc/gforth.texi:16573
#, no-wrap
msgid "\\\\\\"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16576
#, no-wrap
msgid "@code{\\\\\\} ( @i{--  }) gforth-1.0 ``\\\\\\''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16578
msgid "skip remaining source file"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16580
#, no-wrap
msgid ".included ( @var{ --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16581 ../doc/gforth.texi:16582
#, no-wrap
msgid ".included"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16585
#, no-wrap
msgid "@code{.included} ( @i{--  }) gforth-0.5 ``.included''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16587
msgid "List the names of the files that have been @code{included}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16590
#, no-wrap
msgid "sourcefilename ( @var{ -- c-addr u   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16591 ../doc/gforth.texi:16592
#, no-wrap
msgid "sourcefilename"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16595
#, no-wrap
msgid "@code{sourcefilename} ( @i{-- c-addr u  }) gforth-0.2 ``sourcefilename''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16601
msgid ""
"The name of the source file which is currently the input source.  The result "
"is valid only while the file is being loaded.  If the current input source "
"is no (stream) file, the result is undefined.  In Gforth, the result is "
"valid during the whole session (but not across @code{savesystem} etc.)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16603
#, no-wrap
msgid "sourceline# ( @var{ -- u   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16604 ../doc/gforth.texi:16605
#, no-wrap
msgid "sourceline#"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16608
#, no-wrap
msgid "@code{sourceline#} ( @i{-- u  }) gforth-0.2 ``sourceline-number''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16613
msgid ""
"The line number of the line that is currently being interpreted from a "
"(stream) file. The first line has the number 1. If the current input source "
"is not a (stream) file, the result is undefined."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16618
msgid ""
"A definition in Standard Forth for @code{required} is provided in "
"@file{compat/required.fs}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:16620 ../doc/gforth.texi:16885 ../doc/gforth.texi:16886
#: ../doc/gforth.texi:16887 ../doc/gforth.texi:16962
#, no-wrap
msgid "Redirection"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16622
#, no-wrap
msgid "general files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16623
#, no-wrap
msgid "file-handling"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16627
msgid ""
"Files are opened/created by name and type. The following file access methods "
"(FAMs) are recognised:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16628
#, no-wrap
msgid "fam (file access method)"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16629
#, no-wrap
msgid "r/o ( @var{ -- fam   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16630 ../doc/gforth.texi:16631
#, no-wrap
msgid "r/o"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16634
#, no-wrap
msgid "@code{r/o} ( @i{-- fam  }) file ``r-o''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16636
#, no-wrap
msgid "r/w ( @var{ -- fam   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16637 ../doc/gforth.texi:16638
#, no-wrap
msgid "r/w"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16641
#, no-wrap
msgid "@code{r/w} ( @i{-- fam  }) file ``r-w''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16643
#, no-wrap
msgid "w/o ( @var{ -- fam   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16644 ../doc/gforth.texi:16645
#, no-wrap
msgid "w/o"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16648
#, no-wrap
msgid "@code{w/o} ( @i{-- fam  }) file ``w-o''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16650
#, no-wrap
msgid "bin ( @var{ fam1 -- fam2   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16651 ../doc/gforth.texi:16652
#, no-wrap
msgid "bin"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16655
#, no-wrap
msgid "@code{bin} ( @i{fam1 -- fam2  }) file ``bin''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16657
#, no-wrap
msgid "+fmode ( @var{ fam1 rwxrwxrwx -- fam2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16658 ../doc/gforth.texi:16659
#, no-wrap
msgid "+fmode"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16662
#, no-wrap
msgid "@code{+fmode} ( @i{fam1 rwxrwxrwx -- fam2  }) gforth-1.0 ``plus-f-mode''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16664
msgid "add file access mode to fam - for create-file only"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16673
msgid ""
"When a file is opened/created, it returns a file identifier, @i{wfileid} "
"that is used for all other file commands. All file commands also return a "
"status value, @i{wior}, that is 0 for a successful operation and an "
"implementation-defined non-zero value in the case of an error."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16675
#, no-wrap
msgid "open-file ( @var{ c-addr u wfam -- wfileid wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16676 ../doc/gforth.texi:16677
#, no-wrap
msgid "open-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16680
#, no-wrap
msgid "@code{open-file} ( @i{c-addr u wfam -- wfileid wior }) file ``open-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16682
#, no-wrap
msgid "create-file ( @var{ c-addr u wfam -- wfileid wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16683 ../doc/gforth.texi:16684
#, no-wrap
msgid "create-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16687
#, no-wrap
msgid "@code{create-file} ( @i{c-addr u wfam -- wfileid wior }) file ``create-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16690
#, no-wrap
msgid "close-file ( @var{ wfileid -- wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16691 ../doc/gforth.texi:16692
#, no-wrap
msgid "close-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16695
#, no-wrap
msgid "@code{close-file} ( @i{wfileid -- wior }) file ``close-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16697
#, no-wrap
msgid "delete-file ( @var{ c-addr u -- wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16698 ../doc/gforth.texi:16699
#, no-wrap
msgid "delete-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16702
#, no-wrap
msgid "@code{delete-file} ( @i{c-addr u -- wior }) file ``delete-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16704
#, no-wrap
msgid "rename-file ( @var{ c-addr1 u1 c-addr2 u2 -- wior  } ) file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16705 ../doc/gforth.texi:16706
#, no-wrap
msgid "rename-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16709
#, no-wrap
msgid "@code{rename-file} ( @i{c-addr1 u1 c-addr2 u2 -- wior }) file-ext ``rename-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16711
msgid "Rename file @i{c_addr1 u1} to new name @i{c_addr2 u2}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16712
#, no-wrap
msgid "read-file ( @var{ c-addr u1 wfileid -- u2 wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16713 ../doc/gforth.texi:16714
#, no-wrap
msgid "read-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16717
#, no-wrap
msgid "@code{read-file} ( @i{c-addr u1 wfileid -- u2 wior }) file ``read-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16722
msgid ""
"Read @i{u1} characters from file @i{wfileid} into the buffer at @i{c_addr}.  "
"A non-zero @i{wior} indicates an error.  @i{U2} indicates the length of the "
"read data.  End-of-file is not an error and is indicated by @i{u2}$<$@i{u1} "
"and @i{wior}=0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16723
#, no-wrap
msgid "read-line ( @var{ c_addr u1 wfileid -- u2 flag wior   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16724 ../doc/gforth.texi:16725
#, no-wrap
msgid "read-line"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16728
#, no-wrap
msgid "@code{read-line} ( @i{c_addr u1 wfileid -- u2 flag wior  }) file ``read-line''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16741
msgid ""
"Reads a line from @i{wfileid} into the buffer at @i{c_addr u1}.  Gforth "
"supports all three common line terminators: LF, CR and CRLF.  A non-zero "
"@i{wior} indicates an error.  A false @i{flag} indicates that @code{read-"
"line} has been invoked at the end of the file. @i{u2} indicates the line "
"length (without terminator): @i{u2}$<$@i{u1} indicates that the line is "
"@i{u2} chars long; @i{u2}=@i{u1} indicates that the line is at least @i{u1} "
"chars long, the @i{u1} chars of the buffer have been filled with chars from "
"the line, and the next slice of the line with be read with the next "
"@code{read-line}.  If the line is @i{u1} chars long, the first @code{read-"
"line} returns @i{u2}=@i{u1} and the next read-line returns @i{u2}=0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16743
#, no-wrap
msgid "key-file ( @var{ fd -- key   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16744 ../doc/gforth.texi:16745
#, no-wrap
msgid "key-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16748
#, no-wrap
msgid "@code{key-file} ( @i{fd -- key  }) gforth-0.4 ``key-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16755
msgid ""
"Read one character @i{n} from @i{wfileid}.  This word disables buffering for "
"@i{wfileid}.  If you want to read characters from a terminal in non-"
"canonical (raw) mode, you have to put the terminal in non-canonical mode "
"yourself (using the C interface); the exception is @code{stdin}: Gforth "
"automatically puts it into non-canonical mode."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16757
#, no-wrap
msgid "key?-file ( @var{ wfileid -- f  } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16758 ../doc/gforth.texi:16759
#, no-wrap
msgid "key?-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16762
#, no-wrap
msgid "@code{key?-file} ( @i{wfileid -- f }) gforth-0.4 ``key-q-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16767
msgid ""
"@i{f} is true if at least one character can be read from @i{wfileid} without "
"blocking.  If you also want to use @code{read-file} or @code{read-line} on "
"the file, you have to call @code{key?-file} or @code{key-file} first (these "
"two words disable buffering)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16768
#, no-wrap
msgid "file-eof? ( @var{ wfileid -- flag  } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16769 ../doc/gforth.texi:16770
#, no-wrap
msgid "file-eof?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16773
#, no-wrap
msgid "@code{file-eof?} ( @i{wfileid -- flag }) gforth-0.6 ``file-eof-query''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16775
msgid ""
"@var{Flag} is true if the end-of-file indicator for @var{wfileid} is set."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16776
#, no-wrap
msgid "write-file ( @var{ c-addr u1 wfileid -- wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16777 ../doc/gforth.texi:16778
#, no-wrap
msgid "write-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16781
#, no-wrap
msgid "@code{write-file} ( @i{c-addr u1 wfileid -- wior }) file ``write-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16783
#, no-wrap
msgid "write-line ( @var{ c-addr u wfileid -- ior   } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16784 ../doc/gforth.texi:16785
#, no-wrap
msgid "write-line"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16788
#, no-wrap
msgid "@code{write-line} ( @i{c-addr u wfileid -- ior  }) file ``write-line''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16790
#, no-wrap
msgid "emit-file ( @var{ c wfileid -- wior  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16791 ../doc/gforth.texi:16792
#, no-wrap
msgid "emit-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16795
#, no-wrap
msgid "@code{emit-file} ( @i{c wfileid -- wior }) gforth-0.2 ``emit-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16797
#, no-wrap
msgid "flush-file ( @var{ wfileid -- wior  } ) file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16798 ../doc/gforth.texi:16799
#, no-wrap
msgid "flush-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16802
#, no-wrap
msgid "@code{flush-file} ( @i{wfileid -- wior }) file-ext ``flush-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16805
#, no-wrap
msgid "file-status ( @var{ c-addr u -- wfam wior  } ) file-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16806 ../doc/gforth.texi:16807
#, no-wrap
msgid "file-status"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16810
#, no-wrap
msgid "@code{file-status} ( @i{c-addr u -- wfam wior }) file-ext ``file-status''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16812
#, no-wrap
msgid "file-position ( @var{ wfileid -- ud wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16813 ../doc/gforth.texi:16814
#, no-wrap
msgid "file-position"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16817
#, no-wrap
msgid "@code{file-position} ( @i{wfileid -- ud wior }) file ``file-position''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16819
#, no-wrap
msgid "reposition-file ( @var{ ud wfileid -- wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16820 ../doc/gforth.texi:16821
#, no-wrap
msgid "reposition-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16824
#, no-wrap
msgid "@code{reposition-file} ( @i{ud wfileid -- wior }) file ``reposition-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16826
#, no-wrap
msgid "file-size ( @var{ wfileid -- ud wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16827 ../doc/gforth.texi:16828
#, no-wrap
msgid "file-size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16831
#, no-wrap
msgid "@code{file-size} ( @i{wfileid -- ud wior }) file ``file-size''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16833
#, no-wrap
msgid "resize-file ( @var{ ud wfileid -- wior  } ) file"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16834 ../doc/gforth.texi:16835
#, no-wrap
msgid "resize-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16838
#, no-wrap
msgid "@code{resize-file} ( @i{ud wfileid -- wior }) file ``resize-file''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16841
#, no-wrap
msgid "slurp-file ( @var{ c-addr1 u1 -- c-addr2 u2   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16842 ../doc/gforth.texi:16843
#, no-wrap
msgid "slurp-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16846
#, no-wrap
msgid "@code{slurp-file} ( @i{c-addr1 u1 -- c-addr2 u2  }) gforth-0.6 ``slurp-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16848
msgid ""
"@var{c-addr1 u1} is the filename, @var{c-addr2 u2} is the file's contents"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16850
#, no-wrap
msgid "slurp-fid ( @var{ fid -- addr u   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16851 ../doc/gforth.texi:16852
#, no-wrap
msgid "slurp-fid"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16855
#, no-wrap
msgid "@code{slurp-fid} ( @i{fid -- addr u  }) gforth-0.6 ``slurp-fid''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16857
msgid "@var{addr u} is the content of the file @var{fid}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16859
#, no-wrap
msgid "stdin ( @var{ -- wfileid  } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16860 ../doc/gforth.texi:16861
#, no-wrap
msgid "stdin"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16864
#, no-wrap
msgid "@code{stdin} ( @i{-- wfileid }) gforth-0.4 ``stdin''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16866
msgid "The standard input file of the Gforth process."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16867
#, no-wrap
msgid "stdout ( @var{ -- wfileid  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16868 ../doc/gforth.texi:16869
#, no-wrap
msgid "stdout"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16872
#, no-wrap
msgid "@code{stdout} ( @i{-- wfileid }) gforth-0.2 ``stdout''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16874
msgid "The standard output file of the Gforth process."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16875
#, no-wrap
msgid "stderr ( @var{ -- wfileid  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16876 ../doc/gforth.texi:16877
#, no-wrap
msgid "stderr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16880
#, no-wrap
msgid "@code{stderr} ( @i{-- wfileid }) gforth-0.2 ``stderr''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16882
msgid "The standard error output file of the Gforth process."
msgstr ""

#. type: node
#: ../doc/gforth.texi:16885 ../doc/gforth.texi:16962 ../doc/gforth.texi:16963
#: ../doc/gforth.texi:16964 ../doc/gforth.texi:17077
#, no-wrap
msgid "Directories"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16888
#, no-wrap
msgid "Input Redirection"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:16889
#, no-wrap
msgid "Output Redirection"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16895
msgid ""
"You can redirect the output of @code{type} and @code{emit} and all the words "
"that use them (all output words that don't have an explicit target file) to "
"an arbitrary file with the @code{outfile-execute}, used like this:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16908
msgid ""
"After @code{some-warning} is executed, the original output direction is "
"restored; this construct is safe against exceptions.  Similarly, there is "
"@code{infile-execute} for redirecting the input of @code{key} and its users "
"(any input word that does not take a file explicitly)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16909
#, no-wrap
msgid "outfile-execute ( @var{ ... xt file-id -- ...   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16910 ../doc/gforth.texi:16911
#, no-wrap
msgid "outfile-execute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16914
#, no-wrap
msgid "@code{outfile-execute} ( @i{... xt file-id -- ...  }) gforth-0.7 ``outfile-execute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16917
msgid ""
"execute @i{xt} with the output of @code{type} etc. redirected to @i{file-id}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16919
#, no-wrap
msgid "outfile-id ( @var{ -- file-id   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16920 ../doc/gforth.texi:16921
#, no-wrap
msgid "outfile-id"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16924
#, no-wrap
msgid "@code{outfile-id} ( @i{-- file-id  }) gforth-0.2 ``outfile-id''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16929
msgid ""
"@i{File-id} is used by @code{emit}, @code{type}, and any output word that "
"does not take a file-id as input.  By default @code{outfile-id} produces the "
"process's @code{stdout}, unless changed with @code{outfile-execute}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16931
#, no-wrap
msgid "infile-execute ( @var{ ... xt file-id -- ...   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16932 ../doc/gforth.texi:16933
#, no-wrap
msgid "infile-execute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16936
#, no-wrap
msgid "@code{infile-execute} ( @i{... xt file-id -- ...  }) gforth-0.7 ``infile-execute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16939
msgid ""
"execute @i{xt} with the input of @code{key} etc. redirected to @i{file-id}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16941
#, no-wrap
msgid "infile-id ( @var{ -- file-id   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16942 ../doc/gforth.texi:16943
#, no-wrap
msgid "infile-id"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16946
#, no-wrap
msgid "@code{infile-id} ( @i{-- file-id  }) gforth-0.4 ``infile-id''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16951
msgid ""
"@i{File-id} is used by @code{key}, @code{?key}, and anything that refers to "
"the \"user input device\".  By default @code{infile-id} produces the "
"process's @code{stdin}, unless changed with @code{infile-execute}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16960
msgid ""
"If you do not want to redirect the input or output to a file, you can also "
"make use of the fact that @code{key}, @code{emit} and @code{type} are "
"deferred words (@pxref{Deferred Words}).  However, in that case you have to "
"worry about the restoration and the protection against exceptions yourself; "
"also, note that for redirecting the output in this way, you have to redirect "
"both @code{emit} and @code{type}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16967
msgid "You can split a file name into a directory and base component:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16968
#, no-wrap
msgid "basename ( @var{ c-addr1 u1 -- c-addr2 u2   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16969 ../doc/gforth.texi:16970
#, no-wrap
msgid "basename"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16973
#, no-wrap
msgid "@code{basename} ( @i{c-addr1 u1 -- c-addr2 u2  }) gforth-0.7 ``basename''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16976
msgid ""
"Given a file name @i{c-addr1 u1}, @i{c-addr2 u2} is the part of it with any "
"leading directory components removed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16978
#, no-wrap
msgid "dirname ( @var{ c-addr1 u1 -- c-addr1 u2   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16979 ../doc/gforth.texi:16980
#, no-wrap
msgid "dirname"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16983
#, no-wrap
msgid "@code{dirname} ( @i{c-addr1 u1 -- c-addr1 u2  }) gforth-0.7 ``dirname''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:16987
msgid ""
"@i{C-addr1 u2} is the directory name of the file name @i{c-addr1 u1}, "
"including the final @code{/}.  If @i{caddr1 u1} does not contain a @code{/}, "
"@i{u2}=0."
msgstr ""

#. type: table
#: ../doc/gforth.texi:16993
msgid ""
"You can open and read directories similar to files.  Reading gives you one "
"directory entry at a time; you can match that to a filename (with wildcards)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:16994
#, no-wrap
msgid "open-dir ( @var{ c-addr u -- wdirid wior  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:16995 ../doc/gforth.texi:16996
#, no-wrap
msgid "open-dir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:16999
#, no-wrap
msgid "@code{open-dir} ( @i{c-addr u -- wdirid wior }) gforth-0.5 ``open-dir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17002
msgid ""
"Open the directory specified by @i{c-addr, u} and return @i{dir-id} for "
"futher access to it."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17003
#, no-wrap
msgid "read-dir ( @var{ c-addr u1 wdirid -- u2 flag wior  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17004 ../doc/gforth.texi:17005
#, no-wrap
msgid "read-dir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17008
#, no-wrap
msgid "@code{read-dir} ( @i{c-addr u1 wdirid -- u2 flag wior }) gforth-0.5 ``read-dir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17020
msgid ""
"Attempt to read the next entry from the directory specified by @i{dir-id} to "
"the buffer of length @i{u1} at address @i{c-addr}.  If the attempt fails "
"because there is no more entries, @i{ior}=0, @i{flag}=0, @i{u2}=0, and the "
"buffer is unmodified.  If the attempt to read the next entry fails because "
"of any other reason, return @i{ior}<>0.  If the attempt succeeds, store file "
"name to the buffer at @i{c-addr} and return @i{ior}=0, @i{flag}=true and "
"@i{u2} equal to the size of the file name.  If the length of the file name "
"is greater than @i{u1}, store first @i{u1} characters from file name into "
"the buffer and indicate \"name too long\" with @i{ior}, @i{flag}=true, and "
"@i{u2}=@i{u1}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17021
#, no-wrap
msgid "close-dir ( @var{ wdirid -- wior  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17022 ../doc/gforth.texi:17023
#, no-wrap
msgid "close-dir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17026
#, no-wrap
msgid "@code{close-dir} ( @i{wdirid -- wior }) gforth-0.5 ``close-dir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17028
msgid "Close the directory specified by @i{dir-id}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17029
#, no-wrap
msgid "filename-match ( @var{ c-addr1 u1 c-addr2 u2 -- flag  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17030 ../doc/gforth.texi:17031
#, no-wrap
msgid "filename-match"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17034
#, no-wrap
msgid "@code{filename-match} ( @i{c-addr1 u1 c-addr2 u2 -- flag }) gforth-0.5 ``match-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17038
msgid ""
"match the file name @var{c_addr1 u1} with the pattern @var{c_addr2 u2}.  "
"Patterns match char by char except for the special characters '*' and '?', "
"which are wildcards for several ('*') or one ('?') character."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17039
#, no-wrap
msgid "get-dir ( @var{ c-addr1 u1 -- c-addr2 u2  } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17040 ../doc/gforth.texi:17041
#, no-wrap
msgid "get-dir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17044
#, no-wrap
msgid "@code{get-dir} ( @i{c-addr1 u1 -- c-addr2 u2 }) gforth-0.7 ``get-dir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17047
msgid ""
"Store the current directory in the buffer specified by @i{c-addr1, u1}.  If "
"the buffer size is not sufficient, return 0 0"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17048
#, no-wrap
msgid "set-dir ( @var{ c-addr u -- wior  } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17049 ../doc/gforth.texi:17050
#, no-wrap
msgid "set-dir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17053
#, no-wrap
msgid "@code{set-dir} ( @i{c-addr u -- wior }) gforth-0.7 ``set-dir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17056
msgid ""
"Change the current directory to @i{c-addr, u}.  Return an error if this is "
"not possible"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17057
#, no-wrap
msgid "=mkdir ( @var{ c-addr u wmode -- wior  } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17058 ../doc/gforth.texi:17059
#, no-wrap
msgid "=mkdir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17062
#, no-wrap
msgid "@code{=mkdir} ( @i{c-addr u wmode -- wior }) gforth-0.7 ``equals-mkdir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17064
msgid "Create directory @i{c-addr u} with mode @i{wmode}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17065
#, no-wrap
msgid "mkdir-parents ( @var{ c-addr u mode -- ior   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17066 ../doc/gforth.texi:17067
#, no-wrap
msgid "mkdir-parents"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17070
#, no-wrap
msgid "@code{mkdir-parents} ( @i{c-addr u mode -- ior  }) gforth-0.7 ``mkdir-parents''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17073
msgid ""
"create the directory @i{c-addr u} and all its parents with mode @i{mode} "
"(modified by umask)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17079
#, no-wrap
msgid "path for @code{included}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17080
#, no-wrap
msgid "file search path"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17081
#, no-wrap
msgid "@code{include} search path"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17082
#, no-wrap
msgid "search path for files"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17088
msgid ""
"If you specify an absolute filename (i.e., a filename starting with @file{/} "
"or @file{~}, or with @file{:} in the second position (as in @samp{C:...})) "
"for @code{included} and friends, that file is included just as you would "
"expect."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17098
msgid ""
"If the filename starts with @file{./}, this refers to the directory that the "
"present file was @code{included} from.  This allows files to include other "
"files relative to their own position (irrespective of the current working "
"directory or the absolute position).  This feature is essential for "
"libraries consisting of several files, where a file may include other files "
"from the library.  It corresponds to @code{#include \"...\"} in C. If the "
"current input source is not a file, @file{.} refers to the directory of the "
"innermost file being included, or, if there is no file being included, to "
"the current working directory."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17106
msgid ""
"For relative filenames (not starting with @file{./}), Gforth uses a search "
"path similar to Forth's search order (@pxref{Word Lists}). It tries to find "
"the given filename in the directories present in the path, and includes the "
"first one it finds. There are separate search paths for Forth source files "
"and general files.  If the search path contains the directory @file{.}, this "
"refers to the directory of the current file, or the working directory, as if "
"the file had been specified with @file{./}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17109
msgid ""
"Use @file{~+} to refer to the current working directory (as in the "
"@code{bash})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17110
#, no-wrap
msgid "absolute-file? ( @var{ addr u -- flag   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17111 ../doc/gforth.texi:17112
#, no-wrap
msgid "absolute-file?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17115
#, no-wrap
msgid "@code{absolute-file?} ( @i{addr u -- flag  }) gforth-1.0 ``absolute-file?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17120
msgid ""
"A filename is absolute if it starts with a / or a ~ (~ expansion), or if it "
"is in the form ./*, extended regexp: ^[/~]|./, or if it has a colon as "
"second character (\"C:...\").  Paths simply containing a / are not absolute!"
msgstr ""

#. type: node
#: ../doc/gforth.texi:17131 ../doc/gforth.texi:17132 ../doc/gforth.texi:17183
#, no-wrap
msgid "Source Search Paths"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17133 ../doc/gforth.texi:17185
#, no-wrap
msgid "search path control, source files"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17138
msgid ""
"The search path is initialized when you start Gforth (@pxref{Invoking "
"Gforth}). You can display it and change it using @code{fpath} in combination "
"with the general path handling words."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17139
#, no-wrap
msgid "fpath ( @var{ -- path-addr   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17140 ../doc/gforth.texi:17141
#, no-wrap
msgid "fpath"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17144
#, no-wrap
msgid "@code{fpath} ( @i{-- path-addr  }) gforth-0.4 ``fpath''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17146
#, no-wrap
msgid ".fpath ( @var{ --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17147 ../doc/gforth.texi:17148
#, no-wrap
msgid ".fpath"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17151
#, no-wrap
msgid "@code{.fpath} ( @i{--  }) gforth-0.4 ``.fpath''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17153
msgid "Display the contents of the Forth search path."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17155
#, no-wrap
msgid "file>fpath ( @var{ addr1 u1 -- addr2 u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17156 ../doc/gforth.texi:17157
#, no-wrap
msgid "file>fpath"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17160
#, no-wrap
msgid "@code{file>fpath} ( @i{addr1 u1 -- addr2 u2  }) gforth-1.0 ``file>fpath''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17165
msgid ""
"Searches for a file with the name @i{c-addr1 u1} in the @code{fpath}.  If "
"successful, @i{c-addr u2} is the absolute file name or the file name "
"relative to the current working directory.  Throws an exception if the file "
"cannot be opened."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17175
msgid "Here is an example of using @code{fpath} and @code{require}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:17179
#, no-wrap
msgid ""
"fpath path= /usr/lib/forth/|./\n"
"require timer.fs\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17191
msgid ""
"Your application may need to search files in several directories, like "
"@code{included} does. To facilitate this, Gforth allows you to define and "
"use your own search paths, by providing generic equivalents of the Forth "
"search path words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17192
#, no-wrap
msgid "open-path-file ( @var{ addr1 u1 path-addr -- wfileid addr2 u2 0 | ior   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17193 ../doc/gforth.texi:17194
#, no-wrap
msgid "open-path-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17197
#, no-wrap
msgid "@code{open-path-file} ( @i{addr1 u1 path-addr -- wfileid addr2 u2 0 | ior  }) gforth-0.2 ``open-path-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17203
msgid ""
"Look in path @var{path-addr} for the file specified by @var{addr1 u1}.  If "
"found, the resulting path and an (read-only) open file descriptor are "
"returned. If the file is not found, @var{ior} is what came back from the "
"last attempt at opening the file (in the current implementation)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17205
#, no-wrap
msgid "file>path ( @var{ c-addr1 u1 path-addr -- c-addr2 u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17206 ../doc/gforth.texi:17207
#, no-wrap
msgid "file>path"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17210
#, no-wrap
msgid "@code{file>path} ( @i{c-addr1 u1 path-addr -- c-addr2 u2  }) gforth-1.0 ``file>path''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17215
msgid ""
"Searches for a file with the name @i{c-addr1 u1} in path stored in @i{path-"
"addr}.  If successful, @i{c-addr u2} is the absolute file name or the file "
"name relative to the current working directory.  Throws an exception if the "
"file cannot be opened."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17217
#, no-wrap
msgid "clear-path ( @var{ path-addr --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17218 ../doc/gforth.texi:17219
#, no-wrap
msgid "clear-path"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17222
#, no-wrap
msgid "@code{clear-path} ( @i{path-addr --  }) gforth-0.5 ``clear-path''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17224
msgid "Set the path @i{path-addr} to empty."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17226
#, no-wrap
msgid "also-path ( @var{ c-addr len path-addr --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17227 ../doc/gforth.texi:17228
#, no-wrap
msgid "also-path"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17231
#, no-wrap
msgid "@code{also-path} ( @i{c-addr len path-addr --  }) gforth-0.4 ``also-path''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17233
msgid "add the directory @i{c-addr len} to @i{path-addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17235
#, no-wrap
msgid ".path ( @var{ path-addr --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17236 ../doc/gforth.texi:17237
#, no-wrap
msgid ".path"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17240
#, no-wrap
msgid "@code{.path} ( @i{path-addr --  }) gforth-0.4 ``.path''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17242
msgid "Display the contents of the search path @var{path-addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17244
#, no-wrap
msgid "path+ ( @var{ path-addr  \"dir\" --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17245 ../doc/gforth.texi:17246
#, no-wrap
msgid "path+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17249
#, no-wrap
msgid "@code{path+} ( @i{path-addr  \"dir\" --  }) gforth-0.4 ``path+''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17251
msgid "Add the directory @var{dir} to the search path @var{path-addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17253
#, no-wrap
msgid "path= ( @var{ path-addr \"dir1|dir2|dir3\" --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17254 ../doc/gforth.texi:17255
#, no-wrap
msgid "path="
msgstr ""

#. type: format
#: ../doc/gforth.texi:17258
#, no-wrap
msgid "@code{path=} ( @i{path-addr \"dir1|dir2|dir3\" --  }) gforth-0.4 ``path-equals''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17260
msgid "Make a complete new search path; the path separator is |."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17265
msgid "Here's an example of creating a custom search path:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:17270
#, no-wrap
msgid ""
"variable mypath \\ no special allocation required, just a variable\n"
"mypath path= /lib|/usr/lib \\ assign initial directories\n"
"mypath path+ /usr/local/lib \\ append directory\n"
"mypath .path \\ output:\"/lib /usr/lib /usr/local/lib\"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17273
msgid "Search file and show resulting path:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:17275
#, no-wrap
msgid "s\" libm.so\" mypath open-path-file throw type close-file \\ output:\"/lib/libm.so\"\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17280
#, no-wrap
msgid "I/O - blocks"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17281
#, no-wrap
msgid "blocks"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17287
msgid ""
"When you run Gforth on a modern desk-top computer, it runs under the control "
"of an operating system which provides certain services.  One of these "
"services is @var{file services}, which allows Forth source code and data to "
"be stored in files and read into Gforth (@pxref{Files})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17292
msgid ""
"Traditionally, Forth has been an important programming language on systems "
"where it has interfaced directly to the underlying hardware with no "
"intervening operating system. Forth provides a mechanism, called "
"@dfn{blocks}, for accessing mass storage on such systems."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17297
msgid ""
"A block is a 1024-byte data area, which can be used to hold data or Forth "
"source code. No structure is imposed on the contents of the block. A block "
"is identified by its number; blocks are numbered contiguously from 1 to an "
"implementation-defined maximum."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17304
msgid ""
"A typical system that used blocks but no operating system might use a single "
"floppy-disk drive for mass storage, with the disks formatted to provide 256-"
"byte sectors. Blocks would be implemented by assigning the first four "
"sectors of the disk to block 1, the second four sectors to block 2 and so "
"on, up to the limit of the capacity of the disk. The disk would not contain "
"any file system information, just the set of blocks."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17305
#, no-wrap
msgid "blocks file"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17311
msgid ""
"On systems that do provide file services, blocks are typically implemented "
"by storing a sequence of blocks within a single @dfn{blocks file}.  The size "
"of the blocks file will be an exact multiple of 1024 bytes, corresponding to "
"the number of blocks it contains. This is the mechanism that Gforth uses."
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:17312
#, no-wrap
msgid "blocks.fb"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17317
msgid ""
"Only one blocks file can be open at a time. If you use block words without "
"having specified a blocks file, Gforth defaults to the blocks file "
"@file{blocks.fb}. Gforth uses the Forth search path when attempting to "
"locate a blocks file (@pxref{Source Search Paths})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17318
#, no-wrap
msgid "block buffers"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17322
msgid ""
"When you read and write blocks under program control, Gforth uses a number "
"of @dfn{block buffers} as intermediate storage. These buffers are not used "
"when you use @code{load} to interpret the contents of a block."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17325
msgid ""
"The behaviour of the block buffers is analagous to that of a cache.  Each "
"block buffer has three states:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17329
msgid "Unassigned"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17331
msgid "Assigned-clean"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17333
msgid "Assigned-dirty"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17338
msgid ""
"Initially, all block buffers are @i{unassigned}. In order to access a block, "
"the block (specified by its block number) must be assigned to a block buffer."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17349
msgid ""
"The assignment of a block to a block buffer is performed by @code{block} or "
"@code{buffer}. Use @code{block} when you wish to modify the existing "
"contents of a block. Use @code{buffer} when you don't care about the "
"existing contents of the block@footnote{The Standard Forth definition of "
"@code{buffer} is intended not to cause disk I/O; if the data associated with "
"the particular block is already stored in a block buffer due to an earlier "
"@code{block} command, @code{buffer} will return that block buffer and the "
"existing contents of the block will be available. Otherwise, @code{buffer} "
"will simply assign a new, empty block buffer for the block.}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17354
msgid ""
"Once a block has been assigned to a block buffer using @code{block} or "
"@code{buffer}, that block buffer becomes the @i{current block buffer}. Data "
"may only be manipulated (read or written) within the current block buffer."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17363
msgid ""
"When the contents of the current block buffer has been modified it is "
"necessary, @emph{before calling @code{block} or @code{buffer} again}, to "
"either abandon the changes (by doing nothing) or mark the block as changed "
"(assigned-dirty), using @code{update}. Using @code{update} does not change "
"the blocks file; it simply changes a block buffer's state to @i{assigned-"
"dirty}.  The block will be written implicitly when it's buffer is needed for "
"another block, or explicitly by @code{flush} or @code{save-buffers}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17367
msgid ""
"word @code{Flush} writes all @i{assigned-dirty} blocks back to the blocks "
"file on disk. Leaving Gforth with @code{bye} also performs a @code{flush}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17376
msgid ""
"In Gforth, @code{block} and @code{buffer} use a @i{direct-mapped} algorithm "
"to assign a block buffer to a block. That means that any particular block "
"can only be assigned to one specific block buffer, called (for the "
"particular operation) the @i{victim buffer}. If the victim buffer is "
"@i{unassigned} or @i{assigned-clean} it is allocated to the new block "
"immediately. If it is @i{assigned-dirty} its current contents are written "
"back to the blocks file on disk before it is allocated to the new block."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17383
msgid ""
"Although no structure is imposed on the contents of a block, it is "
"traditional to display the contents as 16 lines each of 64 characters.  A "
"block provides a single, continuous stream of input (for example, it acts as "
"a single parse area) -- there are no end-of-line characters within a block, "
"and no end-of-file character at the end of a block. There are two "
"consequences of this:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17388
msgid ""
"The last character of one line wraps straight into the first character of "
"the following line"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17392
msgid ""
"The word @code{\\} -- comment to end of line -- requires special treatment; "
"in the context of a block it causes all characters until the end of the "
"current 64-character ``line'' to be ignored."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17397
msgid ""
"In Gforth, when you use @code{block} with a non-existent block number, the "
"current blocks file will be extended to the appropriate size and the block "
"buffer will be initialised with spaces."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17401
msgid ""
"Gforth includes a simple block editor (type @code{use blocked.fb 0 list} for "
"details) but doesn't encourage the use of blocks; the mechanism is only "
"provided for backward compatibility."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17403
msgid "Common techniques that are used when working with blocks include:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17408
msgid ""
"A screen editor that allows you to edit blocks without leaving the Forth "
"environment."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17413
msgid ""
"Shadow screens; where every code block has an associated block containing "
"comments (for example: code in odd block numbers, comments in even block "
"numbers). Typically, the block editor provides a convenient mechanism to "
"toggle between code and comments."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17416
msgid ""
"Load blocks; a single block (typically block 1) contains a number of "
"@code{thru} commands which @code{load} the whole of the application."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17420
msgid ""
"See Frank Sergeant's Pygmy Forth to see just how well blocks can be "
"integrated into a Forth programming environment."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17423
#, no-wrap
msgid "open-blocks ( @var{ c-addr u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17424 ../doc/gforth.texi:17425
#, no-wrap
msgid "open-blocks"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17428
#, no-wrap
msgid "@code{open-blocks} ( @i{c-addr u --  }) gforth-0.2 ``open-blocks''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17430
msgid "Use the file, whose name is given by @i{c-addr u}, as the blocks file."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17432
#, no-wrap
msgid "use ( @var{ \"file\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17433 ../doc/gforth.texi:17434
#, no-wrap
msgid "use"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17437
#, no-wrap
msgid "@code{use} ( @i{\"file\" --  }) gforth-0.2 ``use''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17439
msgid "Use @i{file} as the blocks file."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17441
#, no-wrap
msgid "block-offset ( @var{ -- addr   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17442 ../doc/gforth.texi:17443
#, no-wrap
msgid "block-offset"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17446
#, no-wrap
msgid "@code{block-offset} ( @i{-- addr  }) gforth-0.5 ``block-offset''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17452
msgid ""
"User variable containing the number of the first block (default since 0.5.0: "
"0).  Block files created with Gforth versions before 0.5.0 have the offset "
"1.  If you use these files you can: @code{1 offset !}; or add 1 to every "
"block number used; or prepend 1024 characters to the file."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17454
#, no-wrap
msgid "get-block-fid ( @var{ -- wfileid   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17455 ../doc/gforth.texi:17456
#, no-wrap
msgid "get-block-fid"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17459
#, no-wrap
msgid "@code{get-block-fid} ( @i{-- wfileid  }) gforth-0.2 ``get-block-fid''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17463
msgid ""
"Return the file-id of the current blocks file. If no blocks file has been "
"opened, use @file{blocks.fb} as the default blocks file."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17465
#, no-wrap
msgid "block-position ( @var{ u --   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17466 ../doc/gforth.texi:17467
#, no-wrap
msgid "block-position"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17470
#, no-wrap
msgid "@code{block-position} ( @i{u --  }) block ``block-position''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17472
msgid "Position the block file to the start of block @i{u}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17475
#, no-wrap
msgid "list ( @var{ u --   } ) block-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17476 ../doc/gforth.texi:17477
#, no-wrap
msgid "list"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17480
#, no-wrap
msgid "@code{list} ( @i{u --  }) block-ext ``list''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17483
msgid ""
"Display block @i{u}. In Gforth, the block is displayed as 16 numbered lines, "
"each of 64 characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17485
#, no-wrap
msgid "scr ( @var{ -- a-addr   } ) block-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17486 ../doc/gforth.texi:17487
#, no-wrap
msgid "scr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17490
#, no-wrap
msgid "@code{scr} ( @i{-- a-addr  }) block-ext ``s-c-r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17494
msgid ""
"@code{User} variable containing the block number of the block most recently "
"processed by @code{list}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17497
#, no-wrap
msgid "block ( @var{ u -- a-addr   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17498 ../doc/gforth.texi:17499
#, no-wrap
msgid "block"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17502
#, no-wrap
msgid "@code{block} ( @i{u -- a-addr  }) block ``block''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17509
msgid ""
"If a block buffer is assigned for block @i{u}, return its start address, "
"@i{a-addr}. Otherwise, assign a block buffer for block @i{u} (if the "
"assigned block buffer has been @code{update}d, transfer the contents to mass "
"storage), read the block into the block buffer and return its start address, "
"@i{a-addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17511
#, no-wrap
msgid "buffer ( @var{ u -- a-addr   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17512 ../doc/gforth.texi:17513
#, no-wrap
msgid "buffer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17516
#, no-wrap
msgid "@code{buffer} ( @i{u -- a-addr  }) block ``buffer''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17526
msgid ""
"If a block buffer is assigned for block @i{u}, return its start address, "
"@i{a-addr}. Otherwise, assign a block buffer for block @i{u} (if the "
"assigned block buffer has been @code{update}d, transfer the contents to mass "
"storage) and return its start address, @i{a-addr}.  The subtle difference "
"between @code{buffer} and @code{block} mean that you should only use "
"@code{buffer} if you don't care about the previous contents of block @i{u}. "
"In Gforth, this simply calls @code{block}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17529
#, no-wrap
msgid "empty-buffers ( @var{ --   } ) block-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17530 ../doc/gforth.texi:17531
#, no-wrap
msgid "empty-buffers"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17534
#, no-wrap
msgid "@code{empty-buffers} ( @i{--  }) block-ext ``empty-buffers''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17538
msgid ""
"Mark all block buffers as unassigned; if any had been marked as assigned-"
"dirty (by @code{update}), the changes to those blocks will be lost."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17540
#, no-wrap
msgid "empty-buffer ( @var{ buffer --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17541 ../doc/gforth.texi:17542
#, no-wrap
msgid "empty-buffer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17545
#, no-wrap
msgid "@code{empty-buffer} ( @i{buffer --  }) gforth-0.2 ``empty-buffer''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17547
#, no-wrap
msgid "update ( @var{ --   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17548 ../doc/gforth.texi:17549
#, no-wrap
msgid "update"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17552
#, no-wrap
msgid "@code{update} ( @i{--  }) block ``update''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17554
msgid "Mark the state of the current block buffer as assigned-dirty."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17556
#, no-wrap
msgid "updated? ( @var{ n -- f   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17557 ../doc/gforth.texi:17558
#, no-wrap
msgid "updated?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17561
#, no-wrap
msgid "@code{updated?} ( @i{n -- f  }) gforth-0.2 ``updated?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17564
msgid ""
"Return true if @code{updated} has been used to mark block @i{n} as assigned-"
"dirty."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17566
#, no-wrap
msgid "save-buffers ( @var{ --   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17567 ../doc/gforth.texi:17568
#, no-wrap
msgid "save-buffers"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17571
#, no-wrap
msgid "@code{save-buffers} ( @i{--  }) block ``save-buffers''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17574
msgid ""
"Transfer the contents of each @code{update}d block buffer to mass storage, "
"then mark all block buffers as assigned-clean."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17576
#, no-wrap
msgid "save-buffer ( @var{ buffer --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17577 ../doc/gforth.texi:17578
#, no-wrap
msgid "save-buffer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17581
#, no-wrap
msgid "@code{save-buffer} ( @i{buffer --  }) gforth-0.2 ``save-buffer''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17583
#, no-wrap
msgid "flush ( @var{ --   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17584 ../doc/gforth.texi:17585
#, no-wrap
msgid "flush"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17588
#, no-wrap
msgid "@code{flush} ( @i{--  }) block ``flush''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17591
msgid "Perform the functions of @code{save-buffers} then @code{empty-buffers}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17594
#, no-wrap
msgid "load ( @var{ i*x u -- j*x   } ) block"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17595 ../doc/gforth.texi:17596
#, no-wrap
msgid "load"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17599
#, no-wrap
msgid "@code{load} ( @i{i*x u -- j*x  }) block ``load''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17601
msgid "Text-interpret block @i{u}.  Block 0 cannot be @code{load}ed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17603
#, no-wrap
msgid "thru ( @var{ i*x n1 n2 -- j*x   } ) block-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17604 ../doc/gforth.texi:17605
#, no-wrap
msgid "thru"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17608
#, no-wrap
msgid "@code{thru} ( @i{i*x n1 n2 -- j*x  }) block-ext ``thru''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17610
msgid "@code{load} the blocks @i{n1} through @i{n2} in sequence."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17612
#, no-wrap
msgid "+load ( @var{ i*x n -- j*x   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17613 ../doc/gforth.texi:17614
#, no-wrap
msgid "+load"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17617
#, no-wrap
msgid "@code{+load} ( @i{i*x n -- j*x  }) gforth-0.2 ``+load''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17620
msgid ""
"Used within a block to load the block specified as the current block + @i{n}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17622
#, no-wrap
msgid "+thru ( @var{ i*x n1 n2 -- j*x   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17623 ../doc/gforth.texi:17624
#, no-wrap
msgid "+thru"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17627
#, no-wrap
msgid "@code{+thru} ( @i{i*x n1 n2 -- j*x  }) gforth-0.2 ``+thru''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17630
msgid ""
"Used within a block to load the range of blocks specified as the current "
"block + @i{n1} thru the current block + @i{n2}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17632
#, no-wrap
msgid "--> ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17633 ../doc/gforth.texi:17634
#, no-wrap
msgid "-->"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17637
#, no-wrap
msgid "@code{-->} ( @i{--  }) gforth-0.2 ``chain''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17644
msgid ""
"If this symbol is encountered whilst loading block @i{n}, discard the "
"remainder of the block and load block @i{n+1}. Used for chaining multiple "
"blocks together as a single loadable unit.  Not recommended, because it "
"destroys the independence of loading.  Use @code{thru} (which is standard) "
"or @code{+thru} instead."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17646
#, no-wrap
msgid "block-included ( @var{ a-addr u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17647 ../doc/gforth.texi:17648
#, no-wrap
msgid "block-included"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17651
#, no-wrap
msgid "@code{block-included} ( @i{a-addr u --  }) gforth-0.2 ``block-included''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17657
msgid ""
"Use within a block that is to be processed by @code{load}. Save the current "
"blocks file specification, open the blocks file specified by @i{a-addr u} "
"and @code{load} block 1 from that file (which may in turn chain or load "
"other blocks). Finally, close the blocks file and restore the original "
"blocks file."
msgstr ""

#. type: node
#: ../doc/gforth.texi:17662 ../doc/gforth.texi:19700 ../doc/gforth.texi:19701
#: ../doc/gforth.texi:19702 ../doc/gforth.texi:19809
#, no-wrap
msgid "OS command line arguments"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17664
#, no-wrap
msgid "I/O - keyboard and display"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17684
#, no-wrap
msgid "numeric output - simple/free-format"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17689
msgid ""
"The simplest output functions are those that display numbers from the data "
"stack.  Numbers are displayed in the base (aka radix) stored in @code{base} "
"(@pxref{Number Conversion})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17690
#, no-wrap
msgid ". ( @var{ n --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17691 ../doc/gforth.texi:17692
#, no-wrap
msgid "."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17695
#, no-wrap
msgid "@code{.} ( @i{n --  }) core ``dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17697
msgid ""
"Display (the signed single number) @var{n} in free-format, followed by a "
"space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17699
#, no-wrap
msgid "dec. ( @var{ n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17700 ../doc/gforth.texi:17701
#, no-wrap
msgid "dec."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17704
#, no-wrap
msgid "@code{dec.} ( @i{n --  }) gforth-0.2 ``dec.''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17706
msgid "Display @i{n} as a signed decimal number, followed by a space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17708
#, no-wrap
msgid "h. ( @var{ u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17709 ../doc/gforth.texi:17710
#, no-wrap
msgid "h."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17713
#, no-wrap
msgid "@code{h.} ( @i{u --  }) gforth-1.0 ``h.''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17716
msgid ""
"Display @i{u} as an unsigned hex number, prefixed with a \"$\" and followed "
"by a space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17718
#, no-wrap
msgid "hex. ( @var{ u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17719 ../doc/gforth.texi:17720
#, no-wrap
msgid "hex."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17723
#, no-wrap
msgid "@code{hex.} ( @i{u --  }) gforth-0.2 ``hex.''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17728
msgid ""
"Display @i{u} as an unsigned hex number, prefixed with a @code{$} and "
"followed by a space.  Another name for this word is @code{h.}, which is "
"present in several other systems, but not in Gforth before 1.0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17730
#, no-wrap
msgid "u. ( @var{ u --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17731 ../doc/gforth.texi:17732
#, no-wrap
msgid "u."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17735
#, no-wrap
msgid "@code{u.} ( @i{u --  }) core ``u-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17737
msgid ""
"Display (the unsigned single number) @var{u} in free-format, followed by a "
"space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17739
#, no-wrap
msgid ".r ( @var{ n1 n2 --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17740 ../doc/gforth.texi:17741
#, no-wrap
msgid ".r"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17744
#, no-wrap
msgid "@code{.r} ( @i{n1 n2 --  }) core-ext ``dot-r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17748
msgid ""
"Display @var{n1} right-aligned in a field @var{n2} characters wide. If more "
"than @var{n2} characters are needed to display the number, all digits are "
"displayed.  If appropriate, @var{n2} must include a character for a leading "
"``-''."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17750
#, no-wrap
msgid "u.r ( @var{ u n --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17751 ../doc/gforth.texi:17752
#, no-wrap
msgid "u.r"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17755
#, no-wrap
msgid "@code{u.r} ( @i{u n --  }) core-ext ``u-dot-r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17758
msgid ""
"Display @var{u} right-aligned in a field @var{n} characters wide. If more "
"than @var{n} characters are needed to display the number, all digits are "
"displayed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17760
#, no-wrap
msgid "dec.r ( @var{ u n --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17761 ../doc/gforth.texi:17762
#, no-wrap
msgid "dec.r"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17765
#, no-wrap
msgid "@code{dec.r} ( @i{u n --  }) gforth-0.5 ``dec.r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17768
msgid ""
"Display @i{u} as a unsigned decimal number in a field @i{n} characters wide."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17770
#, no-wrap
msgid "d. ( @var{ d --   } ) double"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17771 ../doc/gforth.texi:17772
#, no-wrap
msgid "d."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17775
#, no-wrap
msgid "@code{d.} ( @i{d --  }) double ``d-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17777
msgid ""
"Display (the signed double number) @var{d} in free-format. followed by a "
"space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17779
#, no-wrap
msgid "ud. ( @var{ ud --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17780 ../doc/gforth.texi:17781
#, no-wrap
msgid "ud."
msgstr ""

#. type: format
#: ../doc/gforth.texi:17784
#, no-wrap
msgid "@code{ud.} ( @i{ud --  }) gforth-0.2 ``u-d-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17786
msgid ""
"Display (the signed double number) @var{ud} in free-format, followed by a "
"space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17788
#, no-wrap
msgid "d.r ( @var{ d n --   } ) double"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17789 ../doc/gforth.texi:17790
#, no-wrap
msgid "d.r"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17793
#, no-wrap
msgid "@code{d.r} ( @i{d n --  }) double ``d-dot-r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17797
msgid ""
"Display @var{d} right-aligned in a field @var{n} characters wide. If more "
"than @var{n} characters are needed to display the number, all digits are "
"displayed.  If appropriate, @var{n} must include a character for a leading "
"``-''."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17799
#, no-wrap
msgid "ud.r ( @var{ ud n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17800 ../doc/gforth.texi:17801
#, no-wrap
msgid "ud.r"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17804
#, no-wrap
msgid "@code{ud.r} ( @i{ud n --  }) gforth-0.2 ``u-d-dot-r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17807
msgid ""
"Display @var{ud} right-aligned in a field @var{n} characters wide. If more "
"than @var{n} characters are needed to display the number, all digits are "
"displayed."
msgstr ""

#. type: node
#: ../doc/gforth.texi:17811 ../doc/gforth.texi:18036 ../doc/gforth.texi:18037
#: ../doc/gforth.texi:18210
#, no-wrap
msgid "Floating-point output"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17813
#, no-wrap
msgid "formatted numeric output"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17814
#, no-wrap
msgid "pictured numeric output"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:17815
#, no-wrap
msgid "numeric output - formatted"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17827
msgid ""
"Forth traditionally uses a technique called @dfn{pictured numeric output} "
"for formatted printing of integers.  In this technique, digits are extracted "
"from the number (using the current output radix defined by @code{base}, "
"@pxref{Number Conversion}), converted to ASCII codes and prepended to a "
"string that is built in a scratch-pad area of memory (@pxref{core-idef, "
"Implementation-defined options, Implementation-defined options}). Arbitrary "
"characters can be prepended to the string during the extraction process. The "
"completed string is specified by an address and length and can be "
"manipulated (@code{TYPE}ed, copied, modified) under program control."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17831
msgid ""
"All of the integer output words described in the previous section "
"(@pxref{Simple numeric output}) are implemented in Gforth using pictured "
"numeric output."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17833
msgid "Three important things to remember about pictured numeric output:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17839
msgid ""
"It always operates on double-precision numbers; to display a single-"
"precision number, convert it first (for ways of doing this @pxref{Double "
"precision})."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17842
msgid ""
"It always treats the double-precision number as though it were unsigned. The "
"examples below show ways of printing signed numbers."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:17844
msgid ""
"The string is built up from right to left; least significant digit first."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17849
msgid ""
"Standard Forth supports a single output buffer (aka hold area) that you "
"empty and initialize with @code{<#} and for which you get the result string "
"with @code{#>}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17858
msgid ""
"Gforth additionally supports nested usage of this buffer, allowing, e.g., to "
"nest output from the debugging tracer @code{~~} inside code dealing with the "
"hold area: @code{<<#} starts a new nest, @code{#>} produces the result "
"string, and @code{#>>} unnests: the hold area for the nest is reclaimed, and "
"@code{#>} now produces the string for the next-outer nest.  All of Gforth's "
"higher-level numeric output words use @code{<<#} ... @code{#>} ... "
"@code{#>>} and can be nested inside other users of the hold area."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17859
#, no-wrap
msgid "<# ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17860 ../doc/gforth.texi:17861
#, no-wrap
msgid "<#"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17864
#, no-wrap
msgid "@code{<#} ( @i{--  }) core ``less-number-sign''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17866
msgid "Initialise/clear the pictured numeric output string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17868
#, no-wrap
msgid "<<# ( @var{ --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17869 ../doc/gforth.texi:17870
#, no-wrap
msgid "<<#"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17873
#, no-wrap
msgid "@code{<<#} ( @i{--  }) gforth-0.5 ``less-less-number-sign''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17878
msgid ""
"Start a hold area that ends with @code{#>>}. Can be nested in each other and "
"in @code{<#}.  Note: if you do not match up the @code{<<#}s with @code{#>>}"
"s, you will eventually run out of hold area; you can reset the hold area to "
"empty with @code{<#}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17880
#, no-wrap
msgid "# ( @var{ ud1 -- ud2   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17881 ../doc/gforth.texi:17882
#, no-wrap
msgid "#"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17885
#, no-wrap
msgid "@code{#} ( @i{ud1 -- ud2  }) core ``number-sign''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17891
msgid ""
"Used between @code{<<#} and @code{#>}. Prepend the least-significant digit "
"(according to @code{base}) of @var{ud1} to the pictured numeric output "
"string.  @var{ud2} is @var{ud1/base}, i.e., the number representing the "
"remaining digits."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17893
#, no-wrap
msgid "#s ( @var{ ud -- 0 0   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17894 ../doc/gforth.texi:17895
#, no-wrap
msgid "#s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17898
#, no-wrap
msgid "@code{#s} ( @i{ud -- 0 0  }) core ``number-sign-s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17904
msgid ""
"Used between @code{<<#} and @code{#>}.  Prepend all digits of @var{ud} to "
"the pictured numeric output string.  @code{#s} will convert at least one "
"digit. Therefore, if @var{ud} is 0, @code{#s} will prepend a ``0'' to the "
"pictured numeric output string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17906
#, no-wrap
msgid "hold ( @var{ char --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17907 ../doc/gforth.texi:17908
#, no-wrap
msgid "hold"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17911
#, no-wrap
msgid "@code{hold} ( @i{char --  }) core ``hold''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17914
msgid ""
"Used between @code{<<#} and @code{#>}. Prepend the character @var{char} to "
"the pictured numeric output string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17916
#, no-wrap
msgid "holds ( @var{ addr u --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17917 ../doc/gforth.texi:17918
#, no-wrap
msgid "holds"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17921
#, no-wrap
msgid "@code{holds} ( @i{addr u --  }) core-ext ``holds''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17924
msgid ""
"Used between @code{<<#} and @code{#>}. Prepend the string @code{addr u} to "
"the pictured numeric output string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17926
#, no-wrap
msgid "sign ( @var{ n --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17927 ../doc/gforth.texi:17928
#, no-wrap
msgid "sign"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17931
#, no-wrap
msgid "@code{sign} ( @i{n --  }) core ``sign''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17935
msgid ""
"Used between @code{<<#} and @code{#>}. If @var{n} (a @var{single} number) is "
"negative, prepend ``@code{-}'' to the pictured numeric output string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17937
#, no-wrap
msgid "#> ( @var{ xd -- addr u   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17938 ../doc/gforth.texi:17939
#, no-wrap
msgid "#>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17942
#, no-wrap
msgid "@code{#>} ( @i{xd -- addr u  }) core ``number-sign-greater''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17949
msgid ""
"Complete the pictured numeric output string by discarding @var{xd} and "
"returning @var{addr u}; the address and length of the formatted string. A "
"Standard program may modify characters within the string.  Does not release "
"the hold area; use @code{#>>} to release a hold area started with "
"@code{<<#}, or @code{<#} to release all hold areas."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:17951
#, no-wrap
msgid "#>> ( @var{ --   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:17952 ../doc/gforth.texi:17953
#, no-wrap
msgid "#>>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:17956
#, no-wrap
msgid "@code{#>>} ( @i{--  }) gforth-0.5 ``number-sign-greater-greater''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:17958
msgid "Release the hold area started with @code{<<#}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:17963
msgid "Here are some examples of using pictured numeric output:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:17973
#, no-wrap
msgid ""
": my-u. ( u -- )\n"
"  \\ Simplest use of pns.. behaves like Standard u. \n"
"  0              \\ convert to unsigned double\n"
"  <<#            \\ start conversion\n"
"  #s             \\ convert all digits\n"
"  #>             \\ complete conversion\n"
"  TYPE SPACE     \\ display, with trailing space\n"
"  #>> ;          \\ release hold area\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:17981
#, no-wrap
msgid ""
": cents-only ( u -- )\n"
"  0              \\ convert to unsigned double\n"
"  <<#            \\ start conversion\n"
"  # #            \\ convert two least-significant digits\n"
"  #>             \\ complete conversion, discard other digits\n"
"  TYPE SPACE     \\ display, with trailing space\n"
"  #>> ;          \\ release hold area\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:17992
#, no-wrap
msgid ""
": dollars-and-cents ( u -- )\n"
"  0              \\ convert to unsigned double\n"
"  <<#            \\ start conversion\n"
"  # #            \\ convert two least-significant digits\n"
"  '.' hold       \\ insert decimal point\n"
"  #s             \\ convert remaining digits\n"
"  '$' hold       \\ append currency symbol\n"
"  #>             \\ complete conversion\n"
"  TYPE SPACE     \\ display, with trailing space\n"
"  #>> ;          \\ release hold area\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18003
#, no-wrap
msgid ""
": my-. ( n -- )\n"
"  \\ handling negatives.. behaves like Standard .\n"
"  s>d            \\ convert to signed double\n"
"  swap over dabs \\ leave sign byte followed by unsigned double\n"
"  <<#            \\ start conversion\n"
"  #s             \\ convert all digits\n"
"  rot sign       \\ get at sign byte, append \"-\" if needed\n"
"  #>             \\ complete conversion\n"
"  TYPE SPACE     \\ display, with trailing space\n"
"  #>> ;          \\ release hold area\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18018
#, no-wrap
msgid ""
": account. ( n -- )\n"
"  \\ accountants don't like minus signs, they use parentheses\n"
"  \\ for negative numbers\n"
"  s>d            \\ convert to signed double\n"
"  swap over dabs \\ leave sign byte followed by unsigned double\n"
"  <<#            \\ start conversion\n"
"  2 pick         \\ get copy of sign byte\n"
"  0< IF ')' hold THEN \\ right-most character of output\n"
"  #s             \\ convert all digits\n"
"  rot            \\ get at sign byte\n"
"  0< IF '(' hold THEN\n"
"  #>             \\ complete conversion\n"
"  TYPE SPACE     \\ display, with trailing space\n"
"  #>> ;          \\ release hold area\n"
"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18022
msgid "Here are some examples of using these words:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18034
#, no-wrap
msgid ""
"1 my-u. 1\n"
"hex -1 my-u. decimal FFFFFFFF\n"
"1 cents-only 01\n"
"1234 cents-only 34\n"
"2 dollars-and-cents $0.02\n"
"1234 dollars-and-cents $12.34\n"
"123 my-. 123\n"
"-123 my. -123\n"
"123 account. 123\n"
"-456 account. (456)\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:18036 ../doc/gforth.texi:18210 ../doc/gforth.texi:18211
#: ../doc/gforth.texi:18340
#, no-wrap
msgid "Miscellaneous output"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18038
#, no-wrap
msgid "numeric output, FP"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18039
#, no-wrap
msgid "FP output"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18040
#, no-wrap
msgid "floating-point output"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18043
msgid "Floating-point output is always displayed using base 10."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18044
#, no-wrap
msgid "f. ( @var{ r --   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18045 ../doc/gforth.texi:18046
#, no-wrap
msgid "f."
msgstr ""

#. type: format
#: ../doc/gforth.texi:18049
#, no-wrap
msgid "@code{f.} ( @i{r --  }) floating-ext ``f-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18052
msgid ""
"Display (the floating-point number) @i{r} without exponent, followed by a "
"space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18054
#, no-wrap
msgid "fe. ( @var{ r --   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18055 ../doc/gforth.texi:18056
#, no-wrap
msgid "fe."
msgstr ""

#. type: format
#: ../doc/gforth.texi:18059
#, no-wrap
msgid "@code{fe.} ( @i{r --  }) floating-ext ``f-e-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18062
msgid ""
"Display @i{r} using engineering notation (with exponent dividable by 3), "
"followed by a space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18064
#, no-wrap
msgid "fs. ( @var{ r --   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18065 ../doc/gforth.texi:18066
#, no-wrap
msgid "fs."
msgstr ""

#. type: format
#: ../doc/gforth.texi:18069
#, no-wrap
msgid "@code{fs.} ( @i{r --  }) floating-ext ``f-s-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18072
msgid ""
"Display @i{r} using scientific notation (with exponent), followed by a space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18074
#, no-wrap
msgid "fp. ( @var{ r --   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18075 ../doc/gforth.texi:18076
#, no-wrap
msgid "fp."
msgstr ""

#. type: format
#: ../doc/gforth.texi:18079
#, no-wrap
msgid "@code{fp.} ( @i{r --  }) floating-ext ``f-e-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18082
msgid ""
"Display @i{r} using SI prefix notation (with exponent dividable by 3, "
"converted into SI prefixes if available), followed by a space."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18087
msgid ""
"Examples of printing the number 1234.5678E23 in the different floating-point "
"output formats are shown below."
msgstr ""

#. type: example
#: ../doc/gforth.texi:18093
#, no-wrap
msgid ""
"f. 123456780000000000000000000.\n"
"fe. 123.456780000000E24\n"
"fs. 1.23456780000000E26\n"
"fp. 123.456780000000Y\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18096
msgid "The length of the output is influenced by:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18097
#, no-wrap
msgid "precision ( @var{ -- u   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18098 ../doc/gforth.texi:18099
#, no-wrap
msgid "precision"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18102
#, no-wrap
msgid "@code{precision} ( @i{-- u  }) floating-ext ``precision''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18105
msgid ""
"@i{u} is the number of significant digits currently used by @code{F.} "
"@code{FE.} and @code{FS.}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18107
#, no-wrap
msgid "set-precision ( @var{ u --   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18108 ../doc/gforth.texi:18109
#, no-wrap
msgid "set-precision"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18112
#, no-wrap
msgid "@code{set-precision} ( @i{u --  }) floating-ext ``set-precision''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18115
msgid ""
"Set the number of significant digits currently used by @code{F.} @code{FE.} "
"and @code{FS.} to @i{u}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18119
msgid "You can control the output in more detail with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18120
#, no-wrap
msgid "f.rdp ( @var{ rf +nr +nd +np --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18121 ../doc/gforth.texi:18122
#, no-wrap
msgid "f.rdp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18125
#, no-wrap
msgid "@code{f.rdp} ( @i{rf +nr +nd +np --  }) gforth-0.6 ``f.rdp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18145
msgid ""
"Print float @i{rf} formatted.  The total width of the output is @i{nr}.  For "
"fixed-point notation, the number of digits after the decimal point is "
"@i{+nd} and the minimum number of significant digits is @i{np}.  @code{Set-"
"precision} has no effect on @code{f.rdp}.  Fixed-point notation is used if "
"the number of siginicant digits would be at least @i{np} and if the number "
"of digits before the decimal point would fit.  If fixed-point notation is "
"not used, exponential notation is used, and if that does not fit, asterisks "
"are printed.  We recommend using @i{nr}>=7 to avoid the risk of numbers not "
"fitting at all.  We recommend @i{nr}>=@i{np}+5 to avoid cases where @code{f."
"rdp} switches to exponential notation because fixed-point notation would "
"have too few significant digits, yet exponential notation offers fewer "
"significant digits.  We recommend @i{nr}>=@i{nd}+2, if you want to have "
"fixed-point notation for some numbers; the smaller the value of @i{np}, the "
"more cases are shown in fixed-point notation (cases where few or no "
"significant digits remain in fixed-point notation).  We recommend @i{np}"
">@i{nr}, if you want to have exponential notation for all numbers."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18152
msgid ""
"To give you a better intuition of how they influence the output, here are "
"some examples of parameter combinations; in each line the same number is "
"printed, in each column the same parameter combination is used for printing:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18167
#, no-wrap
msgid ""
"    12 13 0    7 3 4   7 3 0   7 3 1   7 5 1   7 7 1   7 0 2  4 2 1\n"
"|-1.234568E-6|-1.2E-6| -0.000|-1.2E-6|-1.2E-6|-1.2E-6|-1.2E-6|****|\n"
"|-1.234568E-5|-1.2E-5| -0.000|-1.2E-5|-.00001|-1.2E-5|-1.2E-5|****|\n"
"|-1.234568E-4|-1.2E-4| -0.000|-1.2E-4|-.00012|-1.2E-4|-1.2E-4|****|\n"
"|-1.234568E-3|-1.2E-3| -0.001| -0.001|-.00123|-1.2E-3|-1.2E-3|****|\n"
"|-1.234568E-2|-1.2E-2| -0.012| -0.012|-.01235|-1.2E-2|-1.2E-2|-.01|\n"
"|-1.234568E-1|-1.2E-1| -0.123| -0.123|-.12346|-1.2E-1|-1.2E-1|-.12|\n"
"|-1.2345679E0| -1.235| -1.235| -1.235|-1.23E0|-1.23E0|-1.23E0|-1E0|\n"
"|-1.2345679E1|-12.346|-12.346|-12.346|-1.23E1|-1.23E1|   -12.|-1E1|\n"
"|-1.2345679E2|-1.23E2|-1.23E2|-1.23E2|-1.23E2|-1.23E2|  -123.|-1E2|\n"
"|-1.2345679E3|-1.23E3|-1.23E3|-1.23E3|-1.23E3|-1.23E3| -1235.|-1E3|\n"
"|-1.2345679E4|-1.23E4|-1.23E4|-1.23E4|-1.23E4|-1.23E4|-12346.|-1E4|\n"
"|-1.2345679E5|-1.23E5|-1.23E5|-1.23E5|-1.23E5|-1.23E5|-1.23E5|-1E5|\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18170
msgid "You can generate a string instead of displaying the number with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18171
#, no-wrap
msgid "f>str-rdp ( @var{ rf +nr +nd +np -- c-addr nr   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18172 ../doc/gforth.texi:18173
#, no-wrap
msgid "f>str-rdp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18176
#, no-wrap
msgid "@code{f>str-rdp} ( @i{rf +nr +nd +np -- c-addr nr  }) gforth-0.6 ``f>str-rdp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18181
msgid ""
"Convert @i{rf} into a string at @i{c-addr nr}.  The conversion rules and the "
"meanings of @i{nr +nd np} are the same as for @code{f.rdp}.  The result in "
"in the pictured numeric output buffer and will be destroyed by anything "
"destroying that buffer."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18183
#, no-wrap
msgid "f>buf-rdp ( @var{ rf c-addr +nr +nd +np --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18184 ../doc/gforth.texi:18185
#, no-wrap
msgid "f>buf-rdp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18188
#, no-wrap
msgid "@code{f>buf-rdp} ( @i{rf c-addr +nr +nd +np --  }) gforth-0.6 ``f>buf-rdp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18192
msgid ""
"Convert @i{rf} into a string at @i{c-addr nr}.  The conversion rules and the "
"meanings of @i{nr nd np} are the same as for @code{f.rdp}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18197
msgid ""
"There is also a primitive used for implementing higher-level FP-to-string "
"words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18198
#, no-wrap
msgid "represent ( @var{ r c-addr u -- n f1 f2  } ) floating"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18199 ../doc/gforth.texi:18200
#, no-wrap
msgid "represent"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18203
#, no-wrap
msgid "@code{represent} ( @i{r c-addr u -- n f1 f2 }) floating ``represent''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18208
msgid ""
"Convert the decimal significand (aka mantissa) of @i{r} into a string in "
"buffer @i{c-addr u}; @i{n} is the exponent, @i{f1} is true if @i{r} is "
"negative, and @i{f2} is true if @i{r} is valid (a finite number in Gforth)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18214
#, no-wrap
msgid "cr ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18215 ../doc/gforth.texi:18216
#, no-wrap
msgid "cr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18219
#, no-wrap
msgid "@code{cr} ( @i{--  }) core ``c-r''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18224
msgid ""
"Output a newline (of the favourite kind of the host OS).  Note that due to "
"the way the Forth command line interpreter inserts newlines, the preferred "
"way to use @code{cr} is at the start of a piece of text; e.g., @code{cr .\" "
"hello, world\"}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18226
#, no-wrap
msgid "space ( @var{ --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18227 ../doc/gforth.texi:18228
#, no-wrap
msgid "space"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18231
#, no-wrap
msgid "@code{space} ( @i{--  }) core ``space''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18233
msgid "Display one space."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18235
#, no-wrap
msgid "spaces ( @var{ u --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18236 ../doc/gforth.texi:18237
#, no-wrap
msgid "spaces"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18240
#, no-wrap
msgid "@code{spaces} ( @i{u --  }) core ``spaces''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18242
msgid "Display @var{u} spaces."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18244
#, no-wrap
msgid "out ( @var{ -- addr   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18245 ../doc/gforth.texi:18246
#, no-wrap
msgid "out"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18249
#, no-wrap
msgid "@code{out} ( @i{-- addr  }) gforth-1.0 ``out''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18257
msgid ""
"@code{Addr} contains a number that tries to give the position of the cursor "
"within the current line on the user output device: It resets to 0 on "
"@code{cr}, increases by the number of characters by @code{type} and "
"@code{emit}, and decreases on @code{backspaces}.  Unfortunately, it does not "
"take into account tabs, multi-byte characters, or the existence of Unicode "
"characters with width 0 and 2, so it only works for simple cases."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18259
#, no-wrap
msgid ".\\\" ( @var{ compilation 'ccc\"' -- ; run-time --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18260 ../doc/gforth.texi:18261
#, no-wrap
msgid ".\\\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:18264
#, no-wrap
msgid "@code{.\\\"} ( @i{compilation 'ccc\"' -- ; run-time --  }) gforth-0.6 ``dot-backslash-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18267
msgid ""
"Like @code{.\"}, but translates C-like \\-escape-sequences (see @code{S\\"
"\"})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18269
#, no-wrap
msgid ".\" ( @var{ compilation 'ccc\"' -- ; run-time --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18270 ../doc/gforth.texi:18271
#, no-wrap
msgid ".\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:18274
#, no-wrap
msgid "@code{.\"} ( @i{compilation 'ccc\"' -- ; run-time --  }) core ``dot-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18279
msgid ""
"Compilation: Parse a string @i{ccc} delimited by a \" (double quote). At run-"
"time, display the string. Interpretation semantics for this word are "
"undefined in standard Forth. Gforth's interpretation semantics are to "
"display the string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18281
#, no-wrap
msgid ".( ( @var{ compilation&interpretation \"ccc<paren>\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18282 ../doc/gforth.texi:18283
#, no-wrap
msgid ".("
msgstr ""

#. type: format
#: ../doc/gforth.texi:18286
#, no-wrap
msgid "@code{.(} ( @i{compilation&interpretation \"ccc<paren>\" --  }) core-ext ``dot-paren''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18291
msgid ""
"Compilation and interpretation semantics: Parse a string @i{ccc} delimited "
"by a @code{)} (right parenthesis). Display the string. This is often used to "
"display progress information during compilation; see examples below."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18297
msgid ""
"If you don't want to worry about wether to use @code{.( hello)} or @code{.\" "
"hello\"}, you can write @code{\"hello\" type}, which gives you what you "
"usually want (but is less portable to other Forth systems)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18300
msgid ""
"As an example, consider the following text, stored in a file @file{test.fs}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18308
#, no-wrap
msgid ""
".( text-1)\n"
": my-word\n"
"  .\" text-2\" cr\n"
"  .( text-3)\n"
"  \"text-4\" type\n"
";\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18311
#, no-wrap
msgid ""
".\" text-5\"\n"
"\"text-6\" type\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18314
msgid "When you load this code into Gforth, the following output is generated:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18317
#, no-wrap
msgid "@kbd{include test.fs @key{RET}} text-1text-3text-5text-6 ok\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:18324
msgid ""
"Messages @code{text-1} and @code{text-3} are displayed because @code{.(} is "
"an immediate word; it behaves in the same way whether it is used inside or "
"outside a colon definition."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:18327
msgid ""
"Message @code{text-5} is displayed because of Gforth's added interpretation "
"semantics for @code{.\"}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:18330
msgid ""
"Message @code{text-6} is displayed because @code{\"text-6\" type} is "
"interpreted."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:18334
msgid ""
"Message @code{text-2} is @i{not} displayed, because the text interpreter "
"performs the compilation semantics for @code{.\"} within the definition of "
"@code{my-word}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:18337
msgid ""
"Message @code{text-4} is @i{not} displayed, because @code{\"text-4\" type} "
"is compiled into @code{my-word}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18342
#, no-wrap
msgid "characters - displaying"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18343
#, no-wrap
msgid "character strings - displaying"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18345
#, no-wrap
msgid "type ( @var{ c-addr u --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18346 ../doc/gforth.texi:18347
#, no-wrap
msgid "type"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18350
#, no-wrap
msgid "@code{type} ( @i{c-addr u --  }) core ``type''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18353
msgid ""
"If @var{u}>0, display @var{u} characters from a string starting with the "
"character stored at @var{c-addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18355
#, no-wrap
msgid "xemit ( @var{ xc --   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18356 ../doc/gforth.texi:18357
#, no-wrap
msgid "xemit"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18360
#, no-wrap
msgid "@code{xemit} ( @i{xc --  }) xchar ``x-emit''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18362
msgid "Prints an xchar on the terminal."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18364
#, no-wrap
msgid "emit ( @var{ c --   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18365 ../doc/gforth.texi:18366
#, no-wrap
msgid "emit"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18369
#, no-wrap
msgid "@code{emit} ( @i{c --  }) core ``emit''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18372
msgid ""
"Send the byte @i{c} to the current output; for ASCII characters, @code{emit} "
"is equivalent to @code{xemit}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18374
#, no-wrap
msgid "typewhite ( @var{ addr n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18375 ../doc/gforth.texi:18376
#, no-wrap
msgid "typewhite"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18379
#, no-wrap
msgid "@code{typewhite} ( @i{addr n --  }) gforth-0.2 ``typewhite''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18381
msgid "Like type, but white space is printed instead of the characters."
msgstr ""

#. type: node
#: ../doc/gforth.texi:18385 ../doc/gforth.texi:18574 ../doc/gforth.texi:18575
#: ../doc/gforth.texi:19022
#, no-wrap
msgid "Single-key input"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18387
#, no-wrap
msgid "output to terminal"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18388
#, no-wrap
msgid "terminal output"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18392
msgid ""
"If you are outputting to a terminal, you may want to control the positioning "
"of the cursor:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18392
#, no-wrap
msgid "cursor positioning"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18394
#, no-wrap
msgid "at-xy ( @var{ x y --   } ) facility"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18395 ../doc/gforth.texi:18396
#, no-wrap
msgid "at-xy"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18399
#, no-wrap
msgid "@code{at-xy} ( @i{x y --  }) facility ``at-x-y''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18402
msgid ""
"Put the curser at position @i{x y}.  The top left-hand corner of the display "
"is at 0 0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18404
#, no-wrap
msgid "at-deltaxy ( @var{ dx dy --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18405 ../doc/gforth.texi:18406
#, no-wrap
msgid "at-deltaxy"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18409
#, no-wrap
msgid "@code{at-deltaxy} ( @i{dx dy --  }) gforth-0.7 ``at-deltaxy''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18412
msgid "With the current position at @i{x y}, put the cursor at @i{x+dx y+dy}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18417
msgid ""
"In order to know where to position the cursor, it is often helpful to know "
"the size of the screen:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18417
#, no-wrap
msgid "terminal size"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18419
#, no-wrap
msgid "form ( @var{ -- nlines ncols   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18420 ../doc/gforth.texi:18421
#, no-wrap
msgid "form"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18424
#, no-wrap
msgid "@code{form} ( @i{-- nlines ncols  }) gforth-0.2 ``form''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18428
msgid "And sometimes you want to use:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18428
#, no-wrap
msgid "clear screen"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18430
#, no-wrap
msgid "page ( @var{ --   } ) facility"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18431 ../doc/gforth.texi:18432
#, no-wrap
msgid "page"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18435
#, no-wrap
msgid "@code{page} ( @i{--  }) facility ``page''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18437
msgid "Clear the screen"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18442
msgid ""
"Note that on non-terminals you should use @code{12 emit}, not @code{page}, "
"to get a form feed."
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:18443
#, no-wrap
msgid "Color output"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18447
msgid ""
"The following words are used to create (semantic) colorful output; further "
"output is produced in the color and style given by the word; the actual "
"color and style depends on the theme (see below)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18448
#, no-wrap
msgid "default-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18449 ../doc/gforth.texi:18450
#, no-wrap
msgid "default-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18453
#, no-wrap
msgid "@code{default-color} ( @i{--  }) gforth-1.0 ``default-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18455
msgid "use system-default color"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18457
#, no-wrap
msgid "error-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18458 ../doc/gforth.texi:18459
#, no-wrap
msgid "error-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18462
#, no-wrap
msgid "@code{error-color} ( @i{--  }) gforth-1.0 ``error-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18464
msgid "error color: red"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18466
#, no-wrap
msgid "error-hl-inv ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18467 ../doc/gforth.texi:18468
#, no-wrap
msgid "error-hl-inv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18471
#, no-wrap
msgid "@code{error-hl-inv} ( @i{--  }) gforth-1.0 ``error-hl-inv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18473 ../doc/gforth.texi:18527
msgid "color mod for error highlight inverse"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18475
#, no-wrap
msgid "error-hl-ul ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18476 ../doc/gforth.texi:18477
#, no-wrap
msgid "error-hl-ul"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18480
#, no-wrap
msgid "@code{error-hl-ul} ( @i{--  }) gforth-1.0 ``error-hl-ul''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18482
msgid "color mod for error highlight underline"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18484
#, no-wrap
msgid "warning-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18485 ../doc/gforth.texi:18486
#, no-wrap
msgid "warning-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18489
#, no-wrap
msgid "@code{warning-color} ( @i{--  }) gforth-1.0 ``warning-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18491
msgid "color for warnings: blue/yellow on black terminals"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18493
#, no-wrap
msgid "info-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18494 ../doc/gforth.texi:18495
#, no-wrap
msgid "info-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18498
#, no-wrap
msgid "@code{info-color} ( @i{--  }) gforth-1.0 ``info-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18500
msgid "color for info: green/cyan on black terminals"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18502
#, no-wrap
msgid "success-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18503 ../doc/gforth.texi:18504
#, no-wrap
msgid "success-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18507
#, no-wrap
msgid "@code{success-color} ( @i{--  }) gforth-1.0 ``success-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18509
msgid "color for success: green"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18511
#, no-wrap
msgid "input-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18512 ../doc/gforth.texi:18513
#, no-wrap
msgid "input-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18516
#, no-wrap
msgid "@code{input-color} ( @i{--  }) gforth-1.0 ``input-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18518
msgid "color for user-input: black/white (both bold)"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18520
#, no-wrap
msgid "status-color ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18521 ../doc/gforth.texi:18522
#, no-wrap
msgid "status-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18525
#, no-wrap
msgid "@code{status-color} ( @i{--  }) gforth-1.0 ``status-color''\n"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:18533
#, no-wrap
msgid "Color themes"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18536
msgid ""
"Depending on wether you prefer bright or dark background the foreground "
"colors-theme can be changed by:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18537
#, no-wrap
msgid "light-mode ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18538 ../doc/gforth.texi:18539
#, no-wrap
msgid "light-mode"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18542
#, no-wrap
msgid "@code{light-mode} ( @i{--  }) gforth-1.0 ``light-mode''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18544
msgid "color theme for white background"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18546
#, no-wrap
msgid "dark-mode ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18547 ../doc/gforth.texi:18548
#, no-wrap
msgid "dark-mode"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18551
#, no-wrap
msgid "@code{dark-mode} ( @i{--  }) gforth-1.0 ``dark-mode''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18553
msgid "color theme for black background"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18555
#, no-wrap
msgid "uncolored-mode ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18556 ../doc/gforth.texi:18557
#, no-wrap
msgid "uncolored-mode"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18560
#, no-wrap
msgid "@code{uncolored-mode} ( @i{--  }) gforth-1.0 ``uncolored-mode''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18562
msgid "This mode does not set colors, but uses the default ones."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18564
#, no-wrap
msgid "magenta-input ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18565 ../doc/gforth.texi:18566
#, no-wrap
msgid "magenta-input"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18569
#, no-wrap
msgid "@code{magenta-input} ( @i{--  }) gforth-1.0 ``magenta-input''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18571
msgid "make input color easily recognizable (useful in presentations)"
msgstr ""

#. type: node
#: ../doc/gforth.texi:18574 ../doc/gforth.texi:19022 ../doc/gforth.texi:19023
#: ../doc/gforth.texi:19169
#, no-wrap
msgid "Line input and conversion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18576
#, no-wrap
msgid "single-key input"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:18577
#, no-wrap
msgid "input, single-key"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18582
msgid ""
"If you want to get a single printable character, you can use @code{key}; to "
"check whether a character is available for @code{key}, you can use "
"@code{key?}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18583
#, no-wrap
msgid "key ( @var{ -- char   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18584 ../doc/gforth.texi:18585
#, no-wrap
msgid "key"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18588
#, no-wrap
msgid "@code{key} ( @i{-- char  }) core ``key''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18590
msgid "Receive (but do not display) one character, @var{char}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18592
#, no-wrap
msgid "key-ior ( @var{ -- char|ior   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18593 ../doc/gforth.texi:18594
#, no-wrap
msgid "key-ior"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18597
#, no-wrap
msgid "@code{key-ior} ( @i{-- char|ior  }) gforth-1.0 ``key-ior''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18600
msgid ""
"Receive (but do not display) one character, @var{char}, in case of an error "
"or interrupt, return the negative @var{ior} instead."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18602
#, no-wrap
msgid "key? ( @var{ -- flag   } ) facility"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18603 ../doc/gforth.texi:18604
#, no-wrap
msgid "key?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18607
#, no-wrap
msgid "@code{key?} ( @i{-- flag  }) facility ``key-question''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18613
msgid ""
"Determine whether a character is available. If a character is available, "
"@var{flag} is true; the next call to @code{key} will yield the character. "
"Once @code{key?} returns true, subsequent calls to @code{key?} before "
"calling @code{key} or @code{ekey} will also return true."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18615
#, no-wrap
msgid "xkey? ( @var{ -- flag   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18616 ../doc/gforth.texi:18617
#, no-wrap
msgid "xkey?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18620
#, no-wrap
msgid "@code{xkey?} ( @i{-- flag  }) xchar ``x-key-query''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18627
msgid ""
"If you want to process a mix of printable and non-printable characters, you "
"can do that with @code{ekey} and friends.  @code{Ekey} produces a keyboard "
"event that you have to convert into a character with @code{ekey>char} or "
"into a key identifier with @code{ekey>fkey}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18629
msgid "Typical code for using EKEY looks like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:18643
#, no-wrap
msgid ""
"ekey ekey>xchar if ( xc )\n"
"  ... \\ do something with the character\n"
"else ekey>fkey if ( key-id )\n"
"  case\n"
"    k-up                                  of ... endof\n"
"    k-f1                                  of ... endof\n"
"    k-left k-shift-mask or k-ctrl-mask or of ... endof\n"
"    ...\n"
"  endcase\n"
"else ( keyboard-event )\n"
"  drop \\ just ignore an unknown keyboard event type\n"
"then then\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18645
#, no-wrap
msgid "ekey ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18646 ../doc/gforth.texi:18647
#, no-wrap
msgid "ekey"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18650
#, no-wrap
msgid "@code{ekey} ( @i{-- u  }) facility-ext ``e-key''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18652
msgid "Receive a keyboard event @var{u} (encoding implementation-defined)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18654
#, no-wrap
msgid "ekey>xchar ( @var{ u -- u false | xc true   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18655 ../doc/gforth.texi:18656
#, no-wrap
msgid "ekey>xchar"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18659
#, no-wrap
msgid "@code{ekey>xchar} ( @i{u -- u false | xc true  }) xchar-ext ``e-key-to-x-char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18662
msgid "Convert keyboard event @var{u} into xchar @code{xc} if possible."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18664
#, no-wrap
msgid "ekey>char ( @var{ u -- u false | c true   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18665 ../doc/gforth.texi:18666
#, no-wrap
msgid "ekey>char"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18669
#, no-wrap
msgid "@code{ekey>char} ( @i{u -- u false | c true  }) facility-ext ``e-key-to-char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18674
msgid ""
"Convert keyboard event @var{u} into character @code{c} if possible.  Note "
"that non-ASCII characters produce @code{false} from both @code{ekey>char} "
"and @code{ekey>fkey}.  Instead of @code{ekey>char}, use @code{ekey>xchar} if "
"available."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18676
#, no-wrap
msgid "ekey>fkey ( @var{ u1 -- u2 f   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18677 ../doc/gforth.texi:18678
#, no-wrap
msgid "ekey>fkey"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18681
#, no-wrap
msgid "@code{ekey>fkey} ( @i{u1 -- u2 f  }) facility-ext ``e-key-to-f-key''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18685
msgid ""
"If u1 is a keyboard event in the special key set, convert keyboard event "
"@var{u1} into key id @var{u2} and return true; otherwise return @var{u1} and "
"false."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18687
#, no-wrap
msgid "ekey? ( @var{ -- flag   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18688 ../doc/gforth.texi:18689
#, no-wrap
msgid "ekey?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18692
#, no-wrap
msgid "@code{ekey?} ( @i{-- flag  }) facility-ext ``e-key-question''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18694
msgid "True if a keyboard event is available."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18698
msgid "The key identifiers for cursor keys are:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18699
#, no-wrap
msgid "k-left ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18700 ../doc/gforth.texi:18701
#, no-wrap
msgid "k-left"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18704
#, no-wrap
msgid "@code{k-left} ( @i{-- u  }) facility-ext ``k-left''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18706
#, no-wrap
msgid "k-right ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18707 ../doc/gforth.texi:18708
#, no-wrap
msgid "k-right"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18711
#, no-wrap
msgid "@code{k-right} ( @i{-- u  }) facility-ext ``k-right''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18713
#, no-wrap
msgid "k-up ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18714 ../doc/gforth.texi:18715
#, no-wrap
msgid "k-up"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18718
#, no-wrap
msgid "@code{k-up} ( @i{-- u  }) facility-ext ``k-up''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18720
#, no-wrap
msgid "k-down ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18721 ../doc/gforth.texi:18722
#, no-wrap
msgid "k-down"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18725
#, no-wrap
msgid "@code{k-down} ( @i{-- u  }) facility-ext ``k-down''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18727
#, no-wrap
msgid "k-home ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18728 ../doc/gforth.texi:18729
#, no-wrap
msgid "k-home"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18732
#, no-wrap
msgid "@code{k-home} ( @i{-- u  }) facility-ext ``k-home''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18734
msgid "aka Pos1"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18736
#, no-wrap
msgid "k-end ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18737 ../doc/gforth.texi:18738
#, no-wrap
msgid "k-end"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18741
#, no-wrap
msgid "@code{k-end} ( @i{-- u  }) facility-ext ``k-end''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18743
#, no-wrap
msgid "k-prior ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18744 ../doc/gforth.texi:18745
#, no-wrap
msgid "k-prior"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18748
#, no-wrap
msgid "@code{k-prior} ( @i{-- u  }) facility-ext ``k-prior''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18750
msgid "aka PgUp"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18752
#, no-wrap
msgid "k-next ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18753 ../doc/gforth.texi:18754
#, no-wrap
msgid "k-next"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18757
#, no-wrap
msgid "@code{k-next} ( @i{-- u  }) facility-ext ``k-next''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18759
msgid "aka PgDn"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18761
#, no-wrap
msgid "k-insert ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18762 ../doc/gforth.texi:18763
#, no-wrap
msgid "k-insert"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18766
#, no-wrap
msgid "@code{k-insert} ( @i{-- u  }) facility-ext ``k-insert''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18768
#, no-wrap
msgid "k-delete ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18769 ../doc/gforth.texi:18770
#, no-wrap
msgid "k-delete"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18773
#, no-wrap
msgid "@code{k-delete} ( @i{-- u  }) facility-ext ``k-delete''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18775
msgid "the @key{DEL} key on my xterm, not backspace"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18779
msgid "The key identifiers for function keys (aka keypad keys) are:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18780
#, no-wrap
msgid "k-f1 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18781 ../doc/gforth.texi:18782
#, no-wrap
msgid "k-f1"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18785
#, no-wrap
msgid "@code{k-f1} ( @i{-- u  }) facility-ext ``k-f-1''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18787
#, no-wrap
msgid "k-f2 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18788 ../doc/gforth.texi:18789
#, no-wrap
msgid "k-f2"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18792
#, no-wrap
msgid "@code{k-f2} ( @i{-- u  }) facility-ext ``k-f-2''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18794
#, no-wrap
msgid "k-f3 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18795 ../doc/gforth.texi:18796
#, no-wrap
msgid "k-f3"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18799
#, no-wrap
msgid "@code{k-f3} ( @i{-- u  }) facility-ext ``k-f-3''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18801
#, no-wrap
msgid "k-f4 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18802 ../doc/gforth.texi:18803
#, no-wrap
msgid "k-f4"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18806
#, no-wrap
msgid "@code{k-f4} ( @i{-- u  }) facility-ext ``k-f-4''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18808
#, no-wrap
msgid "k-f5 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18809 ../doc/gforth.texi:18810
#, no-wrap
msgid "k-f5"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18813
#, no-wrap
msgid "@code{k-f5} ( @i{-- u  }) facility-ext ``k-f-5''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18815
#, no-wrap
msgid "k-f6 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18816 ../doc/gforth.texi:18817
#, no-wrap
msgid "k-f6"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18820
#, no-wrap
msgid "@code{k-f6} ( @i{-- u  }) facility-ext ``k-f-6''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18822
#, no-wrap
msgid "k-f7 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18823 ../doc/gforth.texi:18824
#, no-wrap
msgid "k-f7"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18827
#, no-wrap
msgid "@code{k-f7} ( @i{-- u  }) facility-ext ``k-f-7''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18829
#, no-wrap
msgid "k-f8 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18830 ../doc/gforth.texi:18831
#, no-wrap
msgid "k-f8"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18834
#, no-wrap
msgid "@code{k-f8} ( @i{-- u  }) facility-ext ``k-f-8''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18836
#, no-wrap
msgid "k-f9 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18837 ../doc/gforth.texi:18838
#, no-wrap
msgid "k-f9"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18841
#, no-wrap
msgid "@code{k-f9} ( @i{-- u  }) facility-ext ``k-f-9''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18843
#, no-wrap
msgid "k-f10 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18844 ../doc/gforth.texi:18845
#, no-wrap
msgid "k-f10"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18848
#, no-wrap
msgid "@code{k-f10} ( @i{-- u  }) facility-ext ``k-f-10''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18850
#, no-wrap
msgid "k-f11 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18851 ../doc/gforth.texi:18852
#, no-wrap
msgid "k-f11"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18855
#, no-wrap
msgid "@code{k-f11} ( @i{-- u  }) facility-ext ``k-f-11''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18857
#, no-wrap
msgid "k-f12 ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18858 ../doc/gforth.texi:18859
#, no-wrap
msgid "k-f12"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18862
#, no-wrap
msgid "@code{k-f12} ( @i{-- u  }) facility-ext ``k-f-12''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18866
msgid "Note that @code{k-f11} and @code{k-f12} are not as widely available."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18868
msgid ""
"You can combine these key identifiers with masks for various shift keys:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18869
#, no-wrap
msgid "k-shift-mask ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18870 ../doc/gforth.texi:18871
#, no-wrap
msgid "k-shift-mask"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18874
#, no-wrap
msgid "@code{k-shift-mask} ( @i{-- u  }) facility-ext ``k-shift-mask''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18876
#, no-wrap
msgid "k-ctrl-mask ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18877 ../doc/gforth.texi:18878
#, no-wrap
msgid "k-ctrl-mask"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18881
#, no-wrap
msgid "@code{k-ctrl-mask} ( @i{-- u  }) facility-ext ``k-ctrl-mask''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18883
#, no-wrap
msgid "k-alt-mask ( @var{ -- u   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18884 ../doc/gforth.texi:18885
#, no-wrap
msgid "k-alt-mask"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18888
#, no-wrap
msgid "@code{k-alt-mask} ( @i{-- u  }) facility-ext ``k-alt-mask''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18894
msgid ""
"There are a number of keys that have ASCII values, and therefore are "
"unlikely to be reported as special keys, but the combination of these keys "
"with shift keys may be reported as a special key:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18895
#, no-wrap
msgid "k-enter ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18896 ../doc/gforth.texi:18897
#, no-wrap
msgid "k-enter"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18900
#, no-wrap
msgid "@code{k-enter} ( @i{-- u  }) gforth-1.0 ``k-enter''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18902
#, no-wrap
msgid "k-backspace ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18903 ../doc/gforth.texi:18904
#, no-wrap
msgid "k-backspace"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18907
#, no-wrap
msgid "@code{k-backspace} ( @i{-- u  }) gforth-1.0 ``k-backspace''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18909
#, no-wrap
msgid "k-tab ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18910 ../doc/gforth.texi:18911
#, no-wrap
msgid "k-tab"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18914
#, no-wrap
msgid "@code{k-tab} ( @i{-- u  }) gforth-1.0 ``k-tab''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18918
msgid "Moreover, there the following key codes for keys and other events:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18919
#, no-wrap
msgid "k-winch ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18920 ../doc/gforth.texi:18921
#, no-wrap
msgid "k-winch"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18924
#, no-wrap
msgid "@code{k-winch} ( @i{-- u  }) gforth-1.0 ``k-winch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18926
msgid "A key code that may be generated when the user changes the window size."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18928
#, no-wrap
msgid "k-pause ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18929 ../doc/gforth.texi:18930
#, no-wrap
msgid "k-pause"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18933
#, no-wrap
msgid "@code{k-pause} ( @i{-- u  }) gforth-1.0 ``k-pause''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18935
#, no-wrap
msgid "k-mute ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18936 ../doc/gforth.texi:18937
#, no-wrap
msgid "k-mute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18940
#, no-wrap
msgid "@code{k-mute} ( @i{-- u  }) gforth-1.0 ``k-mute''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18942
#, no-wrap
msgid "k-volup ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18943 ../doc/gforth.texi:18944
#, no-wrap
msgid "k-volup"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18947
#, no-wrap
msgid "@code{k-volup} ( @i{-- u  }) gforth-1.0 ``k-volup''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18949
#, no-wrap
msgid "k-voldown ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18950 ../doc/gforth.texi:18951
#, no-wrap
msgid "k-voldown"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18954
#, no-wrap
msgid "@code{k-voldown} ( @i{-- u  }) gforth-1.0 ``k-voldown''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18956
#, no-wrap
msgid "k-sel ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18957 ../doc/gforth.texi:18958
#, no-wrap
msgid "k-sel"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18961
#, no-wrap
msgid "@code{k-sel} ( @i{-- u  }) gforth-1.0 ``k-sel''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18963
msgid "keycode for Android selections"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18965
#, no-wrap
msgid "k-eof ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18966 ../doc/gforth.texi:18967
#, no-wrap
msgid "k-eof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:18970
#, no-wrap
msgid "@code{k-eof} ( @i{-- u  }) gforth-1.0 ``k-eof''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:18979
msgid ""
"Note that, even if a Forth system has @code{ekey>fkey} and the key "
"identifier words, the keys are not necessarily available or it may not "
"necessarily be able to report all the keys and all the possible combinations "
"with shift masks.  Therefore, write your programs in such a way that they "
"are still useful even if the keys and key combinations cannot be pressed or "
"are not recognized."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18986
msgid ""
"Examples: Older keyboards often do not have an F11 and F12 key.  If you run "
"Gforth in an xterm, the xterm catches a number of combinations (e.g., "
"@key{Shift-Up}), and never passes it to Gforth.  Finally, Gforth currently "
"does not recognize and report combinations with multiple shift keys (so the "
"@key{shift-ctrl-left} case in the example above would never be entered)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18993
msgid ""
"Gforth recognizes various keys available on ANSI terminals (in MS-DOS you "
"need the ANSI.SYS driver to get that behaviour); it works by recognizing the "
"escape sequences that ANSI terminals send when such a key is pressed.  If "
"you have a terminal that sends other escape sequences, you will not get "
"useful results on Gforth.  Other Forth systems may work in a different way."
msgstr ""

#. type: table
#: ../doc/gforth.texi:18996
msgid "Gforth also provides a few words for outputting names of function keys:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:18997
#, no-wrap
msgid "fkey. ( @var{ u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:18998 ../doc/gforth.texi:18999
#, no-wrap
msgid "fkey."
msgstr ""

#. type: format
#: ../doc/gforth.texi:19002
#, no-wrap
msgid "@code{fkey.} ( @i{u --  }) gforth-1.0 ``fkey-dot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19006
msgid ""
"Print a string representation for the function key @i{u}.  @i{U} must be a "
"function key (possibly with modifier masks), otherwise there may be an "
"exception."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19008
#, no-wrap
msgid "simple-fkey-string ( @var{ u1 -- c-addr u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19009 ../doc/gforth.texi:19010
#, no-wrap
msgid "simple-fkey-string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19013
#, no-wrap
msgid "@code{simple-fkey-string} ( @i{u1 -- c-addr u  }) gforth-1.0 ``simple-fkey-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19018
msgid ""
"@i{c-addr u} is the string name of the function key @i{u1}.  Only works for "
"simple function keys without modifier masks.  Any @i{u1} that does not "
"correspond to a simple function key currently produces an exception."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19024
#, no-wrap
msgid "line input from terminal"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19025
#, no-wrap
msgid "input, linewise from terminal"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19026
#, no-wrap
msgid "convertin strings to numbers"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19027
#, no-wrap
msgid "I/O - see input"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19031
msgid ""
"For ways of storing character strings in memory see @ref{String "
"representations}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19036
msgid "Words for inputting one line from the keyboard:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19037
#, no-wrap
msgid "accept ( @var{ c-addr +n1 -- +n2   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19038 ../doc/gforth.texi:19039
#, no-wrap
msgid "accept"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19042
#, no-wrap
msgid "@code{accept} ( @i{c-addr +n1 -- +n2  }) core ``accept''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19049
msgid ""
"Get a string of up to @var{n1} characters from the user input device and "
"store it at @var{c-addr}.  @var{n2} is the length of the received string. "
"The user indicates the end by pressing @key{RET}.  Gforth supports all the "
"editing functions available on the Forth command line (including history and "
"word completion) in @code{accept}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19051
#, no-wrap
msgid "edit-line ( @var{ c-addr n1 n2 -- n3   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19052 ../doc/gforth.texi:19053
#, no-wrap
msgid "edit-line"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19056
#, no-wrap
msgid "@code{edit-line} ( @i{c-addr n1 n2 -- n3  }) gforth-0.6 ``edit-line''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19059
msgid ""
"edit the string with length @var{n2} in the buffer @var{c-addr n1}, like "
"@code{accept}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19063
msgid "Conversion words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19064
#, no-wrap
msgid "s>number? ( @var{ addr u -- d f   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19065 ../doc/gforth.texi:19066
#, no-wrap
msgid "s>number?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19069
#, no-wrap
msgid "@code{s>number?} ( @i{addr u -- d f  }) gforth-0.5 ``s>number?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19071
msgid "converts string addr u into d, flag indicates success"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19073
#, no-wrap
msgid "s>unumber? ( @var{ c-addr u -- ud flag   } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19074 ../doc/gforth.texi:19075
#, no-wrap
msgid "s>unumber?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19078
#, no-wrap
msgid "@code{s>unumber?} ( @i{c-addr u -- ud flag  }) gforth-0.5 ``s>unumber?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19080
msgid "converts string c-addr u into ud, flag indicates success"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19082
#, no-wrap
msgid ">number ( @var{ ud1 c-addr1 u1 -- ud2 c-addr2 u2   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19083 ../doc/gforth.texi:19084
#, no-wrap
msgid ">number"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19087
#, no-wrap
msgid "@code{>number} ( @i{ud1 c-addr1 u1 -- ud2 c-addr2 u2  }) core ``to-number''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19100
msgid ""
"Attempt to convert the character string @var{c-addr1 u1} to an unsigned "
"number in the current number base. The double @var{ud1} accumulates the "
"result of the conversion to form @var{ud2}. Conversion continues, left-to-"
"right, until the whole string is converted or a character that is not "
"convertable in the current number base is encountered (including + or -). "
"For each convertable character, @var{ud1} is first multiplied by the value "
"in @code{BASE} and then incremented by the value represented by the "
"character. @var{c-addr2} is the location of the first unconverted character "
"(past the end of the string if the whole string was converted). @var{u2} is "
"the number of unconverted characters in the string. Overflow is not detected."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19102
#, no-wrap
msgid ">float ( @var{ c-addr u -- f:... flag  } ) floating"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19103 ../doc/gforth.texi:19104
#, no-wrap
msgid ">float"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19107
#, no-wrap
msgid "@code{>float} ( @i{c-addr u -- f:... flag }) floating ``to-float''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19114
msgid ""
"Actual stack effect: ( c_addr u -- r t | f ).  Attempt to convert the "
"character string @i{c-addr u} to internal floating-point representation. If "
"the string represents a valid floating-point number, @i{r} is placed on the "
"floating-point stack and @i{flag} is true. Otherwise, @i{flag} is false. A "
"string of blanks is a special case and represents the floating-point number "
"0."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19115
#, no-wrap
msgid ">float1 ( @var{ c-addr u c -- f:... flag  } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19116 ../doc/gforth.texi:19117
#, no-wrap
msgid ">float1"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19120
#, no-wrap
msgid "@code{>float1} ( @i{c-addr u c -- f:... flag }) gforth-1.0 ``to-float1''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19128
msgid ""
"Actual stack effect: ( c_addr u c -- r t | f ).  Attempt to convert the "
"character string @i{c-addr u} to internal floating-point representation, "
"with @i{c} being the decimal separator.  If the string represents a valid "
"floating-point number, @i{r} is placed on the floating-point stack and "
"@i{flag} is true. Otherwise, @i{flag} is false. A string of blanks is a "
"special case and represents the floating-point number 0."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19132
msgid "Obsolescent input and conversion words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19133
#, no-wrap
msgid "convert ( @var{ ud1 c-addr1 -- ud2 c-addr2   } ) core-ext-obsolescent"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19134 ../doc/gforth.texi:19135
#, no-wrap
msgid "convert"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19138
#, no-wrap
msgid "@code{convert} ( @i{ud1 c-addr1 -- ud2 c-addr2  }) core-ext-obsolescent ``convert''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19140
msgid "Obsolescent: superseded by @code{>number}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19142
#, no-wrap
msgid "expect ( @var{ c-addr +n --   } ) core-ext-obsolescent"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19143 ../doc/gforth.texi:19144
#, no-wrap
msgid "expect"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19147
#, no-wrap
msgid "@code{expect} ( @i{c-addr +n --  }) core-ext-obsolescent ``expect''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19155
msgid ""
"Receive a string of at most @i{+n} characters, and store it in memory "
"starting at @i{c-addr}. The string is displayed. Input terminates when the "
"<return> key is pressed or @i{+n} characters have been received. The normal "
"Gforth line editing capabilites are available. The length of the string is "
"stored in @code{span}; it does not include the <return> character. "
"OBSOLESCENT: superceeded by @code{accept}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19157
#, no-wrap
msgid "span ( @var{ -- c-addr   } ) core-ext-obsolescent"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19158 ../doc/gforth.texi:19159
#, no-wrap
msgid "span"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19162
#, no-wrap
msgid "@code{span} ( @i{-- c-addr  }) core-ext-obsolescent ``span''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19165
msgid ""
"@code{Variable} -- @i{c-addr} is the address of a cell that stores the "
"length of the last string received by @code{expect}. OBSOLESCENT."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19171
#, no-wrap
msgid "pipes, creating your own"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19176
msgid ""
"In addition to using Gforth in pipes created by other processes "
"(@pxref{Gforth in pipes}), you can create your own pipe with @code{open-"
"pipe}, and read from or write to it."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19177
#, no-wrap
msgid "open-pipe ( @var{ c-addr u wfam -- wfileid wior  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19178 ../doc/gforth.texi:19179
#, no-wrap
msgid "open-pipe"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19182
#, no-wrap
msgid "@code{open-pipe} ( @i{c-addr u wfam -- wfileid wior }) gforth-0.2 ``open-pipe''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19184
#, no-wrap
msgid "close-pipe ( @var{ wfileid -- wretval wior  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19185 ../doc/gforth.texi:19186
#, no-wrap
msgid "close-pipe"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19189
#, no-wrap
msgid "@code{close-pipe} ( @i{wfileid -- wretval wior }) gforth-0.2 ``close-pipe''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19198
msgid ""
"If you write to a pipe, Gforth can throw a @code{broken-pipe-error}; if you "
"don't catch this exception, Gforth will catch it and exit, usually silently "
"(@pxref{Gforth in pipes}).  Since you probably do not want this, you should "
"wrap a @code{catch} or @code{try} block around the code from @code{open-"
"pipe} to @code{close-pipe}, so you can deal with the problem yourself, and "
"then return to regular processing."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19199
#, no-wrap
msgid "broken-pipe-error ( @var{ -- n   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19200 ../doc/gforth.texi:19201
#, no-wrap
msgid "broken-pipe-error"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19204
#, no-wrap
msgid "@code{broken-pipe-error} ( @i{-- n  }) gforth-0.6 ``broken-pipe-error''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19206
msgid "the error number for a broken pipe"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19223
msgid ""
"ASCII is only appropriate for the English language. Most western languages "
"however fit somewhat into the Forth frame, since a byte is sufficient to "
"encode the few special characters in each (though not always the same "
"encoding can be used; latin-1 is most widely used, though). For other "
"languages, different char-sets have to be used, several of them variable-"
"width.  To deal with this problem, characters are often represented as "
"Unicode codepoints on the stack, and as UTF-8 byte strings in memory.  An "
"Unicode codepoint often represents one application-level character, but "
"Unicode also supports decomposed characters that consist of several code "
"points, e.g., a base letter and a combining diacritical mark."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19231
msgid ""
"An Unicode codepoint can consume more than one byte in memory, so we adjust "
"our terminology: A char is a raw byte in memory or a value in the range "
"0-255 on the stack.  An xchar (for extended char) stands for one codepoint; "
"it is represented by one or more bytes in memory and may have larger values "
"on the stack.  ASCII characters are the same as chars and as xchars: values "
"in the range 0-127, and a single byte with that value in memory."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19238
msgid ""
"When using UTF-8 encoding, all other codepoints take more than one byte/"
"char.  In most cases, you can just treat such characters as strings in "
"memory and don't need to use the following words, but if you want to deal "
"with individual codepoints, the following words are useful.  We currently "
"have no words for dealing with decomposed characters."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19240
msgid "The xchar words add a few data types:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:19249
msgid ""
"@var{xc} is an extended char (xchar) on the stack. It occupies one cell, and "
"is a subset of unsigned cell.  On 16 bit systems, only the BMP subset of the "
"Unicode character set (i.e., codepoints <65536) can be represented on the "
"stack.  If you represent your application characters as strings at all "
"times, you can avoid this limitation."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:19255
msgid ""
"@var{xc-addr} is the address of an xchar in memory. Alignment requirements "
"are the same as @var{c-addr}. The memory representation of an xchar differs "
"from the stack representation, and depends on the encoding used. An xchar "
"may use a variable number of chars in memory."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:19259
msgid ""
"@var{xc-addr} @var{u} is a buffer of xchars in memory, starting at @var{xc-"
"addr}, @var{u} chars (i.e., bytes, not xchars) long."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19262
#, no-wrap
msgid "xc-size ( @var{ xc -- u   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19263 ../doc/gforth.texi:19264
#, no-wrap
msgid "xc-size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19267
#, no-wrap
msgid "@code{xc-size} ( @i{xc -- u  }) xchar ``x-c-size''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19269
msgid "Computes the memory size of the xchar @var{xc} in chars."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19271
#, no-wrap
msgid "x-size ( @var{ xc-addr u1 -- u2   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19272 ../doc/gforth.texi:19273
#, no-wrap
msgid "x-size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19276
#, no-wrap
msgid "@code{x-size} ( @i{xc-addr u1 -- u2  }) xchar ``x-size''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19279
msgid ""
"Computes the memory size of the first xchar stored at @var{xc-addr} in chars."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19281
#, no-wrap
msgid "xc@@ ( @var{ xc-addr -- xc   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19282 ../doc/gforth.texi:19283
#, no-wrap
msgid "xc@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19286
#, no-wrap
msgid "@code{xc@@} ( @i{xc-addr -- xc  }) xchar-ext ``xc-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19288
msgid "Fetchs the xchar @var{xc} at @var{xc-addr1}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19290
#, no-wrap
msgid "xc@@+ ( @var{ xc-addr1 -- xc-addr2 xc   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19291 ../doc/gforth.texi:19292
#, no-wrap
msgid "xc@@+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19295
#, no-wrap
msgid "@code{xc@@+} ( @i{xc-addr1 -- xc-addr2 xc  }) xchar ``x-c-fetch-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19298
msgid ""
"Fetchs the xchar @var{xc} at @var{xc-addr1}. @var{xc-addr2} points to the "
"first memory location after @var{xc}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19300
#, no-wrap
msgid "xc@@+? ( @var{ xc-addr1 u1 -- xc-addr2 u2 xc   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19301 ../doc/gforth.texi:19302
#, no-wrap
msgid "xc@@+?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19305
#, no-wrap
msgid "@code{xc@@+?} ( @i{xc-addr1 u1 -- xc-addr2 u2 xc  }) gforth-experimental ``x-c-fetch-plus-query''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19308
msgid ""
"Fetchs the first xchar @var{xc} of the string @var{xc-addr1 u1}. @var{xc-"
"addr2 u2} is the remaining string after @var{xc}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19310
#, no-wrap
msgid "xc!+? ( @var{ xc xc-addr1 u1 -- xc-addr2 u2 f   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19311 ../doc/gforth.texi:19312
#, no-wrap
msgid "xc!+?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19315
#, no-wrap
msgid "@code{xc!+?} ( @i{xc xc-addr1 u1 -- xc-addr2 u2 f  }) xchar ``x-c-store-plus-query''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19323
msgid ""
"Stores the xchar @var{xc} into the buffer starting at address @var{xc-"
"addr1}, @var{u1} chars large. @var{xc-addr2} points to the first memory "
"location after @var{xc}, @var{u2} is the remaining size of the buffer. If "
"the xchar @var{xc} did fit into the buffer, @var{f} is true, otherwise "
"@var{f} is false, and @var{xc-addr2} @var{u2} equal @var{xc-addr1} @var{u1}. "
"XC!+? is safe for buffer overflows, and therefore preferred over XC!+."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19325
#, no-wrap
msgid "xc!+ ( @var{ xc xc-addr1 -- xc-addr2   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19326 ../doc/gforth.texi:19327
#, no-wrap
msgid "xc!+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19330
#, no-wrap
msgid "@code{xc!+} ( @i{xc xc-addr1 -- xc-addr2  }) xchar ``x-c-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19336
msgid ""
"Stores the xchar @var{xc} at @var{xc-addr1}. @var{xc-addr2} is the next "
"unused address in the buffer.  Note that this writes up to 4 bytes, so you "
"need at least 3 bytes of padding after the end of the buffer to avoid "
"overwriting useful data if you only check the address against the end of the "
"buffer."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19338
#, no-wrap
msgid "xchar+ ( @var{ xc-addr1 -- xc-addr2   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19339 ../doc/gforth.texi:19340
#, no-wrap
msgid "xchar+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19343
#, no-wrap
msgid "@code{xchar+} ( @i{xc-addr1 -- xc-addr2  }) xchar ``x-char-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19346
msgid ""
"Adds the size of the xchar stored at @var{xc-addr1} to this address, giving "
"@var{xc-addr2}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19348
#, no-wrap
msgid "xchar- ( @var{ xc-addr1 -- xc-addr2   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19349 ../doc/gforth.texi:19350
#, no-wrap
msgid "xchar-"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19353
#, no-wrap
msgid "@code{xchar-} ( @i{xc-addr1 -- xc-addr2  }) xchar-ext ``x-char-minus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19357
msgid ""
"Goes backward from @var{xc_addr1} until it finds an xchar so that the size "
"of this xchar added to @var{xc_addr2} gives @var{xc_addr1}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19359
#, no-wrap
msgid "+x/string ( @var{ xc-addr1 u1 -- xc-addr2 u2   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19360 ../doc/gforth.texi:19361
#, no-wrap
msgid "+x/string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19364
#, no-wrap
msgid "@code{+x/string} ( @i{xc-addr1 u1 -- xc-addr2 u2  }) xchar-ext ``plus-x-slash-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19369
msgid ""
"Step forward by one xchar in the buffer defined by address @var{xc-addr1}, "
"size @var{u1} chars. @var{xc-addr2} is the address and u2 the size in chars "
"of the remaining buffer after stepping over the first xchar in the buffer."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19371
#, no-wrap
msgid "x\\string- ( @var{ xc-addr u1 -- xc-addr u2   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19372 ../doc/gforth.texi:19373
#, no-wrap
msgid "x\\string-"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19376
#, no-wrap
msgid "@code{x\\string-} ( @i{xc-addr u1 -- xc-addr u2  }) xchar-ext ``x-backslash-string-minus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19382
msgid ""
"Step backward by one xchar in the buffer defined by address @var{xc-addr} "
"and size @var{u1} in chars, starting at the end of the buffer. @var{xc-addr} "
"is the address and @var{u2} the size in chars of the remaining buffer after "
"stepping backward over the last xchar in the buffer."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19384
#, no-wrap
msgid "-trailing-garbage ( @var{ xc-addr u1 -- xc-addr u2   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19385 ../doc/gforth.texi:19386
#, no-wrap
msgid "-trailing-garbage"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19389
#, no-wrap
msgid "@code{-trailing-garbage} ( @i{xc-addr u1 -- xc-addr u2  }) xchar-ext ``minus-trailing-garbage''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19394
msgid ""
"Examine the last XCHAR in the buffer @var{xc-addr} @var{u1}---if the "
"encoding is correct and it repesents a full char, @var{u2} equals @var{u1}, "
"otherwise, @var{u2} represents the string without the last (garbled) xchar."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19396
#, no-wrap
msgid "x-width ( @var{ xc-addr u -- n   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19397 ../doc/gforth.texi:19398
#, no-wrap
msgid "x-width"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19401
#, no-wrap
msgid "@code{x-width} ( @i{xc-addr u -- n  }) xchar-ext ``x-width''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19407
msgid ""
"@var{n} is the number of monospace ASCII chars that take the same space to "
"display as the the xchar string starting at @var{xc-addr}, using @var{u} "
"chars; assuming a monospaced display font, i.e. char width is always an "
"integer multiple of the width of an ASCII char."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19409
#, no-wrap
msgid "xkey ( @var{ -- xc   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19410 ../doc/gforth.texi:19411
#, no-wrap
msgid "xkey"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19414
#, no-wrap
msgid "@code{xkey} ( @i{-- xc  }) xchar ``x-key''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19417
msgid ""
"Reads an xchar from the terminal. This will discard all input events up to "
"the completion of the xchar."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19419
#, no-wrap
msgid "xc-width ( @var{ xc -- n   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19420 ../doc/gforth.texi:19421
#, no-wrap
msgid "xc-width"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19424
#, no-wrap
msgid "@code{xc-width} ( @i{xc -- n  }) xchar-ext ``x-c-width''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19427
msgid ""
"@var{xc} has a width of @var{n} times the width of a normal fixed-width "
"glyph."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19429
#, no-wrap
msgid "xhold ( @var{ xc --   } ) xchar-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19430 ../doc/gforth.texi:19431
#, no-wrap
msgid "xhold"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19434
#, no-wrap
msgid "@code{xhold} ( @i{xc --  }) xchar-ext ``x-hold''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19437
msgid ""
"Used between @code{<<#} and @code{#>}. Prepend @var{xc} to the pictured "
"numeric output string.  Alternatively, use @code{holds}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19439
#, no-wrap
msgid "xc, ( @var{ xchar --   } ) xchar"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19440 ../doc/gforth.texi:19441
#, no-wrap
msgid "xc,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19444
#, no-wrap
msgid "@code{xc,} ( @i{xchar --  }) xchar ``x-c-comma''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19456
msgid ""
"Programs for end users require to address those in their native language.  "
"There is a decades old proposal for such a facility that has been split from "
"other proposals for international character sets like Xchars (@pxref{Xchars "
"and Unicode}) and Substitute (@pxref{Substitute}).  Messages displayed on "
"the screen need to be translated from the native language of the developers "
"to the local languages of the user."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19462
msgid ""
"Strings subject to translation are declared with @code{L\" }@var{string}"
"@code{\"}.  This returns a locale string identifier (LSID).  LSIDs are "
"opaque types, taking a cell on the stack.  LSIDs can be translated into a "
"locale; locales are languages and country-specific variants of that language."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19463
#, no-wrap
msgid "L\" ( @var{ \"lsid<\">\" -- lsid   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19464 ../doc/gforth.texi:19465
#, no-wrap
msgid "L\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:19468
#, no-wrap
msgid "@code{L\"} ( @i{\"lsid<\">\" -- lsid  }) gforth-experimental ``l-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19472
msgid ""
"Parse a string and define a new lsid, if the string is uniquely new.  "
"Identical strings result in identical lsids, which allows to refer to the "
"same lsid from multiple locations using the same string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19474
#, no-wrap
msgid "LU\" ( @var{ \"lsid<\">\" -- lsid   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19475 ../doc/gforth.texi:19476
#, no-wrap
msgid "LU\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:19479
#, no-wrap
msgid "@code{LU\"} ( @i{\"lsid<\">\" -- lsid  }) gforth-experimental ``l-unique-quote''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19482
msgid ""
"Parse a string and always define a new lsid, even if the string is not "
"unique."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19484
#, no-wrap
msgid "native@@ ( @var{ lsid -- addr u   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19485 ../doc/gforth.texi:19486
#, no-wrap
msgid "native@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19489
#, no-wrap
msgid "@code{native@@} ( @i{lsid -- addr u  }) gforth-experimental ``native-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19491
msgid "fetch native string from an @var{lsid}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19493
#, no-wrap
msgid "locale@@ ( @var{ lsid -- addr u   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19494 ../doc/gforth.texi:19495
#, no-wrap
msgid "locale@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19498
#, no-wrap
msgid "@code{locale@@} ( @i{lsid -- addr u  }) gforth-experimental ``locale-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19500
msgid "fetch the localized string in the current language and country"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19502
#, no-wrap
msgid "locale! ( @var{ addr u lsid --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19503 ../doc/gforth.texi:19504
#, no-wrap
msgid "locale!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19507
#, no-wrap
msgid "@code{locale!} ( @i{addr u lsid --  }) gforth-experimental ``locale-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19510
msgid ""
"Store localized string @var{addr u} for the current locale and country in "
"@var{lsid}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19512
#, no-wrap
msgid "Language ( @var{ \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19513 ../doc/gforth.texi:19514
#, no-wrap
msgid "Language"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19517
#, no-wrap
msgid "@code{Language} ( @i{\"name\" --  }) gforth-experimental ``Language''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19519
msgid "define a locale.  Executing that locale makes it the current locale."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19521
#, no-wrap
msgid "Country ( @var{ <lang> \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19522 ../doc/gforth.texi:19523
#, no-wrap
msgid "Country"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19526
#, no-wrap
msgid "@code{Country} ( @i{<lang> \"name\" --  }) gforth-experimental ``Country''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19531
msgid ""
"define a variant (typical: country) for the current locale.  Executing that "
"locale makes it the current locale.  You can create variants of variants (a "
"country may have variants within, e.g. think of how many words for rolls/"
"buns there are in many languages)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19533
#, no-wrap
msgid "locale-file ( @var{ fid --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19534 ../doc/gforth.texi:19535
#, no-wrap
msgid "locale-file"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19538
#, no-wrap
msgid "@code{locale-file} ( @i{fid --  }) gforth-experimental ``locale-file''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19540
msgid "read lines from @var{fid} into the current locale."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19542
#, no-wrap
msgid "included-locale ( @var{ addr u --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19543 ../doc/gforth.texi:19544
#, no-wrap
msgid "included-locale"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19547
#, no-wrap
msgid "@code{included-locale} ( @i{addr u --  }) gforth-experimental ``included-locale''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19549
msgid "read lines from the file @var{addr u} into the current locale."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19551
#, no-wrap
msgid "include-locale ( @var{ \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19552 ../doc/gforth.texi:19553
#, no-wrap
msgid "include-locale"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19556
#, no-wrap
msgid "@code{include-locale} ( @i{\"name\" --  }) gforth-experimental ``include-locale''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19558
msgid "read lines from the file @var{\"name\"} into the current locale."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19560
#, no-wrap
msgid "locale-csv ( @var{ \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19561 ../doc/gforth.texi:19562
#, no-wrap
msgid "locale-csv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19565
#, no-wrap
msgid "@code{locale-csv} ( @i{\"name\" --  }) gforth-experimental ``locale-csv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19571
msgid ""
"import comma-separated value table into locales.  first line contains locale "
"names, “program” and “default” are special entries; generic languages must "
"preceed translations for specific countries.  Entries under “program” (must "
"be leftmost) are used to search for the lsid; if empty, the line number-1 is "
"the lsid index."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19573
#, no-wrap
msgid ".locale-csv ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19574 ../doc/gforth.texi:19575
#, no-wrap
msgid ".locale-csv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19578
#, no-wrap
msgid "@code{.locale-csv} ( @i{--  }) gforth-experimental ``dot-locale-csv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19580
msgid "write the locale database in CSV format to the terminal output."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19582
#, no-wrap
msgid "locale-csv-out ( @var{ \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19583 ../doc/gforth.texi:19584
#, no-wrap
msgid "locale-csv-out"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19587
#, no-wrap
msgid "@code{locale-csv-out} ( @i{\"name\" --  }) gforth-experimental ``locale-csv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19590
msgid ""
"Create file @var{\"name\"} and write the locale database out to the file "
"@var{\"name\"} in CSV format."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19603
msgid ""
"This is a simple text macro replacement facility.  Texts in the form "
"@code{\"text %macro% text\"} are processed, and the macro variables enclosed "
"in @code{'%'} are replaced with their associated strings.  Two consecutive "
"@code{%} are replaced by one @code{%}.  Macros are defined in a specific "
"wordlist, and return a string upon execution; the standard defines only one "
"way to declare macros, @code{replaces}, which creates a macro that just "
"returns a string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19604
#, no-wrap
msgid "macros-wordlist ( @var{ -- wid   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19605 ../doc/gforth.texi:19606
#, no-wrap
msgid "macros-wordlist"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19609
#, no-wrap
msgid "@code{macros-wordlist} ( @i{-- wid  }) gforth-experimental ``macros-wordlist''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19611
msgid "wordlist for string replacement macros"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19613
#, no-wrap
msgid "replaces ( @var{ addr1 len1 addr2 len2 --   } ) string-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19614 ../doc/gforth.texi:19615
#, no-wrap
msgid "replaces"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19618
#, no-wrap
msgid "@code{replaces} ( @i{addr1 len1 addr2 len2 --  }) string-ext ``replaces''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19621
msgid ""
"create a macro with name @var{addr2 len2} and content @var{addr1 len1}.  If "
"the macro already exists, just change the content."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19623
#, no-wrap
msgid ".substitute ( @var{ addr1 len1 -- n / ior   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19624 ../doc/gforth.texi:19625
#, no-wrap
msgid ".substitute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19628
#, no-wrap
msgid "@code{.substitute} ( @i{addr1 len1 -- n / ior  }) gforth-experimental ``dot-substitute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19632
msgid ""
"substitute all macros in text @var{addr1 len1} and print the result.  "
"@var{n} is the number of substitutions or, if negative, a throwable "
"@var{ior}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19634
#, no-wrap
msgid "$substitute ( @var{ addr1 len1 -- addr2 len2 n/ior   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19635 ../doc/gforth.texi:19636
#, no-wrap
msgid "$substitute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19639
#, no-wrap
msgid "@code{$substitute} ( @i{addr1 len1 -- addr2 len2 n/ior  }) gforth-experimental ``string-substitute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19643
msgid ""
"substitute all macros in text @var{addr1 len1}.  @var{n} is the number of "
"substitutions, if negative, it's a throwable @var{ior}, @var{addr2 len2} the "
"result."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19645
#, no-wrap
msgid "substitute ( @var{ addr1 len1 addr2 len2 -- addr2 len3 n/ior   } ) string-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19646 ../doc/gforth.texi:19647
#, no-wrap
msgid "substitute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19650
#, no-wrap
msgid "@code{substitute} ( @i{addr1 len1 addr2 len2 -- addr2 len3 n/ior  }) string-ext ``substitute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19655
msgid ""
"substitute all macros in text @var{addr1 len1}, and copy the result to "
"@var{addr2 len2}.  @var{n} is the number of substitutions or, if negative, a "
"throwable @var{ior}, @var{addr2 len3} the result."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19657
#, no-wrap
msgid "unescape ( @var{ addr1 u1 dest -- dest u2   } ) string-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19658 ../doc/gforth.texi:19659
#, no-wrap
msgid "unescape"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19662
#, no-wrap
msgid "@code{unescape} ( @i{addr1 u1 dest -- dest u2  }) string-ext ``unescape''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19668
msgid ""
"double all delimiters in @var{addr1 u1}, so that substitute will result in "
"the original text.  Note that the buffer @var{dest} does not have a size, as "
"in worst case, it will need just twice as many characters as @var{u1}. "
"@var{dest u2} is the resulting string."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19670
#, no-wrap
msgid "$unescape ( @var{ addr1 u1 -- addr2 u2   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19671 ../doc/gforth.texi:19672
#, no-wrap
msgid "$unescape"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19675
#, no-wrap
msgid "@code{$unescape} ( @i{addr1 u1 -- addr2 u2  }) gforth-experimental ``string-unescape''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19678
msgid ""
"same as @code{unescape}, but creates a temporary destination string with "
"@code{$tmp}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19686
msgid ""
"Comma-separated values (CSV) are a popular text format to interchange data.  "
"Gforth provides an reader in @file{csv.fs}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19687
#, no-wrap
msgid "read-csv ( @var{ addr u xt --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19688 ../doc/gforth.texi:19689
#, no-wrap
msgid "read-csv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19692
#, no-wrap
msgid "@code{read-csv} ( @i{addr u xt --  }) gforth-experimental ``read-csv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19697
msgid ""
"read CVS file @var{addr u} and execute @var{xt} for every item found.  "
"@var{xt} takes @code{( addr u col line -- )}, i.e. the string, the current "
"column (starting with 0), and the current line (starting with 1)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19703
#, no-wrap
msgid "command line arguments, OS"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19704
#, no-wrap
msgid "arguments, OS command line"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19708
msgid ""
"The usual way to pass arguments to Gforth programs on the command line is "
"via the @option{-e} option, e.g."
msgstr ""

#. type: example
#: ../doc/gforth.texi:19711
#, no-wrap
msgid "gforth -e \"123 456\" foo.fs -e bye\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19716
msgid ""
"However, you may want to interpret the command-line arguments directly.  In "
"that case, you can access the (image-specific) command-line arguments "
"through @code{next-arg}:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19717
#, no-wrap
msgid "next-arg ( @var{ -- addr u   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19718 ../doc/gforth.texi:19719
#, no-wrap
msgid "next-arg"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19722
#, no-wrap
msgid "@code{next-arg} ( @i{-- addr u  }) gforth-0.7 ``next-arg''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19725
msgid ""
"get the next argument from the OS command line, consuming it; if there is no "
"argument left, return @code{0 0}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19729
msgid "Here's an example program @file{echo.fs} for @code{next-arg}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19737
#, no-wrap
msgid ""
": echo ( -- )\n"
"    begin\n"
"\tnext-arg 2dup 0 0 d<> while\n"
"\t    type space\n"
"    repeat\n"
"    2drop ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19739
#, no-wrap
msgid "echo cr bye\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19742
msgid "This can be invoked with"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19745
#, no-wrap
msgid "gforth echo.fs hello world\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19748
msgid "and it will print"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19751
#, no-wrap
msgid "hello world\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19755
msgid ""
"The next lower level of dealing with the OS command line are the following "
"words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19756
#, no-wrap
msgid "arg ( @var{ u -- addr count   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19757 ../doc/gforth.texi:19758
#, no-wrap
msgid "arg"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19761
#, no-wrap
msgid "@code{arg} ( @i{u -- addr count  }) gforth-0.2 ``arg''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19769
msgid ""
"Return the string for the @i{u}th command-line argument; returns @code{0 0} "
"if the access is beyond the last argument.  @code{0 arg} is the program name "
"with which you started Gforth.  The next unprocessed argument is always "
"@code{1 arg}, the one after that is @code{2 arg} etc.  All arguments already "
"processed by the system are deleted.  After you have processed an argument, "
"you can delete it with @code{shift-args}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19771
#, no-wrap
msgid "shift-args ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19772 ../doc/gforth.texi:19773
#, no-wrap
msgid "shift-args"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19776
#, no-wrap
msgid "@code{shift-args} ( @i{--  }) gforth-0.7 ``shift-args''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19780
msgid ""
"@code{1 arg} is deleted, shifting all following OS command line parameters "
"to the left by 1, and reducing @code{argc @@}.  This word can change "
"@code{argv @@}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19784
msgid "Finally, at the lowest level Gforth provides the following words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19785
#, no-wrap
msgid "argc ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19786 ../doc/gforth.texi:19787
#, no-wrap
msgid "argc"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19790
#, no-wrap
msgid "@code{argc} ( @i{-- addr  }) gforth-0.2 ``argc''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19793
msgid ""
"@code{Variable} -- the number of command-line arguments (including the "
"command name).  Changed by @code{next-arg} and @code{shift-args}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19795
#, no-wrap
msgid "argv ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19796 ../doc/gforth.texi:19797
#, no-wrap
msgid "argv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19800
#, no-wrap
msgid "@code{argv} ( @i{-- addr  }) gforth-0.2 ``argv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19805
msgid ""
"@code{Variable} -- a pointer to a vector of pointers to the command-line "
"arguments (including the command-name). Each argument is represented as a C-"
"style zero-terminated string.  Changed by @code{next-arg} and @code{shift-"
"args}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19811
#, no-wrap
msgid "locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19818
msgid ""
"Local variables can make Forth programming more enjoyable and Forth programs "
"easier to read. Unfortunately, the locals of Standard Forth are laden with "
"restrictions. Therefore, we provide not only the Standard Forth locals "
"wordset, but also our own, more powerful locals wordset (we implemented the "
"Standard Forth locals wordset through our locals wordset)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19822
msgid ""
"The ideas in this section have also been published in M. Anton Ertl, "
"@cite{@uref{https://www.complang.tuwien.ac.at/papers/ertl94l.ps.gz, "
"Automatic Scoping of Local Variables}}, EuroForth '94."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19831
#, no-wrap
msgid "locals, Gforth style"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19834
msgid "Locals can be defined with"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19837
#, no-wrap
msgid "@{: local1 local2 ... -- comment :@}\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19841
#, no-wrap
msgid "@{: local1 local2 ... :@}\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19845
#, no-wrap
msgid "@{: local1 local2 ... | ulocal0 ulocal1 -- comment :@}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19848 ../doc/gforth.texi:20393
msgid "E.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19855
#, no-wrap
msgid ""
": max @{: n1 n2 -- n3 :@}\n"
" n1 n2 > if\n"
"   n1\n"
" else\n"
"   n2\n"
" endif ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19861
msgid ""
"The similarity of locals definitions with stack comments is intended. A "
"locals definition often replaces the stack comment of a word. The order of "
"the locals corresponds to the order in a stack comment and everything after "
"the @code{--} is really a comment."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19867
msgid ""
"This similarity has one disadvantage: It is too easy to confuse locals "
"declarations with stack comments, causing bugs and making them hard to find. "
"However, this problem can be avoided by appropriate coding conventions: Do "
"not use both notations in the same program. If you do, they should be "
"distinguished using additional means, e.g. by position."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19868
#, no-wrap
msgid "types of locals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19869
#, no-wrap
msgid "locals types"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19872
msgid ""
"The name of the local may be preceded by a type specifier, e.g., @code{F:} "
"for a floating point value:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19878
#, no-wrap
msgid ""
": CX* @{: F: Ar F: Ai F: Br F: Bi -- Cr Ci :@}\n"
"\\ complex multiplication\n"
" Ar Br f* Ai Bi f* f-\n"
" Ar Bi f* Ai Br f* f+ ;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19880
#, no-wrap
msgid "flavours of locals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19881
#, no-wrap
msgid "locals flavours"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19882
#, no-wrap
msgid "value-flavoured locals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19883
#, no-wrap
msgid "varue-flavoured locals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19884
#, no-wrap
msgid "variable-flavoured locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19889
msgid ""
"Gforth currently supports cells (@code{W:}, @code{WA:}, @code{W^}), doubles "
"(@code{D:}, @code{DA:}, @code{D^}), floats (@code{F:}, @code{FA:}, "
"@code{F^}), characters (@code{C:}, @code{CA:}, @code{C^}), and xts "
"(@code{xt:}, @code{xta:}) in several flavours:"
msgstr ""

#. type: item
#: ../doc/gforth.texi:19892
#, no-wrap
msgid "value-flavoured"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19895
msgid ""
"(@pxref{Values}) A value-flavoured local (defined with @code{W:}, @code{D:} "
"etc.) produces its value and can be changed with @code{TO}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:19896
#, no-wrap
msgid "varue-flavoured"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19903
msgid ""
"(@pxref{Varues}) A varue-flavoured local @i{l} (defined with @code{WA:} "
"etc.) behaves exactly like a value-flavoured local, except that you can use "
"@code{addr @i{l}} to get its address (which becomes invalid when the "
"variable's scope is left).  Currently there is no performance difference, "
"but in the long run value-flavoured locals will be significantly faster, "
"because they can reside in registers."
msgstr ""

#. type: item
#: ../doc/gforth.texi:19904
#, no-wrap
msgid "variable-flavoured"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19909
msgid ""
"(@pxref{Variables}) A variable-flavoured local (defined with @code{W^} "
"etc.)  produces its address (which becomes invalid when the variable's scope "
"is left).  E.g., the standard word @code{emit} can be defined in terms of "
"@code{type} like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19913
#, no-wrap
msgid ""
": emit @{: C^ char* -- :@}\n"
"    char* 1 type ;\n"
msgstr ""

#. type: item
#: ../doc/gforth.texi:19915
#, no-wrap
msgid "defer-flavoured"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19923
msgid ""
"(@pxref{Deferred Words}) A defer-flavoured local (defined with @code{XT:} or "
"@code{XTA:}) @code{execute}s the xt; you can use @code{action-of} "
"(@pxref{Deferred Words}) to get the xt out of a defer-flavoured local.  If "
"the local is defined with @code{xta:}, you can use @code{addr} to get the "
"address (valid until the end of the scope of the local) where the xt is "
"stored.  E.g., the standard word @code{execute} can be defined with a defer-"
"flavoured local like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19927
#, no-wrap
msgid ""
": execute @{: xt: x -- :@}\n"
"  x ;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19931
#, no-wrap
msgid "default type of locals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19932
#, no-wrap
msgid "locals, default type"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19935
msgid ""
"A local without type specifier is a @code{W:} local.  You can allow or "
"disallow the use of @code{addr} with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19936
#, no-wrap
msgid "default-wa: ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19937 ../doc/gforth.texi:19938
#, no-wrap
msgid "default-wa:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19941
#, no-wrap
msgid "@code{default-wa:} ( @i{--  }) gforth-experimental ``default-wa:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19945
msgid ""
"Allow @code{addr} on locals defined without a type specifyer.  On other "
"words, define locals without a type specifyer using @code{wa:}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:19947
#, no-wrap
msgid "default-w: ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:19948 ../doc/gforth.texi:19949
#, no-wrap
msgid "default-w:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:19952
#, no-wrap
msgid "@code{default-w:} ( @i{--  }) gforth-experimental ``default-w:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19956
msgid ""
"Forbid @code{addr} on locals defined without a type specifyer.  On other "
"words, define locals without a type specifyer using @code{w:}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19959
#, no-wrap
msgid "locals initialization"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19960
#, no-wrap
msgid "initialization of locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19965
msgid ""
"All flavours of locals are initialized with values from the data or (for FP "
"locals) FP stack, with the exception being locals defined behind @code{|}: "
"Gforth initializes them to 0; some Forth systems leave them uninitialized."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:19966
#, no-wrap
msgid "data structure locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19974
msgid ""
"Gforth supports the square bracket notation for local buffers and data "
"structures.  These locals are similar to variable-flavored locals, the size "
"is specified as a constant expression.  A declaration looks @code{@i{name}"
"[ @i{size} ]}.  The Forth expression @code{@i{size}} is evaluated during "
"declaration, it must have the stack effect @code{( -- +n )}, giving the size "
"in bytes.  The square bracket @code{[} is part of the defined name."
msgstr ""

#. type: table
#: ../doc/gforth.texi:19979
msgid ""
"Local data structures are initialized by copying @i{size} bytes from an "
"address passed on the stack; uninitialized local data structures (after "
"@code{|} in the declaration) are not erased, they just contain whatever data "
"there was on the locals stack before."
msgstr ""

#. type: example
#: ../doc/gforth.texi:19987
#, no-wrap
msgid ""
"begin-structure test-struct\n"
"  field: a1\n"
"  field: a2\n"
"end-structure\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:19991
#, no-wrap
msgid ""
": test-local @{: foo[ test-struct ] :@}\n"
"    foo[ a1 !  foo[ a2 !\n"
"    foo[ test-struct dump ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:19995
msgid ""
"Gforth allows defining locals everywhere in a colon definition. This poses "
"the following questions:"
msgstr ""

#. type: node
#: ../doc/gforth.texi:20005 ../doc/gforth.texi:20206
#, no-wrap
msgid "Locals definition words"
msgstr ""

#. type: node
#: ../doc/gforth.texi:20005 ../doc/gforth.texi:20206 ../doc/gforth.texi:20207
#: ../doc/gforth.texi:20429
#, no-wrap
msgid "Where are locals visible by name?"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:20006
#, no-wrap
msgid "Locals definitions words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20012
msgid ""
"This section documents the words used for defining locals.  Note that the "
"run-times for the words (like @code{W:}) that define a local are performed "
"from the rightmost defined local to the leftmost defined local, such that "
"the rightmost local gets the top of stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20013
#, no-wrap
msgid "@{: ( @var{ -- hmaddr u latest latestnt wid 0   } ) local-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20014 ../doc/gforth.texi:20015
#, no-wrap
msgid "@{:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20018
#, no-wrap
msgid "@code{@{:} ( @i{-- hmaddr u latest latestnt wid 0  }) local-ext ``open-brace-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20020
msgid "Start locals definitions."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20022
#, no-wrap
msgid "-- ( @var{ hmaddr u latest latestnt wid 0 ... --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20023 ../doc/gforth.texi:20024
#, no-wrap
msgid "--"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20027
#, no-wrap
msgid "@code{--} ( @i{hmaddr u latest latestnt wid 0 ... --  }) gforth-0.2 ``dash-dash''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20032
msgid ""
"During locals definitions everything from @code{--} to @code{:@}} is "
"ignored.  This is typically used when you want to make a locals definition "
"serve double duty as a stack effect description."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20034
#, no-wrap
msgid "| ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20035 ../doc/gforth.texi:20036
#, no-wrap
msgid "|"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20039
#, no-wrap
msgid "@code{|} ( @i{--  }) gforth-1.0 ``bar''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20043
msgid ""
"Locals defined behind @code{|} are not initialized from the stack; so the "
"run-time of words like @code{W:} changes to @code{( -- )}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20045
#, no-wrap
msgid ":@} ( @var{ hmaddr u latest latestnt wid 0 xt1 ... xtn --   } ) gforth-1.0"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:20046
#, no-wrap
msgid ":@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20049
#, no-wrap
msgid "@code{:@}} ( @i{hmaddr u latest latestnt wid 0 xt1 ... xtn --  }) gforth-1.0 ``colon-close-brace''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20051
msgid "Ends locals definitions."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20053
#, no-wrap
msgid "@{ ( @var{ -- hmaddr u latest latestnt wid 0   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20054 ../doc/gforth.texi:20055
#, no-wrap
msgid "@{"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20058
#, no-wrap
msgid "@code{@{} ( @i{-- hmaddr u latest latestnt wid 0  }) gforth-0.2 ``open-brace''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20061
msgid ""
"Start locals definitions.  The Forth-2012 standard name for this word is "
"@code{@{:}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20063
#, no-wrap
msgid "@} ( @var{ hmaddr u latest latestnt wid 0 xt1 ... xtn --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20064 ../doc/gforth.texi:20065
#, no-wrap
msgid "@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20068
#, no-wrap
msgid "@code{@}} ( @i{hmaddr u latest latestnt wid 0 xt1 ... xtn --  }) gforth-0.2 ``close-brace''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20071
msgid ""
"Ends locals definitions.  The Forth-2012 standard name for this word is "
"@code{:@}}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20073
#, no-wrap
msgid "W: ( @var{ compilation \"name\" -- a-addr xt; run-time x --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20074 ../doc/gforth.texi:20075
#, no-wrap
msgid "W:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20078
#, no-wrap
msgid "@code{W:} ( @i{compilation \"name\" -- a-addr xt; run-time x --  }) gforth-0.2 ``w-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20080
msgid "Define value-flavoured cell local @i{name} @code{( -- x1 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20082
#, no-wrap
msgid "WA: ( @var{ compilation \"name\" -- a-addr xt; run-time x --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20083 ../doc/gforth.texi:20084
#, no-wrap
msgid "WA:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20087
#, no-wrap
msgid "@code{WA:} ( @i{compilation \"name\" -- a-addr xt; run-time x --  }) gforth-1.0 ``w-a-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20089
msgid "Define varue-flavoured cell local @i{name} @code{( -- x1 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20091
#, no-wrap
msgid "W^ ( @var{ compilation \"name\" -- a-addr xt; run-time x --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20092 ../doc/gforth.texi:20093
#, no-wrap
msgid "W^"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20096
#, no-wrap
msgid "@code{W^} ( @i{compilation \"name\" -- a-addr xt; run-time x --  }) gforth-0.2 ``w-caret''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20098
msgid "Define variable-flavoured cell local @i{name} @code{( -- a-addr )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20100
#, no-wrap
msgid "D: ( @var{ compilation \"name\" -- a-addr xt; run-time x1 x2 --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20101 ../doc/gforth.texi:20102
#, no-wrap
msgid "D:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20105
#, no-wrap
msgid "@code{D:} ( @i{compilation \"name\" -- a-addr xt; run-time x1 x2 --  }) gforth-0.2 ``d-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20107
msgid "Define value-flavoured double local @i{name} @code{( -- x3 x4 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20109
#, no-wrap
msgid "DA: ( @var{ compilation \"name\" -- a-addr xt; run-time x1 x2 --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20110 ../doc/gforth.texi:20111
#, no-wrap
msgid "DA:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20114
#, no-wrap
msgid "@code{DA:} ( @i{compilation \"name\" -- a-addr xt; run-time x1 x2 --  }) gforth-1.0 ``w-a-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20116
msgid "Define varue-flavoured double local @i{name} @code{( -- x3 x4 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20118
#, no-wrap
msgid "D^ ( @var{ compilation \"name\" -- a-addr xt; run-time x1 x2 --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20119 ../doc/gforth.texi:20120
#, no-wrap
msgid "D^"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20123
#, no-wrap
msgid "@code{D^} ( @i{compilation \"name\" -- a-addr xt; run-time x1 x2 --  }) gforth-0.2 ``d-caret''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20125
msgid "Define variable-flavoured double local @i{name} @code{( -- a-addr )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20127
#, no-wrap
msgid "C: ( @var{ compilation \"name\" -- a-addr xt; run-time c --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20128 ../doc/gforth.texi:20129
#, no-wrap
msgid "C:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20132
#, no-wrap
msgid "@code{C:} ( @i{compilation \"name\" -- a-addr xt; run-time c --  }) gforth-0.2 ``c-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20134
msgid "Define value-flavoured char local @i{name} @code{( -- c1 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20136
#, no-wrap
msgid "CA: ( @var{ compilation \"name\" -- a-addr xt; run-time c --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20137 ../doc/gforth.texi:20138
#, no-wrap
msgid "CA:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20141
#, no-wrap
msgid "@code{CA:} ( @i{compilation \"name\" -- a-addr xt; run-time c --  }) gforth-1.0 ``c-a-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20143
msgid "Define varue-flavoured char local @i{name} @code{( -- c1 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20145
#, no-wrap
msgid "C^ ( @var{ compilation \"name\" -- a-addr xt; run-time c --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20146 ../doc/gforth.texi:20147
#, no-wrap
msgid "C^"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20150
#, no-wrap
msgid "@code{C^} ( @i{compilation \"name\" -- a-addr xt; run-time c --  }) gforth-0.2 ``c-caret''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20152
msgid "Define variable-flavoured char local @i{name} @code{( -- c-addr )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20154
#, no-wrap
msgid "F: ( @var{ compilation \"name\" -- a-addr xt; run-time r --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20155 ../doc/gforth.texi:20156
#, no-wrap
msgid "F:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20159
#, no-wrap
msgid "@code{F:} ( @i{compilation \"name\" -- a-addr xt; run-time r --  }) gforth-0.2 ``f-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20161
msgid "Define value-flavoured float local @i{name} @code{( -- r1 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20163
#, no-wrap
msgid "FA: ( @var{ compilation \"name\" -- a-addr xt; run-time f --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20164 ../doc/gforth.texi:20165
#, no-wrap
msgid "FA:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20168
#, no-wrap
msgid "@code{FA:} ( @i{compilation \"name\" -- a-addr xt; run-time f --  }) gforth-1.0 ``f-a-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20170
msgid "Define varue-flavoured float local @i{name} @code{( -- r1 )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20172
#, no-wrap
msgid "F^ ( @var{ compilation \"name\" -- a-addr xt; run-time r --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20173 ../doc/gforth.texi:20174
#, no-wrap
msgid "F^"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20177
#, no-wrap
msgid "@code{F^} ( @i{compilation \"name\" -- a-addr xt; run-time r --  }) gforth-0.2 ``f-caret''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20179
msgid "Define variable-flavoured float local @i{name} @code{( -- f-addr )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20181
#, no-wrap
msgid "XT: ( @var{ compilation \"name\" -- a-addr xt; run-time xt1 --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20182 ../doc/gforth.texi:20183
#, no-wrap
msgid "XT:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20186
#, no-wrap
msgid "@code{XT:} ( @i{compilation \"name\" -- a-addr xt; run-time xt1 --  }) gforth-1.0 ``x-t-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20188
msgid "Define defer-flavoured cell local @i{name} @code{( ... -- ... )}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20190
#, no-wrap
msgid "XTA: ( @var{ compilation \"name\" -- a-addr xt; run-time ... -- ...   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20191 ../doc/gforth.texi:20192
#, no-wrap
msgid "XTA:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20195
#, no-wrap
msgid "@code{XTA:} ( @i{compilation \"name\" -- a-addr xt; run-time ... -- ...  }) gforth-1.0 ``x-t-a-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20198
msgid ""
"Define a defer-flavoured local @i{name} on which @code{addr} can be used."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20205
msgid ""
"Note that @code{|}, @code{--}, @code{:@}} and @code{@}} are not normally in "
"the search order (they are in the vocabulary @code{locals-types}), and they "
"are not necessarily words in all Forth systems; therefore they are "
"documented as Gforth words."
msgstr ""

#. type: node
#: ../doc/gforth.texi:20206 ../doc/gforth.texi:20429 ../doc/gforth.texi:20430
#: ../doc/gforth.texi:20445
#, no-wrap
msgid "How long do locals live?"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20208
#, no-wrap
msgid "locals visibility"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20209
#, no-wrap
msgid "visibility of locals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20210
#, no-wrap
msgid "scope of locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20216
msgid ""
"Basically, the answer is that locals are visible where you would expect it "
"in block-structured languages, and sometimes a little longer. If you want to "
"restrict the scope of a local, enclose its definition in @code{SCOPE}..."
"@code{ENDSCOPE}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20218
#, no-wrap
msgid "scope ( @var{ compilation  -- scope ; run-time  --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20219 ../doc/gforth.texi:20220
#, no-wrap
msgid "scope"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20223
#, no-wrap
msgid "@code{scope} ( @i{compilation  -- scope ; run-time  --  }) gforth-0.2 ``scope''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20225
#, no-wrap
msgid "endscope ( @var{ compilation scope -- ; run-time  --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20226 ../doc/gforth.texi:20227
#, no-wrap
msgid "endscope"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20230
#, no-wrap
msgid "@code{endscope} ( @i{compilation scope -- ; run-time  --  }) gforth-0.2 ``endscope''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20237
msgid ""
"These words behave like control structure words, so you can use them with "
"@code{CS-PICK} and @code{CS-ROLL} to restrict the scope in arbitrary ways."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20247
msgid ""
"If you want a more exact answer to the visibility question, here's the basic "
"principle: A local is visible in all places that can only be reached through "
"the definition of the local@footnote{In compiler construction terminology, "
"all places dominated by the definition of the local.}. In other words, it is "
"not visible in places that can be reached without going through the "
"definition of the local. E.g., locals defined in @code{IF}...@code{ENDIF} "
"are visible until the @code{ENDIF}, locals defined in @code{BEGIN}..."
"@code{UNTIL} are visible after the @code{UNTIL} (until, e.g., a subsequent "
"@code{ENDSCOPE})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20256
msgid ""
"The reasoning behind this solution is: We want to have the locals visible as "
"long as it is meaningful. The user can always make the visibility shorter by "
"using explicit scoping. In a place that can only be reached through the "
"definition of a local, the meaning of a local name is clear. In other places "
"it is not: How is the local initialized at the control flow path that does "
"not contain the definition? Which local is meant, if the same name is "
"defined twice in two independent control flow paths?"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20260
msgid ""
"This should be enough detail for nearly all users, so you can skip the rest "
"of this section. If you really must know all the gory details and options, "
"read on."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20270
msgid ""
"In order to implement this rule, the compiler has to know which places are "
"unreachable. It knows this automatically after @code{AHEAD}, @code{AGAIN}, "
"@code{EXIT} and @code{LEAVE}; in other cases (e.g., after most @code{THROW}"
"s), you can use the word @code{UNREACHABLE} to tell the compiler that the "
"control flow never reaches that place. If @code{UNREACHABLE} is not used "
"where it could, the only consequence is that the visibility of some locals "
"is more limited than the rule above says. If @code{UNREACHABLE} is used "
"where it should not (i.e., if you lie to the compiler), buggy code will be "
"produced."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20272
#, no-wrap
msgid "UNREACHABLE ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20273 ../doc/gforth.texi:20274
#, no-wrap
msgid "UNREACHABLE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20277
#, no-wrap
msgid "@code{UNREACHABLE} ( @i{--  }) gforth-0.2 ``UNREACHABLE''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20287
msgid ""
"Another problem with this rule is that at @code{BEGIN}, the compiler does "
"not know which locals will be visible on the incoming back-edge. All "
"problems discussed in the following are due to this ignorance of the "
"compiler (we discuss the problems using @code{BEGIN} loops as examples; the "
"discussion also applies to @code{?DO} and other loops). Perhaps the most "
"insidious example is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20295
#, no-wrap
msgid ""
"AHEAD\n"
"BEGIN\n"
"  x\n"
"[ 1 CS-ROLL ] THEN\n"
"  @{: x :@}\n"
"  ...\n"
"UNTIL\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20300
msgid ""
"This should be legal according to the visibility rule. The use of @code{x} "
"can only be reached through the definition; but that appears textually below "
"the use."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20312
msgid ""
"From this example it is clear that the visibility rules cannot be fully "
"implemented without major headaches. Our implementation treats common cases "
"as advertised and the exceptions are treated in a safe way: The compiler "
"makes a reasonable guess about the locals visible after a @code{BEGIN}; if "
"it is too pessimistic, the user will get a spurious error about the local "
"not being defined; if the compiler is too optimistic, it will notice this "
"later and issue a warning. In the case above the compiler would complain "
"about @code{x} being undefined at its use. You can see from the obscure "
"examples in this section that it takes quite unusual control structures to "
"get the compiler into trouble, and even then it will often do fine."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20322
msgid ""
"If the @code{BEGIN} is reachable from above, the most optimistic guess is "
"that all locals visible before the @code{BEGIN} will also be visible after "
"the @code{BEGIN}. This guess is valid for all loops that are entered only "
"through the @code{BEGIN}, in particular, for normal @code{BEGIN}..."
"@code{WHILE}...@code{REPEAT} and @code{BEGIN}...@code{UNTIL} loops and it is "
"implemented in our compiler. When the branch to the @code{BEGIN} is finally "
"generated by @code{AGAIN} or @code{UNTIL}, the compiler checks the guess and "
"warns the user if it was too optimistic:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20330
#, no-wrap
msgid ""
"IF\n"
"  @{: x :@}\n"
"BEGIN\n"
"  \\ x ? \n"
"[ 1 cs-roll ] THEN\n"
"  ...\n"
"UNTIL\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20337
msgid ""
"Here, @code{x} lives only until the @code{BEGIN}, but the compiler "
"optimistically assumes that it lives until the @code{THEN}. It notices this "
"difference when it compiles the @code{UNTIL} and issues a warning. The user "
"can avoid the warning, and make sure that @code{x} is not used in the wrong "
"area by using explicit scoping:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20346
#, no-wrap
msgid ""
"IF\n"
"  SCOPE\n"
"  @{: x :@}\n"
"  ENDSCOPE\n"
"BEGIN\n"
"[ 1 cs-roll ] THEN\n"
"  ...\n"
"UNTIL\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20350
msgid ""
"Since the guess is optimistic, there will be no spurious error messages "
"about undefined locals."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20355
msgid ""
"If the @code{BEGIN} is not reachable from above (e.g., after @code{AHEAD} or "
"@code{EXIT}), the compiler cannot even make an optimistic guess, as the "
"locals visible after the @code{BEGIN} may be defined later."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20359
msgid ""
"It pessimistically assumes that all locals are visible that were visible at "
"the latest place outside any control structure (i.e., where nothing is on "
"the control-flow stack).  This means that in:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20371
#, no-wrap
msgid ""
": foo\n"
"  IF @{: z :@} THEN\n"
"  @{: x :@}\n"
"  AHEAD\n"
"    BEGIN\n"
"      ( * )\n"
"    [ 1 CS-ROLL ] THEN\n"
"    @{: y :@}\n"
"    ...\n"
"  UNTIL ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20376
msgid ""
"At the place marked with @code{( * )}, @code{x} is visible, but @code{y} is "
"not (although, according to the reachability rule it should); @code{z} is "
"not and should not be visible there."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20380
msgid ""
"However, you can use @code{ASSUME-LIVE} to make the compiler assume that the "
"same locals are visible at the BEGIN as at the point where the top control-"
"flow stack item was created."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20382
#, no-wrap
msgid "ASSUME-LIVE ( @var{ orig -- orig   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20383 ../doc/gforth.texi:20384
#, no-wrap
msgid "ASSUME-LIVE"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20387
#, no-wrap
msgid "@code{ASSUME-LIVE} ( @i{orig -- orig  }) gforth-0.2 ``ASSUME-LIVE''\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20404
#, no-wrap
msgid ""
"IF\n"
"  @{: x :@}\n"
"  AHEAD\n"
"    ASSUME-LIVE\n"
"    BEGIN\n"
"      x\n"
"    [ 1 CS-ROLL ] THEN\n"
"    ...\n"
"  UNTIL\n"
"THEN\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20410
msgid ""
"Here @code{x} would not be visible at the use of @code{x}, because its "
"definition is inside a control structure, but by using ASSUME-LIVE the "
"programmer tells the compiler that the locals visible at the @code{AHEAD} "
"should be visible at the @code{BEGIN}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20415
msgid ""
"Other cases where the locals are defined before the @code{BEGIN} can be "
"handled by inserting an appropriate @code{CS-ROLL} before the @code{ASSUME-"
"LIVE} (and changing the control-flow stack manipulation behind the "
"@code{ASSUME-LIVE})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20420
msgid ""
"Cases where locals are defined after the @code{BEGIN} (but should be visible "
"immediately after the @code{BEGIN}) can only be handled by rearranging the "
"loop. E.g., the ``most insidious'' example above can be arranged into:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20427
#, no-wrap
msgid ""
"BEGIN\n"
"  @{: x :@}\n"
"  ... 0=\n"
"WHILE\n"
"  x\n"
"REPEAT\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:20429 ../doc/gforth.texi:20445 ../doc/gforth.texi:20446
#: ../doc/gforth.texi:20517
#, no-wrap
msgid "Locals programming style"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20431
#, no-wrap
msgid "locals lifetime"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20432
#, no-wrap
msgid "lifetime of locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20444
msgid ""
"The right answer for the lifetime question would be: A local lives at least "
"as long as it can be accessed. For a value-flavoured local this means: until "
"the end of its visibility. However, a variable-flavoured local could be "
"accessed through its address far beyond its visibility scope. Ultimately, "
"this would mean that such locals would have to be garbage collected. Since "
"this entails un-Forth-like implementation complexities, I adopted the same "
"cowardly solution as some other languages (e.g., C): The local lives only as "
"long as it is visible; afterwards its address is invalid (and programs that "
"access it afterwards are erroneous)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:20445 ../doc/gforth.texi:20517 ../doc/gforth.texi:20518
#: ../doc/gforth.texi:20716
#, no-wrap
msgid "Locals implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20447
#, no-wrap
msgid "locals programming style"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20448
#, no-wrap
msgid "programming style, locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20457
msgid ""
"The freedom to define locals anywhere has the potential to change "
"programming styles dramatically. In particular, the need to use the return "
"stack for intermediate storage vanishes. Moreover, all stack manipulations "
"(except @code{PICK}s and @code{ROLL}s with run-time determined arguments) "
"can be eliminated: If the stack items are in the wrong order, just write a "
"locals definition for all of them; then write the items in the order you "
"want."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20463
msgid ""
"This seems a little far-fetched and eliminating stack manipulations is "
"unlikely to become a conscious programming objective. Still, the number of "
"stack manipulations will be reduced dramatically if local variables are used "
"liberally (e.g., compare @code{max} (@pxref{Gforth locals}) with a "
"traditional implementation of @code{max})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20468
msgid ""
"This shows one potential benefit of locals: making Forth programs more "
"readable. Of course, this benefit will only be realized if the programmers "
"continue to honour the principle of factoring instead of using the added "
"latitude to make the words longer."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20469
#, no-wrap
msgid "single-assignment style for locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20476
msgid ""
"Using @code{TO} can and should be avoided.  Without @code{TO}, every value-"
"flavoured local has only a single assignment and many advantages of "
"functional languages apply to Forth. I.e., programs are easier to analyse, "
"to optimize and to read: It is clear from the definition what the local "
"stands for, it does not turn into something different later."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20478
msgid "E.g., a definition using @code{TO} might look like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20490
#, no-wrap
msgid ""
": strcmp @{: addr1 u1 addr2 u2 -- n :@}\n"
" u1 u2 min 0\n"
" ?do\n"
"   addr1 c@@ addr2 c@@ -\n"
"   ?dup-if\n"
"     unloop exit\n"
"   then\n"
"   addr1 char+ TO addr1\n"
"   addr2 char+ TO addr2\n"
" loop\n"
" u1 u2 - ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20497
msgid ""
"Here, @code{TO} is used to update @code{addr1} and @code{addr2} at every "
"loop iteration. @code{strcmp} is a typical example of the readability "
"problems of using @code{TO}. When you start reading @code{strcmp}, you think "
"that @code{addr1} refers to the start of the string. Only near the end of "
"the loop you realize that it is something else."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20500
msgid ""
"This can be avoided by defining two locals at the start of the loop that are "
"initialized with the right value for the current iteration."
msgstr ""

#. type: example
#: ../doc/gforth.texi:20513
#, no-wrap
msgid ""
": strcmp @{: addr1 u1 addr2 u2 -- n :@}\n"
" addr1 addr2\n"
" u1 u2 min 0 \n"
" ?do @{: s1 s2 :@}\n"
"   s1 c@@ s2 c@@ -\n"
"   ?dup-if\n"
"     unloop exit\n"
"   then\n"
"   s1 char+ s2 char+\n"
" loop\n"
" 2drop\n"
" u1 u2 - ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20516
msgid ""
"Here it is clear from the start that @code{s1} has a different value in "
"every loop iteration."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20519
#, no-wrap
msgid "locals implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20520
#, no-wrap
msgid "implementation of locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20530
msgid ""
"Gforth uses an extra locals stack. The most compelling reason for this is "
"that the return stack is not float-aligned; using an extra stack also "
"eliminates the problems and restrictions of using the return stack as locals "
"stack. Like the other stacks, the locals stack grows toward lower addresses. "
"A few primitives allow an efficient implementation; you should not use them "
"directly, but they appear in the output of @code{see}, so they are "
"documented here:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20531
#, no-wrap
msgid "@@localn ( @var{ noffset -- w  } ) gforth-internal"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20532 ../doc/gforth.texi:20533
#, no-wrap
msgid "@@localn"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20536
#, no-wrap
msgid "@code{@@localn} ( @i{noffset -- w }) gforth-internal ``fetch-local-n''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20538
#, no-wrap
msgid "f@@localn ( @var{ noffset -- r  } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20539 ../doc/gforth.texi:20540
#, no-wrap
msgid "f@@localn"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20543
#, no-wrap
msgid "@code{f@@localn} ( @i{noffset -- r }) gforth-1.0 ``f-fetch-local-n''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20554
msgid "doc-lp+!#"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20561
#, no-wrap
msgid ">l ( @var{ w --  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20562 ../doc/gforth.texi:20563
#, no-wrap
msgid ">l"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20566
#, no-wrap
msgid "@code{>l} ( @i{w -- }) gforth-0.2 ``to-l''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20568
#, no-wrap
msgid "f>l ( @var{ r --  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20569 ../doc/gforth.texi:20570
#, no-wrap
msgid "f>l"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20573
#, no-wrap
msgid "@code{f>l} ( @i{r -- }) gforth-0.2 ``f-to-l''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20582
msgid ""
"In addition to these primitives, some specializations of these primitives "
"for commonly occurring inline arguments are provided for efficiency reasons, "
"e.g., @code{@@local0} as specialization of @code{0 @@localn}. The following "
"compiling words compile the right specialized version, or the general "
"version, as appropriate:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20586
#, no-wrap
msgid "compile-lp+! ( @var{ n --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20587 ../doc/gforth.texi:20588
#, no-wrap
msgid "compile-lp+!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20591
#, no-wrap
msgid "@code{compile-lp+!} ( @i{n --  }) gforth-0.2 ``compile-l-p-plus-store''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20598
msgid ""
"Combinations of conditional branches and @code{lp+!#} like @code{?branch-lp+!"
"#} (the locals pointer is only changed if the branch is taken) are provided "
"for efficiency and correctness in loops."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20604
msgid ""
"A special area in the dictionary space is reserved for keeping the local "
"variable names. @code{@{:} switches the dictionary pointer to this area and "
"@code{:@}} switches it back and generates the locals initializing code. "
"@code{W:} etc.@ are normal defining words. This special area is cleared at "
"the start of every colon definition."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20605
#, no-wrap
msgid "word list for defining locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20614
msgid ""
"A special feature of Gforth's dictionary is used to implement the definition "
"of locals without type specifiers: every word list (aka vocabulary) has its "
"own methods for searching etc. (@pxref{Word Lists}). For the present purpose "
"we defined a word list with a special search method: When it is searched for "
"a word, it actually creates that word using @code{W:}. @code{@{:} changes "
"the search order to first search the word list containing @code{:@}}, "
"@code{W:} etc., and then the word list for defining locals without type "
"specifiers."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20618
msgid ""
"The lifetime rules support a stack discipline within a colon definition: The "
"lifetime of a local is either nested with other locals lifetimes or it does "
"not overlap them."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20625
msgid ""
"At @code{BEGIN}, @code{IF}, and @code{AHEAD} no code for locals stack "
"pointer manipulation is generated. Between control structure words locals "
"definitions can push locals onto the locals stack. @code{AGAIN} is the "
"simplest of the other three control flow words. It has to restore the locals "
"stack depth of the corresponding @code{BEGIN} before branching. The code "
"looks like this:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20628
#, no-wrap
msgid ""
"@code{lp+!#} current-locals-size @minus{} dest-locals-size\n"
"@code{branch} <begin>\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20634
msgid ""
"@code{UNTIL} is a little more complicated: If it branches back, it must "
"adjust the stack just like @code{AGAIN}. But if it falls through, the locals "
"stack must not be changed. The compiler generates the following code:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20636
#, no-wrap
msgid "@code{?branch-lp+!#} <begin> current-locals-size @minus{} dest-locals-size\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20638
msgid "The locals stack pointer is only adjusted if the branch is taken."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20640
msgid "@code{THEN} can produce somewhat inefficient code:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20644
#, no-wrap
msgid ""
"@code{lp+!#} current-locals-size @minus{} orig-locals-size\n"
"<orig target>:\n"
"@code{lp+!#} orig-locals-size @minus{} new-locals-size\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20651
msgid ""
"The second @code{lp+!#} adjusts the locals stack pointer from the level at "
"the @i{orig} point to the level after the @code{THEN}. The first @code{lp+!"
"#} adjusts the locals stack pointer from the current level to the level at "
"the orig point, so the complete effect is an adjustment from the current "
"level to the right level after the @code{THEN}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20652
#, no-wrap
msgid "locals information on the control-flow stack"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20653
#, no-wrap
msgid "control-flow stack items, locals information"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20661
msgid ""
"In a conventional Forth implementation a dest control-flow stack entry is "
"just the target address and an orig entry is just the address to be patched. "
"Our locals implementation adds a word list to every orig or dest item. It is "
"the list of locals visible (or assumed visible) at the point described by "
"the entry. Our implementation also adds a tag to identify the kind of entry, "
"in particular to differentiate between live and dead (reachable and "
"unreachable) orig entries."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20663
msgid "A few unusual operations have to be performed on locals word lists:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20664
#, no-wrap
msgid "common-list ( @var{ list1 list2 -- list3   } ) gforth-internal"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20665 ../doc/gforth.texi:20666
#, no-wrap
msgid "common-list"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20669
#, no-wrap
msgid "@code{common-list} ( @i{list1 list2 -- list3  }) gforth-internal ``common-list''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20671
#, no-wrap
msgid "sub-list? ( @var{ list1 list2 -- f   } ) gforth-internal"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20672 ../doc/gforth.texi:20673
#, no-wrap
msgid "sub-list?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20676
#, no-wrap
msgid "@code{sub-list?} ( @i{list1 list2 -- f  }) gforth-internal ``sub-list?''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20678
#, no-wrap
msgid "list-size ( @var{ list -- u   } ) gforth-internal"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20679 ../doc/gforth.texi:20680
#, no-wrap
msgid "list-size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20683
#, no-wrap
msgid "@code{list-size} ( @i{list -- u  }) gforth-internal ``list-size''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20692
msgid ""
"Several features of our locals word list implementation make these "
"operations easy to implement: The locals word lists are organised as linked "
"lists; the tails of these lists are shared, if the lists contain some of the "
"same locals; and the address of a name is greater than the address of the "
"names behind it in the list."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20699
msgid ""
"Another important implementation detail is the variable @code{dead-code}. It "
"is used by @code{BEGIN} and @code{THEN} to determine if they can be reached "
"directly or only through the branch that they resolve. @code{dead-code} is "
"set by @code{UNREACHABLE}, @code{AHEAD}, @code{EXIT} etc., and cleared at "
"the start of a colon definition, by @code{BEGIN} and usually by @code{THEN}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20710
msgid ""
"Counted loops are similar to other loops in most respects, but @code{LEAVE} "
"requires special attention: It performs basically the same service as "
"@code{AHEAD}, but it does not create a control-flow stack entry. Therefore "
"the information has to be stored elsewhere; traditionally, the information "
"was stored in the target fields of the branches created by the @code{LEAVE}"
"s, by organizing these fields into a linked list. Unfortunately, this clever "
"trick does not provide enough space for storing our extended control flow "
"information. Therefore, we introduce another stack, the leave stack. It "
"contains the control-flow stack entries for all unresolved @code{LEAVE}s."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20715
msgid ""
"Local names are kept until the end of the colon definition, even if they are "
"no longer visible in any control-flow path. In a few cases this may lead to "
"increased space needs for the locals name area, but usually less than "
"reclaiming this space would cost in code size."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20718
#, no-wrap
msgid "closures"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20728
msgid ""
"Gforth also provides basic closures.  A closure is a combination of a "
"quotation (@pxref{Quotations}) and locals.  Gforth's closures have locals "
"which are filled with values at the closure's run-time, producing a "
"trampoline xt.  When executing that trampoline xt, the closure's code is "
"executed, with access to the closure's locals on the locals stack.  "
"Modifications of the closure's locals aren't persistent, i.e. when the "
"closure @code{EXIT}s, the modified values are lost."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20729
#, no-wrap
msgid "[@{: ( @var{ -- hmaddr u latest latestnt wid 0   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20730 ../doc/gforth.texi:20731
#, no-wrap
msgid "[@{:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20734
#, no-wrap
msgid "@code{[@{:} ( @i{-- hmaddr u latest latestnt wid 0  }) gforth-experimental ``start-closure''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20744
msgid ""
"starts a closure.  Closures first declare the locals frame they are going to "
"use, and then the code that is executed with those locals.  Closures end "
"like quotations with a @code{;]}.  The locals declaration ends depending "
"where the closure's locals are created.  At run-time, the closure is created "
"as trampolin xt, and fills the values of its local frame from the stack.  At "
"execution time of the xt, the local frame is copied to the locals stack, and "
"used inside the closure's code.  After return, those values are removed from "
"the locals stack, and not updated in the closure itself."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20746
#, no-wrap
msgid ":@}l ( @var{ hmaddr u latest latestnt wid 0 a-addr1 u1 ... --   } ) gforth-1.0"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:20747
#, no-wrap
msgid ":@}l"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20750
#, no-wrap
msgid "@code{:@}l} ( @i{hmaddr u latest latestnt wid 0 a-addr1 u1 ... --  }) gforth-1.0 ``close-brace-locals''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20753
msgid ""
"end a closure's locals declaration.  The closure will be allocated on the "
"local's stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20755
#, no-wrap
msgid ":@}d ( @var{ hmaddr u latest latestnt wid 0 a-addr1 u1 ... --   } ) gforth-1.0"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:20756
#, no-wrap
msgid ":@}d"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20759
#, no-wrap
msgid "@code{:@}d} ( @i{hmaddr u latest latestnt wid 0 a-addr1 u1 ... --  }) gforth-1.0 ``colon-close-brace-d''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20762
msgid ""
"end a closure's locals declaration.  The closure will be allocated in the "
"dictionary."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20764
#, no-wrap
msgid ":@}h ( @var{ hmaddr u latest latestnt wid 0 a-addr1 u1 ... --   } ) gforth-1.0"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:20765
#, no-wrap
msgid ":@}h"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20768
#, no-wrap
msgid "@code{:@}h} ( @i{hmaddr u latest latestnt wid 0 a-addr1 u1 ... --  }) gforth-1.0 ``colon-close-brace-h''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20771 ../doc/gforth.texi:20780
msgid ""
"end a closure's locals declaration.  The closure will be allocated on the "
"heap."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20773
#, no-wrap
msgid ":@}h1 ( @var{ hmaddr u latest latestnt wid 0 a-addr1 u1 ... --   } ) gforth-1.0"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:20774
#, no-wrap
msgid ":@}h1"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20777
#, no-wrap
msgid "@code{:@}h1} ( @i{hmaddr u latest latestnt wid 0 a-addr1 u1 ... --  }) gforth-1.0 ``colon-close-brace-h''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20782
#, no-wrap
msgid ":@}xt ( @var{ hmaddr u latest latestnt wid 0 a-addr1 u1 ... --   } ) gforth-1.0"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:20783
#, no-wrap
msgid ":@}xt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20786
#, no-wrap
msgid "@code{:@}xt} ( @i{hmaddr u latest latestnt wid 0 a-addr1 u1 ... --  }) gforth-1.0 ``colon-close-brace-x-t''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20790
msgid ""
"end a closure's locals declaration.  The closure will be allocated by the xt "
"on the stack, so the closure's run-time stack effect is @code{( xt-alloc -- "
"xt-closure )}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20792
#, no-wrap
msgid ">addr ( @var{ xt -- addr   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20793 ../doc/gforth.texi:20794
#, no-wrap
msgid ">addr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20797
#, no-wrap
msgid "@code{>addr} ( @i{xt -- addr  }) gforth-experimental ``to-addr''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20800
msgid ""
"convert the xt of a closure on the heap to the @var{addr} with can be passed "
"to @code{free} to get rid of the closure"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20802
#, no-wrap
msgid "free-closure ( @var{ xt --   } ) gforth-internal"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20803 ../doc/gforth.texi:20804
#, no-wrap
msgid "free-closure"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20807
#, no-wrap
msgid "@code{free-closure} ( @i{xt --  }) gforth-internal ``free-closure''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20809
msgid "free a heap-allocated closure"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20815
#, no-wrap
msgid ""
": foo [@{: a f: b d: c xt: d :@}d a . b f. c d. d ;] ;\n"
"5 3.3e #1234. ' cr foo execute\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20820
msgid ""
"@code{foo} creates a closure in the dictionary with a single cell, a "
"floating point, a double, and an xt, and prints the first three values "
"before executing the xt on invocation."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20823
msgid ""
"This allows to implement Donald Knuth's ``Man or boy test'' proposed in 1964 "
"to test Algol compilers."
msgstr ""

#. type: example
#: ../doc/gforth.texi:20832
#, no-wrap
msgid ""
": A @{: w^ k x1 x2 x3 xt: x4 xt: x5 | w^ B :@} recursive\n"
"    k @ 0<= IF  x4 x5 f+  ELSE\n"
"        B k x1 x2 x3 action-of x4 [@{: B k x1 x2 x3 x4 :@}L\n"
"            -1 k +!\n"
"            k @ B @ x1 x2 x3 x4 A ;] dup B !\n"
"        execute  THEN ;\n"
": man-or-boy? ( n -- ) [: 1e ;] [: -1e ;] 2dup swap [: 0e ;] A f. ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20840
msgid ""
"Sometimes, closures need a permanent storage to be modified; it is even "
"possible that more than one closure shares that permanent storage.  In the "
"example above, local variables of the outer procedure are used for this, but "
"in some cases, the closure lives longer than the outer procedure; especially "
"closures allocated in the dictionary or on the heap are designed to outlive "
"their parent procedure."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20844
msgid ""
"For those, we have home locations, which are allocated like closures, but "
"their code is directly executed at creation and should provide us with the "
"addresses of the home locations."
msgstr ""

#. type: example
#: ../doc/gforth.texi:20848
#, no-wrap
msgid ""
": bar ( a b c -- aaddr baddr caddr hl-addr )\n"
"    <@{: w^ a w^ b w^ c :@}h a b c ;> ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20854
msgid ""
"This example creates a home location with three cells on the heap, and "
"returns the addresses of the three locations and the address of the home "
"location.  This address can be used to @code{free} the home location when it "
"is no longer needed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20855
#, no-wrap
msgid "<@{: ( @var{ -- hmaddr u latest latestnt wid 0   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20856 ../doc/gforth.texi:20857
#, no-wrap
msgid "<@{:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20860
#, no-wrap
msgid "@code{<@{:} ( @i{-- hmaddr u latest latestnt wid 0  }) gforth-experimental ``start-homelocation''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20862
msgid "starts a home location"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20864
#, no-wrap
msgid ";> ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20865 ../doc/gforth.texi:20866
#, no-wrap
msgid ";>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20869
#, no-wrap
msgid "@code{;>} ( @i{--  }) gforth-experimental ``end-homelocation''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20871
msgid "end using a home location"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20876
#, no-wrap
msgid "locals, Standard Forth style"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20880
msgid ""
"The Forth-2012 standard defines a syntax for locals is restricted version of "
"Gforth's locals:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:20884
msgid "Locals can only be cell-sized values (no type specifiers are allowed)."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:20886
msgid "Locals can be defined only outside control structures."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:20888
msgid "Only one locals definition per definition is allowed."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:20894
msgid ""
"Locals can interfere with explicit usage of the return stack. For the exact "
"(and long) rules, see the standard. If you don't use return stack accessing "
"words in a definition using locals, you will be all right. The purpose of "
"this rule is to make locals implementation on the return stack easier."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:20896
msgid "The whole locals definition must be in one line."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20900
msgid ""
"The Standard Forth locals wordset itself consists of two words: @code{@{:} "
"and:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:20901
#, no-wrap
msgid "(local) ( @var{ addr u --   } ) local"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20902 ../doc/gforth.texi:20903
#, no-wrap
msgid "(local)"
msgstr ""

#. type: format
#: ../doc/gforth.texi:20906
#, no-wrap
msgid "@code{(local)} ( @i{addr u --  }) local ``paren-local-paren''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20918
msgid ""
"The ANS Forth locals extension wordset defines a syntax using "
"@code{locals|}, but it is so awful that we strongly recommend not to use it. "
"We have implemented this syntax to make porting to Gforth easy, but do not "
"document it here. The problem with this syntax is that the locals are "
"defined in an order reversed with respect to the standard stack comment "
"notation, making programs harder to read, and easier to misread and "
"miswrite. The only merit of this syntax is that it is easy to implement "
"using the ANS Forth locals wordset, but then, so is the @code{@{:} syntax."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20922
#, no-wrap
msgid "structures"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20923
#, no-wrap
msgid "records"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20934
msgid ""
"This section presents the structure package that comes with Gforth. A "
"version of the package implemented in Standard Forth is available in "
"@file{compat/struct.fs}. This package was inspired by a posting on comp.lang."
"forth in 1989 (unfortunately I don't remember, by whom; possibly John "
"Hayes). A version of this section has been published in M. Anton Ertl, "
"@uref{https://www.complang.tuwien.ac.at/forth/objects/structs.html, Yet "
"Another Forth Structures Package}, Forth Dimensions 19(3), pages 13--16. "
"Marcel Hendrix provided helpful comments."
msgstr ""

#. type: node
#: ../doc/gforth.texi:20944 ../doc/gforth.texi:20945 ../doc/gforth.texi:21031
#, no-wrap
msgid "Why explicit structure support?"
msgstr ""

#. type: node
#: ../doc/gforth.texi:20944 ../doc/gforth.texi:21031 ../doc/gforth.texi:21032
#: ../doc/gforth.texi:21142
#, no-wrap
msgid "Structure Usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20947
#, no-wrap
msgid "address arithmetic for structures"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:20948
#, no-wrap
msgid "structures using address arithmetic"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20953
msgid ""
"If we want to use a structure containing several fields, we could simply "
"reserve memory for it, and access the fields using address arithmetic "
"(@pxref{Address arithmetic}). As an example, consider a structure with the "
"following fields"
msgstr ""

#. type: item
#: ../doc/gforth.texi:20955 ../doc/gforth.texi:20967 ../doc/gforth.texi:26168
#, no-wrap
msgid "a"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20957 ../doc/gforth.texi:20961
msgid "is a float"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:20957 ../doc/gforth.texi:20969 ../doc/gforth.texi:24251
#: ../doc/gforth.texi:24252
#, no-wrap
msgid "b"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20959
msgid "is a cell"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20965
msgid ""
"Given the (float-aligned) base address of the structure we get the address "
"of the field"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20969
msgid "without doing anything further."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20971
msgid "with @code{float+}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20973
msgid "with @code{float+ cell+ faligned}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:20976
msgid "It is easy to see that this can become quite tiring."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20982
msgid ""
"Moreover, it is not very readable, because seeing a @code{cell+} tells us "
"neither which kind of structure is accessed nor what field is accessed; we "
"have to somehow infer the kind of structure, and then look up in the "
"documentation, which field of that structure corresponds to that offset."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20987
msgid ""
"Finally, this kind of address arithmetic also causes maintenance troubles: "
"If you add or delete a field somewhere in the middle of the structure, you "
"have to find and change all computations for the fields afterwards."
msgstr ""

#. type: table
#: ../doc/gforth.texi:20990
msgid ""
"So, instead of using @code{cell+} and friends directly, how about storing "
"the offsets in constants:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:20995
#, no-wrap
msgid ""
"0 constant a-offset\n"
"0 float+ constant b-offset\n"
"0 float+ cell+ faligned c-offset\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21001
msgid ""
"Now we can get the address of field @code{x} with @code{x-offset +}. This is "
"much better in all respects. Of course, you still have to change all later "
"offset definitions if you add a field. You can fix this by declaring the "
"offsets in the following way:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21006
#, no-wrap
msgid ""
"0 constant a-offset\n"
"a-offset float+ constant b-offset\n"
"b-offset cell+ faligned constant c-offset\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21011
msgid ""
"Since we always use the offsets with @code{+}, we could use a defining word "
"@code{cfield} that includes the @code{+} in the action of the defined word:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21017
#, no-wrap
msgid ""
": cfield ( n \"name\" -- )\n"
"    create ,\n"
"does> ( name execution: addr1 -- addr2 )\n"
"    @@ + ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21021
#, no-wrap
msgid ""
"0 cfield a\n"
"0 a float+ cfield b\n"
"0 b cell+ faligned cfield c\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21024
msgid "Instead of @code{x-offset +}, we now simply write @code{x}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21030
msgid ""
"The structure field words now can be used quite nicely. However, their "
"definition is still a bit cumbersome: We have to repeat the name, the "
"information about size and alignment is distributed before and after the "
"field definitions etc.  The structure package presented here addresses these "
"problems."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21031 ../doc/gforth.texi:21142 ../doc/gforth.texi:21143
#: ../doc/gforth.texi:21176
#, no-wrap
msgid "Structure Naming Convention"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21033
#, no-wrap
msgid "structure usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21035
#, no-wrap
msgid "@code{field} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21036
#, no-wrap
msgid "@code{struct} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21037
#, no-wrap
msgid "@code{end-struct} usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21039
msgid "You can define a structure for a (data-less) linked list with:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21043
#, no-wrap
msgid ""
"struct\n"
"    cell% field list-next\n"
"end-struct list%\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21049
msgid ""
"With the address of the list node on the stack, you can compute the address "
"of the field that contains the address of the next node with @code{list-"
"next}. E.g., you can determine the length of a list with:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21060
#, no-wrap
msgid ""
": list-length ( list -- n )\n"
"\\ \"list\" is a pointer to the first element of a linked list\n"
"\\ \"n\" is the length of the list\n"
"    0 BEGIN ( list1 n1 )\n"
"        over\n"
"    WHILE ( list1 n1 )\n"
"        1+ swap list-next @@ swap\n"
"    REPEAT\n"
"    nip ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21069
msgid ""
"You can reserve memory for a list node in the dictionary with @code{list% "
"%allot}, which leaves the address of the list node on the stack. For the "
"equivalent allocation on the heap you can use @code{list% %alloc} (or, for "
"an @code{allocate}-like stack effect (i.e., with ior), use @code{list% "
"%allocate}). You can get the the size of a list node with @code{list% %size} "
"and its alignment with @code{list% %alignment}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21073
msgid ""
"Note that in Standard Forth the body of a @code{create}d word is "
"@code{aligned} but not necessarily @code{faligned}; therefore, if you do a:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21076
#, no-wrap
msgid "create @emph{name} foo% %allot drop\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21083
msgid ""
"then the memory alloted for @code{foo%} is guaranteed to start at the body "
"of @code{@emph{name}} only if @code{foo%} contains only character, cell and "
"double fields.  Therefore, if your structure contains floats, better use"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21086
#, no-wrap
msgid "foo% %allot constant @emph{name}\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21088
#, no-wrap
msgid "structures containing structures"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21091
msgid ""
"You can include a structure @code{foo%} as a field of another structure, "
"like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21097
#, no-wrap
msgid ""
"struct\n"
"...\n"
"    foo% field ...\n"
"...\n"
"end-struct ...\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21099
#, no-wrap
msgid "structure extension"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21100
#, no-wrap
msgid "extended records"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21109
msgid ""
"Instead of starting with an empty structure, you can extend an existing "
"structure. E.g., a plain linked list without data, as defined above, is "
"hardly useful; You can extend it to a linked list of integers, like this:"
"@footnote{This feature is also known as @emph{extended records}. It is the "
"main innovation in the Oberon language; in other words, adding this feature "
"to Modula-2 led Wirth to create a new language, write a new compiler etc.  "
"Adding this feature to Forth just required a few lines of code.}"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21114
#, no-wrap
msgid ""
"list%\n"
"    cell% field intlist-int\n"
"end-struct intlist%\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21118
msgid ""
"@code{intlist%} is a structure with two fields: @code{list-next} and "
"@code{intlist-int}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21119
#, no-wrap
msgid "structures containing arrays"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21122
msgid ""
"You can specify an array type containing @emph{n} elements of type "
"@code{foo%} like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21125
#, no-wrap
msgid "foo% @emph{n} *\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21130
msgid ""
"You can use this array type in any place where you can use a normal type, e."
"g., when defining a @code{field}, or with @code{%allot}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21131
#, no-wrap
msgid "first field optimization"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21140
msgid ""
"The first field is at the base address of a structure and the word for this "
"field (e.g., @code{list-next}) actually does not change the address on the "
"stack. You may be tempted to leave it away in the interest of run-time and "
"space efficiency. This is not necessary, because the structure package "
"optimizes this case: If you compile a first-field words, no code is "
"generated. So, in the interest of readability and maintainability you should "
"include the word for the field when accessing the field."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21142 ../doc/gforth.texi:21176 ../doc/gforth.texi:21177
#: ../doc/gforth.texi:21212
#, no-wrap
msgid "Structure Implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21144 ../doc/gforth.texi:21164
#, no-wrap
msgid "structure naming convention"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21151
msgid ""
"The field names that come to (my) mind are often quite generic, and, if "
"used, would cause frequent name clashes. E.g., many structures probably "
"contain a @code{counter} field. The structure names that come to (my) mind "
"are often also the logical choice for the names of words that create such a "
"structure."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21153
msgid "Therefore, I have adopted the following naming conventions:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21155
#, no-wrap
msgid "field naming convention"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21163
msgid ""
"The names of fields are of the form @code{@emph{struct}-@emph{field}}, where "
"@code{@emph{struct}} is the basic name of the structure, and "
"@code{@emph{field}} is the basic name of the field. You can think of field "
"words as converting the (address of the)  structure into the (address of "
"the) field."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21169
msgid ""
"The names of structures are of the form @code{@emph{struct}%}, where "
"@code{@emph{struct}} is the basic name of the structure."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21175
msgid ""
"This naming convention does not work that well for fields of extended "
"structures; e.g., the integer list structure has a field @code{intlist-int}, "
"but has @code{list-next}, not @code{intlist-next}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21176 ../doc/gforth.texi:21212 ../doc/gforth.texi:21213
#: ../doc/gforth.texi:21354
#, no-wrap
msgid "Structure Glossary"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21178
#, no-wrap
msgid "structure implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21179
#, no-wrap
msgid "implementation of structures"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21185
msgid ""
"The central idea in the implementation is to pass the data about the "
"structure being built on the stack, not in some global variable. Everything "
"else falls into place naturally once this design decision is made."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21189
msgid ""
"The type description on the stack is of the form @emph{align size}. Keeping "
"the size on the top-of-stack makes dealing with arrays very simple."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21193
msgid ""
"@code{field} is a defining word that uses @code{Create} and @code{DOES>}. "
"The body of the field contains the offset of the field, and the normal "
"@code{DOES>} action is simply:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21196
#, no-wrap
msgid "@@ +\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21201
msgid ""
"i.e., add the offset to the address, giving the stack effect @i{addr1 -- "
"addr2} for a field."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21202
#, no-wrap
msgid "first field optimization, implementation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21211
msgid ""
"This simple structure is slightly complicated by the optimization for fields "
"with offset 0, which requires a different @code{DOES>}-part (because we "
"cannot rely on there being something on the stack if such a field is invoked "
"during compilation). Therefore, we put the different @code{DOES>}-parts in "
"separate words, and decide which one to invoke based on the offset. For a "
"zero offset, the field is basically a noop; it is immediate, and therefore "
"no code is generated when it is compiled."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21214
#, no-wrap
msgid "structure glossary"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21217
#, no-wrap
msgid "%align ( @var{ align size --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21218 ../doc/gforth.texi:21219
#, no-wrap
msgid "%align"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21222
#, no-wrap
msgid "@code{%align} ( @i{align size --  }) gforth-0.4 ``%align''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21224
msgid "Align the data space pointer to the alignment @var{align}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21226
#, no-wrap
msgid "%alignment ( @var{ align size -- align   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21227 ../doc/gforth.texi:21228
#, no-wrap
msgid "%alignment"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21231
#, no-wrap
msgid "@code{%alignment} ( @i{align size -- align  }) gforth-0.4 ``%alignment''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21233
msgid "The alignment of the structure."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21235
#, no-wrap
msgid "%alloc ( @var{ align size -- addr   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21236 ../doc/gforth.texi:21237
#, no-wrap
msgid "%alloc"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21240
#, no-wrap
msgid "@code{%alloc} ( @i{align size -- addr  }) gforth-0.4 ``%alloc''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21244
msgid ""
"Allocate @var{size} address units with alignment @var{align}, giving a data "
"block at @var{addr}; @code{throw} an ior code if not successful."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21246
#, no-wrap
msgid "%allocate ( @var{ align size -- addr ior   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21247 ../doc/gforth.texi:21248
#, no-wrap
msgid "%allocate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21251
#, no-wrap
msgid "@code{%allocate} ( @i{align size -- addr ior  }) gforth-0.4 ``%allocate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21254
msgid ""
"Allocate @var{size} address units with alignment @var{align}, similar to "
"@code{allocate}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21256
#, no-wrap
msgid "%allot ( @var{ align size -- addr   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21257 ../doc/gforth.texi:21258
#, no-wrap
msgid "%allot"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21261
#, no-wrap
msgid "@code{%allot} ( @i{align size -- addr  }) gforth-0.4 ``%allot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21265
msgid ""
"Allot @var{size} address units of data space with alignment @var{align}; the "
"resulting block of data is found at @var{addr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21267
#, no-wrap
msgid "cell% ( @var{ -- align size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21268 ../doc/gforth.texi:21269
#, no-wrap
msgid "cell%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21272
#, no-wrap
msgid "@code{cell%} ( @i{-- align size  }) gforth-0.4 ``cell%''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21274
#, no-wrap
msgid "char% ( @var{ -- align size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21275 ../doc/gforth.texi:21276
#, no-wrap
msgid "char%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21279
#, no-wrap
msgid "@code{char%} ( @i{-- align size  }) gforth-0.4 ``char%''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21281
#, no-wrap
msgid "dfloat% ( @var{ -- align size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21282 ../doc/gforth.texi:21283
#, no-wrap
msgid "dfloat%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21286
#, no-wrap
msgid "@code{dfloat%} ( @i{-- align size  }) gforth-0.4 ``dfloat%''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21288
#, no-wrap
msgid "double% ( @var{ -- align size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21289 ../doc/gforth.texi:21290
#, no-wrap
msgid "double%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21293
#, no-wrap
msgid "@code{double%} ( @i{-- align size  }) gforth-0.4 ``double%''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21295
#, no-wrap
msgid "end-struct ( @var{ align size \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21296 ../doc/gforth.texi:21297
#, no-wrap
msgid "end-struct"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21300
#, no-wrap
msgid "@code{end-struct} ( @i{align size \"name\" --  }) gforth-0.2 ``end-struct''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21305
msgid ""
"Define a structure/type descriptor @var{name} with alignment @var{align} and "
"size @var{size1} (@var{size} rounded up to be a multiple of @var{align}).@* "
"@code{name} execution: -- @var{align size1}@*"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21307
#, no-wrap
msgid "field ( @var{ align1 offset1 align size \"name\" --  align2 offset2   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21308 ../doc/gforth.texi:21309
#, no-wrap
msgid "field"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21312
#, no-wrap
msgid "@code{field} ( @i{align1 offset1 align size \"name\" --  align2 offset2  }) gforth-0.2 ``field''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21318
msgid ""
"Create a field @var{name} with offset @var{offset1}, and the type given by "
"@var{align size}. @var{offset2} is the offset of the next field, and "
"@var{align2} is the alignment of all fields.@* @code{name} execution: "
"@var{addr1} -- @var{addr2}.@* @var{addr2}=@var{addr1}+@var{offset1}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21320
#, no-wrap
msgid "float% ( @var{ -- align size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21321 ../doc/gforth.texi:21322
#, no-wrap
msgid "float%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21325
#, no-wrap
msgid "@code{float%} ( @i{-- align size  }) gforth-0.4 ``float%''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21327
#, no-wrap
msgid "sfloat% ( @var{ -- align size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21328 ../doc/gforth.texi:21329
#, no-wrap
msgid "sfloat%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21332
#, no-wrap
msgid "@code{sfloat%} ( @i{-- align size  }) gforth-0.4 ``sfloat%''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21334
#, no-wrap
msgid "%size ( @var{ align size -- size   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21335 ../doc/gforth.texi:21336
#, no-wrap
msgid "%size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21339
#, no-wrap
msgid "@code{%size} ( @i{align size -- size  }) gforth-0.4 ``%size''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21341
msgid "The size of the structure."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21343
#, no-wrap
msgid "struct ( @var{ -- align size   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21344 ../doc/gforth.texi:21345
#, no-wrap
msgid "struct"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21348
#, no-wrap
msgid "@code{struct} ( @i{-- align size  }) gforth-0.2 ``struct''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21350
msgid "An empty structure, used to start a structure definition."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21356
#, no-wrap
msgid "Structures in Forth200x"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21362
msgid ""
"The Forth 2012 standard defines a slightly less convenient form of "
"structures.  In general (when using @code{field+}, you have to perform the "
"alignment yourself, but there are a number of convenience words (e.g., "
"@code{field:}) that include alignment."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21364
msgid "A typical usage example is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21370
#, no-wrap
msgid ""
"0\n"
"  field:                   s-a\n"
"  faligned 2 floats +field s-b\n"
"constant s-struct\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21373
msgid "An alternative way of writing this structure is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21379
#, no-wrap
msgid ""
"begin-structure s-struct\n"
"  field:                   s-a\n"
"  faligned 2 floats +field s-b\n"
"end-structure\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21383
msgid ""
"You can define a structure that has the same fields and additional fields as "
"follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21389
#, no-wrap
msgid ""
"s-struct\n"
"  cfield: t-c\n"
"  cfield: t-d\n"
"constant t-struct\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21392
msgid "or alternatively"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21398
#, no-wrap
msgid ""
"s-struct extend-structure t-struct\n"
"  cfield: t-c\n"
"  cfield: t-d\n"
"end-structure\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21400
#, no-wrap
msgid "begin-structure ( @var{ \"name\" -- struct-sys 0   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21401 ../doc/gforth.texi:21402
#, no-wrap
msgid "begin-structure"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21405
#, no-wrap
msgid "@code{begin-structure} ( @i{\"name\" -- struct-sys 0  }) facility-ext ``begin-structure''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21407
#, no-wrap
msgid "extend-structure ( @var{ n \"name\" -- struct-sys n   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21408 ../doc/gforth.texi:21409
#, no-wrap
msgid "extend-structure"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21412
#, no-wrap
msgid "@code{extend-structure} ( @i{n \"name\" -- struct-sys n  }) gforth-1.0 ``extend-structure''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21415
msgid ""
"Start a new structure @i{name} as extension of an existing structure with "
"size @i{n}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21417
#, no-wrap
msgid "end-structure ( @var{ struct-sys +n --   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21418 ../doc/gforth.texi:21419
#, no-wrap
msgid "end-structure"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21422
#, no-wrap
msgid "@code{end-structure} ( @i{struct-sys +n --  }) facility-ext ``end-structure''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21424
msgid "end a structure started wioth @code{begin-structure}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21426
#, no-wrap
msgid "+field ( @var{ noffset1 nsize \"name\" -- noffset2   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21427 ../doc/gforth.texi:21428
#, no-wrap
msgid "+field"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21431
#, no-wrap
msgid "@code{+field} ( @i{noffset1 nsize \"name\" -- noffset2  }) facility-ext ``plus-field''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21435
msgid ""
"Defining word; defines @i{name} @code{( addr1 -- addr2 )}, where @i{addr2} "
"is @i{addr1+noffset1}.  @i{noffset2} is @i{noffset1+nsize}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21437
#, no-wrap
msgid "cfield: ( @var{ u1 \"name\" -- u2   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21438 ../doc/gforth.texi:21439
#, no-wrap
msgid "cfield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21442
#, no-wrap
msgid "@code{cfield:} ( @i{u1 \"name\" -- u2  }) facility-ext ``c-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21444
msgid "Define a char-sized field"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21446
#, no-wrap
msgid "field: ( @var{ u1 \"name\" -- u2   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21447 ../doc/gforth.texi:21448
#, no-wrap
msgid "field:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21451
#, no-wrap
msgid "@code{field:} ( @i{u1 \"name\" -- u2  }) facility-ext ``field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21453
msgid "Define an aligned cell-sized field"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21455
#, no-wrap
msgid "2field: ( @var{ u1 \"name\" -- u2   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21456 ../doc/gforth.texi:21457
#, no-wrap
msgid "2field:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21460
#, no-wrap
msgid "@code{2field:} ( @i{u1 \"name\" -- u2  }) gforth-0.7 ``two-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21462
msgid "Define an aligned double-cell-sized field"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21464
#, no-wrap
msgid "ffield: ( @var{ u1 \"name\" -- u2   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21465 ../doc/gforth.texi:21466
#, no-wrap
msgid "ffield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21469
#, no-wrap
msgid "@code{ffield:} ( @i{u1 \"name\" -- u2  }) floating-ext ``f-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21471
msgid "Define a faligned float-sized field"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21473
#, no-wrap
msgid "sffield: ( @var{ u1 \"name\" -- u2   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21474 ../doc/gforth.texi:21475
#, no-wrap
msgid "sffield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21478
#, no-wrap
msgid "@code{sffield:} ( @i{u1 \"name\" -- u2  }) floating-ext ``s-f-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21480
msgid "Define a sfaligned sfloat-sized field"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21482
#, no-wrap
msgid "dffield: ( @var{ u1 \"name\" -- u2   } ) floating-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21483 ../doc/gforth.texi:21484
#, no-wrap
msgid "dffield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21487
#, no-wrap
msgid "@code{dffield:} ( @i{u1 \"name\" -- u2  }) floating-ext ``d-f-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21489
msgid "Define a dfaligned dfloat-sized field"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21491
#, no-wrap
msgid "wfield: ( @var{ u1 \"name\" -- u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21492 ../doc/gforth.texi:21493
#, no-wrap
msgid "wfield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21496
#, no-wrap
msgid "@code{wfield:} ( @i{u1 \"name\" -- u2  }) gforth-1.0 ``w-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21498
msgid "Define a naturally aligned field for a 16-bit value."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21500
#, no-wrap
msgid "lfield: ( @var{ u1 \"name\" -- u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21501 ../doc/gforth.texi:21502
#, no-wrap
msgid "lfield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21505
#, no-wrap
msgid "@code{lfield:} ( @i{u1 \"name\" -- u2  }) gforth-1.0 ``l-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21507
msgid "Define a naturally aligned field for a 32-bit value."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:21509
#, no-wrap
msgid "xfield: ( @var{ u1 \"name\" -- u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21510 ../doc/gforth.texi:21511
#, no-wrap
msgid "xfield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:21514
#, no-wrap
msgid "@code{xfield:} ( @i{u1 \"name\" -- u2  }) gforth-1.0 ``x-field-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21516
msgid "Define a naturally aligned field for a 64-bit-value."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21520 ../doc/gforth.texi:23683 ../doc/gforth.texi:23684
#: ../doc/gforth.texi:24166
#, no-wrap
msgid "Regular Expressions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21529
msgid ""
"Gforth comes with three packages for object-oriented programming: "
"@file{objects.fs}, @file{oof.fs}, and @file{mini-oof.fs}; none of them is "
"preloaded, so you have to @code{include} them before use. The most important "
"differences between these packages (and others) are discussed in "
"@ref{Comparison with other object models}. All packages are written in "
"Standard Forth and can be used with any other Standard Forth."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21541 ../doc/gforth.texi:21542 ../doc/gforth.texi:21572
#, no-wrap
msgid "Why object-oriented programming?"
msgstr ""

#. type: node
#: ../doc/gforth.texi:21541 ../doc/gforth.texi:21572 ../doc/gforth.texi:21573
#: ../doc/gforth.texi:21643
#, no-wrap
msgid "Object-Oriented Terminology"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21543
#, no-wrap
msgid "object-oriented programming motivation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21544
#, no-wrap
msgid "motivation for object-oriented programming"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21555
msgid ""
"Often we have to deal with several data structures (@emph{objects}), that "
"have to be treated similarly in some respects, but differently in others. "
"Graphical objects are the textbook example: circles, triangles, dinosaurs, "
"icons, and others, and we may want to add more during program development. "
"We want to apply some operations to any graphical object, e.g., @code{draw} "
"for displaying it on the screen. However, @code{draw} has to do something "
"different for every kind of object."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21561
msgid ""
"We could implement @code{draw} as a big @code{CASE} control structure that "
"executes the appropriate code depending on the kind of object to be drawn. "
"This would be not be very elegant, and, moreover, we would have to change "
"@code{draw} every time we add a new kind of graphical object (say, a "
"spaceship)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21565
msgid ""
"What we would rather do is: When defining spaceships, we would tell the "
"system: ``Here's how you @code{draw} a spaceship; you figure out the rest''."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21570
msgid ""
"This is the problem that all systems solve that (rightfully) call themselves "
"object-oriented; the object-oriented packages presented here solve this "
"problem (and not much else)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21572 ../doc/gforth.texi:21643 ../doc/gforth.texi:21683
#: ../doc/gforth.texi:21728 ../doc/gforth.texi:21820 ../doc/gforth.texi:21830
#: ../doc/gforth.texi:21853 ../doc/gforth.texi:21876 ../doc/gforth.texi:21945
#: ../doc/gforth.texi:22036 ../doc/gforth.texi:22070 ../doc/gforth.texi:22111
#: ../doc/gforth.texi:22171 ../doc/gforth.texi:22311 ../doc/gforth.texi:22754
#, no-wrap
msgid "Objects"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21574
#, no-wrap
msgid "object-oriented terminology"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21575
#, no-wrap
msgid "terminology for object-oriented programming"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21580
msgid ""
"This section is mainly for reference, so you don't have to understand all of "
"it right away.  The terminology is mainly Smalltalk-inspired.  In short:"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21582 ../doc/gforth.texi:21583 ../doc/gforth.texi:22354
#: ../doc/gforth.texi:22355 ../doc/gforth.texi:23301 ../doc/gforth.texi:23302
#, no-wrap
msgid "class"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21585
msgid "a data structure definition with some extras."
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21586 ../doc/gforth.texi:21587 ../doc/gforth.texi:22634
#: ../doc/gforth.texi:22635 ../doc/gforth.texi:23274 ../doc/gforth.texi:23275
#, no-wrap
msgid "object"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21589
msgid "an instance of the data structure described by the class definition."
msgstr ""

#. type: item
#: ../doc/gforth.texi:21590 ../doc/gforth.texi:21591
#, no-wrap
msgid "instance variables"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21593
msgid "fields of the data structure."
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21594 ../doc/gforth.texi:21597 ../doc/gforth.texi:22694
#: ../doc/gforth.texi:22695
#, no-wrap
msgid "selector"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21595
#, no-wrap
msgid "method selector"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21596
#, no-wrap
msgid "virtual function"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21602
msgid ""
"(or @emph{method selector}) a word (e.g., @code{draw}) that performs an "
"operation on a variety of data structures (classes). A selector describes "
"@emph{what} operation to perform. In C++ terminology: a (pure) virtual "
"function."
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:21603 ../doc/gforth.texi:21604 ../doc/gforth.texi:22612
#: ../doc/gforth.texi:22613 ../doc/gforth.texi:23191 ../doc/gforth.texi:23192
#: ../doc/gforth.texi:23283 ../doc/gforth.texi:23284
#, no-wrap
msgid "method"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21608
msgid ""
"the concrete definition that performs the operation described by the "
"selector for a specific class. A method specifies @emph{how} the operation "
"is performed for a specific class."
msgstr ""

#. type: item
#: ../doc/gforth.texi:21609 ../doc/gforth.texi:21612
#, no-wrap
msgid "selector invocation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21610
#, no-wrap
msgid "message send"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21611
#, no-wrap
msgid "invoking a selector"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21617
msgid ""
"a call of a selector. One argument of the call (the TOS (top-of-stack))  is "
"used for determining which method is used. In Smalltalk terminology: a "
"message (consisting of the selector and the other arguments) is sent to the "
"object."
msgstr ""

#. type: item
#: ../doc/gforth.texi:21618 ../doc/gforth.texi:21619
#, no-wrap
msgid "receiving object"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21624
msgid ""
"the object used for determining the method executed by a selector "
"invocation. In the @file{objects.fs} model, it is the object that is on the "
"TOS when the selector is invoked. (@emph{Receiving} comes from the Smalltalk "
"@emph{message} terminology.)"
msgstr ""

#. type: item
#: ../doc/gforth.texi:21625 ../doc/gforth.texi:21628
#, no-wrap
msgid "child class"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21626
#, no-wrap
msgid "parent class"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21627
#, no-wrap
msgid "inheritance"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21633
msgid ""
"a class that has (@emph{inherits}) all properties (instance variables, "
"selectors, methods) from a @emph{parent class}. In Smalltalk terminology: "
"The subclass inherits from the superclass. In C++ terminology: The derived "
"class inherits from the base class."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21643 ../doc/gforth.texi:22754 ../doc/gforth.texi:22780
#: ../doc/gforth.texi:22813 ../doc/gforth.texi:22896 ../doc/gforth.texi:23122
#: ../doc/gforth.texi:23241 ../doc/gforth.texi:23246
#, no-wrap
msgid "OOF"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21645
#, no-wrap
msgid "objects"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21646 ../doc/gforth.texi:22757
#, no-wrap
msgid "object-oriented programming"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:21648 ../doc/gforth.texi:22759
#, no-wrap
msgid "objects.fs"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:21649 ../doc/gforth.texi:22760
#, no-wrap
msgid "oof.fs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21657
msgid ""
"This section describes the @file{objects.fs} package. This material also has "
"been published in M. Anton Ertl, @cite{@uref{https://www.complang.tuwien.ac."
"at/forth/objects/objects.html, Yet Another Forth Objects Package}}, Forth "
"Dimensions 19(2), pages 37--43."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21659
msgid "This section assumes that you have read @ref{Structures}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21664
msgid ""
"The techniques on which this model is based have been used to implement the "
"parser generator, Gray, and have also been used in Gforth for implementing "
"the various flavours of word lists (hashed or not, case-sensitive or not, "
"special-purpose word lists for locals etc.)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21682
msgid "Marcel Hendrix provided helpful comments on this section."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21683 ../doc/gforth.texi:21728
#, no-wrap
msgid "Properties of the Objects model"
msgstr ""

#. type: node
#: ../doc/gforth.texi:21683 ../doc/gforth.texi:21728 ../doc/gforth.texi:21820
#, no-wrap
msgid "Basic Objects Usage"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:21684
#, no-wrap
msgid "Properties of the @file{objects.fs} model"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21685
#, no-wrap
msgid "@file{objects.fs} properties"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21691
msgid ""
"It is straightforward to pass objects on the stack. Passing selectors on the "
"stack is a little less convenient, but possible."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21697
msgid ""
"Objects are just data structures in memory, and are referenced by their "
"address. You can create words for objects with normal defining words like "
"@code{constant}. Likewise, there is no difference between instance variables "
"that contain objects and those that contain other data."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21700 ../doc/gforth.texi:22802
msgid "Late binding is efficient and easy to use."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21709
msgid ""
"It avoids parsing, and thus avoids problems with state-smartness and reduced "
"extensibility; for convenience there are a few parsing words, but they have "
"non-parsing counterparts. There are also a few defining words that parse. "
"This is hard to avoid, because all standard defining words parse (except "
"@code{:noname}); however, such words are not as bad as many other parsing "
"words, because they are not state-smart."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21715
msgid ""
"It does not try to incorporate everything. It does a few things and does "
"them well (IMO). In particular, this model was not designed to support "
"information hiding (although it has features that may help); you can use a "
"separate package for achieving this."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21721
msgid ""
"It is layered; you don't have to learn and use all features to use this "
"model. Only a few features are necessary (@pxref{Basic Objects Usage}, "
"@pxref{The Objects base class}, @pxref{Creating objects}.), the others are "
"optional and independent of each other."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:21724 ../doc/gforth.texi:22809
msgid "An implementation in Standard Forth is available."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21728 ../doc/gforth.texi:21820 ../doc/gforth.texi:21830
#, no-wrap
msgid "The Objects base class"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:21729
#, no-wrap
msgid "Basic @file{objects.fs} Usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21730
#, no-wrap
msgid "basic objects usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21731
#, no-wrap
msgid "objects, basic usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21734 ../doc/gforth.texi:22820
msgid "You can define a class for graphical objects like this:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21735 ../doc/gforth.texi:22821
#, no-wrap
msgid "@code{class} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21736
#, no-wrap
msgid "@code{end-class} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21737
#, no-wrap
msgid "@code{selector} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21742
#, no-wrap
msgid ""
"object class \\ \"object\" is the parent class\n"
"  selector draw ( x y graphical -- )\n"
"end-class graphical\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21747 ../doc/gforth.texi:22833 ../doc/gforth.texi:23367
msgid ""
"This code defines a class @code{graphical} with an operation @code{draw}.  "
"We can perform the operation @code{draw} on any @code{graphical} object, e."
"g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21750 ../doc/gforth.texi:22836 ../doc/gforth.texi:23370
#, no-wrap
msgid "100 100 t-rex draw\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21755
msgid ""
"where @code{t-rex} is a word (say, a constant) that produces a graphical "
"object."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21759 ../doc/gforth.texi:22842
#, no-wrap
msgid "abstract class"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21766 ../doc/gforth.texi:22849
msgid ""
"How do we create a graphical object? With the present definitions, we cannot "
"create a useful graphical object. The class @code{graphical} describes "
"graphical objects in general, but not any concrete graphical object type (C+"
"+ users would call it an @emph{abstract class}); e.g., there is no method "
"for the selector @code{draw} in the class @code{graphical}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21769 ../doc/gforth.texi:22852 ../doc/gforth.texi:23377
msgid ""
"For concrete graphical objects, we define child classes of the class "
"@code{graphical}, e.g.:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21770
#, no-wrap
msgid "@code{overrides} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21771
#, no-wrap
msgid "@code{field} usage in class definition"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21775
#, no-wrap
msgid ""
"graphical class \\ \"graphical\" is the parent class\n"
"  cell% field circle-radius\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21779
#, no-wrap
msgid ""
":noname ( x y circle -- )\n"
"  circle-radius @@ draw-circle ;\n"
"overrides draw\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21783
#, no-wrap
msgid ""
":noname ( n-radius circle -- )\n"
"  circle-radius ! ;\n"
"overrides construct\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21785 ../doc/gforth.texi:22000 ../doc/gforth.texi:22025
#, no-wrap
msgid "end-class circle\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21792
msgid ""
"Here we define a class @code{circle} as a child of @code{graphical}, with "
"field @code{circle-radius} (which behaves just like a field "
"(@pxref{Structures}); it defines (using @code{overrides}) new methods for "
"the selectors @code{draw} and @code{construct} (@code{construct} is defined "
"in @code{object}, the parent class of @code{graphical})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21795
msgid ""
"Now we can create a circle on the heap (i.e., @code{allocate}d memory) with:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21796
#, no-wrap
msgid "@code{heap-new} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21799
#, no-wrap
msgid "50 circle heap-new constant my-circle\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21805
msgid ""
"@code{heap-new} invokes @code{construct}, thus initializing the field "
"@code{circle-radius} with 50. We can draw this new circle at (100,100) with:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21808 ../doc/gforth.texi:22883 ../doc/gforth.texi:23411
#, no-wrap
msgid "100 100 my-circle draw\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21810 ../doc/gforth.texi:22885
#, no-wrap
msgid "selector invocation, restrictions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21811 ../doc/gforth.texi:22886
#, no-wrap
msgid "class definition, restrictions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21819
msgid ""
"Note: You can only invoke a selector if the object on the TOS (the receiving "
"object) belongs to the class where the selector was defined or one of its "
"descendents; e.g., you can invoke @code{draw} only for objects belonging to "
"@code{graphical} or its descendents (e.g., @code{circle}).  Immediately "
"before @code{end-class}, the search order has to be the same as immediately "
"after @code{class}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21820 ../doc/gforth.texi:21830 ../doc/gforth.texi:21831
#: ../doc/gforth.texi:21853
#, no-wrap
msgid "Creating objects"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:21821
#, no-wrap
msgid "The @file{object.fs} base class"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21822
#, no-wrap
msgid "@code{object} class"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21829
msgid ""
"When you define a class, you have to specify a parent class.  So how do you "
"start defining classes? There is one class available from the start: "
"@code{object}. It is ancestor for all classes and so is the only class that "
"has no parent. It has two selectors: @code{construct} and @code{print}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21830 ../doc/gforth.texi:21853 ../doc/gforth.texi:21854
#: ../doc/gforth.texi:21876
#, no-wrap
msgid "Object-Oriented Programming Style"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21832
#, no-wrap
msgid "creating objects"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21833
#, no-wrap
msgid "object creation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21834
#, no-wrap
msgid "object allocation options"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21836
#, no-wrap
msgid "@code{heap-new} discussion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21837
#, no-wrap
msgid "@code{dict-new} discussion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21838
#, no-wrap
msgid "@code{construct} discussion"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21844
msgid ""
"You can create and initialize an object of a class on the heap with "
"@code{heap-new} ( ... class -- object ) and in the dictionary (allocation "
"with @code{allot}) with @code{dict-new} ( ... class -- object ). Both words "
"invoke @code{construct}, which consumes the stack items indicated by \"...\" "
"above."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21845
#, no-wrap
msgid "@code{init-object} discussion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21846
#, no-wrap
msgid "@code{class-inst-size} discussion"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21852
msgid ""
"If you want to allocate memory for an object yourself, you can get its "
"alignment and size with @code{class-inst-size 2@@} ( class -- align size ). "
"Once you have memory for an object, you can initialize it with @code{init-"
"object} ( ... class object -- ); @code{construct} does only a part of the "
"necessary work."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21853 ../doc/gforth.texi:21876 ../doc/gforth.texi:21877
#: ../doc/gforth.texi:21945
#, no-wrap
msgid "Class Binding"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21855
#, no-wrap
msgid "object-oriented programming style"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21856
#, no-wrap
msgid "programming style, object-oriented"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21859
msgid "This section is not exhaustive."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21860
#, no-wrap
msgid "stack effects of selectors"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21861
#, no-wrap
msgid "selectors and stack effects"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21867
msgid ""
"In general, it is a good idea to ensure that all methods for the same "
"selector have the same stack effect: when you invoke a selector, you often "
"have no idea which method will be invoked, so, unless all methods have the "
"same stack effect, you will not know the stack effect of the selector "
"invocation."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21875
msgid ""
"One exception to this rule is methods for the selector @code{construct}. We "
"know which method is invoked, because we specify the class to be constructed "
"at the same place. Actually, I defined @code{construct} as a selector only "
"to give the users a convenient way to specify initialization. The way it is "
"used, a mechanism different from selector invocation would be more natural "
"(but probably would take more code and more space to explain)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21876 ../doc/gforth.texi:21945 ../doc/gforth.texi:21946
#: ../doc/gforth.texi:22036
#, no-wrap
msgid "Method conveniences"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21878
#, no-wrap
msgid "class binding"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21879
#, no-wrap
msgid "early binding"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21881
#, no-wrap
msgid "late binding"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21885
msgid ""
"Normal selector invocations determine the method at run-time depending on "
"the class of the receiving object. This run-time selection is called @i{late "
"binding}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21891
msgid ""
"Sometimes it's preferable to invoke a different method. For example, you "
"might want to use the simple method for @code{print}ing @code{object}s "
"instead of the possibly long-winded @code{print} method of the receiver "
"class. You can achieve this by replacing the invocation of @code{print} with:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21892
#, no-wrap
msgid "@code{[bind]} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21895
#, no-wrap
msgid "[bind] object print\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21899
msgid "in compiled code or:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21900
#, no-wrap
msgid "@code{bind} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21903
#, no-wrap
msgid "bind object print\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21905
#, no-wrap
msgid "class binding, alternative to"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21912
msgid ""
"in interpreted code. Alternatively, you can define the method with a name (e."
"g., @code{print-object}), and then invoke it through the name. Class binding "
"is just a (often more convenient) way to achieve the same effect; it avoids "
"name clutter and allows you to invoke methods directly without naming them "
"first."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21913
#, no-wrap
msgid "superclass binding"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21914
#, no-wrap
msgid "parent class binding"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21922
msgid ""
"A frequent use of class binding is this: When we define a method for a "
"selector, we often want the method to do what the selector does in the "
"parent class, and a little more. There is a special word for this purpose: "
"@code{[parent]}; @code{[parent] @emph{selector}} is equivalent to "
"@code{[bind] @emph{parent selector}}, where @code{@emph{parent}} is the "
"parent class of the current class. E.g., a method definition might look like:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21923
#, no-wrap
msgid "@code{[parent]} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21929
#, no-wrap
msgid ""
":noname\n"
"  dup [parent] foo \\ do parent's foo on the receiving object\n"
"  ... \\ do some more\n"
"; overrides foo\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21931
#, no-wrap
msgid "class binding as optimization"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21938
msgid ""
"In @cite{Object-oriented programming in ANS Forth} (Forth Dimensions, March "
"1997), Andrew McKewan presents class binding as an optimization technique. I "
"recommend not using it for this purpose unless you are in an emergency. Late "
"binding is pretty fast with this model anyway, so the benefit of using class "
"binding is small; the cost of using class binding where it is not "
"appropriate is reduced maintainability."
msgstr ""

#. type: table
#: ../doc/gforth.texi:21944
msgid ""
"While we are at programming style questions: You should bind selectors only "
"to ancestor classes of the receiving object. E.g., say, you know that the "
"receiving object is of class @code{foo} or its descendents; then you should "
"bind only to @code{foo} and its ancestors."
msgstr ""

#. type: node
#: ../doc/gforth.texi:21945 ../doc/gforth.texi:22036 ../doc/gforth.texi:22037
#: ../doc/gforth.texi:22070
#, no-wrap
msgid "Classes and Scoping"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21947
#, no-wrap
msgid "method conveniences"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21955
msgid ""
"In a method you usually access the receiving object pretty often.  If you "
"define the method as a plain colon definition (e.g., with @code{:noname}), "
"you may have to do a lot of stack gymnastics. To avoid this, you can define "
"the method with @code{m: ... ;m}. E.g., you could define the method for "
"@code{draw}ing a @code{circle} with"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21956
#, no-wrap
msgid "@code{this} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21957
#, no-wrap
msgid "@code{m:} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21958
#, no-wrap
msgid "@code{;m} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21962
#, no-wrap
msgid ""
"m: ( x y circle -- )\n"
"  ( x y ) this circle-radius @@ draw-circle ;m\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21964
#, no-wrap
msgid "@code{exit} in @code{m: ... ;m}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21965
#, no-wrap
msgid "@code{exitm} discussion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21966
#, no-wrap
msgid "@code{catch} in @code{m: ... ;m}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21978
msgid ""
"When this method is executed, the receiver object is removed from the stack; "
"you can access it with @code{this} (admittedly, in this example the use of "
"@code{m: ... ;m} offers no advantage). Note that I specify the stack effect "
"for the whole method (i.e. including the receiver object), not just for the "
"code between @code{m:} and @code{;m}. You cannot use @code{exit} in "
"@code{m:...;m}; instead, use @code{exitm}.@footnote{Moreover, for any word "
"that calls @code{catch} and was defined before loading @code{objects.fs}, "
"you have to redefine it like I redefined @code{catch}: @code{: catch this >r "
"catch r> to-this ;}}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:21979
#, no-wrap
msgid "@code{inst-var} usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:21986
msgid ""
"You will frequently use sequences of the form @code{this @emph{field}} (in "
"the example above: @code{this circle-radius}). If you use the field only in "
"this way, you can define it with @code{inst-var} and eliminate the "
"@code{this} before the field name. E.g., the @code{circle} class above could "
"also be defined with:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21990
#, no-wrap
msgid ""
"graphical class\n"
"  cell% inst-var radius\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21994
#, no-wrap
msgid ""
"m: ( x y circle -- )\n"
"  radius @@ draw-circle ;m\n"
"overrides draw\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:21998
#, no-wrap
msgid ""
"m: ( n-radius circle -- )\n"
"  radius ! ;m\n"
"overrides construct\n"
"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22004
msgid ""
"@code{radius} can only be used in @code{circle} and its descendent classes "
"and inside @code{m:...;m}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22005
#, no-wrap
msgid "@code{inst-value} usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22011
msgid ""
"You can also define fields with @code{inst-value}, which is to @code{inst-"
"var} what @code{value} is to @code{variable}.  You can change the value of "
"such a field with @code{[to-inst]}.  E.g., we could also define the class "
"@code{circle} like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22015
#, no-wrap
msgid ""
"graphical class\n"
"  inst-value radius\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22019 ../doc/gforth.texi:22092
#, no-wrap
msgid ""
"m: ( x y circle -- )\n"
"  radius draw-circle ;m\n"
"overrides draw\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22023 ../doc/gforth.texi:22096
#, no-wrap
msgid ""
"m: ( n-radius circle -- )\n"
"  [to-inst] radius ;m\n"
"overrides construct\n"
"\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:22036 ../doc/gforth.texi:22070 ../doc/gforth.texi:22071
#: ../doc/gforth.texi:22072 ../doc/gforth.texi:22111
#, no-wrap
msgid "Dividing classes"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22038
#, no-wrap
msgid "classes and scoping"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22039
#, no-wrap
msgid "scoping and classes"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22046
msgid ""
"Inheritance is frequent, unlike structure extension. This exacerbates the "
"problem with the field name convention (@pxref{Structure Naming "
"Convention}): One always has to remember in which class the field was "
"originally defined; changing a part of the class structure would require "
"changes for renaming in otherwise unaffected code."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22047
#, no-wrap
msgid "@code{inst-var} visibility"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22048
#, no-wrap
msgid "@code{inst-value} visibility"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22054
msgid ""
"To solve this problem, I added a scoping mechanism (which was not in my "
"original charter): A field defined with @code{inst-var} (or @code{inst-"
"value}) is visible only in the class where it is defined and in the "
"descendent classes of this class.  Using such fields only makes sense in "
"@code{m:}-defined methods in these classes anyway."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22057
msgid ""
"This scoping mechanism allows us to use the unadorned field name, because "
"name clashes with unrelated words become much less likely."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22058
#, no-wrap
msgid "@code{protected} discussion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22059
#, no-wrap
msgid "@code{private} discussion"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22069
msgid ""
"Once we have this mechanism, we can also use it for controlling the "
"visibility of other words: All words defined after @code{protected} are "
"visible only in the current class and its descendents. @code{public} "
"restores the compilation (i.e. @code{current}) word list that was in effect "
"before. If you have several @code{protected}s without an intervening "
"@code{public} or @code{set-current}, @code{public} will restore the "
"compilation word list in effect before the first of these @code{protected}s."
msgstr ""

#. type: node
#: ../doc/gforth.texi:22070 ../doc/gforth.texi:22111 ../doc/gforth.texi:22112
#: ../doc/gforth.texi:22171
#, no-wrap
msgid "Object Interfaces"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22073
#, no-wrap
msgid "@code{methods}...@code{end-methods}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22079
msgid ""
"You may want to do the definition of methods separate from the definition of "
"the class, its selectors, fields, and instance variables, i.e., separate the "
"implementation from the definition.  You can do this in the following way:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22084
#, no-wrap
msgid ""
"graphical class\n"
"  inst-value radius\n"
"end-class circle\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22086
#, no-wrap
msgid ""
"... \\ do some other stuff\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22088
#, no-wrap
msgid ""
"circle methods \\ now we are ready\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22098
#, no-wrap
msgid "end-methods\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22104
msgid ""
"You can use several @code{methods}...@code{end-methods} sections.  The only "
"things you can do to the class in these sections are: defining methods, and "
"overriding the class's selectors.  You must not define new selectors or "
"fields."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22110
msgid ""
"Note that you often have to override a selector before using it.  In "
"particular, you usually have to override @code{construct} with a new method "
"before you can invoke @code{heap-new} and friends.  E.g., you must not "
"create a circle before the @code{overrides construct} sequence in the "
"example above."
msgstr ""

#. type: node
#: ../doc/gforth.texi:22111 ../doc/gforth.texi:22171 ../doc/gforth.texi:22311
#, no-wrap
msgid "Objects Implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22113
#, no-wrap
msgid "object interfaces"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22114
#, no-wrap
msgid "interfaces for objects"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22121
msgid ""
"In this model you can only call selectors defined in the class of the "
"receiving objects or in one of its ancestors. If you call a selector with a "
"receiving object that is not in one of these classes, the result is "
"undefined; if you are lucky, the program crashes immediately."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22122
#, no-wrap
msgid "selectors common to hardly-related classes"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22128
msgid ""
"Now consider the case when you want to have a selector (or several)  "
"available in two classes: You would have to add the selector to a common "
"ancestor class, in the worst case to @code{object}. You may not want to do "
"this, e.g., because someone else is responsible for this ancestor class."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22135
msgid ""
"The solution for this problem is interfaces. An interface is a collection of "
"selectors. If a class implements an interface, the selectors become "
"available to the class and its descendents. A class can implement an "
"unlimited number of interfaces. For the problem discussed above, we would "
"define an interface for the selector(s), and both classes would implement "
"the interface."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22139
msgid ""
"As an example, consider an interface @code{storage} for writing objects to "
"disk and getting them back, and a class @code{foo} that implements it. The "
"code would look like this:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22140
#, no-wrap
msgid "@code{interface} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22141
#, no-wrap
msgid "@code{end-interface} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22142
#, no-wrap
msgid "@code{implementation} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22148
#, no-wrap
msgid ""
"interface\n"
"  selector write ( file object -- )\n"
"  selector read1 ( file object -- )\n"
"end-interface storage\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22151
#, no-wrap
msgid ""
"bar class\n"
"  storage implementation\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22156
#, no-wrap
msgid ""
"... overrides write\n"
"... overrides read1\n"
"...\n"
"end-class foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22162
msgid ""
"(I would add a word @code{read} @i{( file -- object )} that uses "
"@code{read1} internally, but that's beyond the point illustrated here.)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22165
msgid ""
"Note that you cannot use @code{protected} in an interface; and of course you "
"cannot define fields."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22170
msgid ""
"In the Neon model, all selectors are available for all classes; therefore it "
"does not need interfaces. The price you pay in this model is slower late "
"binding, and therefore, added complexity to avoid late binding."
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:22172
#, no-wrap
msgid "@file{objects.fs} Implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22173
#, no-wrap
msgid "@file{objects.fs} implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22175
#, no-wrap
msgid "@code{object-map} discussion"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22180
msgid ""
"An object is a piece of memory, like one of the data structures described "
"with @code{struct...end-struct}. It has a field @code{object-map} that "
"points to the method map for the object's class."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22181
#, no-wrap
msgid "method map"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22182
#, no-wrap
msgid "virtual function table"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22187
msgid ""
"The @emph{method map}@footnote{This is Self terminology; in C++ terminology: "
"virtual function table.} is an array that contains the execution tokens "
"(@i{xt}s) of the methods for the object's class. Each selector contains an "
"offset into a method map."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22188
#, no-wrap
msgid "@code{selector} implementation, class"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22193
msgid ""
"@code{selector} is a defining word that uses @code{CREATE} and @code{DOES>}. "
"The body of the selector contains the offset; the @code{DOES>} action for a "
"class selector is, basically:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22196
#, no-wrap
msgid "( object addr ) @@ over object-map @@ + @@ execute\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22201
msgid ""
"Since @code{object-map} is the first field of the object, it does not "
"generate any code. As you can see, calling a selector has a small, constant "
"cost."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22202
#, no-wrap
msgid "@code{current-interface} discussion"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22203
#, no-wrap
msgid "class implementation and representation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22214
msgid ""
"A class is basically a @code{struct} combined with a method map. During the "
"class definition the alignment and size of the class are passed on the "
"stack, just as with @code{struct}s, so @code{field} can also be used for "
"defining class fields. However, passing more items on the stack would be "
"inconvenient, so @code{class} builds a data structure in memory, which is "
"accessed through the variable @code{current-interface}. After its definition "
"is complete, the class is represented on the stack by a pointer (e.g., as "
"parameter for a child class definition)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22220
msgid ""
"A new class starts off with the alignment and size of its parent, and a copy "
"of the parent's method map. Defining new fields extends the size and "
"alignment; likewise, defining new selectors extends the method map. "
"@code{overrides} just stores a new @i{xt} in the method map at the offset "
"given by the selector."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22221
#, no-wrap
msgid "class binding, implementation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22225
msgid ""
"Class binding just gets the @i{xt} at the offset given by the selector from "
"the class's method map and @code{compile,}s (in the case of @code{[bind]}) "
"it."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22226
#, no-wrap
msgid "@code{this} implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22227
#, no-wrap
msgid "@code{catch} and @code{this}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22228
#, no-wrap
msgid "@code{this} and @code{catch}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22241
msgid ""
"I implemented @code{this} as a @code{value}. At the start of an @code{m:...;"
"m} method the old @code{this} is stored to the return stack and restored at "
"the end; and the object on the TOS is stored @code{TO this}. This technique "
"has one disadvantage: If the user does not leave the method via @code{;m}, "
"but via @code{throw} or @code{exit}, @code{this} is not restored (and "
"@code{exit} may crash). To deal with the @code{throw} problem, I have "
"redefined @code{catch} to save and restore @code{this}; the same should be "
"done with any word that can catch an exception. As for @code{exit}, I simply "
"forbid it (as a replacement, there is @code{exitm})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22242
#, no-wrap
msgid "@code{inst-var} implementation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22245
msgid ""
"@code{inst-var} is just the same as @code{field}, with a different "
"@code{DOES>} action:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22247
#, no-wrap
msgid "@@ this +\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22249
msgid "Similar for @code{inst-value}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22250
#, no-wrap
msgid "class scoping implementation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22256
msgid ""
"Each class also has a word list that contains the words defined with "
"@code{inst-var} and @code{inst-value}, and its protected words. It also has "
"a pointer to its parent. @code{class} pushes the word lists of the class and "
"all its ancestors onto the search order stack, and @code{end-class} drops "
"them."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22257
#, no-wrap
msgid "interface implementation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22266
msgid ""
"An interface is like a class without fields, parent and protected words; i."
"e., it just has a method map. If a class implements an interface, its method "
"map contains a pointer to the method map of the interface. The positive "
"offsets in the map are reserved for class methods, therefore interface map "
"pointers have negative offsets. Interfaces have offsets that are unique "
"throughout the system, unlike class selectors, whose offsets are only unique "
"for the classes where the selector is available (invokable)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22272
msgid ""
"This structure means that interface selectors have to perform one "
"indirection more than class selectors to find their method. Their body "
"contains the interface map pointer offset in the class method map, and the "
"method offset in the interface method map. The @code{does>} action for an "
"interface selector is, basically:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22278
#, no-wrap
msgid ""
"( object selector-body )\n"
"2dup selector-interface @@ ( object selector-body object interface-offset )\n"
"swap object-map @@ + @@ ( object selector-body map )\n"
"swap selector-offset @@ + @@ execute\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22282
msgid ""
"where @code{object-map} and @code{selector-offset} are first fields and "
"generate no code."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22284
msgid "As a concrete example, consider the following code:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22290
#, no-wrap
msgid ""
"interface\n"
"  selector if1sel1\n"
"  selector if1sel2\n"
"end-interface if1\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22295
#, no-wrap
msgid ""
"object class\n"
"  if1 implementation\n"
"  selector cl1sel1\n"
"  cell% inst-var cl1iv1\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22301
#, no-wrap
msgid ""
"' m1 overrides construct\n"
"' m2 overrides if1sel1\n"
"' m3 overrides if1sel2\n"
"' m4 overrides cl1sel2\n"
"end-class cl1\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22304
#, no-wrap
msgid ""
"create obj1 object dict-new drop\n"
"create obj2 cl1    dict-new drop\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22310
msgid ""
"The data structure created by this code (including the data structure for "
"@code{object}) is shown in the @uref{objects-implementation.eps,figure}, "
"assuming a cell size of 4."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22312 ../doc/gforth.texi:22313
#, no-wrap
msgid "@file{objects.fs} Glossary"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22316
#, no-wrap
msgid "bind ( @var{ ... \"class\" \"selector\" -- ...   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22317 ../doc/gforth.texi:22318
#, no-wrap
msgid "bind"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22321
#, no-wrap
msgid "@code{bind} ( @i{... \"class\" \"selector\" -- ...  }) objects ``bind''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22323
msgid "Execute the method for @var{selector} in @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22325
#, no-wrap
msgid "<bind> ( @var{ class selector-xt -- xt   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22326 ../doc/gforth.texi:22327
#, no-wrap
msgid "<bind>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22330
#, no-wrap
msgid "@code{<bind>} ( @i{class selector-xt -- xt  }) objects ``<bind>''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22333
msgid ""
"@var{xt} is the method for the selector @var{selector-xt} in @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22335
#, no-wrap
msgid "bind' ( @var{ \"class\" \"selector\" -- xt   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22336 ../doc/gforth.texi:22337
#, no-wrap
msgid "bind'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22340
#, no-wrap
msgid "@code{bind'} ( @i{\"class\" \"selector\" -- xt  }) objects ``bind'''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22342
msgid "@var{xt} is the method for @var{selector} in @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22344
#, no-wrap
msgid "[bind] ( @var{ compile-time: \"class\" \"selector\" -- ; run-time: ... object -- ...   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22345 ../doc/gforth.texi:22346
#, no-wrap
msgid "[bind]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22349
#, no-wrap
msgid "@code{[bind]} ( @i{compile-time: \"class\" \"selector\" -- ; run-time: ... object -- ...  }) objects ``[bind]''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22351
msgid "Compile the method for @var{selector} in @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22353
#, no-wrap
msgid "class ( @var{ parent-class -- align offset   } ) objects"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22358
#, no-wrap
msgid "@code{class} ( @i{parent-class -- align offset  }) objects ``class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22362
msgid ""
"Start a new class definition as a child of @var{parent-class}. @var{align "
"offset} are for use by @var{field} etc."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22364
#, no-wrap
msgid "class->map ( @var{ class -- map   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22365 ../doc/gforth.texi:22366
#, no-wrap
msgid "class->map"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22369
#, no-wrap
msgid "@code{class->map} ( @i{class -- map  }) objects ``class->map''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22373
msgid ""
"@var{map} is the pointer to @var{class}'s method map; it points to the place "
"in the map to which the selector offsets refer (i.e., where @var{object-map}"
"s point to)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22375
#, no-wrap
msgid "class-inst-size ( @var{ class -- addr   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22376 ../doc/gforth.texi:22377
#, no-wrap
msgid "class-inst-size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22380
#, no-wrap
msgid "@code{class-inst-size} ( @i{class -- addr  }) objects ``class-inst-size''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22384
msgid ""
"Give the size specification for an instance (i.e. an object)  of "
"@var{class}; used as @code{class-inst-size 2@ ( class -- align size )}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22386
#, no-wrap
msgid "class-override! ( @var{ xt sel-xt class-map --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22387 ../doc/gforth.texi:22388
#, no-wrap
msgid "class-override!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22391
#, no-wrap
msgid "@code{class-override!} ( @i{xt sel-xt class-map --  }) objects ``class-override!''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22394
msgid ""
"@var{xt} is the new method for the selector @var{sel-xt} in @var{class-map}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22396
#, no-wrap
msgid "class-previous ( @var{ class --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22397 ../doc/gforth.texi:22398
#, no-wrap
msgid "class-previous"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22401
#, no-wrap
msgid "@code{class-previous} ( @i{class --  }) objects ``class-previous''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22405
msgid ""
"Drop @var{class}'s wordlists from the search order. No checking is made "
"whether @var{class}'s wordlists are actually on the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22407
#, no-wrap
msgid "class>order ( @var{ class --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22408 ../doc/gforth.texi:22409
#, no-wrap
msgid "class>order"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22412
#, no-wrap
msgid "@code{class>order} ( @i{class --  }) objects ``class>order''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22414
msgid "Add @var{class}'s wordlists to the head of the search-order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22416
#, no-wrap
msgid "construct ( @var{ ... object --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22417 ../doc/gforth.texi:22418
#, no-wrap
msgid "construct"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22421
#, no-wrap
msgid "@code{construct} ( @i{... object --  }) objects ``construct''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22424
msgid ""
"Initialize the data fields of @var{object}. The method for the class "
"@var{object} just does nothing: @code{( object -- )}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22426
#, no-wrap
msgid "current' ( @var{ \"selector\" -- xt   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22427 ../doc/gforth.texi:22428
#, no-wrap
msgid "current'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22431
#, no-wrap
msgid "@code{current'} ( @i{\"selector\" -- xt  }) objects ``current'''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22433
msgid "@var{xt} is the method for @var{selector} in the current class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22435
#, no-wrap
msgid "[current] ( @var{ compile-time: \"selector\" -- ; run-time: ... object -- ...   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22436 ../doc/gforth.texi:22437
#, no-wrap
msgid "[current]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22440
#, no-wrap
msgid "@code{[current]} ( @i{compile-time: \"selector\" -- ; run-time: ... object -- ...  }) objects ``[current]''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22442
msgid "Compile the method for @var{selector} in the current class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22444
#, no-wrap
msgid "current-interface ( @var{ -- addr   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22445 ../doc/gforth.texi:22446
#, no-wrap
msgid "current-interface"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22449
#, no-wrap
msgid "@code{current-interface} ( @i{-- addr  }) objects ``current-interface''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22452
msgid "Variable: contains the class or interface currently being defined."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22454
#, no-wrap
msgid "dict-new ( @var{ ... class -- object   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22455 ../doc/gforth.texi:22456
#, no-wrap
msgid "dict-new"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22459
#, no-wrap
msgid "@code{dict-new} ( @i{... class -- object  }) objects ``dict-new''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22462
msgid ""
"@code{allot} and initialize an object of class @var{class} in the dictionary."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22464
#, no-wrap
msgid "end-class ( @var{ align offset \"name\" --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22465 ../doc/gforth.texi:22466 ../doc/gforth.texi:23310
#: ../doc/gforth.texi:23311
#, no-wrap
msgid "end-class"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22469
#, no-wrap
msgid "@code{end-class} ( @i{align offset \"name\" --  }) objects ``end-class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22472
msgid ""
"@var{name} execution: @code{-- class}@* End a class definition. The "
"resulting class is @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22474
#, no-wrap
msgid "end-class-noname ( @var{ align offset -- class   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22475 ../doc/gforth.texi:22476
#, no-wrap
msgid "end-class-noname"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22479
#, no-wrap
msgid "@code{end-class-noname} ( @i{align offset -- class  }) objects ``end-class-noname''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22481
msgid "End a class definition. The resulting class is @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22483
#, no-wrap
msgid "end-interface ( @var{ \"name\" --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22484 ../doc/gforth.texi:22485
#, no-wrap
msgid "end-interface"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22488
#, no-wrap
msgid "@code{end-interface} ( @i{\"name\" --  }) objects ``end-interface''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22492
msgid ""
"@code{name} execution: @code{-- interface}@* End an interface definition. "
"The resulting interface is @var{interface}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22494
#, no-wrap
msgid "end-interface-noname ( @var{ -- interface   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22495 ../doc/gforth.texi:22496
#, no-wrap
msgid "end-interface-noname"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22499
#, no-wrap
msgid "@code{end-interface-noname} ( @i{-- interface  }) objects ``end-interface-noname''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22502
msgid ""
"End an interface definition. The resulting interface is @var{interface}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22504
#, no-wrap
msgid "end-methods ( @var{ --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22505 ../doc/gforth.texi:22506
#, no-wrap
msgid "end-methods"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22509
#, no-wrap
msgid "@code{end-methods} ( @i{--  }) objects ``end-methods''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22512
msgid ""
"Switch back from defining methods of a class to normal mode (currently this "
"just restores the old search order)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22514
#, no-wrap
msgid "exitm ( @var{ --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22515 ../doc/gforth.texi:22516
#, no-wrap
msgid "exitm"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22519
#, no-wrap
msgid "@code{exitm} ( @i{--  }) objects ``exitm''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22521
msgid "@code{exit} from a method; restore old @code{this}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22523
#, no-wrap
msgid "heap-new ( @var{ ... class -- object   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22524 ../doc/gforth.texi:22525
#, no-wrap
msgid "heap-new"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22528
#, no-wrap
msgid "@code{heap-new} ( @i{... class -- object  }) objects ``heap-new''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22530
msgid "@code{allocate} and initialize an object of class @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22532
#, no-wrap
msgid "implementation ( @var{ interface --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22533 ../doc/gforth.texi:22534
#, no-wrap
msgid "implementation"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22537
#, no-wrap
msgid "@code{implementation} ( @i{interface --  }) objects ``implementation''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22541
msgid ""
"The current class implements @var{interface}. I.e., you can use all "
"selectors of the interface in the current class and its descendents."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22543
#, no-wrap
msgid "init-object ( @var{ ... class object --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22544 ../doc/gforth.texi:22545
#, no-wrap
msgid "init-object"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22548
#, no-wrap
msgid "@code{init-object} ( @i{... class object --  }) objects ``init-object''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22551
msgid ""
"Initialize a chunk of memory (@var{object}) to an object of class "
"@var{class}; then performs @code{construct}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22553
#, no-wrap
msgid "inst-value ( @var{ align1 offset1 \"name\" -- align2 offset2   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22554 ../doc/gforth.texi:22555
#, no-wrap
msgid "inst-value"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22558
#, no-wrap
msgid "@code{inst-value} ( @i{align1 offset1 \"name\" -- align2 offset2  }) objects ``inst-value''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22562
msgid ""
"@var{name} execution: @code{-- w}@* @var{w} is the value of the field "
"@var{name} in @code{this} object."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22564
#, no-wrap
msgid "inst-var ( @var{ align1 offset1 align size \"name\" -- align2 offset2   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22565 ../doc/gforth.texi:22566
#, no-wrap
msgid "inst-var"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22569
#, no-wrap
msgid "@code{inst-var} ( @i{align1 offset1 align size \"name\" -- align2 offset2  }) objects ``inst-var''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22573
msgid ""
"@var{name} execution: @code{-- addr}@* @var{addr} is the address of the "
"field @var{name} in @code{this} object."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22575
#, no-wrap
msgid "interface ( @var{ --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22576 ../doc/gforth.texi:22577
#, no-wrap
msgid "interface"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22580
#, no-wrap
msgid "@code{interface} ( @i{--  }) objects ``interface''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22582
msgid "Start an interface definition."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22584
#, no-wrap
msgid "m: ( @var{ -- xt colon-sys; run-time: object --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22585 ../doc/gforth.texi:22586
#, no-wrap
msgid "m:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22589
#, no-wrap
msgid "@code{m:} ( @i{-- xt colon-sys; run-time: object --  }) objects ``m:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22591
msgid "Start a method definition; @var{object} becomes new @code{this}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22593
#, no-wrap
msgid ":m ( @var{ \"name\" -- xt; run-time: object --   } ) objects"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:22594
#, no-wrap
msgid ":m"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22597
#, no-wrap
msgid "@code{:m} ( @i{\"name\" -- xt; run-time: object --  }) objects ``:m''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22600
msgid ""
"Start a named method definition; @var{object} becomes new @code{this}.  Has "
"to be ended with @code{;m}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22602
#, no-wrap
msgid ";m ( @var{ colon-sys --; run-time: --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22603 ../doc/gforth.texi:22604
#, no-wrap
msgid ";m"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22607
#, no-wrap
msgid "@code{;m} ( @i{colon-sys --; run-time: --  }) objects ``;m''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22609
msgid "End a method definition; restore old @code{this}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22611
#, no-wrap
msgid "method ( @var{ xt \"name\" --   } ) objects"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22616
#, no-wrap
msgid "@code{method} ( @i{xt \"name\" --  }) objects ``method''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22620
msgid ""
"@code{name} execution: @code{... object -- ...}@* Create selector @var{name} "
"and makes @var{xt} its method in the current class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22622
#, no-wrap
msgid "methods ( @var{ class --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22623 ../doc/gforth.texi:22624
#, no-wrap
msgid "methods"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22627
#, no-wrap
msgid "@code{methods} ( @i{class --  }) objects ``methods''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22631
msgid ""
"Makes @var{class} the current class. This is intended to be used for "
"defining methods to override selectors; you cannot define new fields or "
"selectors."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22633
#, no-wrap
msgid "object ( @var{ -- class   } ) objects"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22638
#, no-wrap
msgid "@code{object} ( @i{-- class  }) objects ``object''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22640
msgid "the ancestor of all classes."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22642
#, no-wrap
msgid "overrides ( @var{ xt \"selector\" --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22643 ../doc/gforth.texi:22644
#, no-wrap
msgid "overrides"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22647
#, no-wrap
msgid "@code{overrides} ( @i{xt \"selector\" --  }) objects ``overrides''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22651
msgid ""
"replace default method for @var{selector} in the current class with "
"@var{xt}. @code{overrides} must not be used during an interface definition."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22653
#, no-wrap
msgid "[parent] ( @var{ compile-time: \"selector\" -- ; run-time: ... object -- ...   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22654 ../doc/gforth.texi:22655
#, no-wrap
msgid "[parent]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22658
#, no-wrap
msgid "@code{[parent]} ( @i{compile-time: \"selector\" -- ; run-time: ... object -- ...  }) objects ``[parent]''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22661
msgid ""
"Compile the method for @var{selector} in the parent of the current class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22663
#, no-wrap
msgid "print ( @var{ object --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22664 ../doc/gforth.texi:22665
#, no-wrap
msgid "print"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22668
#, no-wrap
msgid "@code{print} ( @i{object --  }) objects ``print''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22671
msgid ""
"Print the object. The method for the class @var{object} prints the address "
"of the object and the address of its class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22673
#, no-wrap
msgid "protected ( @var{ --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22674 ../doc/gforth.texi:22675
#, no-wrap
msgid "protected"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22678
#, no-wrap
msgid "@code{protected} ( @i{--  }) objects ``protected''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22680
msgid "Set the compilation wordlist to the current class's wordlist"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22682
#, no-wrap
msgid "public ( @var{ --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22683 ../doc/gforth.texi:22684
#, no-wrap
msgid "public"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22687
#, no-wrap
msgid "@code{public} ( @i{--  }) objects ``public''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22691
msgid ""
"Restore the compilation wordlist that was in effect before the last "
"@code{protected} that actually changed the compilation wordlist."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22693
#, no-wrap
msgid "selector ( @var{ \"name\" --   } ) objects"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22698
#, no-wrap
msgid "@code{selector} ( @i{\"name\" --  }) objects ``selector''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22703
msgid ""
"@var{name} execution: @code{... object -- ...}@* Create selector @var{name} "
"for the current class and its descendents; you can set a method for the "
"selector in the current class with @code{overrides}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22705
#, no-wrap
msgid "this ( @var{ -- object   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22706 ../doc/gforth.texi:22707
#, no-wrap
msgid "this"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22710
#, no-wrap
msgid "@code{this} ( @i{-- object  }) objects ``this''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22712
msgid "the receiving object of the current method (aka active object)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22714
#, no-wrap
msgid "<to-inst> ( @var{ w xt --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22715 ../doc/gforth.texi:22716
#, no-wrap
msgid "<to-inst>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22719
#, no-wrap
msgid "@code{<to-inst>} ( @i{w xt --  }) objects ``<to-inst>''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22721
msgid "store @var{w} into the field @var{xt} in @code{this} object."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22723
#, no-wrap
msgid "[to-inst] ( @var{ compile-time: \"name\" -- ; run-time: w --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22724 ../doc/gforth.texi:22725
#, no-wrap
msgid "[to-inst]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22728
#, no-wrap
msgid "@code{[to-inst]} ( @i{compile-time: \"name\" -- ; run-time: w --  }) objects ``[to-inst]''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22730
msgid "store @var{w} into field @var{name} in @code{this} object."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22732
#, no-wrap
msgid "to-this ( @var{ object --   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22733 ../doc/gforth.texi:22734
#, no-wrap
msgid "to-this"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22737
#, no-wrap
msgid "@code{to-this} ( @i{object --  }) objects ``to-this''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22739
msgid "Set @code{this} (used internally, but useful when debugging)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22741
#, no-wrap
msgid "xt-new ( @var{ ... class xt -- object   } ) objects"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22742 ../doc/gforth.texi:22743
#, no-wrap
msgid "xt-new"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22746
#, no-wrap
msgid "@code{xt-new} ( @i{... class xt -- object  }) objects ``xt-new''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22749
msgid ""
"Make a new object, using @code{xt ( align size -- addr )} to get memory."
msgstr ""

#. type: node
#: ../doc/gforth.texi:22754 ../doc/gforth.texi:23246 ../doc/gforth.texi:23262
#: ../doc/gforth.texi:23349 ../doc/gforth.texi:23413 ../doc/gforth.texi:23556
#, no-wrap
msgid "Mini-OOF"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22756
#, no-wrap
msgid "oof"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22763
msgid "This section describes the @file{oof.fs} package."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22767
msgid ""
"The package described in this section has been used in bigFORTH since 1991, "
"and used for two large applications: a chromatographic system used to create "
"new medicaments, and a graphic user interface library (MINOS)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22771
msgid ""
"You can find a description (in German) of @file{oof.fs} in @cite{Object "
"oriented bigFORTH} by Bernd Paysan, published in @cite{Vierte Dimension} "
"10(2), 1994."
msgstr ""

#. type: node
#: ../doc/gforth.texi:22780 ../doc/gforth.texi:22813
#, no-wrap
msgid "Properties of the OOF model"
msgstr ""

#. type: node
#: ../doc/gforth.texi:22780 ../doc/gforth.texi:22813 ../doc/gforth.texi:22896
#, no-wrap
msgid "Basic OOF Usage"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:22781
#, no-wrap
msgid "Properties of the @file{oof.fs} model"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22782
#, no-wrap
msgid "@file{oof.fs} properties"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22789
msgid ""
"This model combines object oriented programming with information hiding. It "
"helps you writing large application, where scoping is necessary, because it "
"provides class-oriented scoping."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22795
msgid ""
"Named objects, object pointers, and object arrays can be created, selector "
"invocation uses the ``object selector'' syntax. Selector invocation to "
"objects and/or selectors on the stack is a bit less convenient, but possible."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22799
msgid ""
"Selector invocation and instance variable usage of the active object is "
"straightforward, since both make use of the active object."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22806
msgid ""
"State-smart objects parse selectors. However, extensibility is provided "
"using a (parsing) selector @code{postpone} and a selector @code{'}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:22813 ../doc/gforth.texi:22896 ../doc/gforth.texi:23122
#, no-wrap
msgid "The OOF base class"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:22814
#, no-wrap
msgid "Basic @file{oof.fs} Usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22815
#, no-wrap
msgid "@file{oof.fs} usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22818
msgid ""
"This section uses the same example as for @code{objects} (@pxref{Basic "
"Objects Usage})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22822
#, no-wrap
msgid "@code{class;} usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22823
#, no-wrap
msgid "@code{method} usage"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22828
#, no-wrap
msgid ""
"object class graphical \\ \"object\" is the parent class\n"
"  method draw ( x y -- )\n"
"class;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22841
msgid ""
"where @code{t-rex} is an object or object pointer, created with e.g.  "
"@code{graphical : t-rex}."
msgstr ""

#. type: example
#: ../doc/gforth.texi:22859
#, no-wrap
msgid ""
"graphical class circle \\ \"graphical\" is the parent class\n"
"  cell var circle-radius\n"
"how:\n"
"  : draw ( x y -- )\n"
"    circle-radius @@ draw-circle ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22863
#, no-wrap
msgid ""
"  : init ( n-radius -- )\n"
"    circle-radius ! ;\n"
"class;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22869
msgid ""
"Here we define a class @code{circle} as a child of @code{graphical}, with a "
"field @code{circle-radius}; it defines new methods for the selectors "
"@code{draw} and @code{init} (@code{init} is defined in @code{object}, the "
"parent class of @code{graphical})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22871
msgid "Now we can create a circle in the dictionary with:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:22874
#, no-wrap
msgid "50 circle : my-circle\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22880
msgid ""
"@code{:} invokes @code{init}, thus initializing the field @code{circle-"
"radius} with 50. We can draw this new circle at (100,100)  with:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22894
msgid ""
"Note: You can only invoke a selector if the receiving object belongs to the "
"class where the selector was defined or one of its descendents; e.g., you "
"can invoke @code{draw} only for objects belonging to @code{graphical} or its "
"descendents (e.g., @code{circle}). The scoping mechanism will check if you "
"try to invoke a selector that is not defined in this class hierarchy, so "
"you'll get an error at compilation time."
msgstr ""

#. type: node
#: ../doc/gforth.texi:22896 ../doc/gforth.texi:23122 ../doc/gforth.texi:23123
#: ../doc/gforth.texi:23241
#, no-wrap
msgid "Class Declaration"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:22897
#, no-wrap
msgid "The @file{oof.fs} base class"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:22898
#, no-wrap
msgid "@file{oof.fs} base class"
msgstr ""

#. type: table
#: ../doc/gforth.texi:22907
msgid ""
"When you define a class, you have to specify a parent class.  So how do you "
"start defining classes? There is one class available from the start: "
"@code{object}. You have to use it as ancestor for all classes. It is the "
"only class that has no parent. Classes are also objects, except that they "
"don't have instance variables; class manipulation such as inheritance or "
"changing definitions of a class is handled through selectors of the class "
"@code{object}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:22909
msgid "@code{object} provides a number of selectors:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22915
msgid ""
"@code{class} for subclassing, @code{definitions} to add definitions later "
"on, and @code{class?} to get type informations (is the class a subclass of "
"the class passed on the stack?)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22916
#, no-wrap
msgid "object-class ( @var{ \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22917 ../doc/gforth.texi:22918
#, no-wrap
msgid "object-class"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22921
#, no-wrap
msgid "@code{object-class} ( @i{\"name\" --  }) oof ``object-class''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22923
#, no-wrap
msgid "object-definitions ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22924 ../doc/gforth.texi:22925
#, no-wrap
msgid "object-definitions"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22928
#, no-wrap
msgid "@code{object-definitions} ( @i{--  }) oof ``object-definitions''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22930
#, no-wrap
msgid "object-class? ( @var{ o -- flag   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22931 ../doc/gforth.texi:22932
#, no-wrap
msgid "object-class?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22935
#, no-wrap
msgid "@code{object-class?} ( @i{o -- flag  }) oof ``class-query''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22945
msgid ""
"@code{init} and @code{dispose} as constructor and destructor of the object. "
"@code{init} is invocated after the object's memory is allocated, while "
"@code{dispose} also handles deallocation. Thus if you redefine "
"@code{dispose}, you have to call the parent's dispose with @code{super "
"dispose}, too."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22946
#, no-wrap
msgid "object-init ( @var{ ... --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22947 ../doc/gforth.texi:22948
#, no-wrap
msgid "object-init"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22951
#, no-wrap
msgid "@code{object-init} ( @i{... --  }) oof ``object-init''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22953
#, no-wrap
msgid "object-dispose ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22954 ../doc/gforth.texi:22955
#, no-wrap
msgid "object-dispose"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22958
#, no-wrap
msgid "@code{object-dispose} ( @i{--  }) oof ``object-dispose''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:22966
msgid ""
"@code{new}, @code{new[]}, @code{:}, @code{ptr}, @code{asptr}, and @code{[]} "
"to create named and unnamed objects and object arrays or object pointers."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22967
#, no-wrap
msgid "object-new ( @var{ -- o   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22968 ../doc/gforth.texi:22969
#, no-wrap
msgid "object-new"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22972
#, no-wrap
msgid "@code{object-new} ( @i{-- o  }) oof ``object-new''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22974
#, no-wrap
msgid "object-new[] ( @var{ n -- o   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22975 ../doc/gforth.texi:22976
#, no-wrap
msgid "object-new[]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22979
#, no-wrap
msgid "@code{object-new[]} ( @i{n -- o  }) oof ``new-array''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22981
#, no-wrap
msgid "object-: ( @var{ \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22982 ../doc/gforth.texi:22983
#, no-wrap
msgid "object-:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22986
#, no-wrap
msgid "@code{object-:} ( @i{\"name\" --  }) oof ``define''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22988
#, no-wrap
msgid "object-ptr ( @var{ \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22989 ../doc/gforth.texi:22990
#, no-wrap
msgid "object-ptr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:22993
#, no-wrap
msgid "@code{object-ptr} ( @i{\"name\" --  }) oof ``object-ptr''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:22995
#, no-wrap
msgid "object-asptr ( @var{ o \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:22996 ../doc/gforth.texi:22997
#, no-wrap
msgid "object-asptr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23000
#, no-wrap
msgid "@code{object-asptr} ( @i{o \"name\" --  }) oof ``object-asptr''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23002
#, no-wrap
msgid "object-[] ( @var{ n \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23003 ../doc/gforth.texi:23004
#, no-wrap
msgid "object-[]"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23007
#, no-wrap
msgid "@code{object-[]} ( @i{n \"name\" --  }) oof ``array''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23015
msgid ""
"@code{::} and @code{super} for explicit scoping. You should use explicit "
"scoping only for super classes or classes with the same set of instance "
"variables. Explicitly-scoped selectors use early binding."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23016
#, no-wrap
msgid "object-:: ( @var{ \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23017 ../doc/gforth.texi:23018
#, no-wrap
msgid "object-::"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23021
#, no-wrap
msgid "@code{object-::} ( @i{\"name\" --  }) oof ``scope''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23023
#, no-wrap
msgid "object-super ( @var{ \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23024 ../doc/gforth.texi:23025
#, no-wrap
msgid "object-super"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23028
#, no-wrap
msgid "@code{object-super} ( @i{\"name\" --  }) oof ``object-super''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23034
msgid "@code{self} to get the address of the object"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23035
#, no-wrap
msgid "object-self ( @var{ -- o   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23036 ../doc/gforth.texi:23037
#, no-wrap
msgid "object-self"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23040
#, no-wrap
msgid "@code{object-self} ( @i{-- o  }) oof ``object-self''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23047
msgid ""
"@code{bind}, @code{bound}, @code{link}, and @code{is} to assign object "
"pointers and instance defers."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23048
#, no-wrap
msgid "object-bind ( @var{ o \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23049 ../doc/gforth.texi:23050
#, no-wrap
msgid "object-bind"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23053
#, no-wrap
msgid "@code{object-bind} ( @i{o \"name\" --  }) oof ``object-bind''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23055
#, no-wrap
msgid "object-bound ( @var{ class addr \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23056 ../doc/gforth.texi:23057
#, no-wrap
msgid "object-bound"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23060
#, no-wrap
msgid "@code{object-bound} ( @i{class addr \"name\" --  }) oof ``object-bound''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23062
#, no-wrap
msgid "object-link ( @var{ \"name\" -- class addr   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23063 ../doc/gforth.texi:23064
#, no-wrap
msgid "object-link"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23067
#, no-wrap
msgid "@code{object-link} ( @i{\"name\" -- class addr  }) oof ``object-link''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23069
#, no-wrap
msgid "object-is ( @var{ xt \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23070 ../doc/gforth.texi:23071
#, no-wrap
msgid "object-is"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23074
#, no-wrap
msgid "@code{object-is} ( @i{xt \"name\" --  }) oof ``object-is''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23081
msgid ""
"@code{'} to obtain selector tokens, @code{send} to invocate selectors form "
"the stack, and @code{postpone} to generate selector invocation code."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23082
#, no-wrap
msgid "object-' ( @var{ \"name\" -- xt   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23083 ../doc/gforth.texi:23084
#, no-wrap
msgid "object-'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23087
#, no-wrap
msgid "@code{object-'} ( @i{\"name\" -- xt  }) oof ``tick''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23089
#, no-wrap
msgid "object-postpone ( @var{ \"name\" --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23090 ../doc/gforth.texi:23091
#, no-wrap
msgid "object-postpone"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23094
#, no-wrap
msgid "@code{object-postpone} ( @i{\"name\" --  }) oof ``object-postpone''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23103
msgid ""
"@code{with} and @code{endwith} to select the active object from the stack, "
"and enable its scope. Using @code{with} and @code{endwith} also allows you "
"to create code using selector @code{postpone} without being trapped by the "
"state-smart objects."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23104
#, no-wrap
msgid "object-with ( @var{ o --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23105 ../doc/gforth.texi:23106
#, no-wrap
msgid "object-with"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23109
#, no-wrap
msgid "@code{object-with} ( @i{o --  }) oof ``object-with''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23111
#, no-wrap
msgid "object-endwith ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23112 ../doc/gforth.texi:23113
#, no-wrap
msgid "object-endwith"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23116
#, no-wrap
msgid "@code{object-endwith} ( @i{--  }) oof ``object-endwith''\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23124
#, no-wrap
msgid "class declaration"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23129
msgid "Instance variables"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23130
#, no-wrap
msgid "var ( @var{ size --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23131 ../doc/gforth.texi:23132 ../doc/gforth.texi:23292
#: ../doc/gforth.texi:23293
#, no-wrap
msgid "var"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23135
#, no-wrap
msgid "@code{var} ( @i{size --  }) oof ``var''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23137
msgid "Create an instance variable"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23143
msgid "Object pointers"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23144
#, no-wrap
msgid "ptr ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23145 ../doc/gforth.texi:23146
#, no-wrap
msgid "ptr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23149
#, no-wrap
msgid "@code{ptr} ( @i{--  }) oof ``ptr''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23151
msgid "Create an instance pointer"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23153
#, no-wrap
msgid "asptr ( @var{ class --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23154 ../doc/gforth.texi:23155
#, no-wrap
msgid "asptr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23158
#, no-wrap
msgid "@code{asptr} ( @i{class --  }) oof ``asptr''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23160
msgid "Create an alias to an instance pointer, cast to another class."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23166
msgid "Instance defers"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23167
#, no-wrap
msgid "defer ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23168 ../doc/gforth.texi:23169
#, no-wrap
msgid "defer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23172
#, no-wrap
msgid "@code{defer} ( @i{--  }) oof ``defer''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23174
msgid "Create an instance defer"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23180
msgid "Method selectors"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23181
#, no-wrap
msgid "early ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23182 ../doc/gforth.texi:23183
#, no-wrap
msgid "early"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23186
#, no-wrap
msgid "@code{early} ( @i{--  }) oof ``early''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23188
msgid "Create a method selector for early binding."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23190
#, no-wrap
msgid "method ( @var{ --   } ) oof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23195
#, no-wrap
msgid "@code{method} ( @i{--  }) oof ``method''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23197
msgid "Create a method selector."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23203
msgid "Class-wide variables"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23204
#, no-wrap
msgid "static ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23205 ../doc/gforth.texi:23206
#, no-wrap
msgid "static"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23209
#, no-wrap
msgid "@code{static} ( @i{--  }) oof ``static''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23211
msgid "Create a class-wide cell-sized variable."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23217
msgid "End declaration"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23218
#, no-wrap
msgid "how: ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23219 ../doc/gforth.texi:23220
#, no-wrap
msgid "how:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23223
#, no-wrap
msgid "@code{how:} ( @i{--  }) oof ``how-to''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23225
msgid "End declaration, start implementation"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23227
#, no-wrap
msgid "class; ( @var{ --   } ) oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23228 ../doc/gforth.texi:23229
#, no-wrap
msgid "class;"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23232
#, no-wrap
msgid "@code{class;} ( @i{--  }) oof ``end-class''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23234
msgid "End class declaration or implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23243
#, no-wrap
msgid "class implementation"
msgstr ""

#. type: node
#: ../doc/gforth.texi:23246 ../doc/gforth.texi:23556 ../doc/gforth.texi:23557
#: ../doc/gforth.texi:23602
#, no-wrap
msgid "Mini-OOF2"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23248
#, no-wrap
msgid "mini-oof"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23254
msgid ""
"Gforth's third object oriented Forth package is a 12-liner. It uses a "
"mixture of the @file{objects.fs} and the @file{oof.fs} syntax, and reduces "
"to the bare minimum of features. This is based on a posting of Bernd Paysan "
"in comp.lang.forth."
msgstr ""

#. type: node
#: ../doc/gforth.texi:23262 ../doc/gforth.texi:23349
#, no-wrap
msgid "Basic Mini-OOF Usage"
msgstr ""

#. type: node
#: ../doc/gforth.texi:23262 ../doc/gforth.texi:23349 ../doc/gforth.texi:23350
#: ../doc/gforth.texi:23413
#, no-wrap
msgid "Mini-OOF Example"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:23263
#, no-wrap
msgid "Basic @file{mini-oof.fs} Usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23264
#, no-wrap
msgid "mini-oof usage"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23271
msgid ""
"There is a base class (@code{class}, which allocates one cell for the object "
"pointer) plus seven other words: to define a method, a variable, a class; to "
"end a class, to resolve binding, to allocate an object and to compile a "
"class method."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23273
#, no-wrap
msgid "object ( @var{ -- a-addr   } ) mini-oof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23278
#, no-wrap
msgid "@code{object} ( @i{-- a-addr  }) mini-oof ``object''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23280
msgid "@var{object} is the base class of all objects."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23282
#, no-wrap
msgid "method ( @var{ m v \"name\" -- m' v   } ) mini-oof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23287
#, no-wrap
msgid "@code{method} ( @i{m v \"name\" -- m' v  }) mini-oof ``method''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23289
msgid "Define a selector."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23291
#, no-wrap
msgid "var ( @var{ m v size \"name\" -- m v'   } ) mini-oof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23296
#, no-wrap
msgid "@code{var} ( @i{m v size \"name\" -- m v'  }) mini-oof ``var''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23298
msgid "Define a variable with @var{size} bytes."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23300
#, no-wrap
msgid "class ( @var{ class -- class selectors vars   } ) mini-oof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23305
#, no-wrap
msgid "@code{class} ( @i{class -- class selectors vars  }) mini-oof ``class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23307
msgid "Start the definition of a class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23309
#, no-wrap
msgid "end-class ( @var{ class selectors vars \"name\" --   } ) mini-oof"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23314
#, no-wrap
msgid "@code{end-class} ( @i{class selectors vars \"name\" --  }) mini-oof ``end-class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23316
msgid "End the definition of a class."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23318
#, no-wrap
msgid "defines ( @var{ xt class \"name\" --   } ) mini-oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23319 ../doc/gforth.texi:23320
#, no-wrap
msgid "defines"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23323
#, no-wrap
msgid "@code{defines} ( @i{xt class \"name\" --  }) mini-oof ``defines''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23325
msgid "Bind @var{xt} to the selector @var{name} in class @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23327
#, no-wrap
msgid "new ( @var{ class -- o   } ) mini-oof"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23328 ../doc/gforth.texi:23329
#, no-wrap
msgid "new"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23332
#, no-wrap
msgid "@code{new} ( @i{class -- o  }) mini-oof ``new''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23334
msgid "Create a new incarnation of the class @var{class}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23336
#, no-wrap
msgid ":: ( @var{ class \"name\" --   } ) mini-oof"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:23337
#, no-wrap
msgid "::"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23340
#, no-wrap
msgid "@code{::} ( @i{class \"name\" --  }) mini-oof ``colon-colon''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23343
msgid ""
"Compile the method for the selector @var{name} of the class @var{class} (not "
"immediate!)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23351
#, no-wrap
msgid "mini-oof example"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23356
msgid ""
"A short example shows how to use this package. This example, in slightly "
"extended form, is supplied as @file{moof-exm.fs}"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23362
#, no-wrap
msgid ""
"object class\n"
"  method init\n"
"  method draw\n"
"end-class graphical\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23374
msgid ""
"where @code{t-rex} is an object or object pointer, created with e.g.  "
"@code{graphical new Constant t-rex}."
msgstr ""

#. type: example
#: ../doc/gforth.texi:23382
#, no-wrap
msgid ""
"graphical class\n"
"  cell var circle-radius\n"
"end-class circle \\ \"graphical\" is the parent class\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23387
#, no-wrap
msgid ""
":noname ( x y -- )\n"
"  circle-radius @@ draw-circle ; circle defines draw\n"
":noname ( r -- )\n"
"  circle-radius ! ; circle defines init\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23391
msgid ""
"There is no implicit init method, so we have to define one. The creation "
"code of the object now has to call init explicitely."
msgstr ""

#. type: example
#: ../doc/gforth.texi:23395
#, no-wrap
msgid ""
"circle new Constant my-circle\n"
"50 my-circle init\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23400
msgid ""
"It is also possible to add a function to create named objects with automatic "
"call of @code{init}, given that all objects have @code{init} on the same "
"place:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23405
#, no-wrap
msgid ""
": new: ( .. o \"name\" -- )\n"
"    new dup Constant init ;\n"
"80 circle new: large-circle\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23408
msgid "We can draw this new circle at (100,100) with:"
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:23414
#, no-wrap
msgid "@file{mini-oof.fs} Implementation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23420
msgid ""
"Object-oriented systems with late binding typically use a ``vtable''-"
"approach: the first variable in each object is a pointer to a table, which "
"contains the methods as function pointers. The vtable may also contain other "
"information."
msgstr ""

#. type: table
#: ../doc/gforth.texi:23422
msgid "So first, let's declare selectors:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23426
#, no-wrap
msgid ""
": method ( m v \"name\" -- m' v ) Create  over , swap cell+ swap\n"
"  DOES> ( ... o -- ... ) @@ over @@ + @@ execute ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23436
msgid ""
"During selector declaration, the number of selectors and instance variables "
"is on the stack (in address units). @code{method} creates one selector and "
"increments the selector number. To execute a selector, it takes the object, "
"fetches the vtable pointer, adds the offset, and executes the method @i{xt} "
"stored there. Each selector takes the object it is invoked with as top of "
"stack parameter; it passes the parameters (including the object) unchanged "
"to the appropriate method which should consume that object."
msgstr ""

#. type: table
#: ../doc/gforth.texi:23438
msgid "Now, we also have to declare instance variables"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23442
#, no-wrap
msgid ""
": var ( m v size \"name\" -- m v' ) Create  over , +\n"
"  DOES> ( o -- addr ) @@ + ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23450
msgid ""
"As before, a word is created with the current offset. Instance variables can "
"have different sizes (cells, floats, doubles, chars), so all we do is take "
"the size and add it to the offset. If your machine has alignment "
"restrictions, put the proper @code{aligned} or @code{faligned} before the "
"variable, to adjust the variable offset. That's why it is on the top of "
"stack."
msgstr ""

#. type: table
#: ../doc/gforth.texi:23452
msgid "We need a starting point (the base object) and some syntactic sugar:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23456
#, no-wrap
msgid ""
"Create object  1 cells , 2 cells ,\n"
": class ( class -- class selectors vars ) dup 2@@ ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23461
msgid ""
"For inheritance, the vtable of the parent object has to be copied when a "
"new, derived class is declared. This gives all the methods of the parent "
"class, which can be overridden, though."
msgstr ""

#. type: example
#: ../doc/gforth.texi:23466
#, no-wrap
msgid ""
": end-class  ( class selectors vars \"name\" -- )\n"
"  Create  here >r , dup , 2 cells ?DO ['] noop , 1 cells +LOOP\n"
"  cell+ dup cell+ r> rot @@ 2 cells /string move ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23471
msgid ""
"The first line creates the vtable, initialized with @code{noop}s. The second "
"line is the inheritance mechanism, it copies the xts from the parent vtable."
msgstr ""

#. type: table
#: ../doc/gforth.texi:23473
msgid "We still have no way to define new methods, let's do that now:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23476
#, no-wrap
msgid ": defines ( xt class \"name\" -- ) ' >body @@ + ! ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23479
msgid "To allocate a new object, we need a word, too:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23482
#, no-wrap
msgid ": new ( class -- o )  here over @@ allot swap over ! ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23488
msgid ""
"Sometimes derived classes want to access the method of the parent object. "
"There are two ways to achieve this with Mini-OOF: first, you could use named "
"words, and second, you could look up the vtable of the parent object."
msgstr ""

#. type: example
#: ../doc/gforth.texi:23491
#, no-wrap
msgid ": :: ( class \"name\" -- ) ' >body @@ + @@ compile, ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23497
msgid ""
"Nothing can be more confusing than a good example, so here is one. First "
"let's declare a text object (called @code{button}), that stores text and "
"position:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23507
#, no-wrap
msgid ""
"object class\n"
"  cell var text\n"
"  cell var len\n"
"  cell var x\n"
"  cell var y\n"
"  method init\n"
"  method draw\n"
"end-class button\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23511
msgid "Now, implement the two methods, @code{draw} and @code{init}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23519
#, no-wrap
msgid ""
":noname ( o -- )\n"
" >r r@@ x @@ r@@ y @@ at-xy  r@@ text @@ r> len @@ type ;\n"
" button defines draw\n"
":noname ( addr u o -- )\n"
" >r 0 r@@ x ! 0 r@@ y ! r@@ len ! r> text ! ;\n"
" button defines init\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23524
msgid ""
"To demonstrate inheritance, we define a class @code{bold-button}, with no "
"new data and no new selectors:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23528
#, no-wrap
msgid ""
"button class\n"
"end-class bold-button\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23531
#, no-wrap
msgid ""
": bold   27 emit .\" [1m\" ;\n"
": normal 27 emit .\" [0m\" ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23537
msgid ""
"The class @code{bold-button} has a different draw method to @code{button}, "
"but the new method is defined in terms of the draw method for @code{button}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23540
#, no-wrap
msgid ":noname bold [ button :: draw ] normal ; bold-button defines draw\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23544
msgid "Finally, create two objects and apply selectors:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:23554
#, no-wrap
msgid ""
"button new Constant foo\n"
"s\" thin foo\" foo init\n"
"page\n"
"foo draw\n"
"bold-button new Constant bar\n"
"s\" fat bar\" bar init\n"
"1 bar y !\n"
"bar draw\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23564
msgid ""
"Mini-OOF2 is very similar to Mini-OOF in many respects, but differs "
"significantly in a few aspects.  In particular, Mini-OOF2 has a current "
"object variable, and uses the primitives @code{>o} and @code{o>} to "
"manipulate that object stack.  All method invocations and instance variable "
"accesses refer to the current object."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23565
#, no-wrap
msgid ">o ( @var{ c-addr -- r:c-old  } ) new"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23566 ../doc/gforth.texi:23567
#, no-wrap
msgid ">o"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23570
#, no-wrap
msgid "@code{>o} ( @i{c-addr -- r:c-old }) new ``to-o''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23572
msgid ""
"Set the current object to @var{c_addr}, the previous current object is "
"pushed to the return stack"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23573
#, no-wrap
msgid "o> ( @var{ r:c-addr --  } ) new"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23574 ../doc/gforth.texi:23575
#, no-wrap
msgid "o>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23578
#, no-wrap
msgid "@code{o>} ( @i{r:c-addr -- }) new ``o-restore''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23580
msgid "Restore the previous current object from the return stack"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23585
msgid ""
"To ease passing an object pointer to method invocation or instance variable "
"accesses, the additional recognizer @code{rec-moof2} is activated."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23586
#, no-wrap
msgid "rec-moof2 ( @var{ addr u -- xt translate-moof2 | notfound   } ) mini-oof2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23587 ../doc/gforth.texi:23588
#, no-wrap
msgid "rec-moof2"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23591
#, no-wrap
msgid "@code{rec-moof2} ( @i{addr u -- xt translate-moof2 | notfound  }) mini-oof2 ``rec-moof2''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23594
msgid ""
"Very simplistic dot-parser, transforms @code{.}@var{selector/ivar} to "
"@code{>o} @var{selector/ivar} @code{o>}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:23601
msgid ""
"To assign methods to selectors, use @var{xt class} @code{is} @var{selector}, "
"so no @code{defines} necessary.  For early binding of methods, @code{[} "
"@var{class} @code{] defers} @var{selector} is used, no need for @code{::}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23604
#, no-wrap
msgid "comparison of object models"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23605
#, no-wrap
msgid "object models, comparison"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23613
msgid ""
"Many object-oriented Forth extensions have been proposed (@cite{A survey of "
"object-oriented Forths} (SIGPLAN Notices, April 1996) by Bradford J. "
"Rodriguez and W. F. S. Poehlman lists 17). This section discusses the "
"relation of the object models described here to two well-known and two "
"closely-related (by the use of method maps) models.  Andras Zsoter helped us "
"with this section."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23614
#, no-wrap
msgid "Neon model"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23621
msgid ""
"The most popular model currently seems to be the Neon model (see "
"@cite{Object-oriented programming in ANS Forth} (Forth Dimensions, March "
"1997) by Andrew McKewan) but this model has a number of limitations "
"@footnote{A longer version of this critique can be found in @cite{On "
"Standardizing Object-Oriented Forth Extensions} (Forth Dimensions, May 1997) "
"by Anton Ertl.}:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23626
msgid ""
"It uses a @code{@emph{selector object}} syntax, which makes it unnatural to "
"pass objects on the stack."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23631
msgid ""
"It requires that the selector parses the input stream (at compile time); "
"this leads to reduced extensibility and to bugs that are hard to find."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:23636
msgid ""
"It allows using every selector on every object; this eliminates the need for "
"interfaces, but makes it harder to create efficient implementations."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23638
#, no-wrap
msgid "Pountain's object-oriented model"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23644
msgid ""
"Another well-known publication is @cite{Object-Oriented Forth} (Academic "
"Press, London, 1987) by Dick Pountain. However, it is not really about "
"object-oriented programming, because it hardly deals with late binding. "
"Instead, it focuses on features like information hiding and overloading that "
"are characteristic of modular languages like Ada (83)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23645
#, no-wrap
msgid "Zsoter's object-oriented model"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23660
msgid ""
"In @uref{http://www.forth.org/oopf.html, Does late binding have to be slow?} "
"(Forth Dimensions 18(1) 1996, pages 31-35) Andras Zsoter describes a model "
"that makes heavy use of an active object (like @code{this} in @file{objects."
"fs}): The active object is not only used for accessing all fields, but also "
"specifies the receiving object of every selector invocation; you have to "
"change the active object explicitly with @code{@{ ... @}}, whereas in "
"@file{objects.fs} it changes more or less implicitly at @code{m: ... ;m}. "
"Such a change at the method entry point is unnecessary with Zsoter's model, "
"because the receiving object is the active object already. On the other "
"hand, the explicit change is absolutely necessary in that model, because "
"otherwise no one could ever change the active object. An Standard Forth "
"implementation of this model is available through @uref{http://www.forth.org/"
"oopf.html}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23661
#, no-wrap
msgid "@file{oof.fs}, differences to other models"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23676
msgid ""
"The @file{oof.fs} model combines information hiding and overloading "
"resolution (by keeping names in various word lists) with object-oriented "
"programming. It sets the active object implicitly on method entry, but also "
"allows explicit changing (with @code{>o...o>} or with @code{with..."
"endwith}). It uses parsing and state-smart objects and classes for resolving "
"overloading and for early binding: the object or class parses the selector "
"and determines the method from this. If the selector is not parsed by an "
"object or class, it performs a call to the selector for the active object "
"(late binding), like Zsoter's model.  Fields are always accessed through the "
"active object. The big disadvantage of this model is the parsing and the "
"state-smartness, which reduces extensibility and increases the opportunities "
"for subtle bugs; essentially, you are only safe if you never tick or "
"@code{postpone} an object or class (Bernd disagrees, but I (Anton) am not "
"convinced)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23677
#, no-wrap
msgid "@file{mini-oof.fs}, differences to other models"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23681
msgid ""
"The @file{mini-oof.fs} model is quite similar to a very stripped-down "
"version of the @file{objects.fs} model, but syntactically it is a mixture of "
"the @file{objects.fs} and @file{oof.fs} models."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:23685
#, no-wrap
msgid "regexps"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23690
msgid ""
"Regular expressions are pattern matching algorithms for strings found in "
"many contemporary languages.  You can add regular expression functionality "
"to Gforth with @code{require regexp.fs}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:23698
msgid ""
"The classical implementation for this pattern matching is a backtracking "
"algorithm, which is also necessary if you want to have features like "
"backreferencing.  Gforth implements regular expressions by providing a "
"language to define backtracking programs for pattern matching.  Basic "
"element is the control structure @code{FORK} @dots{} @code{JOIN}, which is a "
"forward call within a word, and therefore allows to code a lightweight try "
"and fail control structure."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23699
#, no-wrap
msgid "FORK ( @var{ compilation -- orig ; run-time f --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23700 ../doc/gforth.texi:23701
#, no-wrap
msgid "FORK"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23704
#, no-wrap
msgid "@code{FORK} ( @i{compilation -- orig ; run-time f --  }) gforth-0.7 ``FORK''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23706
msgid "AHEAD-like control structure: calls the code after JOIN."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23708
#, no-wrap
msgid "JOIN ( @var{ orig --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23709 ../doc/gforth.texi:23710
#, no-wrap
msgid "JOIN"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23713
#, no-wrap
msgid "@code{JOIN} ( @i{orig --  }) gforth-0.7 ``JOIN''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23715
msgid "THEN-like control structure for FORK"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23721
msgid ""
"You can program any sort of arbitrary checks yourself by computing a flag "
"and @code{?LEAVE} when the check fails.  Your regular expression code is "
"enclosed in @code{((} and @code{))}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23722
#, no-wrap
msgid "(( ( @var{ addr u --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23723 ../doc/gforth.texi:23724
#, no-wrap
msgid "(("
msgstr ""

#. type: format
#: ../doc/gforth.texi:23727
#, no-wrap
msgid "@code{((} ( @i{addr u --  }) regexp-pattern ``((''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23729
msgid "start regexp block"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23731
#, no-wrap
msgid ")) ( @var{ -- flag   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23732 ../doc/gforth.texi:23733
#, no-wrap
msgid "))"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23736
#, no-wrap
msgid "@code{))} ( @i{-- flag  }) regexp-pattern ``))''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23738
msgid "end regexp block"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23745
msgid ""
"Pattern matching in regular expressions have character sets as elements, so "
"a number of functions allow you to create and modify character sets (called "
"@code{charclass}).  All characters here are bytes, so this doesn't extend to "
"unicode characters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23746
#, no-wrap
msgid "charclass ( @var{ --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23747 ../doc/gforth.texi:23748
#, no-wrap
msgid "charclass"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23751
#, no-wrap
msgid "@code{charclass} ( @i{--  }) regexp-cg ``charclass''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23753
msgid "Create a charclass"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23755
#, no-wrap
msgid "+char ( @var{ char --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23756 ../doc/gforth.texi:23757
#, no-wrap
msgid "+char"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23760
#, no-wrap
msgid "@code{+char} ( @i{char --  }) regexp-cg ``+char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23762
msgid "add a char to the current charclass"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23764
#, no-wrap
msgid "-char ( @var{ char --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23765 ../doc/gforth.texi:23766
#, no-wrap
msgid "-char"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23769
#, no-wrap
msgid "@code{-char} ( @i{char --  }) regexp-cg ``-char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23771
msgid "remove a char from the current charclass"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23773
#, no-wrap
msgid "..char ( @var{ start end --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23774 ../doc/gforth.texi:23775
#, no-wrap
msgid "..char"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23778
#, no-wrap
msgid "@code{..char} ( @i{start end --  }) regexp-cg ``..char''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23780
msgid "add a range of chars to the current charclass"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23782
#, no-wrap
msgid "+chars ( @var{ addr u --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23783 ../doc/gforth.texi:23784
#, no-wrap
msgid "+chars"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23787
#, no-wrap
msgid "@code{+chars} ( @i{addr u --  }) regexp-cg ``+chars''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23789
msgid "add a string of chars to the current charclass"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23791
#, no-wrap
msgid "+class ( @var{ class --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23792 ../doc/gforth.texi:23793
#, no-wrap
msgid "+class"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23796
#, no-wrap
msgid "@code{+class} ( @i{class --  }) regexp-cg ``+class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23798
msgid "union of charclass @var{class} and the current charclass"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23800
#, no-wrap
msgid "-class ( @var{ class --   } ) regexp-cg"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23801 ../doc/gforth.texi:23802
#, no-wrap
msgid "-class"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23805
#, no-wrap
msgid "@code{-class} ( @i{class --  }) regexp-cg ``-class''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23807
msgid "subtract the charclass @var{class} from the current charclass"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23813
msgid ""
"There are predefined charclasses and tests for them, and generic checks.  If "
"a check fails, the next possible alternative of the regular expression is "
"tried, or a loop is terminated."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23814
#, no-wrap
msgid "c? ( @var{ addr class --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23815 ../doc/gforth.texi:23816
#, no-wrap
msgid "c?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23819
#, no-wrap
msgid "@code{c?} ( @i{addr class --  }) regexp-pattern ``c?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23821
msgid "check @var{addr} for membership in charclass @var{class}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23823
#, no-wrap
msgid "-c? ( @var{ addr class --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23824 ../doc/gforth.texi:23825
#, no-wrap
msgid "-c?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23828
#, no-wrap
msgid "@code{-c?} ( @i{addr class --  }) regexp-pattern ``-c?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23830
msgid "check @var{addr} for not membership in charclass @var{class}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23832
#, no-wrap
msgid "\\d ( @var{ addr -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23833 ../doc/gforth.texi:23834
#, no-wrap
msgid "\\d"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23837
#, no-wrap
msgid "@code{\\d} ( @i{addr -- addr'  }) regexp-pattern ``\\d''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23839
msgid "check for digit"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23841
#, no-wrap
msgid "\\s ( @var{ addr -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23842 ../doc/gforth.texi:23843
#, no-wrap
msgid "\\s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23846
#, no-wrap
msgid "@code{\\s} ( @i{addr -- addr'  }) regexp-pattern ``\\s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23848
msgid "check for blanks"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23850
#, no-wrap
msgid ".? ( @var{ addr -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23851 ../doc/gforth.texi:23852
#, no-wrap
msgid ".?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23855
#, no-wrap
msgid "@code{.?} ( @i{addr -- addr'  }) regexp-pattern ``.?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23857
msgid "check for any single charachter"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23859
#, no-wrap
msgid "-\\d ( @var{ addr -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23860 ../doc/gforth.texi:23861
#, no-wrap
msgid "-\\d"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23864
#, no-wrap
msgid "@code{-\\d} ( @i{addr -- addr'  }) regexp-pattern ``-\\d''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23866
msgid "check for not digit"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23868
#, no-wrap
msgid "-\\s ( @var{ addr -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23869 ../doc/gforth.texi:23870
#, no-wrap
msgid "-\\s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23873
#, no-wrap
msgid "@code{-\\s} ( @i{addr -- addr'  }) regexp-pattern ``-\\s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23875
msgid "check for not blank"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23877
#, no-wrap
msgid "` ( @var{ \"char\" --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23878 ../doc/gforth.texi:23879
#, no-wrap
msgid "`"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23882
#, no-wrap
msgid "@code{`} ( @i{\"char\" --  }) regexp-pattern ```''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23884 ../doc/gforth.texi:23900
msgid "check for particular char"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23886
#, no-wrap
msgid "`? ( @var{ \"char\" --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23887 ../doc/gforth.texi:23888
#, no-wrap
msgid "`?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23891
#, no-wrap
msgid "@code{`?} ( @i{\"char\" --  }) regexp-pattern ```?''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23893
#, no-wrap
msgid "-` ( @var{ \"char\" --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23894 ../doc/gforth.texi:23895
#, no-wrap
msgid "-`"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23898
#, no-wrap
msgid "@code{-`} ( @i{\"char\" --  }) regexp-pattern ``-`''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23905
msgid ""
"You can certainly also check for start and end of the string, and for whole "
"string constants."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23906
#, no-wrap
msgid "\\^ ( @var{ addr -- addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23907 ../doc/gforth.texi:23908
#, no-wrap
msgid "\\^"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23911
#, no-wrap
msgid "@code{\\^} ( @i{addr -- addr  }) regexp-pattern ``\\^''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23913
msgid "check for string start"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23915
#, no-wrap
msgid "\\$ ( @var{ addr -- addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23916 ../doc/gforth.texi:23917
#, no-wrap
msgid "\\$"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23920
#, no-wrap
msgid "@code{\\$} ( @i{addr -- addr  }) regexp-pattern ``\\$''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23922
msgid "check for string end"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23924
#, no-wrap
msgid "str=? ( @var{ addr1 addr u -- addr2   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23925 ../doc/gforth.texi:23926
#, no-wrap
msgid "str=?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23929
#, no-wrap
msgid "@code{str=?} ( @i{addr1 addr u -- addr2  }) regexp-pattern ``str=?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23931
msgid "check for a computed string on the stack (possibly a backreference)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23934
msgid "doc-=''"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23937
msgid ""
"Loops that check for repeated character sets can be greedy or non-greedy."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23938
#, no-wrap
msgid "@{** ( @var{ addr -- addr addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23939 ../doc/gforth.texi:23940
#, no-wrap
msgid "@{**"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23943
#, no-wrap
msgid "@code{@{**} ( @i{addr -- addr addr  }) regexp-pattern ``begin-greedy-star''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23945
msgid "greedy zero-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23947
#, no-wrap
msgid "**@} ( @var{ sys --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23948 ../doc/gforth.texi:23949
#, no-wrap
msgid "**@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23952
#, no-wrap
msgid "@code{**@}} ( @i{sys --  }) regexp-pattern ``end-greedy-star''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23954
msgid "end of greedy zero-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23956
#, no-wrap
msgid "@{++ ( @var{ addr -- addr addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23957 ../doc/gforth.texi:23958
#, no-wrap
msgid "@{++"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23961
#, no-wrap
msgid "@code{@{++} ( @i{addr -- addr addr  }) regexp-pattern ``begin-greedy-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23963
msgid "greedy one-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23965
#, no-wrap
msgid "++@} ( @var{ sys --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23966 ../doc/gforth.texi:23967
#, no-wrap
msgid "++@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23970
#, no-wrap
msgid "@code{++@}} ( @i{sys --  }) regexp-pattern ``end-greedy-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23972
msgid "end of greedy one-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23974
#, no-wrap
msgid "@{* ( @var{ addr -- addr addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23975 ../doc/gforth.texi:23976
#, no-wrap
msgid "@{*"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23979
#, no-wrap
msgid "@code{@{*} ( @i{addr -- addr addr  }) regexp-pattern ``begin-non-greedy-star''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23981
msgid "non-greedy zero-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23983
#, no-wrap
msgid "*@} ( @var{ addr addr' -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23984 ../doc/gforth.texi:23985
#, no-wrap
msgid "*@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23988
#, no-wrap
msgid "@code{*@}} ( @i{addr addr' -- addr'  }) regexp-pattern ``end-non-greedy-star''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23990
msgid "end of non-greedy zero-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:23992
#, no-wrap
msgid "@{+ ( @var{ addr -- addr addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:23993 ../doc/gforth.texi:23994
#, no-wrap
msgid "@{+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:23997
#, no-wrap
msgid "@code{@{+} ( @i{addr -- addr addr  }) regexp-pattern ``begin-non-greedy-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:23999
msgid "non-greedy one-or-more pattern"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24001
#, no-wrap
msgid "+@} ( @var{ addr addr' -- addr'   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24002 ../doc/gforth.texi:24003
#, no-wrap
msgid "+@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24006
#, no-wrap
msgid "@code{+@}} ( @i{addr addr' -- addr'  }) regexp-pattern ``end-non-greedy-plus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24008
msgid "end of non-greedy one-or-more pattern"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24013
msgid ""
"Example: Searching for a substring really is a non-greedy match of anything "
"in front of it."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24014
#, no-wrap
msgid "// ( @var{ --   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24015 ../doc/gforth.texi:24016
#, no-wrap
msgid "//"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24019
#, no-wrap
msgid "@code{//} ( @i{--  }) regexp-pattern ``//''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24021
msgid "search for string"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24025
msgid "Alternatives are written with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24026
#, no-wrap
msgid "@{@{ ( @var{ addr -- addr addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24027 ../doc/gforth.texi:24028
#, no-wrap
msgid "@{@{"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24031
#, no-wrap
msgid "@code{@{@{} ( @i{addr -- addr addr  }) regexp-pattern ``begin-alternatives''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24033
msgid "Start of alternatives"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24035
#, no-wrap
msgid "|| ( @var{ addr addr -- addr addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24036 ../doc/gforth.texi:24037
#, no-wrap
msgid "||"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24040
#, no-wrap
msgid "@code{||} ( @i{addr addr -- addr addr  }) regexp-pattern ``next-alternative''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24042
msgid "separator between alternatives"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24044
#, no-wrap
msgid "@}@} ( @var{ addr addr -- addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24045 ../doc/gforth.texi:24046
#, no-wrap
msgid "@}@}"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24049
#, no-wrap
msgid "@code{@}@}} ( @i{addr addr -- addr  }) regexp-pattern ``end-alternatives''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24051
msgid "end of alternatives"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24056
msgid ""
"You can use up to 9 variables named @code{\\1} to @code{\\9} to refer to "
"matched substrings"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24057
#, no-wrap
msgid "\\( ( @var{ addr -- addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24058 ../doc/gforth.texi:24059
#, no-wrap
msgid "\\("
msgstr ""

#. type: format
#: ../doc/gforth.texi:24062
#, no-wrap
msgid "@code{\\(} ( @i{addr -- addr  }) regexp-pattern ``\\(''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24064
msgid "start of matching variable; variables are referred as \\\\1--9"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24066
#, no-wrap
msgid "\\) ( @var{ addr -- addr   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24067 ../doc/gforth.texi:24068
#, no-wrap
msgid "\\)"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24071
#, no-wrap
msgid "@code{\\)} ( @i{addr -- addr  }) regexp-pattern ``\\)''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24073
msgid "end of matching variable"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24075
#, no-wrap
msgid "\\0 ( @var{ -- addr u   } ) regexp-pattern"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24076 ../doc/gforth.texi:24077
#, no-wrap
msgid "\\0"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24080
#, no-wrap
msgid "@code{\\0} ( @i{-- addr u  }) regexp-pattern ``\\0''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24082
msgid "the whole string"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24086
msgid "Certainly, you can also write code to replace patterns you found."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24087
#, no-wrap
msgid "s>> ( @var{ addr -- addr   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24088 ../doc/gforth.texi:24089
#, no-wrap
msgid "s>>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24092
#, no-wrap
msgid "@code{s>>} ( @i{addr -- addr  }) regexp-replace ``s>>''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24094
msgid "Start replace pattern region"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24096
#, no-wrap
msgid ">> ( @var{ addr -- addr   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24097 ../doc/gforth.texi:24098
#, no-wrap
msgid ">>"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24101
#, no-wrap
msgid "@code{>>} ( @i{addr -- addr  }) regexp-replace ``>>''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24104
msgid ""
"Start arbitrary replacement code, the code shall compute a string on the "
"stack and pass it to @code{<<}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24106
#, no-wrap
msgid "<< ( @var{ run-addr addr u -- run-addr   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24107 ../doc/gforth.texi:24108
#, no-wrap
msgid "<<"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24111
#, no-wrap
msgid "@code{<<} ( @i{run-addr addr u -- run-addr  }) regexp-replace ``<<''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24114
msgid ""
"Replace string from start of replace pattern region with @var{addr} @var{u}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24116
#, no-wrap
msgid "<<\" ( @var{ \"string<\">\" --   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24117 ../doc/gforth.texi:24118
#, no-wrap
msgid "<<\""
msgstr ""

#. type: format
#: ../doc/gforth.texi:24121
#, no-wrap
msgid "@code{<<\"} ( @i{\"string<\">\" --  }) regexp-replace ``<<\"''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24124
msgid "Replace string from start of replace pattern region with @var{string}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24126
#, no-wrap
msgid "s// ( @var{ addr u -- ptr   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24127 ../doc/gforth.texi:24128
#, no-wrap
msgid "s//"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24131
#, no-wrap
msgid "@code{s//} ( @i{addr u -- ptr  }) regexp-replace ``s//''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24133
msgid "start search/replace loop"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24135
#, no-wrap
msgid "//s ( @var{ ptr --   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24136 ../doc/gforth.texi:24137
#, no-wrap
msgid "//s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24140
#, no-wrap
msgid "@code{//s} ( @i{ptr --  }) regexp-replace ``//s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24142
msgid "search end"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24144
#, no-wrap
msgid "//o ( @var{ ptr addr u -- addr' u'   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24145 ../doc/gforth.texi:24146
#, no-wrap
msgid "//o"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24149
#, no-wrap
msgid "@code{//o} ( @i{ptr addr u -- addr' u'  }) regexp-replace ``//o''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24151
msgid "end search/replace single loop"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24153
#, no-wrap
msgid "//g ( @var{ ptr addr u -- addr' u'   } ) regexp-replace"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24154 ../doc/gforth.texi:24155
#, no-wrap
msgid "//g"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24158
#, no-wrap
msgid "@code{//g} ( @i{ptr addr u -- addr' u'  }) regexp-replace ``//g''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24160
msgid "end search/replace all loop"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24164
msgid "Examples can be found in @code{test/regexp-test.fs}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24168
#, no-wrap
msgid "programming tools"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24187
#, no-wrap
msgid "source code of a word"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24188
#, no-wrap
msgid "@code{view} (called @code{locate} in Gforth)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24189
#, no-wrap
msgid "integrated development environment"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24190
#, no-wrap
msgid "IDE (integrated development environment)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24196
msgid ""
"Many programming systems are organized as an integrated development "
"environment (IDE) where the editor is the hub of the system, and allows "
"building and running programs.  If you want that, Gforth has it, too "
"(@pxref{Emacs and Gforth})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24200
msgid ""
"However, several Forth systems have a different kind of IDE: The Forth "
"command line is the hub of the environment; you can view the source from "
"there in various ways, and call an editor if needed."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24203
msgid ""
"Gforth also implements such an IDE.  It mostly follows the conventions of "
"SwiftForth where they exist, but implements features beyond them."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24212
msgid ""
"An advantage of this approach is that it allows you to use your favourite "
"editor: set the environment variable @code{EDITOR} to your favourite editor, "
"and the editing commands will call that editor; Gforth invokes some GUI "
"editors in the background (so you do not need to finish editing to continue "
"with your Forth session), terminal editors in the foreground (default for "
"editors not known to Gforth is foreground).  If you have not set "
"@code{EDITOR}, the default editor is @file{vi}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24213
#, no-wrap
msgid "locate ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24214 ../doc/gforth.texi:24215
#, no-wrap
msgid "locate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24218
#, no-wrap
msgid "@code{locate} ( @i{\"name\" --  }) gforth-1.0 ``locate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24221
msgid ""
"Show the source code of the word @i{name} and set the current location there."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24224
msgid "doc-xt-locate"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24228
msgid ""
"The @emph{current location} is set by a number of other words in addition to "
"@code{locate}.  Also, when an error happens while loading a file, the "
"location of the error becomes the current location."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24230
msgid "A number of words work with the current location:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24231
#, no-wrap
msgid "l ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24236
#, no-wrap
msgid "@code{l} ( @i{--  }) gforth-1.0 ``l''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24238
msgid "Display source code lines at the current location."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24240
#, no-wrap
msgid "n ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24245
#, no-wrap
msgid "@code{n} ( @i{--  }) gforth-1.0 ``n''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24248
msgid ""
"Display lines behind the current location, or behind the last @code{n} or "
"@code{b} output (whichever was later)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24250
#, no-wrap
msgid "b ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24255
#, no-wrap
msgid "@code{b} ( @i{--  }) gforth-1.0 ``b''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24258
msgid ""
"Display lines before the current location, or before the last @code{n} or "
"@code{b} output (whichever was later)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24260
#, no-wrap
msgid "g ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24261 ../doc/gforth.texi:24262
#, no-wrap
msgid "g"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24265
#, no-wrap
msgid "@code{g} ( @i{--  }) gforth-0.7 ``g''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24268
msgid ""
"Enter the editor at the current location, or at the start of the last "
"@code{n} or @code{b} output (whichever was later)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24273
msgid ""
"You can control how many lines @code{l}, @code{n} and @code{b} show by "
"changing the values:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24274
#, no-wrap
msgid "before-locate ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24275 ../doc/gforth.texi:24276
#, no-wrap
msgid "before-locate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24279
#, no-wrap
msgid "@code{before-locate} ( @i{-- u  }) gforth-1.0 ``before-locate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24281
msgid "number of lines shown before current location (default 3)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24283
#, no-wrap
msgid "after-locate ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24284 ../doc/gforth.texi:24285
#, no-wrap
msgid "after-locate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24288
#, no-wrap
msgid "@code{after-locate} ( @i{-- u  }) gforth-1.0 ``after-locate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24290
msgid "number of lines shown after current location (default 12)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24295
msgid ""
"Finally, you can directly go to the source code of a word in the editor with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24296
#, no-wrap
msgid "edit ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24297 ../doc/gforth.texi:24298
#, no-wrap
msgid "edit"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24301
#, no-wrap
msgid "@code{edit} ( @i{\"name\" --  }) gforth-1.0 ``edit''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24303
msgid "Enter the editor at the location of \"name\""
msgstr ""

#. type: table
#: ../doc/gforth.texi:24307
msgid "You can see the definitions of similarly-named words with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24308
#, no-wrap
msgid "browse ( @var{ \"subname\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24309 ../doc/gforth.texi:24310
#, no-wrap
msgid "browse"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24313
#, no-wrap
msgid "@code{browse} ( @i{\"subname\" --  }) gforth-1.0 ``browse''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24319
msgid ""
"Show all places where a word with a name that contains @i{subname} is "
"defined (@code{mwords}-like, @pxref{Word Lists}).  You can then use "
"@code{ww}, @code{nw} or @code{bw} (@pxref{Locating uses of a word}) to "
"inspect specific occurences more closely."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24325
#, no-wrap
msgid "Uses of a word"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24327
#, no-wrap
msgid "where ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24328 ../doc/gforth.texi:24329
#, no-wrap
msgid "where"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24332
#, no-wrap
msgid "@code{where} ( @i{\"name\" --  }) gforth-1.0 ``where''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24338
msgid ""
"Show all places where @i{name} is used (text-interpreted).  You can then use "
"@code{ww}, @code{nw} or @code{bw} to inspect specific occurences more "
"closely.  Gforth's @code{where} does not show the definition of @i{name}; "
"use @code{locate} for that."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24340
#, no-wrap
msgid "ww ( @var{ u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24341 ../doc/gforth.texi:24342
#, no-wrap
msgid "ww"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24345
#, no-wrap
msgid "@code{ww} ( @i{u --  }) gforth-1.0 ``ww''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24348
msgid ""
"The next @code{l} or @code{g} shows the @code{where} result with index @i{u}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24350
#, no-wrap
msgid "nw ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24351 ../doc/gforth.texi:24352
#, no-wrap
msgid "nw"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24355
#, no-wrap
msgid "@code{nw} ( @i{--  }) gforth-1.0 ``nw''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24360
msgid ""
"The next @code{l} or @code{g} shows the next @code{where} result; if the "
"current one is the last one, after @code{nw} there is no current one.  If "
"there is no current one, after @code{nw} the first one is the current one."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24362
#, no-wrap
msgid "bw ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24363 ../doc/gforth.texi:24364
#, no-wrap
msgid "bw"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24367
#, no-wrap
msgid "@code{bw} ( @i{--  }) gforth-1.0 ``bw''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24372
msgid ""
"The next @code{l} or @code{g} shows the previous @code{where} result; if the "
"current one is the first one, after @code{bw} there is no current one.  If "
"there is no current one, after @code{bw} the last one is the current one."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24374
#, no-wrap
msgid "gg ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24375 ../doc/gforth.texi:24376
#, no-wrap
msgid "gg"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24379
#, no-wrap
msgid "@code{gg} ( @i{--  }) gforth-1.0 ``gg''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24384
msgid ""
"The next @code{ww}, @code{nw}, @code{bw}, @code{bb}, @code{nb}, @code{lb} "
"(but not @code{locate}, @code{edit}, @code{l} or @code{g}) puts it result in "
"the editor (like @code{g}).  Use @code{gg gg} to make this permanent rather "
"than one-shot."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24386
#, no-wrap
msgid "ll ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24387 ../doc/gforth.texi:24388
#, no-wrap
msgid "ll"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24391
#, no-wrap
msgid "@code{ll} ( @i{--  }) gforth-1.0 ``ll''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24396
msgid ""
"The next @code{ww}, @code{nw}, @code{bw}, @code{bb}, @code{nb}, @code{lb} "
"(but not @code{locate}, @code{edit}, @code{l} or @code{g}) displays in the "
"Forth system (like @code{l}).  Use @code{ll ll} to make this permanent "
"rather than one-shot."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24398
#, no-wrap
msgid "whereg ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24399 ../doc/gforth.texi:24400
#, no-wrap
msgid "whereg"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24403
#, no-wrap
msgid "@code{whereg} ( @i{\"name\" --  }) gforth-1.0 ``whereg''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24408
msgid ""
"Like @code{where}, but puts the output in the editor.  In Emacs, you can "
"then use the compilation-mode commands (@pxref{Compilation Mode,,,emacs,GNU "
"Emacs Manual}) to inspect specific occurences more closely."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24410
#, no-wrap
msgid "short-where ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24411 ../doc/gforth.texi:24412
#, no-wrap
msgid "short-where"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24415
#, no-wrap
msgid "@code{short-where} ( @i{--  }) gforth-1.0 ``short-where''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24417
msgid "Set up @code{where} to use a short file format (default)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24419
#, no-wrap
msgid "expand-where ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24420 ../doc/gforth.texi:24421
#, no-wrap
msgid "expand-where"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24424
#, no-wrap
msgid "@code{expand-where} ( @i{--  }) gforth-1.0 ``expand-where''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24427
msgid ""
"Set up @code{where} to use a fully expanded file format (to pass to e.g. "
"editors)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24429
#, no-wrap
msgid "prepend-where ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24430 ../doc/gforth.texi:24431
#, no-wrap
msgid "prepend-where"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24434
#, no-wrap
msgid "@code{prepend-where} ( @i{--  }) gforth-1.0 ``prepend-where''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24438
msgid ""
"Set up @code{where} to show the file on a separate line, followed by "
"@code{where} lines without file names (like SwiftForth)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24443
msgid ""
"The data we have on word usage also allows us to show which words have no "
"uses:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24444
#, no-wrap
msgid "unused-words ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24445 ../doc/gforth.texi:24446
#, no-wrap
msgid "unused-words"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24449
#, no-wrap
msgid "@code{unused-words} ( @i{--  }) gforth-1.0 ``unused-words''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24451
msgid "list all words without usage"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24456
#, no-wrap
msgid "exception source code"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24457
#, no-wrap
msgid "source code for exception"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24458
#, no-wrap
msgid "backtrace examination"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24460
#, no-wrap
msgid "tt ( @var{ u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24461 ../doc/gforth.texi:24462
#, no-wrap
msgid "tt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24465
#, no-wrap
msgid "@code{tt} ( @i{u --  }) gforth-1.0 ``tt''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24467
#, no-wrap
msgid "nt ( @var{  --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24468 ../doc/gforth.texi:24469
#, no-wrap
msgid "nt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24472
#, no-wrap
msgid "@code{nt} ( @i{ --  }) gforth-1.0 ``nt''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24474
#, no-wrap
msgid "bt ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24475 ../doc/gforth.texi:24476
#, no-wrap
msgid "bt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24479
#, no-wrap
msgid "@code{bt} ( @i{--  }) gforth-1.0 ``bt''\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24484
#, no-wrap
msgid "compiled code examination"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24491
msgid ""
"And finally, @code{see} and friends show compiled code.  Some of the things "
"in the source code are not present in the compiled code (e.g., formatting "
"and comments), but this is useful to see what threaded code or native code "
"is produced by macros and Gforth's optimization features."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24492
#, no-wrap
msgid "see ( @var{ \"<spaces>name\" --   } ) tools"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24493 ../doc/gforth.texi:24494
#, no-wrap
msgid "see"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24497
#, no-wrap
msgid "@code{see} ( @i{\"<spaces>name\" --  }) tools ``see''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24503
msgid ""
"Locate @var{name} using the current search order. Display the definition of "
"@var{name}. Since this is achieved by decompiling the definition, the "
"formatting is mechanised and some source information (comments, interpreted "
"sequences within definitions etc.) is lost."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24505
#, no-wrap
msgid "xt-see ( @var{ xt --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24506 ../doc/gforth.texi:24507
#, no-wrap
msgid "xt-see"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24510
#, no-wrap
msgid "@code{xt-see} ( @i{xt --  }) gforth-0.2 ``xt-see''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24512
msgid "Decompile the definition represented by @i{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24514
#, no-wrap
msgid "simple-see ( @var{ \"name\" --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24515 ../doc/gforth.texi:24516
#, no-wrap
msgid "simple-see"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24519
#, no-wrap
msgid "@code{simple-see} ( @i{\"name\" --  }) gforth-0.6 ``simple-see''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24523
msgid ""
"Decompile the colon definition @i{name}, showing a line for each cell, and "
"try to guess a meaning for the cell, and show that."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24525
#, no-wrap
msgid "xt-simple-see ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24526 ../doc/gforth.texi:24527
#, no-wrap
msgid "xt-simple-see"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24530
#, no-wrap
msgid "@code{xt-simple-see} ( @i{xt --  }) gforth-1.0 ``xt-simple-see''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24533
msgid "Decompile the colon definition @i{xt} like @code{simple-see}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24535
#, no-wrap
msgid "simple-see-range ( @var{ addr1 addr2 --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24536 ../doc/gforth.texi:24537
#, no-wrap
msgid "simple-see-range"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24540
#, no-wrap
msgid "@code{simple-see-range} ( @i{addr1 addr2 --  }) gforth-0.6 ``simple-see-range''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24542
msgid "Decompile code in [@i{addr1},@i{addr2}) like @code{simple-see}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24544
#, no-wrap
msgid "see-code ( @var{ \"name\" --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24545 ../doc/gforth.texi:24546
#, no-wrap
msgid "see-code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24549
#, no-wrap
msgid "@code{see-code} ( @i{\"name\" --  }) gforth-0.7 ``see-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24560
msgid ""
"Like @code{simple-see}, but also shows the dynamic native code for the "
"inlined primitives.  For static superinstructions, it shows the primitive "
"sequence instead of the first primitive (the other primitives of the "
"superinstruction are shown, too).  For primitives for which native code is "
"generated, it shows the number of stack items in registers at the beginning "
"and at the end (e.g., @code{1->1} means 1 stack item is in a register at the "
"start and at the end).  For each primitive or superinstruction with native "
"code, the inline arguments and component primitives are shown first, then "
"the native code."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24562
#, no-wrap
msgid "xt-see-code ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24563 ../doc/gforth.texi:24564
#, no-wrap
msgid "xt-see-code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24567
#, no-wrap
msgid "@code{xt-see-code} ( @i{xt --  }) gforth-1.0 ``xt-see-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24569
msgid "Decompile the colon definition @i{xt} like @code{see-code}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24571
#, no-wrap
msgid "see-code-range ( @var{ addr1 addr2 --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24572 ../doc/gforth.texi:24573
#, no-wrap
msgid "see-code-range"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24576
#, no-wrap
msgid "@code{see-code-range} ( @i{addr1 addr2 --  }) gforth-0.7 ``see-code-range''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24578
msgid "Decompile code in [@i{addr1},@i{addr2}) like @code{see-code}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24582
msgid "As an example, consider:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:24585
#, no-wrap
msgid ": foo x f@@ fsin drop over ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24590
msgid ""
"This is not particularly useful, but it demonstrates the various code "
"generation differences.  Compiling this on @code{gforth-fast} on AMD64 and "
"then using @code{see-code foo} outputs:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:24614
#, no-wrap
msgid ""
"$7FD0CEE8C510 lit f@@     1->1 \n"
"$7FD0CEE8C518 x\n"
"$7FD0CEE8C520 f@@\n"
"7FD0CEB51697:   movsd   [r12],xmm15\n"
"7FD0CEB5169D:   mov     rax,$00[r13]\n"
"7FD0CEB516A1:   sub     r12,$08\n"
"7FD0CEB516A5:   add     r13,$18\n"
"7FD0CEB516A9:   movsd   xmm15,[rax]\n"
"7FD0CEB516AE:   mov     rcx,-$08[r13]\n"
"7FD0CEB516B2:   jmp     ecx\n"
"$7FD0CEE8C528 fsin\n"
"$7FD0CEE8C530 drop    1->0 \n"
"7FD0CEB516B4:   add     r13,$08\n"
"$7FD0CEE8C538 over    0->1 \n"
"7FD0CEB516B8:   mov     r8,$10[r15]\n"
"7FD0CEB516BC:   add     r13,$08\n"
"$7FD0CEE8C540 ;s    1->1 \n"
"7FD0CEB516C0:   mov     r10,[rbx]\n"
"7FD0CEB516C3:   add     rbx,$08\n"
"7FD0CEB516C7:   lea     r13,$08[r10]\n"
"7FD0CEB516CB:   mov     rcx,-$08[r13]\n"
"7FD0CEB516CF:   jmp     ecx\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24622
msgid ""
"First, you see a threaded-code cell for a static superinstruction with the "
"components @code{lit} and @code{f@@}, starting and ending with one data "
"stack item in a register (@code{1->1}); this is followed by the cell for the "
"argument @code{x} of @code{lit}, and the cell for the @code{f@@} component "
"of the superinstruction; the latter cell is not used, but is there for "
"Gforth-internal reasons."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24627
msgid ""
"Next, the dynamically generated native code for the superinstruction "
"@code{lit f@@} is shown; note that this native code is not mixed with the "
"threaded code in memory, as you can see by comparing the addresses."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24636
msgid ""
"If you want to understand the native code shown here: the threaded-code "
"instruction pointer is in @code{r13}, the data stack pointer in @code{r15}; "
"the first data stack register is @code{r8} (i.e., the top of stack resides "
"there if there is one data stack item in a register); the return stack "
"pointer is in @code{rbx}, the FP stack pointer in @code{r12}, and the top of "
"the floating-pont stack in @code{xmm15}.  Note that the register assignments "
"vary between engines, so you may see a different register assignment for "
"this code."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24640
msgid ""
"The dynamic native code for @code{lit f@@} ends with a dispatch jump (aka "
"NEXT), because the code for the next word @code{fsin} in the definition is "
"not dynamically generated."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24647
msgid ""
"Next, you see the threaded-code cell for @code{fsin}.  There is no "
"dynamically-generated native code for this word, and @code{see-code} does "
"not show the static native code for it (you can look at it with @code{see "
"fsin}).  Like all words with static native code in @code{gforth-fast}, the "
"effect on the data stack representation is @code{1->1} (for @code{gforth}, "
"@code{0->0}), but this is not shown."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24654
msgid ""
"Next, you see the threaded-code cell for @code{drop}; the native-code "
"variant used here starts with one data stack item in registers, and ends "
"with zero data stack items in registers (@code{1->0}).  This is followed by "
"the native code for this variant of @code{drop}.  There is no NEXT here, "
"because the native code falls through to the code for the next word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24657
msgid ""
"Next, you see the threaded-code cell for @code{over} followed by the "
"dynamically-generated native code in the @code{0->1} variant."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24661
msgid ""
"Finally, you see the threaded and native code for @code{;s} (the primitive "
"compiled for @code{;} in @code{foo}).  @code{;s} performs control flow (it "
"returns), so it has to end with a NEXT."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:24663
#, no-wrap
msgid "Examining data and code"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24664
#, no-wrap
msgid "examining data and code"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24667
msgid "The following words inspect the stack non-destructively:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24668
#, no-wrap
msgid "... ( @var{ x1 .. xn -- x1 .. xn   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24669 ../doc/gforth.texi:24670
#, no-wrap
msgid "..."
msgstr ""

#. type: format
#: ../doc/gforth.texi:24673
#, no-wrap
msgid "@code{...} ( @i{x1 .. xn -- x1 .. xn  }) gforth-1.0 ``...''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24675
msgid "smart version of @code{.s}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24677
#, no-wrap
msgid ".s ( @var{ --   } ) tools"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24678 ../doc/gforth.texi:24679
#, no-wrap
msgid ".s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24682
#, no-wrap
msgid "@code{.s} ( @i{--  }) tools ``dot-s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24686
msgid ""
"Display the number of items on the data stack, followed by a list of the "
"items (but not more than specified by @code{maxdepth-.s}; TOS is the right-"
"most item."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24688
#, no-wrap
msgid "f.s ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24689 ../doc/gforth.texi:24690
#, no-wrap
msgid "f.s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24693
#, no-wrap
msgid "@code{f.s} ( @i{--  }) gforth-0.2 ``f-dot-s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24697
msgid ""
"Display the number of items on the floating-point stack, followed by a list "
"of the items (but not more than specified by @code{maxdepth-.s}; TOS is the "
"right-most item."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24699
#, no-wrap
msgid "f.s-precision ( @var{ -- u   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24700 ../doc/gforth.texi:24701
#, no-wrap
msgid "f.s-precision"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24704
#, no-wrap
msgid "@code{f.s-precision} ( @i{-- u  }) gforth-1.0 ``f.s-precision''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24707
msgid ""
"A @code{value}.  @i{U} is the field width for f.s output. Other precision "
"details are derived from that value."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24709
#, no-wrap
msgid "maxdepth-.s ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24710 ../doc/gforth.texi:24711
#, no-wrap
msgid "maxdepth-.s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24714
#, no-wrap
msgid "@code{maxdepth-.s} ( @i{-- addr  }) gforth-0.2 ``maxdepth-dot-s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24717
msgid ""
"A variable containing 9 by default.  @code{.s} and @code{f.s} display at "
"most that many stack items."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24722
msgid ""
"There is a word @code{.r} but it does @i{not} display the return stack! It "
"is used for formatted numeric output (@pxref{Simple numeric output})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24725
msgid ""
"The following words work on the stack as a whole, either by determining the "
"depth or by clearing them:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24726
#, no-wrap
msgid "depth ( @var{ -- +n   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24727 ../doc/gforth.texi:24728
#, no-wrap
msgid "depth"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24731
#, no-wrap
msgid "@code{depth} ( @i{-- +n  }) core ``depth''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24734
msgid ""
"@var{+n} is the number of values that were on the data stack before @var{+n} "
"itself was placed on the stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24736
#, no-wrap
msgid "fdepth ( @var{ -- +n   } ) floating"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24737 ../doc/gforth.texi:24738
#, no-wrap
msgid "fdepth"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24741
#, no-wrap
msgid "@code{fdepth} ( @i{-- +n  }) floating ``f-depth''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24744
msgid ""
"@i{+n} is the current number of (floating-point) values on the floating-"
"point stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24746
#, no-wrap
msgid "clearstack ( @var{ ... --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24747 ../doc/gforth.texi:24748
#, no-wrap
msgid "clearstack"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24751
#, no-wrap
msgid "@code{clearstack} ( @i{... --  }) gforth-0.2 ``clear-stack''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24753
msgid "remove and discard all/any items from the data stack."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24755
#, no-wrap
msgid "fclearstack ( @var{ r0 .. rn --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24756 ../doc/gforth.texi:24757
#, no-wrap
msgid "fclearstack"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24760
#, no-wrap
msgid "@code{fclearstack} ( @i{r0 .. rn --  }) gforth-1.0 ``f-clearstack''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24762
msgid "clear the floating point stack"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24764
#, no-wrap
msgid "clearstacks ( @var{ ... --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24765 ../doc/gforth.texi:24766
#, no-wrap
msgid "clearstacks"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24769
#, no-wrap
msgid "@code{clearstacks} ( @i{... --  }) gforth-0.7 ``clear-stacks''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24771
msgid "empty data and FP stack"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24775
msgid "The following words inspect memory."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24776
#, no-wrap
msgid "? ( @var{ a-addr --   } ) tools"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24777 ../doc/gforth.texi:24778
#, no-wrap
msgid "?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24781
#, no-wrap
msgid "@code{?} ( @i{a-addr --  }) tools ``question''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24783
msgid ""
"Display the contents of address @var{a-addr} in the current number base."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24785
#, no-wrap
msgid "dump ( @var{ addr u --   } ) tools"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24786 ../doc/gforth.texi:24787
#, no-wrap
msgid "dump"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24790
#, no-wrap
msgid "@code{dump} ( @i{addr u --  }) tools ``dump''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24795
msgid ""
"Display @var{u} lines of memory starting at address @var{addr}. Each line "
"displays the contents of 16 bytes. When Gforth is running under an operating "
"system you may get @file{Invalid memory address} errors if you attempt to "
"access arbitrary locations."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24800
#, no-wrap
msgid "words, forgetting"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24801
#, no-wrap
msgid "forgeting words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24808
msgid ""
"Forth allows you to forget words (and everything that was alloted in the "
"dictonary after them) in a LIFO manner."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24809
#, no-wrap
msgid "marker ( @var{ \"<spaces> name\" --   } ) core-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24810 ../doc/gforth.texi:24811
#, no-wrap
msgid "marker"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24814
#, no-wrap
msgid "@code{marker} ( @i{\"<spaces> name\" --  }) core-ext ``marker''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24818
msgid ""
"Create a definition, @i{name} (called a @i{mark}) whose execution semantics "
"are to remove itself and everything defined after it."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24829
msgid ""
"The most common use of this feature is during progam development: when you "
"change a source file, forget all the words it defined and load it again "
"(since you also forget everything defined after the source file was loaded, "
"you have to reload that, too).  Note that effects like storing to variables "
"and destroyed system words are not undone when you forget words.  With a "
"system like Gforth, that is fast enough at starting up and compiling, I find "
"it more convenient to exit and restart Gforth, as this gives me a clean "
"slate."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24833
msgid ""
"Here's an example of using @code{marker} at the start of a source file that "
"you are debugging; it ensures that you only ever have one copy of the file's "
"definitions compiled at any time:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:24838
#, no-wrap
msgid ""
"[IFDEF] my-code\n"
"    my-code\n"
"[ENDIF]\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:24841
#, no-wrap
msgid ""
"marker my-code\n"
"init-included-files\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:24846
#, no-wrap
msgid ""
"\\ .. definitions start here\n"
"\\ .\n"
"\\ .\n"
"\\ end\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24851
#, no-wrap
msgid "debugging"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24855
msgid ""
"Languages with a slow edit/compile/link/test development loop tend to "
"require sophisticated tracing/stepping debuggers to facilate debugging."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24860
msgid ""
"A much better (faster) way in fast-compiling languages is to add printing "
"code at well-selected places, let the program run, look at the output, see "
"where things went wrong, add more printing code, etc., until the bug is "
"found."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24863
msgid ""
"The simple debugging aids provided in @file{debugs.fs} are meant to support "
"this style of debugging."
msgstr ""

#. type: table
#: ../doc/gforth.texi:24874
msgid ""
"The word @code{~~} prints debugging information (by default the source "
"location and the stack contents). It is easy to insert. If you use Emacs it "
"is also easy to remove (@kbd{C-x ~} in the Emacs Forth mode to query-replace "
"them with nothing). The deferred words @code{printdebugdata} and @code{."
"debugline} control the output of @code{~~}. The default source location "
"output format works well with Emacs' compilation mode, so you can step "
"through the program at the source level using @kbd{C-x `} (the advantage "
"over a stepping debugger is that you can step in any direction and you know "
"where the crash has happened or where the strange data has occurred)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24875
#, no-wrap
msgid "~~ ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24876 ../doc/gforth.texi:24877
#, no-wrap
msgid "~~"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24880
#, no-wrap
msgid "@code{~~} ( @i{--  }) gforth-0.2 ``tilde-tilde''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24883
msgid ""
"Prints the source code location of the @code{~~} and the stack contents with "
"@code{.debugline}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24885
#, no-wrap
msgid "printdebugdata ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24886 ../doc/gforth.texi:24887
#, no-wrap
msgid "printdebugdata"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24890
#, no-wrap
msgid "@code{printdebugdata} ( @i{--  }) gforth-0.2 ``print-debug-data''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24892
#, no-wrap
msgid ".debugline ( @var{ nfile nline --   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24893 ../doc/gforth.texi:24894
#, no-wrap
msgid ".debugline"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24897
#, no-wrap
msgid "@code{.debugline} ( @i{nfile nline --  }) gforth-0.6 ``print-debug-line''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24901
msgid ""
"Print the source code location indicated by @var{nfile nline}, and "
"additional debugging information; the default @code{.debugline} prints the "
"additional information with @code{printdebugdata}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24903
#, no-wrap
msgid "debug-fid ( @var{ -- file-id   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24904 ../doc/gforth.texi:24905
#, no-wrap
msgid "debug-fid"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24908
#, no-wrap
msgid "@code{debug-fid} ( @i{-- file-id  }) gforth-1.0 ``@i{File-id}''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24911
msgid ""
"debugging words for output.  By default it is the process's @code{stderr}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:24914
#, no-wrap
msgid "filenames in @code{~~} output"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24919
msgid ""
"@code{~~} (and assertions) will usually print the wrong file name if a "
"marker is executed in the same file after their occurance.  They will print "
"@samp{*somewhere*} as file name if a marker is executed in the same file "
"before their occurance."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24920
#, no-wrap
msgid "once ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24921 ../doc/gforth.texi:24922
#, no-wrap
msgid "once"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24925
#, no-wrap
msgid "@code{once} ( @i{--  }) gforth-1.0 ``once''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24927
msgid "do the following up to THEN only once"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24929
#, no-wrap
msgid "~~bt ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24930 ../doc/gforth.texi:24931
#, no-wrap
msgid "~~bt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24934
#, no-wrap
msgid "@code{~~bt} ( @i{--  }) gforth-1.0 ``~~bt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24936
msgid "print stackdump and backtrace"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24938
#, no-wrap
msgid "~~1bt ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24939 ../doc/gforth.texi:24940
#, no-wrap
msgid "~~1bt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24943
#, no-wrap
msgid "@code{~~1bt} ( @i{--  }) gforth-1.0 ``~~1bt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24945
msgid "print stackdump and backtrace once"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24947
#, no-wrap
msgid "??? ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24948 ../doc/gforth.texi:24949
#, no-wrap
msgid "???"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24952
#, no-wrap
msgid "@code{???} ( @i{--  }) gforth-0.2 ``???''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24954
msgid "Open a debuging shell"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24956
#, no-wrap
msgid "WTF?? ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24957 ../doc/gforth.texi:24958
#, no-wrap
msgid "WTF??"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24961
#, no-wrap
msgid "@code{WTF??} ( @i{--  }) gforth-1.0 ``WTF??''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24963
msgid "Open a debugging shell with backtrace and stack dump"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24965
#, no-wrap
msgid "!!FIXME!! ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24966 ../doc/gforth.texi:24967
#, no-wrap
msgid "!!FIXME!!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24970
#, no-wrap
msgid "@code{!!FIXME!!} ( @i{--  }) gforth-1.0 ``!!FIXME!!''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24972
msgid "word that should never be reached"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24974
#, no-wrap
msgid "replace-word ( @var{ xt1 xt2 --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24975 ../doc/gforth.texi:24976
#, no-wrap
msgid "replace-word"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24979
#, no-wrap
msgid "@code{replace-word} ( @i{xt1 xt2 --  }) gforth-1.0 ``replace-word''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24981
msgid "make xt2 do xt1, both need to be colon definitions"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24983
#, no-wrap
msgid "~~Variable ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24984 ../doc/gforth.texi:24985
#, no-wrap
msgid "~~Variable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24988
#, no-wrap
msgid "@code{~~Variable} ( @i{\"name\" --  }) gforth-1.0 ``~~Variable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24990
msgid "Variable that will be watched on every access"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:24992
#, no-wrap
msgid "~~Value ( @var{ n \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:24993 ../doc/gforth.texi:24994
#, no-wrap
msgid "~~Value"
msgstr ""

#. type: format
#: ../doc/gforth.texi:24997
#, no-wrap
msgid "@code{~~Value} ( @i{n \"name\" --  }) gforth-1.0 ``~~Value''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:24999
msgid "Value that will be watched on every access"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25001
#, no-wrap
msgid "+ltrace ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25002 ../doc/gforth.texi:25003
#, no-wrap
msgid "+ltrace"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25006
#, no-wrap
msgid "@code{+ltrace} ( @i{--  }) gforth-1.0 ``+ltrace''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25008
msgid "turn on line tracing"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25010
#, no-wrap
msgid "-ltrace ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25011 ../doc/gforth.texi:25012
#, no-wrap
msgid "-ltrace"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25015
#, no-wrap
msgid "@code{-ltrace} ( @i{--  }) gforth-1.0 ``-ltrace''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25017
msgid "turn off line tracing"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25019
#, no-wrap
msgid "#loc ( @var{ nline nchar \"file\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25020 ../doc/gforth.texi:25021
#, no-wrap
msgid "#loc"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25024
#, no-wrap
msgid "@code{#loc} ( @i{nline nchar \"file\" --  }) gforth-1.0 ``#loc''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25026
msgid "set next word's location to @var{nline nchar} in @var{\"file\"}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25031
#, no-wrap
msgid "assertions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25037
msgid ""
"It is a good idea to make your programs self-checking, especially if you "
"make an assumption that may become invalid during maintenance (for example, "
"that a certain field of a data structure is never zero). Gforth supports "
"@dfn{assertions} for this purpose. They are used like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:25040
#, no-wrap
msgid "assert( @i{flag} )\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25046
msgid ""
"The code between @code{assert(} and @code{)} should compute a flag, that "
"should be true if everything is alright and false otherwise. It should not "
"change anything else on the stack. The overall stack effect of the assertion "
"is @code{( -- )}. E.g."
msgstr ""

#. type: example
#: ../doc/gforth.texi:25051
#, no-wrap
msgid ""
"assert( 1 1 + 2 = ) \\ what we learn in school\n"
"assert( dup 0<> ) \\ assert that the top of stack is not zero\n"
"assert( false ) \\ this code should not be reached\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25060
msgid ""
"The need for assertions is different at different times. During debugging, "
"we want more checking, in production we sometimes care more for speed. "
"Therefore, assertions can be turned off, i.e., the assertion becomes a "
"comment. Depending on the importance of an assertion and the time it takes "
"to check it, you may want to turn off some assertions and keep others turned "
"on. Gforth provides several levels of assertions for this purpose:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25062
#, no-wrap
msgid "assert0( ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25063 ../doc/gforth.texi:25064
#, no-wrap
msgid "assert0("
msgstr ""

#. type: format
#: ../doc/gforth.texi:25067
#, no-wrap
msgid "@code{assert0(} ( @i{--  }) gforth-0.2 ``assert-zero''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25069
msgid "Important assertions that should always be turned on."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25071
#, no-wrap
msgid "assert1( ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25072 ../doc/gforth.texi:25073
#, no-wrap
msgid "assert1("
msgstr ""

#. type: format
#: ../doc/gforth.texi:25076
#, no-wrap
msgid "@code{assert1(} ( @i{--  }) gforth-0.2 ``assert-one''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25078
msgid "Normal assertions; turned on by default."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25080
#, no-wrap
msgid "assert2( ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25081 ../doc/gforth.texi:25082
#, no-wrap
msgid "assert2("
msgstr ""

#. type: format
#: ../doc/gforth.texi:25085
#, no-wrap
msgid "@code{assert2(} ( @i{--  }) gforth-0.2 ``assert-two''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25087
msgid "Debugging assertions."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25089
#, no-wrap
msgid "assert3( ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25090 ../doc/gforth.texi:25091
#, no-wrap
msgid "assert3("
msgstr ""

#. type: format
#: ../doc/gforth.texi:25094
#, no-wrap
msgid "@code{assert3(} ( @i{--  }) gforth-0.2 ``assert-three''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25097
msgid ""
"Slow assertions that you may not want to turn on in normal debugging; you "
"would turn them on mainly for thorough checking."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25099
#, no-wrap
msgid "assert( ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25100 ../doc/gforth.texi:25101
#, no-wrap
msgid "assert("
msgstr ""

#. type: format
#: ../doc/gforth.texi:25104
#, no-wrap
msgid "@code{assert(} ( @i{--  }) gforth-0.2 ``assert(''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25106
msgid "Equivalent to @code{assert1(}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25108
#, no-wrap
msgid ") ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25109 ../doc/gforth.texi:25110
#, no-wrap
msgid ")"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25113
#, no-wrap
msgid "@code{)} ( @i{--  }) gforth-0.2 ``close-paren''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25115
msgid "End an assertion. Generic end, can be used for other similar purposes"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25123
msgid ""
"The variable @code{assert-level} specifies the highest assertions that are "
"turned on. I.e., at the default @code{assert-level} of one, @code{assert0(} "
"and @code{assert1(} assertions perform checking, while @code{assert2(} and "
"@code{assert3(} assertions are treated as comments."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25130
msgid ""
"The value of @code{assert-level} is evaluated at compile-time, not at run-"
"time. Therefore you cannot turn assertions on or off at run-time; you have "
"to set the @code{assert-level} appropriately before compiling a piece of "
"code. You can compile different pieces of code at different @code{assert-"
"level}s (e.g., a trusted library at level 1 and newly-written code at level "
"3)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25132
#, no-wrap
msgid "assert-level ( @var{ -- a-addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25133 ../doc/gforth.texi:25134
#, no-wrap
msgid "assert-level"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25137
#, no-wrap
msgid "@code{assert-level} ( @i{-- a-addr  }) gforth-0.2 ``assert-level''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25139
msgid "All assertions above this level are turned off."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25148
msgid ""
"If an assertion fails, a message compatible with Emacs' compilation mode is "
"produced and the execution is aborted (currently with @code{ABORT\"}.  If "
"there is interest, we will introduce a special throw code. But if you intend "
"to @code{catch} a specific condition, using @code{throw} is probably more "
"appropriate than an assertion)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25149
#, no-wrap
msgid "filenames in assertion output"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25154
msgid ""
"Assertions (and @code{~~}) will usually print the wrong file name if a "
"marker is executed in the same file after their occurance.  They will print "
"@samp{*somewhere*} as file name if a marker is executed in the same file "
"before their occurance."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25157
msgid ""
"Definitions in Standard Forth for these assertion words are provided in "
"@file{compat/assert.fs}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25161
#, no-wrap
msgid "singlestep Debugger"
msgstr "singlestep Debugger"

#. type: cindex
#: ../doc/gforth.texi:25162
#, no-wrap
msgid "debugging Singlestep"
msgstr "debugging Singlestep"

#. type: table
#: ../doc/gforth.texi:25165
msgid "The singlestep debugger works only with the engine @code{gforth-itc}."
msgstr "シングルステップ・デバッガーは、 @code{gforth-itc} エンジンでのみ動作します。"

#. type: table
#: ../doc/gforth.texi:25169
msgid ""
"When you create a new word there's often the need to check whether it "
"behaves correctly or not. You can do this by typing @code{dbg badword}. A "
"debug session might look like this:"
msgstr "新しいワードを作成するとき、 それが正しく動作するかどうかを確認する必要があることがよくあります。 これを行うには、@code{dbg badword} と入力します。 デバッグ・セッションは以下のようになります:"

#. type: example
#: ../doc/gforth.texi:25175
#, no-wrap
msgid ""
": badword 0 DO i . LOOP ;  ok\n"
"2 dbg badword \n"
": badword  \n"
"Scanning code...\n"
"\n"
msgstr ""
": badword 0 DO i . LOOP ;  ok\n"
"2 dbg badword \n"
": badword  \n"
"Scanning code...\n"
"\n"

#. type: example
#: ../doc/gforth.texi:25177
#, no-wrap
msgid ""
"Nesting debugger ready!\n"
"\n"
msgstr "Nesting debugger ready!\n\n"

#. type: example
#: ../doc/gforth.texi:25187
#, no-wrap
msgid ""
"400D4738  8049BC4 0              -> [ 2 ] 00002 00000 \n"
"400D4740  8049F68 DO             -> [ 0 ] \n"
"400D4744  804A0C8 i              -> [ 1 ] 00000 \n"
"400D4748 400C5E60 .              -> 0 [ 0 ] \n"
"400D474C  8049D0C LOOP           -> [ 0 ] \n"
"400D4744  804A0C8 i              -> [ 1 ] 00001 \n"
"400D4748 400C5E60 .              -> 1 [ 0 ] \n"
"400D474C  8049D0C LOOP           -> [ 0 ] \n"
"400D4758  804B384 ;              ->  ok\n"
msgstr ""
"400D4738  8049BC4 0              -> [ 2 ] 00002 00000 \n"
"400D4740  8049F68 DO             -> [ 0 ] \n"
"400D4744  804A0C8 i              -> [ 1 ] 00000 \n"
"400D4748 400C5E60 .              -> 0 [ 0 ] \n"
"400D474C  8049D0C LOOP           -> [ 0 ] \n"
"400D4744  804A0C8 i              -> [ 1 ] 00001 \n"
"400D4748 400C5E60 .              -> 1 [ 0 ] \n"
"400D474C  8049D0C LOOP           -> [ 0 ] \n"
"400D4758  804B384 ;              ->  ok\n"

#. type: table
#: ../doc/gforth.texi:25193
msgid ""
"Each line displayed is one step. You always have to hit return to execute "
"the next word that is displayed. If you don't want to execute the next word "
"in a whole, you have to type @kbd{n} for @code{nest}. Here is an overview "
"what keys are available:"
msgstr "各行が 1 ステップです。 次のワードを実行して表示するには、 常に Return キーを押す必要があります。 次のワード全体を実行したくない場合は、 @code{nest} に対して @kbd{n} と入力する必要があります。 利用可能なキーの概要は以下のとおりです:"

#. type: key{#1}
#: ../doc/gforth.texi:25196
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: table
#: ../doc/gforth.texi:25198
msgid "Next; Execute the next word."
msgstr "Next; 次のワードを実行する(execute)。"

#. type: table
#: ../doc/gforth.texi:25201
msgid "Nest; Single step through next word."
msgstr "Nest; 次のワードまで 1 ステップずつ辿る。"

#. type: table
#: ../doc/gforth.texi:25205
msgid ""
"Unnest; Stop debugging and execute rest of word. If we got to this word with "
"nest, continue debugging with the calling word."
msgstr "Unnest; デバッグを停止し(stop)、残りのワードを実行します(execute)。 ネスト(nest)機能でこのワードに到達した場合、 それを呼び出したワードでデバッグを続行します。"

#. type: table
#: ../doc/gforth.texi:25208
msgid "Done; Stop debugging and execute rest."
msgstr "Done; デバッグを停止し(stop)、 残りを実行します(execute)。"

#. type: item
#: ../doc/gforth.texi:25209
#, no-wrap
msgid "s"
msgstr "s"

#. type: table
#: ../doc/gforth.texi:25211
msgid "Stop; Abort immediately."
msgstr "Stop; 直ちに終了(abort)します。"

#. type: table
#: ../doc/gforth.texi:25217
msgid ""
"Debugging large application with this mechanism is very difficult, because "
"you have to nest very deeply into the program before the interesting part "
"begins. This takes a lot of time."
msgstr "このメカニズムを使用して大規模なアプリケーションをデバッグすることは、 あなたが関心のある部分が始まる前にプログラム内に非常に深くネストする必要があるため、 非常に困難です。 これにはとても時間がかかります。"

#. type: table
#: ../doc/gforth.texi:25221
msgid ""
"To do it more directly put a @code{BREAK:} command into your source code.  "
"When program execution reaches @code{BREAK:} the single step debugger is "
"invoked and you have all the features described above."
msgstr "これをより直接的に行うには、 @code{BREAK:} コマンドをあなたのソース・コードに追加します。 プログラムの実行が @code{BREAK:} に達すると、 シングル・ステップ・デバッガーが呼び出され、 上記すべての機能が利用できるようになります。"

#. type: table
#: ../doc/gforth.texi:25226
msgid ""
"If you have more than one part to debug it is useful to know where the "
"program has stopped at the moment. You can do this by the @code{BREAK\" "
"string\"} command. This behaves like @code{BREAK:} except that string is "
"typed out when the ``breakpoint'' is reached."
msgstr "デバッグする部分が複数ある場合、 プログラムが現在どこで停止しているかを把握できると便利です。 これを行うには、 @code{BREAK\" string\"} コマンドを使用します。 これは @code{BREAK:} と同様に動作しますが、 「ブレークポイント」に到達したときに文字列が出力される点が異なります。"

#. type: findex
#: ../doc/gforth.texi:25228
#, no-wrap
msgid "dbg ( @var{ \"name\" --   } ) gforth-0.2"
msgstr "dbg ( @var{ \"name\" --   } ) gforth-0.2"

#. type: kindex
#: ../doc/gforth.texi:25229 ../doc/gforth.texi:25230
#, no-wrap
msgid "dbg"
msgstr "dbg"

#. type: format
#: ../doc/gforth.texi:25233
#, no-wrap
msgid "@code{dbg} ( @i{\"name\" --  }) gforth-0.2 ``dbg''\n"
msgstr "@code{dbg} ( @i{\"name\" --  }) gforth-0.2 ``dbg''\n"

#. type: findex
#: ../doc/gforth.texi:25235
#, no-wrap
msgid "break: ( @var{ --   } ) gforth-0.4"
msgstr "break: ( @var{ --   } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:25236 ../doc/gforth.texi:25237
#, no-wrap
msgid "break:"
msgstr "break:"

#. type: format
#: ../doc/gforth.texi:25240
#, no-wrap
msgid "@code{break:} ( @i{--  }) gforth-0.4 ``break:''\n"
msgstr "@code{break:} ( @i{--  }) gforth-0.4 ``break:''\n"

#. type: findex
#: ../doc/gforth.texi:25242
#, no-wrap
msgid "break\" ( @var{ 'ccc\"' --   } ) gforth-0.4"
msgstr "break\" ( @var{ 'ccc\"' --   } ) gforth-0.4"

#. type: kindex
#: ../doc/gforth.texi:25243 ../doc/gforth.texi:25244
#, no-wrap
msgid "break\""
msgstr "break\""

#. type: format
#: ../doc/gforth.texi:25247
#, no-wrap
msgid "@code{break\"} ( @i{'ccc\"' --  }) gforth-0.4 ``break\"''\n"
msgstr "@code{break\"} ( @i{'ccc\"' --  }) gforth-0.4 ``break\"''\n"

#. type: subsection
#: ../doc/gforth.texi:25252
#, no-wrap
msgid "Code Coverage and Execution Frequency"
msgstr "Code Coverage and Execution Frequency"

#. type: cindex
#: ../doc/gforth.texi:25253
#, no-wrap
msgid "code coverage"
msgstr "code coverage"

#. type: cindex
#: ../doc/gforth.texi:25254
#, no-wrap
msgid "execution frequency"
msgstr "execution frequency"

#. type: table
#: ../doc/gforth.texi:25260
msgid ""
"If you run extensive tests on your code, you often want to figure out if the "
"tests exercise all parts of the code.  This is called (test)  coverage.  The "
"file @file{coverage.fs} contains tools for measuring the coverage as well as "
"execution frequency."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25266
msgid ""
"Code coverage inserts counting code in every basic block (straight-line code "
"sequence) loaded after @file{coverage.fs}.  Each time that code is run, it "
"increments the counter for that basic block.  Later you can show the source "
"file with the counts inserted in these basic blocks."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25267
#, no-wrap
msgid "nocov[ ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25268 ../doc/gforth.texi:25269
#, no-wrap
msgid "nocov["
msgstr ""

#. type: format
#: ../doc/gforth.texi:25272
#, no-wrap
msgid "@code{nocov[} ( @i{--  }) gforth-1.0 ``nocov-bracket''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25274
msgid "(Immediate) Turn coverage off temporarily."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25276
#, no-wrap
msgid "]nocov ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25277 ../doc/gforth.texi:25278
#, no-wrap
msgid "]nocov"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25281
#, no-wrap
msgid "@code{]nocov} ( @i{--  }) gforth-1.0 ``bracket-nocov''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25283
msgid "(Immediate) End of temporary turned off coverage."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25285
#, no-wrap
msgid "coverage? ( @var{ -- f   } ) gforth-internal"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25286 ../doc/gforth.texi:25287
#, no-wrap
msgid "coverage?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25290
#, no-wrap
msgid "@code{coverage?} ( @i{-- f  }) gforth-internal ``coverage?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25292
msgid "Value: Coverage check on/off"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25294
#, no-wrap
msgid "cov+ ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25295 ../doc/gforth.texi:25296
#, no-wrap
msgid "cov+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25299
#, no-wrap
msgid "@code{cov+} ( @i{--  }) gforth-experimental ``cov+''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25301
msgid "(Immediate) Place a coverage counter here."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25303
#, no-wrap
msgid "?cov+ ( @var{ flag -- flag   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25304 ../doc/gforth.texi:25305
#, no-wrap
msgid "?cov+"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25308
#, no-wrap
msgid "@code{?cov+} ( @i{flag -- flag  }) gforth-experimental ``?cov+''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25314
msgid ""
"(Immediate) A coverage counter for a flag; in the coverage output you see "
"three numbers behind @code{?cov}: The first is the number of executions "
"where the top-of-stack was non-zero; the second is the number of executions "
"where it was zero; the third is the total number of executions."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25316
#, no-wrap
msgid ".coverage ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25317 ../doc/gforth.texi:25318
#, no-wrap
msgid ".coverage"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25321
#, no-wrap
msgid "@code{.coverage} ( @i{--  }) gforth-experimental ``.coverage''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25323
msgid "Show code with execution frequencies."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25325
#, no-wrap
msgid "annotate-cov ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25326 ../doc/gforth.texi:25327
#, no-wrap
msgid "annotate-cov"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25330
#, no-wrap
msgid "@code{annotate-cov} ( @i{--  }) gforth-experimental ``annotate-cov''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25335
msgid ""
"For every file with coverage information, produce a @code{.cov} file that "
"has the execution frequencies inserted.  We recommend to use @code{bw-cover} "
"first (with the default @code{color-cover} you get escape sequences in the "
"files)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25337
#, no-wrap
msgid "cov% ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25338 ../doc/gforth.texi:25339
#, no-wrap
msgid "cov%"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25342
#, no-wrap
msgid "@code{cov%} ( @i{--  }) gforth-experimental ``cov-percent''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25345
msgid ""
"Print the percentage of basic blocks loaded after @file{coverage.fs} that "
"are executed at least once."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25347
#, no-wrap
msgid ".cover-raw ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25348 ../doc/gforth.texi:25349
#, no-wrap
msgid ".cover-raw"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25352
#, no-wrap
msgid "@code{.cover-raw} ( @i{--  }) gforth-experimental ``.cover-raw''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25354
msgid "Print raw execution counts."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25364
msgid ""
"By default, the counts are shown in colour (using ANSI escape sequences), "
"but you can use @code{bw-cover} to show them in parenthesized form without "
"escape sequences."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25365
#, no-wrap
msgid "bw-cover ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25366 ../doc/gforth.texi:25367
#, no-wrap
msgid "bw-cover"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25370
#, no-wrap
msgid "@code{bw-cover} ( @i{--  }) gforth-1.0 ``bw-cover''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25372
msgid "Print execution counts in parentheses (source-code compatible)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25374
#, no-wrap
msgid "color-cover ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25375 ../doc/gforth.texi:25376
#, no-wrap
msgid "color-cover"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25379
#, no-wrap
msgid "@code{color-cover} ( @i{--  }) gforth-1.0 ``color-cover''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25381
msgid "Print execution counts in colours (default)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25386
msgid ""
"You can save and reload the coverage counters in binary format, to aggregate "
"coverage counters across several test runs."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25387
#, no-wrap
msgid "save-cov ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25388 ../doc/gforth.texi:25389
#, no-wrap
msgid "save-cov"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25392
#, no-wrap
msgid "@code{save-cov} ( @i{--  }) gforth-experimental ``save-cov''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25394
msgid "Save coverage counters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25396
#, no-wrap
msgid "load-cov ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25397 ../doc/gforth.texi:25398
#, no-wrap
msgid "load-cov"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25401
#, no-wrap
msgid "@code{load-cov} ( @i{--  }) gforth-experimental ``load-cov''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25403
msgid "Load coverage counters."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25409
#, no-wrap
msgid "multitasker"
msgstr "multitasker"

#. type: table
#: ../doc/gforth.texi:25422
msgid ""
"Gforth offers two multitaskers: a traditional, cooperative round-robin "
"multitasker, and a pthread-based multitasker which allows to run several "
"threads concurrently on multi-core machines.  The pthread-based is now "
"marked as experimental feature, as standardization of Forth multitaskers "
"will likely change the names of words without changing their semantics."
msgstr "Gforth は 2 つのマルチタスカーを提供します。 1 つは従来の協調的なラウンドロビン・マルチタスカー(cooperative round-robin multitasker)で、 もう 1 つはマルチコア・マシン上で複数のスレッドを同時に実行できる pthread ベースのマルチタスカーです。  将来、 Forth マルチタスカーの標準化により、 その意味は変更せずにワードの名前が変更される可能性が高いため、 pthread ベースのマルチタスカーは現在、 実験的な機能としてマークされています。"

#. type: cindex
#: ../doc/gforth.texi:25425
#, no-wrap
msgid "pthread"
msgstr "pthread"

#. type: table
#: ../doc/gforth.texi:25432
msgid ""
"Posix threads can run in parallel on several cores, or with pre-emptive "
"multitasking on onecore.  However, many of the following words are the same "
"as in the traditional cooperative multi-tasker."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25439
msgid ""
"In addition, there are words that allow you to make sure that only one task "
"at a time changes something, and for communicating between tasks.  These "
"words are necessary for pre-emptive and multi-core multi-tasking, because "
"the cooperative-multitasking way of performing transactions between calls to "
"@code{pause} does not work in this environment."
msgstr ""

#. type: node
#: ../doc/gforth.texi:25448 ../doc/gforth.texi:25449 ../doc/gforth.texi:25654
#, no-wrap
msgid "Basic multi-tasking"
msgstr ""

#. type: node
#: ../doc/gforth.texi:25448 ../doc/gforth.texi:25654 ../doc/gforth.texi:25655
#: ../doc/gforth.texi:25754
#, no-wrap
msgid "Task-local data"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25454
msgid ""
"Tasks can be created with @code{newtask} or @code{newtask4} with a given "
"amount of stack space (either all the same or each stack's size specified)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25455
#, no-wrap
msgid "newtask ( @var{ stacksize -- task   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25456 ../doc/gforth.texi:25457
#, no-wrap
msgid "newtask"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25460
#, no-wrap
msgid "@code{newtask} ( @i{stacksize -- task  }) gforth-experimental ``newtask''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25463
msgid ""
"creates @i{task}; each stack (data, return, FP, locals) has size "
"@i{stacksize}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25465
#, no-wrap
msgid "task ( @var{ ustacksize \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25466 ../doc/gforth.texi:25467
#, no-wrap
msgid "task"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25470
#, no-wrap
msgid "@code{task} ( @i{ustacksize \"name\" --  }) gforth-experimental ``task''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25474
msgid ""
"creates a task @i{name}; each stack (data, return, FP, locals)  has size "
"@i{ustacksize}.@* @i{name} execution: ( -- @i{task} )"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25476
#, no-wrap
msgid "newtask4 ( @var{ u-data u-return u-fp u-locals -- task   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25477 ../doc/gforth.texi:25478
#, no-wrap
msgid "newtask4"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25481
#, no-wrap
msgid "@code{newtask4} ( @i{u-data u-return u-fp u-locals -- task  }) gforth-experimental ``newtask4''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25485
msgid ""
"creates @i{task} with data stack size @i{u-data}, return stack size @i{u-"
"return}, FP stack size @i{u-fp} and locals stack size @i{u-locals}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25490
msgid ""
"If you don't know which stack sizes to use for the task, you can use the "
"size(s) of the main task:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25491
#, no-wrap
msgid "stacksize ( @var{ -- u   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25492 ../doc/gforth.texi:25493
#, no-wrap
msgid "stacksize"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25496
#, no-wrap
msgid "@code{stacksize} ( @i{-- u  }) gforth-experimental ``stacksize''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25498
msgid "@i{u} is the data stack size of the main task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25500
#, no-wrap
msgid "stacksize4 ( @var{ -- u-data u-return u-fp u-locals   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25501 ../doc/gforth.texi:25502
#, no-wrap
msgid "stacksize4"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25505
#, no-wrap
msgid "@code{stacksize4} ( @i{-- u-data u-return u-fp u-locals  }) gforth-experimental ``stacksize4''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25507
msgid "Pushes the data, return, FP, and locals stack sizes of the main task."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25512
msgid ""
"A task is created in an inactive state.  To let it run, you have to activate "
"it with one of the following words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25513
#, no-wrap
msgid "initiate ( @var{ xt task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25514 ../doc/gforth.texi:25515
#, no-wrap
msgid "initiate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25518
#, no-wrap
msgid "@code{initiate} ( @i{xt task --  }) gforth-experimental ``initiate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25522
msgid ""
"Let @i{task} execute @i{xt}.  Upon return from the @i{xt}, the task "
"terminates itself (VFX compatible).  Use one-time executable closures to "
"pass arbitrary paramenters to a task."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25531
msgid ""
"The following legacy words provide the same functionality as "
"@code{initiate}, but with a different interface: Like @code{does>}, they "
"split their containing colon definition in two parts: The part before "
"@code{activate}/@code{pass} runs in the activating task, and returns to its "
"caller after activating the task.  The part behind @code{activate}/"
"@code{pass} is executed in the activated target task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25532
#, no-wrap
msgid "activate ( @var{ run-time nest-sys1 task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25533 ../doc/gforth.texi:25534
#, no-wrap
msgid "activate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25537
#, no-wrap
msgid "@code{activate} ( @i{run-time nest-sys1 task --  }) gforth-experimental ``activate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25542
msgid ""
"Let @i{task} perform the code behind @code{activate}, and return to the "
"caller of the word containing @code{activate}.  When the task returns from "
"the code behind @code{activate}, it terminates itself."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25544
#, no-wrap
msgid "pass ( @var{ x1 .. xn n task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25545 ../doc/gforth.texi:25546
#, no-wrap
msgid "pass"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25549
#, no-wrap
msgid "@code{pass} ( @i{x1 .. xn n task --  }) gforth-experimental ``pass''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25555
msgid ""
"Pull @i{x1 .. xn n} from the current task's data stack and push @i{x1 .. xn} "
"on @i{task}'s data stack.  Let @i{task} perform the code behind @code{pass}, "
"and return to the caller of the word containing @code{pass}.  When the task "
"returns from the code behind @code{pass}, it terminates itself."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25559
msgid "You can also do creation and activation in one step:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25560
#, no-wrap
msgid "execute-task ( @var{ xt -- task   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25561 ../doc/gforth.texi:25562
#, no-wrap
msgid "execute-task"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25565
#, no-wrap
msgid "@code{execute-task} ( @i{xt -- task  }) gforth-experimental ``execute-task''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25569
msgid ""
"Create a new task @var{task} with the same stack sizes as the main task. Let "
"@i{task} execute @i{xt}.  Upon return from the @i{xt}, the task terminates "
"itself."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25575
msgid ""
"Apart from terminating by running to the end, a task can terminate itself "
"with @code{kill-task}.  Other tasks can terminate it with @code{kill}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25576
#, no-wrap
msgid "kill-task ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25577 ../doc/gforth.texi:25578
#, no-wrap
msgid "kill-task"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25581
#, no-wrap
msgid "@code{kill-task} ( @i{--  }) gforth-experimental ``kill-task''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25583
msgid "Terminate the current task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25585
#, no-wrap
msgid "kill ( @var{ task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25586 ../doc/gforth.texi:25587
#, no-wrap
msgid "kill"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25590
#, no-wrap
msgid "@code{kill} ( @i{task --  }) gforth-experimental ``kill''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25592
msgid "Terminate @i{task}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25596
msgid "Tasks can also temporarily stop themselves or be stopped:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25597
#, no-wrap
msgid "halt ( @var{ task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25598 ../doc/gforth.texi:25599
#, no-wrap
msgid "halt"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25602
#, no-wrap
msgid "@code{halt} ( @i{task --  }) gforth-experimental ``halt''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25604
msgid "Stop a task"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25606
#, no-wrap
msgid "stop ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25607 ../doc/gforth.texi:25608
#, no-wrap
msgid "stop"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25611
#, no-wrap
msgid "@code{stop} ( @i{--  }) gforth-experimental ``stop''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25613
msgid "stops the current task, and waits for events (which may restart it)"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25615
#, no-wrap
msgid "stop-ns ( @var{ timeout --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25616 ../doc/gforth.texi:25617
#, no-wrap
msgid "stop-ns"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25620
#, no-wrap
msgid "@code{stop-ns} ( @i{timeout --  }) gforth-experimental ``stop-ns''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25622
msgid "Stop with timeout (in nanoseconds), better replacement for ms"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25627
msgid ""
"A task restarts when the timeout is over or when another task wakes it with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25628
#, no-wrap
msgid "restart ( @var{ task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25629 ../doc/gforth.texi:25630
#, no-wrap
msgid "restart"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25633
#, no-wrap
msgid "@code{restart} ( @i{task --  }) gforth-experimental ``restart''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25635
msgid "Wake a task"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25639
msgid "There is also:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25640
#, no-wrap
msgid "pause ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25641 ../doc/gforth.texi:25642
#, no-wrap
msgid "pause"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25645
#, no-wrap
msgid "@code{pause} ( @i{--  }) gforth-experimental ``pause''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25651
msgid ""
"voluntarily switch to the next waiting task (@code{pause} is the traditional "
"cooperative task switcher; in the pthread multitasker, you don't need "
"@code{pause} for cooperation, but you still can use it e.g. when you have to "
"resort to polling for some reason).  This also checks for events in the "
"queue."
msgstr ""

#. type: node
#: ../doc/gforth.texi:25654 ../doc/gforth.texi:25754 ../doc/gforth.texi:25755
#: ../doc/gforth.texi:25813
#, no-wrap
msgid "Semaphores"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25656
#, no-wrap
msgid "user variables"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25657
#, no-wrap
msgid "user space"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:25658
#, no-wrap
msgid "task-local data"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25666
msgid ""
"In Forth every task has essentially the same task-local data, called "
"``user'' area (early Forth systems were multi-user systems and there often "
"was one user per task).  The @i{task} result of, e.g. @code{newtask} is the "
"start address of its user area.  Each task gets the user data defined by the "
"system (e.g., @code{base}).  You can define additional user data with:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25667
#, no-wrap
msgid "User ( @var{ \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25668 ../doc/gforth.texi:25669
#, no-wrap
msgid "User"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25672
#, no-wrap
msgid "@code{User} ( @i{\"name\" --  }) gforth-0.2 ``User''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25676
msgid ""
"@i{Name} is a user variable (1 cell).@* @i{Name} execution: ( -- "
"@i{addr} )@* @i{Addr} is the address of the user variable in the current "
"task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25678
#, no-wrap
msgid "AUser ( @var{ \"name\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25679 ../doc/gforth.texi:25680
#, no-wrap
msgid "AUser"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25683
#, no-wrap
msgid "@code{AUser} ( @i{\"name\" --  }) gforth-0.2 ``AUser''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25686
msgid ""
"@i{Name} is a user variable containing an address (this only makes a "
"difference in the cross-compiler)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25688
#, no-wrap
msgid "uallot ( @var{ n1 -- n2   } ) gforth-0.3"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25689 ../doc/gforth.texi:25690
#, no-wrap
msgid "uallot"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25693
#, no-wrap
msgid "@code{uallot} ( @i{n1 -- n2  }) gforth-0.3 ``uallot''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25696
msgid ""
"Reserve @i{n1} bytes of user data.  @i{n2} is the offset of the start of the "
"reserved area within the user area."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25698
#, no-wrap
msgid "UValue ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25699 ../doc/gforth.texi:25700
#, no-wrap
msgid "UValue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25703
#, no-wrap
msgid "@code{UValue} ( @i{\"name\" --  }) gforth-1.0 ``UValue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25706
msgid "@i{Name} is a user value.@* @i{Name} execution: ( -- @i{x} )"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25708
#, no-wrap
msgid "UDefer ( @var{ \"name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25709 ../doc/gforth.texi:25710
#, no-wrap
msgid "UDefer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25713
#, no-wrap
msgid "@code{UDefer} ( @i{\"name\" --  }) gforth-1.0 ``UDefer''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25716
msgid ""
"@i{Name} is a task-local deferred word.@* @i{Name} execution: ( ... -- ... )"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25720
msgid "There are also the following words for dealing with user data."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25721
#, no-wrap
msgid "up@@ ( @var{ -- a-addr  } ) new"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25722 ../doc/gforth.texi:25723
#, no-wrap
msgid "up@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25726
#, no-wrap
msgid "@code{up@@} ( @i{-- a-addr }) new ``up-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25729
msgid ""
"@i{Addr} is the start of the user area of the current task (@i{addr} also "
"serves as the @i{task} identifier of the current task)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25730
#, no-wrap
msgid "user' ( @var{ \"name\" -- u   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25731 ../doc/gforth.texi:25732
#, no-wrap
msgid "user'"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25735
#, no-wrap
msgid "@code{user'} ( @i{\"name\" -- u  }) gforth-experimental ``user'''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25738
msgid ""
"@i{U} is the offset of the user variable @i{name} in the user area of each "
"task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25740
#, no-wrap
msgid "'s ( @var{ addr1 task -- addr2   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25741 ../doc/gforth.texi:25742
#, no-wrap
msgid "'s"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25745
#, no-wrap
msgid "@code{'s} ( @i{addr1 task -- addr2  }) gforth-experimental ``'s''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25749
msgid ""
"With @i{addr1} being an address in the user data of the current task, "
"@i{addr2} is the corresponding address in @i{task}'s user data."
msgstr ""

#. type: node
#: ../doc/gforth.texi:25754 ../doc/gforth.texi:25813 ../doc/gforth.texi:25814
#: ../doc/gforth.texi:25864
#, no-wrap
msgid "Hardware operations for multi-tasking"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25762
msgid ""
"A cooperative multitasker can ensure that there is no other task interacting "
"between two invocations of @code{pause}.  Pthreads however are really "
"concurrent tasks (at least on a multi-core CPU), and therefore, several "
"techniques to avoid conflicts when accessing the same resources."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25765
msgid ""
"Semaphores can only be aquired by one thread, all other threads have to wait "
"until the semapohre is released."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25766
#, no-wrap
msgid "semaphore ( @var{ \"name\" --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25767 ../doc/gforth.texi:25768
#, no-wrap
msgid "semaphore"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25771
#, no-wrap
msgid "@code{semaphore} ( @i{\"name\" --  }) gforth-experimental ``semaphore''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25774
msgid ""
"create a named semaphore @i{name}@* @i{name} execution: ( -- @i{semaphore} )"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25776
#, no-wrap
msgid "lock ( @var{ semaphore --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25777 ../doc/gforth.texi:25778
#, no-wrap
msgid "lock"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25781
#, no-wrap
msgid "@code{lock} ( @i{semaphore --  }) gforth-experimental ``lock''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25783
msgid "lock the semaphore"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25785
#, no-wrap
msgid "unlock ( @var{ semaphore --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25786 ../doc/gforth.texi:25787
#, no-wrap
msgid "unlock"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25790
#, no-wrap
msgid "@code{unlock} ( @i{semaphore --  }) gforth-experimental ``unlock''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25792
msgid "unlock the semaphore"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25800
msgid ""
"The other approach to prevent concurrent access is the critical section.  "
"Here, we implement a critical section with a semaphore, so you have to "
"specify the semaphore which is used for the critical section.  Only those "
"critical sections which use the same semaphore are mutually exclusive."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25801
#, no-wrap
msgid "critical-section ( @var{ xt semaphore --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25802 ../doc/gforth.texi:25803
#, no-wrap
msgid "critical-section"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25806
#, no-wrap
msgid "@code{critical-section} ( @i{xt semaphore --  }) gforth-experimental ``critical-section''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25810
msgid ""
"Execute @i{xt} while locking @i{semaphore}.  After leaving @i{xt}, "
"@i{semaphore} is unlocked even if an exception is thrown."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25822
msgid ""
"Atomic hardware operations perform the whole operation, without any other "
"task seeing an intermediate state.  These operations can be used to "
"synchronize tasks without using slow OS primitives, but compared to the non-"
"atomic sequences of operations they tend to be slow.  Atomic operations only "
"work correctly on aligned addresses, even on hardware that otherwise does "
"not require alignment."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25823
#, no-wrap
msgid "!@@ ( @var{ u1 a-addr -- u2  } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25824 ../doc/gforth.texi:25825
#, no-wrap
msgid "!@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25828
#, no-wrap
msgid "@code{!@@} ( @i{u1 a-addr -- u2 }) gforth-experimental ``store-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25830
msgid ""
"load @var{u2} from @var{a_addr}, and store @var{u1} there, as atomic "
"operation"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25831
#, no-wrap
msgid "+!@@ ( @var{ u1 a-addr -- u2  } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25832 ../doc/gforth.texi:25833
#, no-wrap
msgid "+!@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25836
#, no-wrap
msgid "@code{+!@@} ( @i{u1 a-addr -- u2 }) gforth-experimental ``add-store-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25838
msgid ""
"load @var{u2} from @var{a_addr}, and increment this location by @var{u1}, as "
"atomic operation"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25839
#, no-wrap
msgid "?!@@ ( @var{ unew uold a-addr -- uprev  } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25840 ../doc/gforth.texi:25841
#, no-wrap
msgid "?!@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25844
#, no-wrap
msgid "@code{?!@@} ( @i{unew uold a-addr -- uprev }) gforth-experimental ``question-store-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25846
msgid ""
"load @var{uprev} from @var{a_addr}, compare it to @var{uold}, and if equal, "
"store @var{unew} there, as atomic operation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25853
msgid ""
"Another hardware operation is the memory barrier.  Unfortunately modern "
"hardware often can reorder memory operations relative to other memory "
"operations (as seen by a different core), and the memory barrier suppresses "
"this reordering for one point in the execution of the task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25854
#, no-wrap
msgid "barrier ( @var{ --  } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25855 ../doc/gforth.texi:25856
#, no-wrap
msgid "barrier"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25859
#, no-wrap
msgid "@code{barrier} ( @i{-- }) gforth-experimental ``barrier''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25862
msgid ""
"All memory operations before the barrier are performed before any memory "
"operation after the barrier."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25868
msgid "Gforth's message queues are a variant of the actor model."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25873
msgid ""
"An event is an xt; the sending task tells the receiving task to run an "
"event, and the receiving task performs one event from its message queue when "
"it is ready.  Execute-once closures can be used for events that pass "
"parameters."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25874
#, no-wrap
msgid "send-event ( @var{ xt task --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25875 ../doc/gforth.texi:25876
#, no-wrap
msgid "send-event"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25879
#, no-wrap
msgid "@code{send-event} ( @i{xt task --  }) gforth-experimental ``send-event''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25882
msgid ""
"Task IPC: send @var{xt} to @var{task}.  The xt is executed there.  Use a one-"
"shot closure to pass parameters with the xt."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25888
msgid ""
"When several tasks send event to one task, the events may arrive in any "
"order.  In order to receive events, you put one of the following words in "
"the receiving task:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25889
#, no-wrap
msgid "?events ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25890 ../doc/gforth.texi:25891
#, no-wrap
msgid "?events"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25894
#, no-wrap
msgid "@code{?events} ( @i{--  }) gforth-experimental ``question-events''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25897
msgid ""
"Perform all event sequences in the current task's message queue, one event "
"sequence at a time."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25899
#, no-wrap
msgid "event-loop ( @var{ --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25900 ../doc/gforth.texi:25901
#, no-wrap
msgid "event-loop"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25904
#, no-wrap
msgid "@code{event-loop} ( @i{--  }) gforth-experimental ``event-loop''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25908
msgid ""
"Wait for event sequences, and execute any event sequences when they arrive.  "
"Return to waiting if no event sequences are in the queue.  This word never "
"returns."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25913
msgid ""
"Alternatively, when a task is @code{stop}ped, it is also ready for receiving "
"event, and receiving an event will wake it up."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25932
msgid ""
"Gforth's Cilk is a framework for dividing work between multiple tasks "
"running on several cores, inspired by the programming language of the same "
"name.  Use @code{require cilk.fs} if you want to use Cilk."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25938
msgid ""
"The idea is that you identify subproblems that can be solved in parallel, "
"and the framework assigns worker tasks to these subproblems.  In particular, "
"you use one of the @code{spawn} words for each subtask.  Eventually you need "
"to wait with @code{cilk-sync} for the subproblems to be solved."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25942
msgid ""
"Currently all the spawning has to happen from one task, and @code{cilk-sync} "
"waits for all subproblems to complete, so using the current Gforth Cilk for "
"recursive algorithms is not straightforward."
msgstr ""

#. type: table
#: ../doc/gforth.texi:25947
msgid ""
"Do not divide the subproblems too finely, in order to avoid overhead; how "
"fine is too fine depends on how uniform the run-time for the subproblems is, "
"but for problems with substantial run-time, having 5*@code{cores} "
"subproblems is probably a good starting point."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25948
#, no-wrap
msgid "cores ( @var{ -- u   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25949 ../doc/gforth.texi:25950
#, no-wrap
msgid "cores"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25953
#, no-wrap
msgid "@code{cores} ( @i{-- u  }) cilk ``cores''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25958
msgid ""
"A value containing the number of worker tasks to use.  By default this is "
"the number of hardware threads (with SMT/HT), if we can determine that, "
"otherwise 1.  If you want to use a different number, change @code{cores} "
"before calling @code{cilk-init}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25960
#, no-wrap
msgid "cilk-init ( @var{ --   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25961 ../doc/gforth.texi:25962
#, no-wrap
msgid "cilk-init"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25965
#, no-wrap
msgid "@code{cilk-init} ( @i{--  }) cilk ``cilk-init''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25967
msgid "Start the worker tasks if not already done."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25969
#, no-wrap
msgid "spawn ( @var{ xt --   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25970 ../doc/gforth.texi:25971
#, no-wrap
msgid "spawn"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25974
#, no-wrap
msgid "@code{spawn} ( @i{xt --  }) cilk ``spawn''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25980
msgid ""
"Execute @i{xt} ( -- ) in a worker task.  Use one-time executable closures to "
"pass heap-allocated closures, allowing to pass arbitrary data from the "
"spawner to the code running in the worker.@* E.g.: @code{( n r ) [@{: n f: "
"r :@}h1 code ;] spawn}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25982
#, no-wrap
msgid "spawn1 ( @var{ x xt --   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25983 ../doc/gforth.texi:25984
#, no-wrap
msgid "spawn1"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25987
#, no-wrap
msgid "@code{spawn1} ( @i{x xt --  }) cilk ``spawn1''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25989
msgid "Execute @i{xt} ( x -- ) in a worker task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:25991
#, no-wrap
msgid "spawn2 ( @var{ x1 x2 xt --   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:25992 ../doc/gforth.texi:25993
#, no-wrap
msgid "spawn2"
msgstr ""

#. type: format
#: ../doc/gforth.texi:25996
#, no-wrap
msgid "@code{spawn2} ( @i{x1 x2 xt --  }) cilk ``spawn2''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:25998
msgid "Execute @i{xt} ( x1 x2 -- ) in a worker task."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26000
#, no-wrap
msgid "cilk-sync ( @var{ --   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26001 ../doc/gforth.texi:26002
#, no-wrap
msgid "cilk-sync"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26005
#, no-wrap
msgid "@code{cilk-sync} ( @i{--  }) cilk ``cilk-sync''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26007
msgid "Wait for all subproblems to complete."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26009
#, no-wrap
msgid "cilk-bye ( @var{ --   } ) cilk"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26010 ../doc/gforth.texi:26011
#, no-wrap
msgid "cilk-bye"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26014
#, no-wrap
msgid "@code{cilk-bye} ( @i{--  }) cilk ``cilk-bye''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26016
msgid "Terminate all workers."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26022
#, no-wrap
msgid "C interface"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26023
#, no-wrap
msgid "foreign language interface"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26024
#, no-wrap
msgid "interface to C functions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26033
msgid ""
"Gforth's C interface works by compiling a wrapper library that contains C "
"functions which take parameters from the Forth stacks and calls the C "
"functions.  This wrapper library is compiled by the C compiler.  Compilation "
"results are cached, so that Gforth only needs to rerun the C compilation if "
"the wrapper library has to change.  This build process is automatic, and "
"done at the end of a interface declaration.  Gforth uses libtool and GCC for "
"that process."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26038
msgid ""
"The C interface is now mostly complete, callbacks have been added, but for "
"structs, we use Forth2012 structs, which don't have independent scopes.  The "
"offsets of those structs are extracted from header files with a SWIG plugin."
msgstr ""

#. type: node
#: ../doc/gforth.texi:26052 ../doc/gforth.texi:26120
#, no-wrap
msgid "Calling C Functions"
msgstr ""

#. type: node
#: ../doc/gforth.texi:26052 ../doc/gforth.texi:26120 ../doc/gforth.texi:26121
#: ../doc/gforth.texi:26260
#, no-wrap
msgid "Declaring C Functions"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:26053
#, no-wrap
msgid "Calling C functions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26054
#, no-wrap
msgid "C functions, calls to"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26055
#, no-wrap
msgid "calling C functions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26065
msgid ""
"Once a C function is declared (see @pxref{Declaring C Functions}), you can "
"call it as follows: You push the arguments on the stack(s), and then call "
"the word for the C function.  The arguments have to be pushed in the same "
"order as the arguments appear in the C documentation (i.e., the first "
"argument is deepest on the stack).  Integer and pointer arguments have to be "
"pushed on the data stack, floating-point arguments on the FP stack; these "
"arguments are consumed by the called C function."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26072
msgid ""
"On returning from the C function, the return value, if any, resides on the "
"appropriate stack: an integer return value is pushed on the data stack, an "
"FP return value on the FP stack, and a void return value results in not "
"pushing anything.  Note that most C functions have a return value, even if "
"that is often not used in C; in Forth, you have to @code{drop} this return "
"value explicitly if you do not use it."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26076
msgid ""
"The C interface automatically converts between the C type and the Forth type "
"as necessary, on a best-effort basis (in some cases, there may be some loss)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26078
msgid "As an example, consider the POSIX function @code{lseek()}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26081
#, no-wrap
msgid "off_t lseek(int fd, off_t offset, int whence);\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26086
msgid ""
"This function takes three integer arguments, and returns an integer "
"argument, so a Forth call for setting the current file offset to the start "
"of the file could look like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26091
#, no-wrap
msgid ""
"fd @@ 0 SEEK_SET lseek -1 = if\n"
"  ... \\ error handling\n"
"then\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26100
msgid ""
"You might be worried that an @code{off_t} does not fit into a cell, so you "
"could not pass larger offsets to lseek, and might get only a part of the "
"return values.  In that case, in your declaration of the function "
"(@pxref{Declaring C Functions}) you should declare it to use double-cells "
"for the off_t argument and return value, and maybe give the resulting Forth "
"word a different name, like @code{dlseek}; the result could be called like "
"this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26105
#, no-wrap
msgid ""
"fd @@ 0. SEEK_SET dlseek -1. d= if\n"
"  ... \\ error handling\n"
"then\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26112
msgid ""
"Passing and returning structs or unions is currently not supported by our "
"interface@footnote{If you know the calling convention of your C compiler, "
"you usually can call such functions in some way, but that way is usually not "
"portable between platforms, and sometimes not even between C compilers.}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26117
msgid ""
"Calling functions with a variable number of arguments (@emph{variadic} "
"functions, e.g., @code{printf()}) is only supported by having you declare "
"one function-calling word for each argument pattern, and calling the "
"appropriate word for the desired pattern."
msgstr ""

#. type: node
#: ../doc/gforth.texi:26120 ../doc/gforth.texi:26260 ../doc/gforth.texi:26306
#, no-wrap
msgid "Calling C function pointers"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26122
#, no-wrap
msgid "C functions, declarations"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26123
#, no-wrap
msgid "declaring C functions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26127
msgid ""
"Before you can call @code{lseek} or @code{dlseek}, you have to declare it.  "
"The declaration consists of two parts:"
msgstr ""

#. type: item
#: ../doc/gforth.texi:26130
#, no-wrap
msgid "The C part"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26134
msgid ""
"is the C declaration of the function, or more typically and portably, a C-"
"style @code{#include} of a file that contains the declaration of the C "
"function."
msgstr ""

#. type: item
#: ../doc/gforth.texi:26135
#, no-wrap
msgid "The Forth part"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26138
msgid ""
"declares the Forth types of the parameters and the Forth word name "
"corresponding to the C function."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26143
msgid ""
"For the words @code{lseek} and @code{dlseek} mentioned earlier, the "
"declarations are:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26150
#, no-wrap
msgid ""
"\\c #define _FILE_OFFSET_BITS 64\n"
"\\c #include <sys/types.h>\n"
"\\c #include <unistd.h>\n"
"c-function lseek lseek n n n -- n\n"
"c-function dlseek lseek n d n -- d\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26156
msgid ""
"The C part of the declarations is prefixed by @code{\\c}, and the rest of "
"the line is ordinary C code.  You can use as many lines of C declarations as "
"you like, and they are visible for all further function declarations."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26162
msgid ""
"The Forth part declares each interface word with @code{c-function}, followed "
"by the Forth name of the word, the C name of the called function, and the "
"stack effect of the word.  The stack effect contains an arbitrary number of "
"types of parameters, then @code{--}, and then exactly one type for the "
"return value.  The possible types are:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26167
msgid "single-cell integer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26170
msgid "address (single-cell)"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26173
msgid "double-cell integer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26176
msgid "floating-point value"
msgstr ""

#. type: item
#: ../doc/gforth.texi:26177
#, no-wrap
msgid "func"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26179
msgid "C function pointer"
msgstr ""

#. type: item
#: ../doc/gforth.texi:26180
#, no-wrap
msgid "void"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26182
msgid "no value (used as return type for void functions)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26185
#, no-wrap
msgid "variadic C functions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26189
msgid ""
"To deal with variadic C functions, you can declare one Forth word for every "
"pattern you want to use, e.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26194
#, no-wrap
msgid ""
"\\c #include <stdio.h>\n"
"c-function printf-nr printf a n r -- n\n"
"c-function printf-rn printf a r n -- n\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26202
msgid ""
"Note that with C functions declared as variadic (or if you don't provide a "
"prototype), the C interface has no C type to convert to, so no automatic "
"conversion happens, which may lead to portability problems in some cases.  "
"You can add the C type cast in curly braces after the Forth type.  This also "
"allows to pass e.g. structs to C functions, which in Forth cannot live on "
"the stack."
msgstr ""

#. type: example
#: ../doc/gforth.texi:26206
#, no-wrap
msgid ""
"c-function printfll printf a n@{(long long)@} -- n\n"
"c-function pass-struct pass_struct a@{*(struct foo *)@} -- n\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26210
msgid ""
"This typecasting is not available to return values, as C does not allow "
"typecasts for lvalues."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26211
#, no-wrap
msgid "\\c ( @var{ \"rest-of-line\" --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26212 ../doc/gforth.texi:26213
#, no-wrap
msgid "\\c"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26216
#, no-wrap
msgid "@code{\\c} ( @i{\"rest-of-line\" --  }) gforth-0.7 ``backslash-c''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26218
msgid "One line of C declarations for the C interface"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26220
#, no-wrap
msgid "c-function ( @var{ \"forth-name\" \"c-name\" \"@{type@}\" \"---\" \"type\" --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26221 ../doc/gforth.texi:26222
#, no-wrap
msgid "c-function"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26225
#, no-wrap
msgid "@code{c-function} ( @i{\"forth-name\" \"c-name\" \"@{type@}\" \"---\" \"type\" --  }) gforth-0.7 ``c-function''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26228
msgid ""
"Define a Forth word @i{forth-name}.  @i{Forth-name} has the specified stack "
"effect and calls the C function @code{c-name}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26230
#, no-wrap
msgid "c-value ( @var{ \"forth-name\" \"c-name\" \"---\" \"type\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26231 ../doc/gforth.texi:26232
#, no-wrap
msgid "c-value"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26235
#, no-wrap
msgid "@code{c-value} ( @i{\"forth-name\" \"c-name\" \"---\" \"type\" --  }) gforth-1.0 ``c-value''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26238
msgid ""
"Define a Forth word @i{forth-name}.  @i{Forth-name} has the specified stack "
"effect and gives the C value of @code{c-name}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26240
#, no-wrap
msgid "c-variable ( @var{ \"forth-name\" \"c-name\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26241 ../doc/gforth.texi:26242
#, no-wrap
msgid "c-variable"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26245
#, no-wrap
msgid "@code{c-variable} ( @i{\"forth-name\" \"c-name\" --  }) gforth-1.0 ``c-variable''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26248
msgid ""
"Define a Forth word @i{forth-name}.  @i{Forth-name} returns the address of "
"@code{c-name}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26258
msgid ""
"In order to work, this C interface invokes GCC at run-time and uses dynamic "
"linking.  If these features are not available, there are other, less "
"convenient and less portable C interfaces in @file{lib.fs} and @file{oldlib."
"fs}.  These interfaces are mostly undocumented and mostly incompatible with "
"each other and with the documented C interface; you can find some examples "
"for the @file{lib.fs} interface in @file{lib.fs}."
msgstr ""

#. type: node
#: ../doc/gforth.texi:26260 ../doc/gforth.texi:26306 ../doc/gforth.texi:26307
#: ../doc/gforth.texi:26383
#, no-wrap
msgid "Defining library interfaces"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:26261
#, no-wrap
msgid "Calling C function pointers from Forth"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26262
#, no-wrap
msgid "C function pointers, calling from Forth"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26268
msgid ""
"If you come across a C function pointer (e.g., in some C-constructed "
"structure) and want to call it from your Forth program, you could use the "
"structures as described above by defining a macro.  Or you use @code{c-"
"funptr}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26269
#, no-wrap
msgid "c-funptr ( @var{ \"forth-name\" <@{>\"c-typecast\"<@}> \"@{type@}\" \"---\" \"type\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26270 ../doc/gforth.texi:26271
#, no-wrap
msgid "c-funptr"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26274
#, no-wrap
msgid "@code{c-funptr} ( @i{\"forth-name\" <@{>\"c-typecast\"<@}> \"@{type@}\" \"---\" \"type\" --  }) gforth-1.0 ``c-funptr''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26280
msgid ""
"Define a Forth word @i{forth-name}.  @i{Forth-name} has the specified stack "
"effect plus the called pointer on top of stack, i.e. @code{( @{type@} ptr -- "
"type )} and calls the C function pointer @code{ptr} using the typecast or "
"struct access @code{c-typecast}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26287
msgid ""
"Let us assume that there is a C function pointer type @code{func1} defined "
"in some header file @file{func1.h}, and you know that these functions take "
"one integer argument and return an integer result; and you want to call "
"functions through such pointers.  Just define"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26291
#, no-wrap
msgid ""
"\\c #include <func1.h>\n"
"c-funptr call-func1 @{((func1)ptr)@} n -- n\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26295
msgid ""
"and then you can call a function pointed to by, say @code{func1a} as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26298
#, no-wrap
msgid "-5 func1a call-func1 .\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26305
msgid ""
"The Forth word @code{call-func1} is similar to @code{execute}, except that "
"it takes a C @code{func1} pointer instead of a Forth execution token, and it "
"is specific to @code{func1} pointers.  For each type of function pointer you "
"want to call from Forth, you have to define a separate calling word."
msgstr ""

#. type: node
#: ../doc/gforth.texi:26306 ../doc/gforth.texi:26383 ../doc/gforth.texi:26384
#: ../doc/gforth.texi:26483
#, no-wrap
msgid "Declaring OS-level libraries"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26308
#, no-wrap
msgid "giving a name to a library interface"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26309
#, no-wrap
msgid "library interface names"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26313
msgid ""
"You can give a name to a bunch of C function declarations (a library "
"interface), as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26319
#, no-wrap
msgid ""
"c-library lseek-lib\n"
"\\c #define _FILE_OFFSET_BITS 64\n"
"...\n"
"end-c-library\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26331
msgid ""
"The effect of giving such a name to the interface is that the names of the "
"generated files will contain that name, and when you use the interface a "
"second time, it will use the existing files instead of generating and "
"compiling them again, saving you time.  The generated file contains a 128 "
"bit hash (not cryptographically safe, but good enough for that purpose) of "
"the source code, so changing the declarations will cause a new compilation.  "
"Normally these files are cached in @file{$HOME/.gforth/}@var{architecture}"
"@file{/libcc-named}, so if you experience problems or have other reasons to "
"force a recompilation, you can delete the files there."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26338
msgid ""
"Note that you should use @code{c-library} before everything else having "
"anything to do with that library, as it resets some setup stuff.  The idea "
"is that the typical use is to put each @code{c-library}...@code{end-c-"
"library} unit in its own file, and to be able to include these files in any "
"order.  All other words dealing with the C interface are hidden in the "
"vocabulary @code{c-lib}, which is put on top o the search stack by @code{c-"
"library} and removed by @code{end-c-library}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26346
msgid ""
"Note that the library name is not allocated in the dictionary and therefore "
"does not shadow dictionary names.  It is used in the file system, so you "
"have to use naming conventions appropriate for file systems.  The name is "
"also used as part of the C symbols, but characters outside the legal C "
"symbol names are replaced with underscores.  Also, you shall not call a "
"function you declare after @code{c-library} before you perform @code{end-c-"
"library}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26353
msgid ""
"A major benefit of these named library interfaces is that, once they are "
"generated, the tools used to generated them (in particular, the C compiler "
"and libtool) are no longer needed, so the interface can be used even on "
"machines that do not have the tools installed.  The build system of Gforth "
"can even cross-compile these libraries, so that the libraries are available "
"for plattforms on which build tools aren't installed."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26354
#, no-wrap
msgid "c-library-name ( @var{ c-addr u --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26355 ../doc/gforth.texi:26356
#, no-wrap
msgid "c-library-name"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26359
#, no-wrap
msgid "@code{c-library-name} ( @i{c-addr u --  }) gforth-0.7 ``c-library-name''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26361
msgid "Start a C library interface with name @i{c-addr u}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26363
#, no-wrap
msgid "c-library ( @var{ \"name\" --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26364 ../doc/gforth.texi:26365
#, no-wrap
msgid "c-library"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26368
#, no-wrap
msgid "@code{c-library} ( @i{\"name\" --  }) gforth-0.7 ``c-library''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26370
msgid "Parsing version of @code{c-library-name}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26372
#, no-wrap
msgid "end-c-library ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26373 ../doc/gforth.texi:26374
#, no-wrap
msgid "end-c-library"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26377
#, no-wrap
msgid "@code{end-c-library} ( @i{--  }) gforth-0.7 ``end-c-library''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26379
msgid "Finish and (if necessary) build the latest C library interface."
msgstr ""

#. type: node
#: ../doc/gforth.texi:26383 ../doc/gforth.texi:26483 ../doc/gforth.texi:26484
#: ../doc/gforth.texi:26553
#, no-wrap
msgid "Callbacks"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26385
#, no-wrap
msgid "Shared libraries in C interface"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26386
#, no-wrap
msgid "Dynamically linked libraries in C interface"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26387
#, no-wrap
msgid "Libraries in C interface"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26394
msgid ""
"For calling some C functions, you need to link with a specific OS-level "
"library that contains that function.  E.g., the @code{sin} function requires "
"linking a special library by using the command line switch @code{-lm}.  In "
"our C iterface you do the equivalent thing by calling @code{add-lib} as "
"follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26400
#, no-wrap
msgid ""
"clear-libs\n"
"s\" m\" add-lib\n"
"\\c #include <math.h>\n"
"c-function sin sin r -- r\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26409
msgid ""
"First, you clear any libraries that may have been declared earlier (you "
"don't need them for @code{sin}); then you add the @code{m} library (actually "
"@code{libm.so} or somesuch) to the currently declared libraries; you can add "
"as many as you need.  Finally you declare the function as shown above.  "
"Typically you will use the same set of library declarations for many "
"function declarations; you need to write only one set for that, right at the "
"beginning."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26415
msgid ""
"Note that you must not call @code{clear-libs} inside @code{c-library...end-c-"
"library}; however, @code{c-library} performs the function of @code{clear-"
"libs}, so @code{clear-libs} is not necessary, and you usually want to put "
"@code{add-lib} calls inside @code{c-library...end-c-library}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26416
#, no-wrap
msgid "clear-libs ( @var{ --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26417 ../doc/gforth.texi:26418
#, no-wrap
msgid "clear-libs"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26421
#, no-wrap
msgid "@code{clear-libs} ( @i{--  }) gforth-0.7 ``clear-libs''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26423
msgid "Clear the list of libs"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26425
#, no-wrap
msgid "add-lib ( @var{ c-addr u --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26426 ../doc/gforth.texi:26427
#, no-wrap
msgid "add-lib"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26430
#, no-wrap
msgid "@code{add-lib} ( @i{c-addr u --  }) gforth-0.7 ``add-lib''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26433
msgid ""
"Add library lib@i{string} to the list of libraries, where @i{string} is "
"represented by @i{c-addr u}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26435
#, no-wrap
msgid "add-libpath ( @var{ c-addr u --   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26436 ../doc/gforth.texi:26437
#, no-wrap
msgid "add-libpath"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26440
#, no-wrap
msgid "@code{add-libpath} ( @i{c-addr u --  }) gforth-0.7 ``add-libpath''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26443
msgid ""
"Add path @i{string} to the list of library search pathes, where @i{string} "
"is represented by @i{c-addr u}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26445
#, no-wrap
msgid "add-framework ( @var{ c-addr u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26446 ../doc/gforth.texi:26447
#, no-wrap
msgid "add-framework"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26450
#, no-wrap
msgid "@code{add-framework} ( @i{c-addr u --  }) gforth-1.0 ``add-framework''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26453
msgid ""
"Add framework lib@i{string} to the list of frameworks, where @i{string} is "
"represented by @i{c-addr u}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26455
#, no-wrap
msgid "add-incdir ( @var{ c-addr u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26456 ../doc/gforth.texi:26457
#, no-wrap
msgid "add-incdir"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26460
#, no-wrap
msgid "@code{add-incdir} ( @i{c-addr u --  }) gforth-1.0 ``add-incdir''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26462
msgid "Add path @i{c-addr u} to the list of include search pathes"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26464
#, no-wrap
msgid "add-cflags ( @var{ c-addr u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26465 ../doc/gforth.texi:26466
#, no-wrap
msgid "add-cflags"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26469
#, no-wrap
msgid "@code{add-cflags} ( @i{c-addr u --  }) gforth-1.0 ``add-cflags''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26471
msgid "add any kind of cflags to compilation"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26473
#, no-wrap
msgid "add-ldflags ( @var{ c-addr u --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26474 ../doc/gforth.texi:26475
#, no-wrap
msgid "add-ldflags"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26478
#, no-wrap
msgid "@code{add-ldflags} ( @i{c-addr u --  }) gforth-1.0 ``add-ldflags''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26480
msgid "add flag to linker"
msgstr ""

#. type: node
#: ../doc/gforth.texi:26483 ../doc/gforth.texi:26553 ../doc/gforth.texi:26582
#, no-wrap
msgid "C interface internals"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26485
#, no-wrap
msgid "Callback functions written in Forth"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26486
#, no-wrap
msgid "C function pointers to Forth words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26495
msgid ""
"In some cases you have to pass a function pointer to a C function, i.e., the "
"library wants to call back to your application (and the pointed-to function "
"is called a callback function).  You can pass the address of an existing C "
"function (that you get with @code{lib-sym}, @pxref{Low-Level C Interface "
"Words}), but if there is no appropriate C function, you probably want to "
"define the function as a Forth word.  Then you need to generate a callback "
"as described below:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26497
msgid "You can generate C callbacks from Forth code with @code{c-callback}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26498
#, no-wrap
msgid "c-callback ( @var{ \"forth-name\" \"@{type@}\" \"---\" \"type\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26499 ../doc/gforth.texi:26500
#, no-wrap
msgid "c-callback"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26503
#, no-wrap
msgid "@code{c-callback} ( @i{\"forth-name\" \"@{type@}\" \"---\" \"type\" --  }) gforth-1.0 ``c-callback''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26508
msgid ""
"Define a callback instantiator with the given signature.  The callback "
"instantiator @i{forth-name} @code{( xt -- addr )} takes an @var{xt}, and "
"returns the @var{addr}ess of the C function handling that callback."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26510
#, no-wrap
msgid "c-callback-thread ( @var{ \"forth-name\" \"@{type@}\" \"---\" \"type\" --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26511 ../doc/gforth.texi:26512
#, no-wrap
msgid "c-callback-thread"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26515
#, no-wrap
msgid "@code{c-callback-thread} ( @i{\"forth-name\" \"@{type@}\" \"---\" \"type\" --  }) gforth-1.0 ``c-callback-thread''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26521
msgid ""
"Define a callback instantiator with the given signature.  The callback "
"instantiator @i{forth-name} @code{( xt -- addr )} takes an @var{xt}, and "
"returns the @var{addr}ess of the C function handling that callback.  This "
"callback is safe when called from another thread"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26528
msgid ""
"This precompiles a number of callback functions (up to the value "
"@code{callback#}).  The prototype of the C function is deduced from its "
"Forth signature.  If this is not sufficient, you can add types in curly "
"braces after the Forth type."
msgstr ""

#. type: example
#: ../doc/gforth.texi:26532
#, no-wrap
msgid ""
"c-callback vector4double: f f f f -- void\n"
"c-callback vector4single: f@{float@} f@{float@} f@{float@} f@{float@} -- void\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:26553 ../doc/gforth.texi:26582 ../doc/gforth.texi:26583
#: ../doc/gforth.texi:26618
#, no-wrap
msgid "Low-Level C Interface Words"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:26554
#, no-wrap
msgid "How the C interface works"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26558
msgid ""
"The documented C interface works by generating a C code out of the "
"declarations."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26567
msgid ""
"In particular, for every Forth word declared with @code{c-function}, it "
"generates a wrapper function in C that takes the Forth data from the Forth "
"stacks, and calls the target C function with these data as arguments.  The C "
"compiler then performs an implicit conversion between the Forth type from "
"the stack, and the C type for the parameter, which is given by the C "
"function prototype.  After the C function returns, the return value is "
"likewise implicitly converted to a Forth type and written back on the stack."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26572
msgid ""
"The @code{\\c} lines are literally included in the C code (but without the "
"@code{\\c}), and provide the necessary declarations so that the C compiler "
"knows the C types and has enough information to perform the conversion."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26575
msgid ""
"These wrapper functions are eventually compiled and dynamically linked into "
"Gforth, and then they can be called."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26580
msgid ""
"The libraries added with @code{add-lib} are used in the compile command line "
"to specify dependent libraries with @code{-l@var{lib}}, causing these "
"libraries to be dynamically linked when the wrapper function is linked."
msgstr ""

#. type: node
#: ../doc/gforth.texi:26582 ../doc/gforth.texi:26618 ../doc/gforth.texi:26619
#: ../doc/gforth.texi:26659
#, no-wrap
msgid "Automated interface generation using SWIG"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26585
#, no-wrap
msgid "open-lib ( @var{ c-addr1 u1 -- u2  } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26586 ../doc/gforth.texi:26587
#, no-wrap
msgid "open-lib"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26590
#, no-wrap
msgid "@code{open-lib} ( @i{c-addr1 u1 -- u2 }) gforth-0.4 ``open-lib''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26592
#, no-wrap
msgid "lib-sym ( @var{ c-addr1 u1 u2 -- u3  } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26593 ../doc/gforth.texi:26594
#, no-wrap
msgid "lib-sym"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26597
#, no-wrap
msgid "@code{lib-sym} ( @i{c-addr1 u1 u2 -- u3 }) gforth-0.4 ``lib-sym''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26599
#, no-wrap
msgid "lib-error ( @var{ -- c-addr u  } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26600 ../doc/gforth.texi:26601
#, no-wrap
msgid "lib-error"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26604
#, no-wrap
msgid "@code{lib-error} ( @i{-- c-addr u }) gforth-0.7 ``lib-error''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26606
msgid "Error message for last failed @code{open-lib} or @code{lib-sym}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26607
#, no-wrap
msgid "call-c ( @var{ ... w -- ...  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26608 ../doc/gforth.texi:26609
#, no-wrap
msgid "call-c"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26612
#, no-wrap
msgid "@code{call-c} ( @i{... w -- ... }) gforth-0.2 ``call-c''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26616
msgid ""
"Call the C function pointed to by @i{w}. The C function has to access the "
"stack itself. The stack pointers are exported into a ptrpair structure "
"passed to the C function, and returned in that form."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26623
msgid ""
"SWIG, the Simple Wrapper Interface Generator, is used to create C interfaces "
"for a lot of programming languages.  The SWIG version extended with a Forth "
"module can be found on @uref{https://github.com/GeraldWodni/swig,github}."
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:26624
#, no-wrap
msgid "Basic operation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26626
msgid ""
"C-headers are parsed and converted to Forth-Sourcecode which uses the "
"previously describe C interface functions."
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:26627
#, no-wrap
msgid "Detailed operation:"
msgstr ""

#. type: item
#: ../doc/gforth.texi:26629
#, no-wrap
msgid "Select a target, in this example we are using @code{example.h}"
msgstr ""

#. type: item
#: ../doc/gforth.texi:26630
#, no-wrap
msgid "Create an interface file for the header. This can be used to pass options, switches and define variables."
msgstr ""

#. type: enumerate
#: ../doc/gforth.texi:26632
msgid ""
"In the simplest case it just instructs to translate all of @code{example.h}:"
"@/"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26639
#, no-wrap
msgid ""
"%module example\n"
"%insert(\"include\")\n"
"@{\n"
"    #include \"example.h\"\n"
"@}\n"
"%include \"example.h\"\n"
msgstr ""

#. type: item
#: ../doc/gforth.texi:26640
#, no-wrap
msgid "Use SWIG to create a @code{.fsi-c} file. @*"
msgstr ""

#. type: enumerate
#: ../doc/gforth.texi:26643
msgid ""
"@code{swig -forth -stackcomments -use-structs -enumcomments -o example-fsi.c "
"example.i}. @* FSI stands ``Forth Source Independent'' meaning it can be "
"transferred to any host having a C-compiler. SWIG is not required past this "
"point."
msgstr ""

#. type: item
#: ../doc/gforth.texi:26643
#, no-wrap
msgid "On the target machine compile the @code{.fsi-c} file to a @code{.fsx} (x stands for executable) @*"
msgstr ""

#. type: enumerate
#: ../doc/gforth.texi:26646
msgid ""
"@code{gcc -o example.fsx example-fsi.c} @* The compilation will resolve all "
"constants to the values on the target."
msgstr ""

#. type: item
#: ../doc/gforth.texi:26646
#, no-wrap
msgid "The last step is to run the executable and capture its output to a @code{.fs} ``Forth Source'' file. @*"
msgstr ""

#. type: enumerate
#: ../doc/gforth.texi:26649
msgid ""
"@code{./example.fsx -gforth > example.fs} @* This code can now be used on "
"the target platform."
msgstr ""

#. type: subsubsection
#: ../doc/gforth.texi:26651
#, no-wrap
msgid "Examples"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26653
msgid ""
"You can find some examples in SWIG's @uref{https://github.com/GeraldWodni/"
"swig/tree/master/Examples/forth, Forth Example section}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26656
msgid ""
"A lot of interface files can be found in @uref{https://github.com/"
"GeraldWodni/posix, Forth Posix C-Interface} and @uref{https://github.com/"
"GeraldWodni/forth-c-interfaces, Forth C-Interface Modules}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26658
msgid ""
"Contribution to the @uref{https://github.com/GeraldWodni/forth-c-interfaces, "
"Forth C-Interface Module repository} is always welcome."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:26660
#, no-wrap
msgid "Migrating from Gforth 0.7"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26661
#, no-wrap
msgid "Must now be used inside C-LIBRARY, see C interface doc"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26668
msgid ""
"In this version, you can use @code{\\c}, @code{c-function} and @code{add-"
"lib} only inside @code{c-library}...@code{end-c-library}.  @code{add-lib} "
"now always starts from a clean slate inside a @code{c-library}, so you don't "
"need to use @code{clear-libs} in most cases."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26673
msgid ""
"If you have a program that uses these words outside @code{c-library}..."
"@code{end-c-library}, just wrap them in @code{c-library}...@code{end-c-"
"library}.  You may have to add some instances of @code{add-lib}, however."
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26677 ../doc/gforth.texi:26723 ../doc/gforth.texi:26724
#, no-wrap
msgid "assembler"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26678
#, no-wrap
msgid "code words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26701
msgid ""
"Gforth provides ways to implement words in assembly language (using "
"@code{abi-code}...@code{end-code}), and also ways to define defining words "
"with arbitrary run-time behaviour (like @code{does>}), where (unlike "
"@code{does>}) the behaviour is not defined in Forth, but in assembly "
"language (with @code{;code})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26708
msgid ""
"However, the machine-independent nature of Gforth poses a few problems: "
"First of all, Gforth runs on several architectures, so it can provide no "
"standard assembler. It does provide assemblers for several of the "
"architectures it runs on, though.  Moreover, you can use a system-"
"independent assembler in Gforth, or compile machine code directly with "
"@code{,} and @code{c,}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26716
msgid ""
"Another problem is that the virtual machine registers of Gforth (the stack "
"pointers and the virtual machine instruction pointer) depend on the "
"installation and engine.  Also, which registers are free to use also depend "
"on the installation and engine.  So any code written to run in the context "
"of the Gforth virtual machine is essentially limited to the installation and "
"engine it was developed for (it may run elsewhere, but you cannot rely on "
"that)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26721
msgid ""
"Fortunately, you can define @code{abi-code} words in Gforth that are "
"portable to any Gforth running on a platform with the same calling "
"convention (ABI); typically this means portability to the same architecture/"
"OS combination, sometimes crossing OS boundaries)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26722
#, no-wrap
msgid "assembler ( @var{ --   } ) tools-ext"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26727
#, no-wrap
msgid "@code{assembler} ( @i{--  }) tools-ext ``assembler''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26730
msgid ""
"A vocubulary: Replaces the wordlist at the top of the search order with the "
"assembler wordlist."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26732
#, no-wrap
msgid "init-asm ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26733 ../doc/gforth.texi:26734
#, no-wrap
msgid "init-asm"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26737
#, no-wrap
msgid "@code{init-asm} ( @i{--  }) gforth-0.2 ``init-asm''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26739
msgid "Pushes the assembler wordlist on the search order."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26741
#, no-wrap
msgid "abi-code ( @var{ \"name\" -- colon-sys   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26742 ../doc/gforth.texi:26743
#, no-wrap
msgid "abi-code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26746
#, no-wrap
msgid "@code{abi-code} ( @i{\"name\" -- colon-sys  }) gforth-1.0 ``abi-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26749
msgid ""
"Start a native code definition that is called using the platform's ABI "
"conventions corresponding to the C-prototype:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26751
#, no-wrap
msgid "Cell *function(Cell *sp, Float **fpp);\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26755
msgid ""
"The FP stack pointer is passed in by providing a reference to a memory "
"location containing the FP stack pointer and is passed out by storing the "
"changed FP stack pointer there (if necessary)."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26757
#, no-wrap
msgid ";abi-code ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26758 ../doc/gforth.texi:26759
#, no-wrap
msgid ";abi-code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26762
#, no-wrap
msgid "@code{;abi-code} ( @i{--  }) gforth-1.0 ``semicolon-abi-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26767
msgid ""
"Ends the colon definition, but at run-time also changes the last defined "
"word @i{X} (which must be a @code{create}d word) to call the following "
"native code using the platform's ABI convention corresponding to the C "
"prototype:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26769
#, no-wrap
msgid " Cell *function(Cell *sp, Float **fpp, Address body);\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26774
msgid ""
"The FP stack pointer is passed in by providing a reference to a memory "
"location containing the FP stack pointer and is passed out by storing the "
"changed FP stack pointer there (if necessary).  The parameter @i{body} is "
"the body of @i{X}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26776
#, no-wrap
msgid "end-code ( @var{ colon-sys --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26777 ../doc/gforth.texi:26778
#, no-wrap
msgid "end-code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26781
#, no-wrap
msgid "@code{end-code} ( @i{colon-sys --  }) gforth-0.2 ``end-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26786
msgid ""
"End a code definition.  Note that you have to assemble the return from the "
"ABI call (for @code{abi-code}) or the dispatch to the next VM instruction "
"(for @code{code} and @code{;code})  yourself."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26788
#, no-wrap
msgid "code ( @var{ \"name\" -- colon-sys   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26789 ../doc/gforth.texi:26790
#, no-wrap
msgid "code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26793
#, no-wrap
msgid "@code{code} ( @i{\"name\" -- colon-sys  }) tools-ext ``code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26800
msgid ""
"Start a native code definition that runs in the context of the Gforth "
"virtual machine (engine).  Such a definition is not portable between Gforth "
"installations, so we recommend using @code{abi-code} instead of "
"@code{code}.  You have to end a @code{code} definition with a dispatch to "
"the next virtual machine instruction."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26802
#, no-wrap
msgid ";code ( @var{ compilation. colon-sys1 -- colon-sys2   } ) tools-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26803 ../doc/gforth.texi:26804
#, no-wrap
msgid ";code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26807
#, no-wrap
msgid "@code{;code} ( @i{compilation. colon-sys1 -- colon-sys2  }) tools-ext ``semicolon-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26812
msgid ""
"The code after @code{;code} becomes the behaviour of the last defined word "
"(which must be a @code{create}d word).  The same caveats apply as for "
"@code{code}, so we recommend using @code{;abi-code} instead."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26814
#, no-wrap
msgid "flush-icache ( @var{ c-addr u --  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26815 ../doc/gforth.texi:26816
#, no-wrap
msgid "flush-icache"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26819
#, no-wrap
msgid "@code{flush-icache} ( @i{c-addr u -- }) gforth-0.2 ``flush-icache''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26829
msgid ""
"Make sure that the instruction cache of the processor (if there is one) does "
"not contain stale data at @i{c-addr} and @i{u} bytes afterwards. @code{END-"
"CODE} performs a @code{flush-icache} automatically. Caveat: @code{flush-"
"icache} might not work on your installation; this is usually the case if "
"direct threading is not supported on your machine (take a look at your "
"@file{machine.h}) and your machine has a separate instruction cache. In such "
"cases, @code{flush-icache} does nothing instead of flushing the instruction "
"cache."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26834
msgid ""
"If @code{flush-icache} does not work correctly, @code{abi-code} words etc. "
"will not work (reliably), either."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26837
msgid ""
"The typical usage of these words can be shown most easily by analogy to the "
"equivalent high-level defining words:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26842
#, no-wrap
msgid ""
": foo                              abi-code foo\n"
"   <high-level Forth words>              <assembler>\n"
";                                  end-code\n"
"                                \n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26850
#, no-wrap
msgid ""
": bar                              : bar\n"
"   <high-level Forth words>           <high-level Forth words>\n"
"   CREATE                             CREATE\n"
"      <high-level Forth words>           <high-level Forth words>\n"
"   DOES>                              ;code\n"
"      <high-level Forth words>           <assembler>\n"
";                                  end-code\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26865
msgid ""
"For using @code{abi-code}, take a look at the ABI documentation of your "
"platform to see how the parameters are passed (so you know where you get the "
"stack pointers) and how the return value is passed (so you know where the "
"data stack pointer is returned).  The ABI documentation also tells you which "
"registers are saved by the caller (caller-saved), so you are free to destroy "
"them in your code, and which registers have to be preserved by the called "
"word (callee-saved), so you have to save them before using them, and restore "
"them afterwards.  For some architectures and OSs we give short summaries of "
"the parts of the calling convention in the appropriate sections.  More "
"reverse-engineering oriented people can also find out about the passing and "
"returning of the stack pointers through @code{see abi-call}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26870
msgid ""
"Most ABIs pass the parameters through registers, but some (in particular the "
"most common 386 (aka IA-32) calling conventions) pass them on the "
"architectural stack.  The common ABIs all pass the return value in a "
"register."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26875
msgid ""
"Other things you need to know for using @code{abi-code} is that both the "
"data and the FP stack grow downwards (towards lower addresses) in Gforth, "
"with @code{1 cells} size per cell, and @code{1 floats} size per FP value."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26877
msgid "Here's an example of using @code{abi-code} on the 386 architecture:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26886
#, no-wrap
msgid ""
"abi-code my+ ( n1 n2 -- n )\n"
"4 sp d) ax mov \\ sp into return reg\n"
"ax )    cx mov \\ tos\n"
"4 #     ax add \\ update sp (pop)\n"
"cx    ax ) add \\ sec = sec+tos\n"
"ret            \\ return from my+\n"
"end-code\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26889
msgid "An AMD64 variant of this example can be found in @ref{AMD64 Assembler}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26891
msgid "Here's a 386 example that deals with FP values:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26904
#, no-wrap
msgid ""
"abi-code my-f+ ( r1 r2 -- r )\n"
"8 sp d) cx mov  \\ load address of fp\n"
"cx )    dx mov  \\ load fp\n"
".fl dx )   fld  \\ r2\n"
"8 #     dx add  \\ update fp\n"
".fl dx )   fadd \\ r1+r2\n"
".fl dx )   fstp \\ store r\n"
"dx    cx ) mov  \\ store new fp\n"
"4 sp d) ax mov  \\ sp into return reg\n"
"ret             \\ return from my-f+\n"
"end-code\n"
msgstr ""

#. type: node
#: ../doc/gforth.texi:26907 ../doc/gforth.texi:26960 ../doc/gforth.texi:26961
#: ../doc/gforth.texi:27007
#, no-wrap
msgid "Common Disassembler"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26912
msgid ""
"The assemblers in Gforth generally use a postfix syntax, i.e., the "
"instruction name follows the operands."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26917
msgid ""
"The operands are passed in the usual order (the same that is used in the "
"manual of the architecture).  Since they all are Forth words, they have to "
"be separated by spaces; you can also use Forth words to compute the operands."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26921
msgid ""
"The instruction names usually end with a @code{,}.  This makes it easier to "
"visually separate instructions if you put several of them on one line; it "
"also avoids shadowing other Forth words (e.g., @code{and})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26926
msgid ""
"Registers are usually specified by number; e.g., (decimal) @code{11} "
"specifies registers R11 and F11 on the Alpha architecture (which one, "
"depends on the instruction).  The usual names are also available, e.g., "
"@code{s2} for R11 on Alpha."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26932
msgid ""
"Control flow is specified similar to normal Forth code (@pxref{Arbitrary "
"control structures}), with @code{if,}, @code{ahead,}, @code{then,}, "
"@code{begin,}, @code{until,}, @code{again,}, @code{cs-roll}, @code{cs-pick}, "
"@code{else,}, @code{while,}, and @code{repeat,}.  The conditions are "
"specified in a way specific to each assembler."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26936
msgid ""
"The rest of this section is of interest mainly for those who want to define "
"@code{code} words (instead of the more portable @code{abi-code} words)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26945
msgid ""
"Note that the register assignments of the Gforth engine can change between "
"Gforth versions, or even between different compilations of the same Gforth "
"version (e.g., if you use a different GCC version).  If you are using "
"@code{CODE} instead of @code{ABI-CODE}, and you want to refer to Gforth's "
"registers (e.g., the stack pointer or TOS), I recommend defining your own "
"words for refering to these registers, and using them later on; then you can "
"adapt to a changed register assignment."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26953
msgid ""
"The most common use of these registers is to end a @code{code} definition "
"with a dispatch to the next word (the @code{next} routine).  A portable way "
"to do this is to jump to @code{' noop >code-address} (of course, this is "
"less efficient than integrating the @code{next} code and scheduling it "
"well).  When using @code{ABI-CODE}, you can just assemble a normal "
"subroutine return (but make sure you return the data stack pointer)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26959
msgid ""
"Another difference between Gforth versions is that the top of stack is kept "
"in memory in @code{gforth} and, on most platforms, in a register in "
"@code{gforth-fast}.  For @code{ABI-CODE} definitions, any stack caching "
"registers are guaranteed to be flushed to the stack, allowing you to "
"reliably access the top of stack in memory."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26962
#, no-wrap
msgid "disassembler, general"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:26963
#, no-wrap
msgid "gdb disassembler"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26967
msgid ""
"You can disassemble a @code{code} word with @code{see} (@pxref{Debugging}).  "
"You can disassemble a section of memory with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:26968
#, no-wrap
msgid "discode ( @var{ addr u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:26969 ../doc/gforth.texi:26970
#, no-wrap
msgid "discode"
msgstr ""

#. type: format
#: ../doc/gforth.texi:26973
#, no-wrap
msgid "@code{discode} ( @i{addr u --  }) gforth-0.2 ``discode''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26975
msgid "hook for the disassembler: disassemble u bytes of code at addr"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26983
msgid ""
"There are two kinds of disassembler for Gforth: The Forth disassembler "
"(available on some CPUs) and the gdb disassembler (available on platforms "
"with @command{gdb} and @command{mktemp}).  If both are available, the Forth "
"disassembler is used by default.  If you prefer the gdb disassembler, say"
msgstr ""

#. type: example
#: ../doc/gforth.texi:26986
#, no-wrap
msgid "' disasm-gdb is discode\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:26989
msgid "If neither is available, @code{discode} performs @code{dump}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26994
msgid ""
"The Forth disassembler generally produces output that can be fed into the "
"assembler (i.e., same syntax, etc.).  It also includes additional "
"information in comments.  In particular, the address of the instruction is "
"given in a comment before the instruction."
msgstr ""

#. type: table
#: ../doc/gforth.texi:26999
msgid ""
"The gdb disassembler produces output in the same format as the gdb "
"@code{disassemble} command (@pxref{Machine Code,,Source and machine code,gdb,"
"Debugging with GDB}), in the default flavour (AT&T syntax for the 386 and "
"AMD64 architectures)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27006
msgid ""
"@code{See} may display more or less than the actual code of the word, "
"because the recognition of the end of the code is unreliable.  You can use "
"@code{discode} if it did not display enough.  It may display more, if the "
"code word is not immediately followed by a named word.  If you have "
"something else there, you can follow the word with @code{align latest ,} to "
"ensure that the end is recognized."
msgstr ""

#. type: node
#: ../doc/gforth.texi:27007 ../doc/gforth.texi:27115 ../doc/gforth.texi:27328
#, no-wrap
msgid "AMD64 Assembler"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27012
msgid ""
"The 386 assembler included in Gforth was written by Bernd Paysan, it's "
"available under GPL, and originally part of bigFORTH."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27015
msgid ""
"The 386 disassembler included in Gforth was written by Andrew McKewan and is "
"in the public domain."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27017
msgid "The disassembler displays code in an Intel-like prefix syntax."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27020
msgid ""
"The assembler uses a postfix syntax with AT&T-style parameter order (i.e., "
"destination last)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27025
msgid ""
"The assembler includes all instruction of the Athlon, i.e. 486 core "
"instructions, Pentium and PPro extensions, floating point, MMX, 3Dnow!, but "
"not ISSE. It's an integrated 16- and 32-bit assembler. Default is 32 bit, "
"you can switch to 16 bit with .86 and back to 32 bit with .386."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27031
msgid ""
"There are several prefixes to switch between different operation sizes, "
"@code{.b} for byte accesses, @code{.w} for word accesses, @code{.d} for "
"double-word accesses. Addressing modes can be switched with @code{.wa} for "
"16 bit addresses, and @code{.da} for 32 bit addresses. You don't need a "
"prefix for byte register names (@code{AL} et al)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27037
msgid ""
"For floating point operations, the prefixes are @code{.fs} (IEEE single), "
"@code{.fl} (IEEE double), @code{.fx} (extended), @code{.fw} (word), @code{."
"fd} (double-word), and @code{.fq} (quad-word).  The default is @code{.fx}, "
"so you need to specify @code{.fl} explicitly when dealing with Gforth FP "
"values."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27041
msgid ""
"The MMX opcodes don't have size prefixes, they are spelled out like in the "
"Intel assembler. Instead of move from and to memory, there are PLDQ/PLDD and "
"PSTQ/PSTD."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27046
msgid ""
"The registers lack the 'e' prefix; even in 32 bit mode, eax is called ax.  "
"Immediate values are indicated by postfixing them with @code{#}, e.g., "
"@code{3 #}.  Here are some examples of addressing modes in various syntaxes:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27059
#, no-wrap
msgid ""
"Gforth          Intel (NASM)   AT&T (gas)      Name\n"
".w ax           ax             %ax             register (16 bit)\n"
"ax              eax            %eax            register (32 bit)\n"
"3 #             offset 3       $3              immediate\n"
"1000 #)         byte ptr 1000  1000            displacement\n"
"bx )            [ebx]          (%ebx)          base\n"
"100 di d)       100[edi]       100(%edi)       base+displacement\n"
"20 ax *4 i#)    20[eax*4]      20(,%eax,4)     (index*scale)+displacement\n"
"di ax *4 i)     [edi][eax*4]   (%edi,%eax,4)   base+(index*scale)\n"
"4 bx cx di)     4[ebx][ecx]    4(%ebx,%ecx)    base+index+displacement\n"
"12 sp ax *2 di) 12[esp][eax*2] 12(%esp,%eax,2) base+(index*scale)+displacement\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27064
msgid ""
"You can use @code{L)} and @code{LI)} instead of @code{D)} and @code{DI)} to "
"enforce 32-bit displacement fields (useful for later patching)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27066 ../doc/gforth.texi:27396
msgid "Some example of instructions are:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27073
#, no-wrap
msgid ""
"ax bx mov             \\ move ebx,eax\n"
"3 # ax mov            \\ mov eax,3\n"
"100 di d) ax mov      \\ mov eax,100[edi]\n"
"4 bx cx di) ax mov    \\ mov eax,4[ebx][ecx]\n"
".w ax bx mov          \\ mov bx,ax\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27076
msgid "The following forms are supported for binary instructions:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27083
#, no-wrap
msgid ""
"<reg> <reg> <inst>\n"
"<n> # <reg> <inst>\n"
"<mem> <reg> <inst>\n"
"<reg> <mem> <inst>\n"
"<n> # <mem> <inst>\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27086
msgid "The shift/rotate syntax is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27091
#, no-wrap
msgid ""
"<reg/mem> 1 # shl \\ shortens to shift without immediate\n"
"<reg/mem> 4 # shl\n"
"<reg/mem> cl shl\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27095
msgid ""
"Precede string instructions (@code{movs} etc.) with @code{.b} to get the "
"byte version."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27103
msgid ""
"The control structure words @code{IF} @code{UNTIL} etc. must be preceded by "
"one of these conditions: @code{vs vc u< u>= 0= 0<> u<= u> 0< 0>= ps pc < >= "
"<= >}. (Note that most of these words shadow some Forth words when "
"@code{assembler} is in front of @code{forth} in the search path, e.g., in "
"@code{code} words).  Currently the control structure words use one stack "
"item, so you have to use @code{roll} instead of @code{cs-roll} to shuffle "
"them (you can also use @code{swap} etc.)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27111
msgid ""
"Based on the Intel ABI (used in Linux), @code{abi-code} words can find the "
"data stack pointer at @code{4 sp d)}, and the address of the FP stack "
"pointer at @code{8 sp d)}; the data stack pointer is returned in @code{ax}; "
"@code{Ax}, @code{cx}, and @code{dx} are caller-saved, so you do not need to "
"preserve their values inside the word.  You can return from the word with "
"@code{ret}, the parameters are cleaned up by the caller."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27113
msgid ""
"For examples of 386 @code{abi-code} words, see @ref{Assembler Definitions}."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:27116
#, no-wrap
msgid "AMD64 (x86_64) Assembler"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27124
msgid ""
"The AMD64 assembler is a slightly modified version of the 386 assembler, and "
"as such shares most of the syntax.  Two new prefixes, @code{.q} and @code{."
"qa}, are provided to select 64-bit operand and address sizes respectively.  "
"64-bit sizes are the default, so normally you only have to use the other "
"prefixes.  Also there are additional register operands @code{R8}-@code{R15}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27130
msgid ""
"The registers lack the 'e' or 'r' prefix; even in 64 bit mode, @code{rax} is "
"called @code{ax}.  Additional register operands are available to refer to "
"the lowest-significant byte of all registers: @code{R8L}-@code{R15L}, "
"@code{SPL}, @code{BPL}, @code{SIL}, @code{DIL}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27140
msgid ""
"The Linux-AMD64 calling convention is to pass the first 6 integer parameters "
"in rdi, rsi, rdx, rcx, r8 and r9 and to return the result in rax and rdx; to "
"pass the first 8 FP parameters in xmm0--xmm7 and to return FP results in "
"xmm0--xmm1.  So @code{abi-code} words get the data stack pointer in "
"@code{di} and the address of the FP stack pointer in @code{si}, and return "
"the data stack pointer in @code{ax}.  The other caller-saved registers are: "
"r10, r11, xmm8-xmm15.  This calling convention reportedly is also used in "
"other non-Microsoft OSs."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27145
msgid ""
"Windows x64 passes the first four integer parameters in rcx, rdx, r8 and r9 "
"and return the integer result in rax.  The other caller-saved registers are "
"r10 and r11."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27149
msgid ""
"On the Linux platform, according to @url{https://uclibc.org/docs/psABI-"
"x86_64.pdf} page 21 the registers AX CX DX SI DI R8 R9 R10 R11 are available "
"for scratch."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27151
msgid "The addressing modes for the AMD64 are:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27163
#, no-wrap
msgid ""
"\\ running word A produces a memory error as the registers are not initialised ;-)\n"
"ABI-CODE A  ( -- )\n"
"    500        #               AX  MOV     \\ immediate\n"
"        DX              AX  MOV     \\ register\n"
"        200             AX  MOV     \\ direct addressing\n"
"        DX  )           AX  MOV     \\ indirect addressing\n"
"    40  DX  D)          AX  MOV     \\ base with displacement\n"
"        DX  CX      I)  AX  MOV     \\ scaled index\n"
"        DX  CX  *4  I)  AX  MOV     \\ scaled index\n"
"    40  DX  CX  *4  DI) AX  MOV     \\ scaled index with displacement\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27167
#, no-wrap
msgid ""
"        DI              AX  MOV     \\ SP Out := SP in\n"
"                            RET\n"
"END-CODE\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27170
msgid "Here are a few examples of an AMD64 @code{abi-code} words:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27179
#, no-wrap
msgid ""
"abi-code my+  ( n1 n2 -- n3 )\n"
"\\ SP passed in di, returned in ax,  address of FP passed in si\n"
"8 di d) ax lea        \\ compute new sp in result reg\n"
"di )    dx mov        \\ get old tos\n"
"dx    ax ) add        \\ add to new tos\n"
"ret\n"
"end-code\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27187
#, no-wrap
msgid ""
"\\ Do nothing\n"
"ABI-CODE aNOP  ( -- )\n"
"       DI  )       AX      LEA          \\ SP out := SP in  \n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27196
#, no-wrap
msgid ""
"\\ Drop TOS\n"
"ABI-CODE aDROP  ( n -- )\n"
"   8   DI  D)      AX      LEA          \\ SPout := SPin - 1\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27206
#, no-wrap
msgid ""
"\\ Push 5 on the data stack\n"
"ABI-CODE aFIVE   ( -- 5 )\n"
"   -8  DI  D)      AX      LEA          \\ SPout := SPin + 1\n"
"   5   #           AX  )   MOV          \\ TOS := 5\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27217
#, no-wrap
msgid ""
"\\ Push 10 and 20 into data stack\n"
"ABI-CODE aTOS2  ( -- n n )\n"
"   -16 DI  D)      AX      LEA          \\ SPout := SPin + 2\n"
"   10  #       8   AX  D)  MOV          \\ TOS - 1 := 10\n"
"   20  #           AX  )   MOV          \\ TOS := 20\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27233
#, no-wrap
msgid ""
"\\ Get Time Stamp Counter as two 32 bit integers\n"
"\\ The TSC is incremented every CPU clock pulse\n"
"ABI-CODE aRDTSC   ( -- TSCl TSCh )\n"
"                           RDTSC        \\ DX:AX := TSC\n"
"   $FFFFFFFF #     AX      AND          \\ Clear upper 32 bit AX\n"
"  0xFFFFFFFF #     DX      AND          \\ Clear upper 32 bit DX\n"
"       AX          R8      MOV          \\ Tempory save AX\n"
"   -16 DI  D)      AX      LEA          \\ SPout := SPin + 2\n"
"       R8      8   AX  D)  MOV          \\ TOS-1 := saved AX = TSC low\n"
"       DX          AX  )   MOV          \\ TOS := Dx = TSC high\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27247
#, no-wrap
msgid ""
"\\ Get Time Stamp Counter as 64 bit integer\n"
"ABI-CODE RDTSC   ( -- TSC )\n"
"                           RDTSC        \\ DX:AX := TSC\n"
"   $FFFFFFFF #     AX      AND          \\ Clear upper 32 bit AX\n"
"   32  #           DX      SHL          \\ Move lower 32 bit DX to upper 32 bit\n"
"       AX          DX      OR           \\ Combine AX wit DX in DX\n"
"   -8  DI  D)      AX      LEA          \\ SPout := SPin + 1\n"
"       DX          AX  )   MOV          \\ TOS := DX\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27252 ../doc/gforth.texi:27267
#, no-wrap
msgid ""
"VARIABLE V\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27262
#, no-wrap
msgid ""
"\\ Assign 4 to variable V\n"
"ABI-CODE V=4 ( -- )\n"
"       BX                  PUSH         \\ Save BX, used by gforth\n"
"   V   #           BX      MOV          \\ BX := address of V\n"
"   4   #           BX )    MOV          \\ Write 4 to V\n"
"       BX                  POP          \\ Restore BX\n"
"       DI  )       AX      LEA          \\ SPout := SPin\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27275
#, no-wrap
msgid ""
"\\ Assign 5 to variable V\n"
"ABI-CODE V=5 ( -- )\n"
"   V   #           CX      MOV          \\ CX := address of V\n"
"   5   #           CX )    MOV          \\ Write 5 to V\n"
"   DI )            AX      LEA          \\ SPout := SPin\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27296
#, no-wrap
msgid ""
"ABI-CODE TEST2  ( -- n n )\n"
"   -16 DI  D)  AX          LEA          \\ SPout := SPin + 2\n"
"   5   #       CX          MOV          \\ CX := 5\n"
"   5   #       CX          CMP\n"
"   0= IF\n"
"       1   #   8   AX  D)      MOV      \\ If CX = 5 then TOS - 1 := 1  <--\n"
"   ELSE\n"
"       2   #   8   AX  D)      MOV      \\ else TOS - 1 := 2\n"
"   THEN\n"
"   6   #       CX          CMP\n"
"   0= IF\n"
"       3   #       AX  )       MOV      \\ If CX = 6 then TOS := 3\n"
"   ELSE\n"
"       4   #       AX  )       MOV      \\ else TOS := 4  <--\n"
"   THEN\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27311
#, no-wrap
msgid ""
"\\ Do four loops. Expect : ( 4 3 2 1 -- )\n"
"ABI-CODE LOOP4  ( -- n n n n )\n"
"       DI          AX      MOV          \\ SPout := SPin\n"
"   4   #           DX      MOV          \\ DX := 4  loop counter\n"
"   BEGIN\n"
"       8   #           AX      SUB      \\ SP := SP + 1\n"
"           DX          AX  )   MOV      \\ TOS := DX\n"
"       1   #           DX      SUB      \\ DX := DX - 1\n"
"   0= UNTIL\n"
"                           RET\n"
"END-CODE\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27314
msgid "Here's a AMD64 example that deals with FP values:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27326
#, no-wrap
msgid ""
"abi-code my-f+  ( r1 r2 -- r )\n"
"\\ SP passed in di, returned in ax,  address of FP passed in si\n"
"si )       dx mov         \\ load fp\n"
"8 dx d)  xmm0 movsd       \\ r2\n"
"dx )     xmm0 addsd       \\ r1+r2\n"
"xmm0  8 dx d) movsd       \\ store r\n"
"8 #      si ) add         \\ update fp\n"
"di         ax mov         \\ sp into return reg\n"
"ret\n"
"end-code\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27333
msgid ""
"The Alpha assembler and disassembler were originally written by Bernd "
"Thallner."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27336
msgid ""
"The register names @code{a0}--@code{a5} are not available to avoid shadowing "
"hex numbers."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27340
msgid ""
"Immediate forms of arithmetic instructions are distinguished by a @code{#} "
"just before the @code{,}, e.g., @code{and#,} (note: @code{lda,} does not "
"count as arithmetic instruction)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27344
msgid ""
"You have to specify all operands to an instruction, even those that other "
"assemblers consider optional, e.g., the destination register for @code{br,}, "
"or the destination register and hint for @code{jmp,}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27347
msgid ""
"You can specify conditions for @code{if,} by removing the first @code{b} and "
"the trailing @code{,} from a branch with a corresponding name; e.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27352
#, no-wrap
msgid ""
"11 fgt if, \\ if F11>0e\n"
"  ...\n"
"endif,\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27355
msgid "@code{fbgt,} gives @code{fgt}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27360
msgid "The MIPS assembler was originally written by Christian Pirker."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27363
msgid ""
"Currently the assembler and disassembler covers most of the MIPS32 "
"architecture and doesn't support FP instructions."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27367
msgid ""
"The register names @code{$a0}--@code{$a3} are not available to avoid "
"shadowing hex numbers.  Use register numbers @code{$4}--@code{$7} instead."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27371
msgid ""
"Nothing distinguishes registers from immediate values.  Use explicit opcode "
"names with the @code{i} suffix for instructions with immediate argument.  E."
"g. @code{addiu,} in place of @code{addu,}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27376
msgid ""
"Where the architecture manual specifies several formats for the instruction "
"(e.g., for @code{jalr,}),use the one with more arguments (i.e. two for "
"@code{jalr,}).  When in doubt, see @code{arch/mips/testasm.fs} for an "
"example of correct use."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27386
msgid ""
"Branches and jumps in the MIPS architecture have a delay slot.  You have to "
"fill it manually (the simplest way is to use @code{nop,}), the assembler "
"does not do it for you (unlike @command{as}).  Even @code{if,}, "
"@code{ahead,}, @code{until,}, @code{again,}, @code{while,}, @code{else,} and "
"@code{repeat,} need a delay slot.  Since @code{begin,} and @code{then,} just "
"specify branch targets, they are not affected.  For branches the argument "
"specifying the target is a relative address.  Add the address of the delay "
"slot to get the absolute address."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27394
msgid ""
"Note that you must not put branches nor jumps (nor control-flow "
"instructions) into the delay slot.  Also it is a bad idea to put pseudo-ops "
"such as @code{li,} into a delay slot, as these may expand to several "
"instructions.  The MIPS I architecture also had load delay slots, and newer "
"MIPSes still have restrictions on using @code{mfhi,} and @code{mflo,}.  Be "
"careful to satisfy these restrictions, the assembler does not do it for you."
msgstr ""

#. type: example
#: ../doc/gforth.texi:27404
#, no-wrap
msgid ""
"$ra  12 $sp  sw,         \\ sw    ra,12(sp)\n"
"$4    8 $s0  lw,         \\ lw    a0,8(s0)\n"
"$v0  $0  lui,            \\ lui   v0,0x0\n"
"$s0  $s4  $12  addiu,    \\ addiu s0,s4,0x12\n"
"$s0  $s4  $4  addu,      \\ addu  s0,s4,$a0\n"
"$ra  $t9  jalr,          \\ jalr  t9\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27409
msgid ""
"You can specify the conditions for @code{if,} etc. by taking a conditional "
"branch and leaving away the @code{b} at the start and the @code{,} at the "
"end.  E.g.,"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27414
#, no-wrap
msgid ""
"4 5 eq if,\n"
"  ... \\ do something if $4 equals $5\n"
"then,\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27421
msgid ""
"The calling conventions for 32-bit MIPS machines is to pass the first 4 "
"arguments in registers @code{$4}..@code{$7}, and to use @code{$v0}-"
"@code{$v1} for return values.  In addition to these registers, it is ok to "
"clobber registers @code{$t0}-@code{$t8} without saving and restoring them."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27425
msgid ""
"If you use @code{jalr,} to call into dynamic library routines, you must "
"first load the called function's address into @code{$t9}, which is used by "
"position-indirect code to do relative memory accesses."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27427
msgid "Here is an example of a MIPS32 @code{abi-code} word:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27438
#, no-wrap
msgid ""
"abi-code my+  ( n1 n2 -- n3 )\n"
"  \\ SP passed in $4, returned in $v0\n"
"  $t0  4 $4  lw,         \\ load n1, n2 from stack\n"
"  $t1  0 $4  lw,    \n"
"  $t0  $t0  $t1  addu,   \\ add n1+n2, result in $t0\n"
"  $t0  4 $4  sw,         \\ store result (overwriting n1)\n"
"  $ra  jr,               \\ return to caller\n"
"  $v0  $4  4  addiu,     \\ (delay slot) return uptated SP in $v0\n"
"end-code\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27445
msgid ""
"The PowerPC assembler and disassembler were contributed by Michal Revucky."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27451
msgid ""
"This assembler does not follow the convention of ending mnemonic names with "
"a ``,'', so some mnemonic names shadow regular Forth words (in particular: "
"@code{and or xor fabs}); so if you want to use the Forth words, you have to "
"make them visible first, e.g., with @code{also forth}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27455
msgid ""
"Registers are referred to by their number, e.g., @code{9} means the integer "
"register 9 or the FP register 9 (depending on the instruction)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27459
msgid ""
"Because there is no way to distinguish registers from immediate values, you "
"have to explicitly use the immediate forms of instructions, i.e., "
"@code{addi,}, not just @code{add,}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27463
msgid ""
"The assembler and disassembler usually support the most general form of an "
"instruction, but usually not the shorter forms (especially for branches)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27472
msgid ""
"The ARM assembler includes all instruction of ARM architecture version 4, "
"and the BLX instruction from architecture 5.  It does not (yet)  have "
"support for Thumb instructions.  It also lacks support for any co-processors."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27476
msgid ""
"The assembler uses a postfix syntax with the same operand order as used in "
"the ARM Architecture Reference Manual.  Mnemonics are suffixed by a comma."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27483
msgid ""
"Registers are specified by their names @code{r0} through @code{r15}, with "
"the aliases @code{pc}, @code{lr}, @code{sp}, @code{ip} and @code{fp} "
"provided for convenience.  Note that @code{ip} refers to the``intra "
"procedure call scratch register'' (@code{r12}) and does not refer to an "
"instruction pointer.  @code{sp} refers to the ARM ABI stack pointer "
"(@code{r13}) and not the Forth stack pointer."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27489
msgid ""
"Condition codes can be specified anywhere in the instruction, but will be "
"most readable if specified just in front of the mnemonic.  The 'S' flag is "
"not a separate word, but encoded into instruction mnemonics, ie. just use "
"@code{adds,} instead of @code{add,} if you want the status register to be "
"updated."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27492
msgid ""
"The following table lists the syntax of operands for general instructions:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27506
#, no-wrap
msgid ""
"Gforth          normal assembler      description\n"
"123 #           #123                  immediate\n"
"r12             r12                   register\n"
"r12 4 #LSL      r12, LSL #4           shift left by immediate\n"
"r12 r1 LSL      r12, LSL r1           shift left by register\n"
"r12 4 #LSR      r12, LSR #4           shift right by immediate\n"
"r12 r1 LSR      r12, LSR r1           shift right by register\n"
"r12 4 #ASR      r12, ASR #4           arithmetic shift right\n"
"r12 r1 ASR      r12, ASR r1           ... by register\n"
"r12 4 #ROR      r12, ROR #4           rotate right by immediate\n"
"r12 r1 ROR      r12, ROR r1           ... by register\n"
"r12 RRX         r12, RRX              rotate right with extend by 1\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27509
msgid "Memory operand syntax is listed in this table:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27527
#, no-wrap
msgid ""
"Gforth            normal assembler      description\n"
"r4 ]              [r4]                  register\n"
"r4 4 #]           [r4, #+4]             register with immediate offset\n"
"r4 -4 #]          [r4, #-4]             with negative offset\n"
"r4 r1 +]          [r4, +r1]             register with register offset\n"
"r4 r1 -]          [r4, -r1]             with negated register offset\n"
"r4 r1 2 #LSL -]   [r4, -r1, LSL #2]     with negated and shifted offset\n"
"r4 4 #]!          [r4, #+4]!            immediate preincrement\n"
"r4 r1 +]!         [r4, +r1]!            register preincrement\n"
"r4 r1 -]!         [r4, +r1]!            register predecrement\n"
"r4 r1 2 #LSL +]!  [r4, +r1, LSL #2]!    shifted preincrement\n"
"r4 -4 ]#          [r4], #-4             immediate postdecrement\n"
"r4 r1 ]+          [r4], r1              register postincrement\n"
"r4 r1 ]-          [r4], -r1             register postdecrement\n"
"r4 r1 2 #LSL ]-   [r4], -r1, LSL #2     shifted postdecrement\n"
"' xyz >body [#]   xyz                   PC-relative addressing\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27536
msgid ""
"Register lists for load/store multiple instructions are started and "
"terminated by using the words @code{@{} and @code{@}} respectively.  Between "
"braces, register names can be listed one by one or register ranges can be "
"formed by using the postfix operator @code{r-r}.  The @code{^} flag is not "
"encoded in the register list operand, but instead directly encoded into the "
"instruction mnemonic, ie. use @code{^ldm,} and @code{^stm,}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27541
msgid ""
"Addressing modes for load/store multiple are not encoded as instruction "
"suffixes, but instead specified like an addressing mode, Use one of "
"@code{DA}, @code{IA}, @code{DB}, @code{IB}, @code{DA!}, @code{IA!}, "
"@code{DB!} or @code{IB!}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27543
msgid "The following table gives some examples:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27549
#, no-wrap
msgid ""
"Gforth                           normal assembler\n"
"r4 ia  @{ r0 r7 r8 @}  stm,        stmia    r4, @{r0,r7,r8@}\n"
"r4 db!  @{ r0 r7 r8 @}  ldm,       ldmdb    r4!, @{r0,r7,r8@}\n"
"sp ia!  @{ r0 r15 r-r @}  ^ldm,    ldmfd    sp!, @{r0-r15@}^\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27555
msgid ""
"Control structure words typical for Forth assemblers are available: "
"@code{if,} @code{ahead,} @code{then,} @code{else,} @code{begin,} "
"@code{until,} @code{again,} @code{while,} @code{repeat,} @code{repeat-"
"until,}.  Conditions are specified in front of these words:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27561
#, no-wrap
msgid ""
"r1 r2 cmp,    \\ compare r1 and r2\n"
"eq if,        \\ equal?\n"
"   ...          \\ code executed if r1 == r2\n"
"then,\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27564
msgid "Example of a definition using the ARM assembler:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27573
#, no-wrap
msgid ""
"abi-code my+ ( n1 n2 --  n3 )\n"
"   \\ arm abi: r0=SP, r1=&FP, r2,r3,r12 saved by caller\n"
"   r0 IA!  @{ r2 r3 @}  ldm,     \\ pop r2 = n2, r3 = n1\n"
"   r3  r2  r3         add,     \\ r3 = n1+n1\n"
"   r3  r0 -4 #]!      str,     \\ push r3\n"
"   pc  lr             mov,     \\ return to caller, new SP in r0\n"
"end-code\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27588
msgid ""
"If you want to contribute another assembler/disassembler, please contact us "
"(@email{anton@@mips.complang.tuwien.ac.at}) to check if we have such an "
"assembler already.  If you are writing them from scratch, please use a "
"similar syntax style as the one we use (i.e., postfix, commas at the end of "
"the instruction names, @pxref{Common Assembler}); make the output of the "
"disassembler be valid input for the assembler, and keep the style similar to "
"the style we used."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27596
msgid ""
"Hints on implementation: The most important part is to have a good test "
"suite that contains all instructions.  Once you have that, the rest is "
"easy.  For actual coding you can take a look at @file{arch/mips/disasm.fs} "
"to get some ideas on how to use data for both the assembler and "
"disassembler, avoiding redundancy and some potential bugs.  You can also "
"look at that file (and @pxref{Advanced does> usage example}) to get ideas "
"how to factor a disassembler."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27599
msgid ""
"Start with the disassembler, because it's easier to reuse data from the "
"disassembler for the assembler than the other way round."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27602
msgid ""
"For the assembler, take a look at @file{arch/alpha/asm.fs}, which shows how "
"simple it can be."
msgstr ""

#. type: node
#: ../doc/gforth.texi:27607 ../doc/gforth.texi:28271 ../doc/gforth.texi:28338
#, no-wrap
msgid "Passing Commands to the OS"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27613
msgid ""
"These words deal with the mechanics of Gforth (in Forth circles called "
"``carnal knowledge'' of a Forth system), but we consider them stable enough "
"to document them."
msgstr ""

#. type: node
#: ../doc/gforth.texi:27620 ../doc/gforth.texi:27621 ../doc/gforth.texi:27707
#, no-wrap
msgid "Header fields"
msgstr ""

#. type: node
#: ../doc/gforth.texi:27620 ../doc/gforth.texi:27707 ../doc/gforth.texi:27708
#: ../doc/gforth.texi:27959
#, no-wrap
msgid "Header methods"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:27622
#, no-wrap
msgid "header fields"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27631
msgid ""
"In Gforth 1.0 we switched to a new word header layout.  For a detailed "
"description, read: Bernd Paysan and M. Anton Ertl.  @cite{@uref{http://www."
"euroforth.org/ef19/papers/paysan.pdf,The new Gforth header}}. In 35th "
"EuroForth Conference, pages 5-20, 2019.  Since this paper was published, xt "
"and nt have been changed to point to the parameter field, like the body, but "
"otherwise it is still up-to-date."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27634
msgid ""
"This section explains just the data structure and the words used to access "
"it.  A header has the following fields:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27642
#, no-wrap
msgid ""
"name\n"
">f+c\n"
">link\n"
">cfa\n"
">namehm\n"
">body\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27649
msgid ""
"Currently Gforth has the names shown above for getting from the xt/nt/body "
"to the field, but apart from the standard @code{>body} they are not stable "
"Gforth words.  Instead, we provide access words.  Note that the documented "
"access words have survived the reorganization of the header layout."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27655
msgid ""
"Some of the words expect an nt, some expect an xt.  Given that both nt and "
"xt point to the body of a word, what is the difference? For most words, the "
"xt and nt use the same header, and with nt=xt, they point to the same "
"place.  However, for a synonym (@pxref{Aliases}) there is a difference; "
"consider the example"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27660
#, no-wrap
msgid ""
"create x\n"
"synonym y x\n"
"synonym z y\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27666
msgid ""
"In this case the nt of @code{z} points to the body of @code{z}, while the xt "
"of @code{z} points to the body of @code{x}.  Words defined with @code{alias} "
"or @code{forward} (@pxref{Forward}) also have different nts and xts."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27669
msgid ""
"The name field is variable-length and is accessed with @code{name>string} "
"(@pxref{Name token})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27672
msgid ""
"The @code{>f+c} field contains flags and the name length (count).  You read "
"the count with @code{name>string}, and the flags with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27673
#, no-wrap
msgid "compile-only? ( @var{ nt -- flag   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27674 ../doc/gforth.texi:27675
#, no-wrap
msgid "compile-only?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27678
#, no-wrap
msgid "@code{compile-only?} ( @i{nt -- flag  }) gforth-1.0 ``compile-only?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27680
msgid "true if @i{nt} is marked as compile-only."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27686
msgid ""
"The @code{>link} field contains a link to the previous word in the same word "
"list.  You can read it with @code{name>link} (@pxref{Name token})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27690
msgid ""
"The name, @code{>f+c} and @code{>link} fields are not present for "
"@code{noname} words, but @code{name>string} and @code{name>link} work "
"nevertheless, producing 0 0 and 0, respectively."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27695
msgid ""
"The @code{>cfa} field (aka code field) contains the code address used for "
"@code{execute}ing the word; you can read it with @code{>code-address} and "
"write it with @code{code-address!} (@pxref{Threading Words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27699
msgid ""
"The @code{>namehm} field contains the address of the header methods table, "
"described below.  You access it by performing or accessing header methods "
"(@pxref{Header methods})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27706
msgid ""
"The @code{>body} (aka parameter) field contains data or threaded code "
"specific to the word type; its length depends on the word type.  E.g., for a "
"@code{constant} it contains a cell with the value of the constant.  You can "
"access it through @code{>body} (@pxref{CREATE..DOES> details}), but this is "
"only standard for words you defined with @code{create}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:27709
#, no-wrap
msgid "header methods"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27713
msgid ""
"The new Gforth word header is object-oriented and supports the following "
"methods (method selectors):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27724
#, no-wrap
msgid ""
".hm label method          overrider        field\n"
"          execute         set-execute      >cfa\n"
"opt:      opt-compile,    set-optimizer    >hmcompile,\n"
"to:       (to)            set-to           >hmto\n"
"extra:                                     >hmextra\n"
">int:     name>interpret  set->int         >hm>int\n"
">comp:    name>compile    set->comp        >hm>comp\n"
">string:  name>string     set-name>string  >hm>string\n"
">link:    name>link       set-name>link    >hm>link\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27728
msgid ""
"Many of these words are not stable Gforth words, but Gforth has stable "
"higher-level words that we mention below."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27730
msgid "You can look at the header methods of a word with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27731
#, no-wrap
msgid ".hm ( @var{ nt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27732 ../doc/gforth.texi:27733
#, no-wrap
msgid ".hm"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27736
#, no-wrap
msgid "@code{.hm} ( @i{nt --  }) gforth-1.0 ``dot-h-m''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27738
msgid "print the header methods of @i{nt}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27745
msgid ""
"Overrider (setter) words change the method implementation for the most "
"recent definition.  Quotations or closures restore the previous most recent "
"definition when they are completed, so they are not considered most recent, "
"and you can do things like:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27749
#, no-wrap
msgid ""
": my2dup over over ;\n"
"[: drop ]] over over [[ ;] set-optimizer\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27756
msgid ""
"The @code{execute} method is actually stored in the @code{>cfa} field in the "
"header rather than in the header-methods table for performance reasons; also "
"it is implemented through a native-code address, while the other methods are "
"implemented by calling an xt.  The high-level way to set this method is"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27757
#, no-wrap
msgid "set-execute ( @var{ ca --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27758 ../doc/gforth.texi:27759
#, no-wrap
msgid "set-execute"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27762
#, no-wrap
msgid "@code{set-execute} ( @i{ca --  }) gforth-1.0 ``set-execute''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27768
msgid ""
"Changes the current word such that it jumps to the native code at @i{ca}.  "
"Also changes the @code{compile,} implementation to the most general (and "
"slowest) one.  Call @code{set-optimizer} afterwards if you want a more "
"efficient @code{compile,} implementation."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27774
msgid ""
"To get a code address for use with @code{set-execute}, you can use words "
"like @code{docol:} or @code{>code-address}, @xref{Threading Words}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27778
msgid ""
"As an alternative to @code{set-execute}, there is also @code{set-does>} "
"(@pxref{User-defined Defining Words}), which takes an xt."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27781
msgid ""
"Moreover, there are the low-level @code{code-address!} and @code{definer!} "
"(@pxref{Threading Words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27788
msgid ""
"The @code{opt-compile,} method is what @code{compile,} does on most Gforth "
"engines (@code{gforth-itc} uses @code{,} instead).  You can define a more "
"efficient implementation of @code{compile,} for the current word with "
"@code{set-optimizer} (@pxref{User-defined compile-comma}).  Note that the "
"end result must be equivalent to @code{postpone literal postpone execute}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27791
msgid ""
"As an example of the use of @code{set-optimizer}, consider the following "
"definition of @code{constant}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27797
#, no-wrap
msgid ""
": constant ( n \"name\" -- ; name: -- n )\n"
"  create ,\n"
"  ['] @@ set-does>\n"
";\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27800
#, no-wrap
msgid ""
"5 constant five\n"
": foo five ; see foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27807
msgid ""
"The Forth system does not know that the value of a constant must not be "
"changed, and just sees a @code{create}d word (which can be changed with "
"@code{>body}), and @code{foo} first pushes the body address of @code{five} "
"and then fetches from there.  With @code{set-optimizer} the definition of "
"@code{constant} can be optimized as follows:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27814
#, no-wrap
msgid ""
": constant ( n \"name\" -- ; name: -- n )\n"
"  create ,\n"
"  ['] @@ set-does>\n"
"  [: >body @@ postpone literal ;] set-optimizer\n"
";\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27818
msgid ""
"Now @code{foo} contains the literal 5 rather than a call to @code{five}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27823
msgid ""
"Note that @code{set-execute} and @code{set-does>} perform @code{set-"
"optimizer} themselves in order to ensure that @code{execute} and "
"@code{compile,} agree, so if you want to add your own optimizer, you should "
"add it afterwards."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27830
msgid ""
"The @code{defer!} (aka @code{(to)} method (@pxref{User-defined TO and "
"DEFER@@}) implements @code{defer!} for words defined with @code{defer} and "
"similar words, but it is also the core of @code{to}.  The general stack "
"effect of the @code{defer!}/@code{(to)} method is @code{( val xt -- )}, "
"where @i{xt} identifies the word stored into, and @i{val} is the value (of "
"appropriate type) stored there."
msgstr ""

#. type: example
#: ../doc/gforth.texi:27835
#, no-wrap
msgid ""
": fvalue-to ( r xt -- ) >body f! ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27840
#, no-wrap
msgid ""
": fvalue ( r -- )\n"
"  create f,\n"
"  ['] f@@ set-does>\n"
"  ['] fvalue-to set-to ;\n"
"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27847
msgid "You can improve the generated code with @code{set-optimizer}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27854
#, no-wrap
msgid ""
": fvalue-to ( r xt -- ) >body f! ;\n"
"' compile-fvalue-to set-optimizer\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:27860
#, no-wrap
msgid ""
": fvalue ( r -- )\n"
"  create f,\n"
"  ['] f@@ set-does>\n"
"  [: >body ]] literal f@@ [[ ;] set-optimizer\n"
"  ['] fvalue-to set-to ;\n"
"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27868
msgid ""
"In practice Gforth has a few additional twists to implement, e.g., "
"@code{+TO}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27872
msgid ""
"@code{Set-defer@@} (@pxref{User-defined TO and DEFER@@}) allows to implement "
"variants of the @code{defer@@} (@pxref{Deferred Words})  method for "
"@code{defer}-like words."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27877
msgid ""
"The @code{>hmextra} field is used for cases where additional data needs to "
"be stored in the header methods table.  In particular, it stores the xt "
"passed to @code{set-does>} (and @code{does>} calls @code{set-does>}) and the "
"code address behind @code{;abi-code}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27884
msgid ""
"The methods above all consume an xt, not an nt, but the override words work "
"on the most recent definition.  This means that if you use, e.g., @code{set-"
"optimizer} on a synonym, the effect will probably not be what you intended: "
"When @code{compile,}ing the xt of the word, the @code{opt-compile,} "
"implementation of the original word will be used, not the freshly-set one of "
"the synonym."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27886
msgid "The following methods consume an nt."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27889
msgid ""
"The @code{name>interpret} method is implemented as noop for most words, "
"except synonyms and similar words."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27890
#, no-wrap
msgid "set->int ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27891 ../doc/gforth.texi:27892
#, no-wrap
msgid "set->int"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27895
#, no-wrap
msgid "@code{set->int} ( @i{xt --  }) gforth-1.0 ``set-to-int''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27898
msgid ""
"Sets the implementation of the @code{name>interpret ( nt -- xt2 )} method of "
"the current word to @i{xt}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27908
msgid ""
"The @code{name>compile} method produces the compilation semantics of the "
"nt.  By changing it with @code{set->comp}, you can change the compilation "
"semantics, but it's not as simple as just pushing the xt of the desired "
"compilation semantics, because of the stack effect of @code{name>compile}.  "
"Generally you should avoid changing the compilation semantics, and if you "
"do, use a higher-level word like @code{immediate} or @code{interpret/"
"compile:}, @xref{Combined words}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27909
#, no-wrap
msgid "set->comp ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27910 ../doc/gforth.texi:27911
#, no-wrap
msgid "set->comp"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27914
#, no-wrap
msgid "@code{set->comp} ( @i{xt --  }) gforth-1.0 ``set-to-comp''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27917
msgid ""
"Sets the implementation of the @code{name>compile ( nt -- w xt2 )} method of "
"the current word to @i{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27919
#, no-wrap
msgid "immediate? ( @var{ nt -- flag   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27920 ../doc/gforth.texi:27921
#, no-wrap
msgid "immediate?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27924
#, no-wrap
msgid "@code{immediate?} ( @i{nt -- flag  }) gforth-1.0 ``immediate?''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27929
msgid ""
"true if the word @i{nt} has non-default compilation semantics (that's not "
"quite according to the definition of immediacy, but many people mean that "
"when they call a word ``immediate'')."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27937
msgid ""
"@code{Name>string} and @code{Name>link} are methods in order to make it "
"possible to eliminate the name, @code{>f+c} and @code{link} fields from "
"noname headers, but still produce meaningful results when using these "
"words.  You will typically not change the implementations of these methods "
"except with @code{noname}, but we still have"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27938
#, no-wrap
msgid "set-name>string ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27939 ../doc/gforth.texi:27940
#, no-wrap
msgid "set-name>string"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27943
#, no-wrap
msgid "@code{set-name>string} ( @i{xt --  }) gforth-1.0 ``set-name-to-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27946
msgid ""
"Sets the implementation of the @code{name>string ( nt -- addr u )} method of "
"the current word to @i{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27948
#, no-wrap
msgid "set-name>link ( @var{ xt --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27949 ../doc/gforth.texi:27950
#, no-wrap
msgid "set-name>link"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27953
#, no-wrap
msgid "@code{set-name>link} ( @i{xt --  }) gforth-1.0 ``set-name-to-link''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27956
msgid ""
"Sets the implementation of the @code{name>link ( nt1 -- nt2|0 )} method of "
"the current word to @i{xt}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:27961
#, no-wrap
msgid "threading words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:27963
#, no-wrap
msgid "code field"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:27964
#, no-wrap
msgid "CFA"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:27965
#, no-wrap
msgid "code address"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27973
msgid ""
"The terminology used here stems from indirect threaded Forth systems; in "
"such a system, the XT of a word is represented by the CFA (code field "
"address) of a word; the CFA points to a cell that contains the code "
"address.  The code address is the address of some machine code that performs "
"the run-time action of invoking the word (e.g., the @code{dovar:} routine "
"pushes the address of the body of the word (a variable) on the stack)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27977
msgid ""
"These words provide access to code fields, code addresses and other "
"threading stuff in Gforth. It more or less abstracts away the differences "
"between direct and indirect threading."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27984
msgid ""
"Up to and including Gforth 0.7, the code address (plus, for @code{does>}-"
"defined words, the address returned by @code{>does-code})  was sufficient to "
"know the type of the word.  However, since Gforth-1.0 the behaviour or at "
"least implementation of words like @code{compile,} and @code{name>compile} "
"can be determined independently as described in @ref{Header methods}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:27987
msgid ""
"The following words for create a code field and at the same time initialize "
"the header methods:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27988
#, no-wrap
msgid "hmcopy, ( @var{ xt --   } ) gforth-experimental"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:27989 ../doc/gforth.texi:27990
#, no-wrap
msgid "hmcopy,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:27993
#, no-wrap
msgid "@code{hmcopy,} ( @i{xt --  }) gforth-experimental ``hmcopy-comma''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:27997
msgid ""
"While constructing a header, allocate the code field, and use @i{xt} as "
"prototype for setting the code field and the header methods."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:27999
#, no-wrap
msgid "docol, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28000 ../doc/gforth.texi:28001
#, no-wrap
msgid "docol,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28004
#, no-wrap
msgid "@code{docol,} ( @i{--  }) gforth-1.0 ``docol,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28006 ../doc/gforth.texi:28123
msgid "The code address of a colon definition."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28008
#, no-wrap
msgid "docon, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28009 ../doc/gforth.texi:28010
#, no-wrap
msgid "docon,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28013
#, no-wrap
msgid "@code{docon,} ( @i{--  }) gforth-1.0 ``docon,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28015 ../doc/gforth.texi:28060 ../doc/gforth.texi:28132
#: ../doc/gforth.texi:28177
msgid "The code address of a @code{CONSTANT}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28017
#, no-wrap
msgid "dovar, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28018 ../doc/gforth.texi:28019
#, no-wrap
msgid "dovar,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28022
#, no-wrap
msgid "@code{dovar,} ( @i{--  }) gforth-1.0 ``dovar,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28024 ../doc/gforth.texi:28141
msgid "The code address of a @code{CREATE}d word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28026
#, no-wrap
msgid "douser, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28027 ../doc/gforth.texi:28028
#, no-wrap
msgid "douser,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28031
#, no-wrap
msgid "@code{douser,} ( @i{--  }) gforth-1.0 ``douser,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28033 ../doc/gforth.texi:28150
msgid "The code address of a @code{USER} variable."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28035
#, no-wrap
msgid "dodefer, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28036 ../doc/gforth.texi:28037
#, no-wrap
msgid "dodefer,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28040
#, no-wrap
msgid "@code{dodefer,} ( @i{--  }) gforth-1.0 ``dodefer,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28042 ../doc/gforth.texi:28159
msgid "The code address of a @code{defer}ed word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28044
#, no-wrap
msgid "dofield, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28045 ../doc/gforth.texi:28046
#, no-wrap
msgid "dofield,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28049
#, no-wrap
msgid "@code{dofield,} ( @i{--  }) gforth-1.0 ``dofield,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28051 ../doc/gforth.texi:28168
msgid "The code address of a @code{field}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28053
#, no-wrap
msgid "dovalue, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28054 ../doc/gforth.texi:28055
#, no-wrap
msgid "dovalue,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28058
#, no-wrap
msgid "@code{dovalue,} ( @i{--  }) gforth-1.0 ``dovalue,''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28062
#, no-wrap
msgid "doabicode, ( @var{ --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28063 ../doc/gforth.texi:28064
#, no-wrap
msgid "doabicode,"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28067
#, no-wrap
msgid "@code{doabicode,} ( @i{--  }) gforth-1.0 ``doabicode,''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28069 ../doc/gforth.texi:28195
msgid "The code address of a @code{ABI-CODE} definition."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28073
msgid "For @code{does>}-defined words, use @code{hmcopy,}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28076
msgid ""
"Or you use a higher-level word like @code{create-from} (@pxref{Creating from "
"a prototype})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28080
msgid ""
"The following words were designed before the introduction of header methods, "
"and are therefore not the best (and recommended) way to deal with different "
"word types in Gforth."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28084
msgid ""
"In an indirect threaded Forth, you can get the code address of @i{name} with "
"@code{' @i{name} @@}; in Gforth you can get it with @code{' @i{name} >code-"
"address}, independent of the threading method."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28085
#, no-wrap
msgid "threading-method ( @var{ -- n  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28086 ../doc/gforth.texi:28087
#, no-wrap
msgid "threading-method"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28090
#, no-wrap
msgid "@code{threading-method} ( @i{-- n }) gforth-0.2 ``threading-method''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28093
msgid ""
"0 if the engine is direct threaded. Note that this may change during the "
"lifetime of an image."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28094
#, no-wrap
msgid ">code-address ( @var{ xt -- c_addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28095 ../doc/gforth.texi:28096
#, no-wrap
msgid ">code-address"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28099
#, no-wrap
msgid "@code{>code-address} ( @i{xt -- c_addr  }) gforth-0.2 ``>code-address''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28101
msgid "@i{c-addr} is the code address of the word @i{xt}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28103
#, no-wrap
msgid "code-address! ( @var{ c_addr xt --   } ) gforth-obsolete"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28104 ../doc/gforth.texi:28105
#, no-wrap
msgid "code-address!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28108
#, no-wrap
msgid "@code{code-address!} ( @i{c_addr xt --  }) gforth-obsolete ``code-address!''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28110
msgid "Change a code field with code address @i{c-addr} at @i{xt}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28115
msgid ""
"The code addresses produced by various defining words are produced by the "
"following words:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28116
#, no-wrap
msgid "docol: ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28117 ../doc/gforth.texi:28118
#, no-wrap
msgid "docol:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28121
#, no-wrap
msgid "@code{docol:} ( @i{-- addr  }) gforth-0.2 ``docol:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28125
#, no-wrap
msgid "docon: ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28126 ../doc/gforth.texi:28127
#, no-wrap
msgid "docon:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28130
#, no-wrap
msgid "@code{docon:} ( @i{-- addr  }) gforth-0.2 ``docon:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28134
#, no-wrap
msgid "dovar: ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28135 ../doc/gforth.texi:28136
#, no-wrap
msgid "dovar:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28139
#, no-wrap
msgid "@code{dovar:} ( @i{-- addr  }) gforth-0.2 ``dovar:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28143
#, no-wrap
msgid "douser: ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28144 ../doc/gforth.texi:28145
#, no-wrap
msgid "douser:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28148
#, no-wrap
msgid "@code{douser:} ( @i{-- addr  }) gforth-0.2 ``douser:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28152
#, no-wrap
msgid "dodefer: ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28153 ../doc/gforth.texi:28154
#, no-wrap
msgid "dodefer:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28157
#, no-wrap
msgid "@code{dodefer:} ( @i{-- addr  }) gforth-0.2 ``dodefer:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28161
#, no-wrap
msgid "dofield: ( @var{ -- addr   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28162 ../doc/gforth.texi:28163
#, no-wrap
msgid "dofield:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28166
#, no-wrap
msgid "@code{dofield:} ( @i{-- addr  }) gforth-0.2 ``dofield:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28170
#, no-wrap
msgid "dovalue: ( @var{ -- addr   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28171 ../doc/gforth.texi:28172
#, no-wrap
msgid "dovalue:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28175
#, no-wrap
msgid "@code{dovalue:} ( @i{-- addr  }) gforth-0.7 ``dovalue:''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28179
#, no-wrap
msgid "dodoes: ( @var{ -- addr   } ) gforth-0.6"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28180 ../doc/gforth.texi:28181
#, no-wrap
msgid "dodoes:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28184
#, no-wrap
msgid "@code{dodoes:} ( @i{-- addr  }) gforth-0.6 ``dodoes:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28186
msgid "The code address of a @code{DOES>}-defined word."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28188
#, no-wrap
msgid "doabicode: ( @var{ -- addr   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28189 ../doc/gforth.texi:28190
#, no-wrap
msgid "doabicode:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28193
#, no-wrap
msgid "@code{doabicode:} ( @i{-- addr  }) gforth-1.0 ``doabicode:''\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28198
#, no-wrap
msgid "@code{does>}-code"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28203
msgid ""
"For a word @i{X} defined with @code{set-does>}, the code address points to "
"@code{dodoes:}, and the @code{>hmextra} field of the header methods contains "
"the xt of the word that is called after pushing the body addres of @i{X}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28206
msgid ""
"If you want to know whether a word is a @code{DOES>}-defined word, and what "
"Forth code it executes, @code{>does-code} tells you that:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28207
#, no-wrap
msgid ">does-code ( @var{ xt1 -- xt2   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28208 ../doc/gforth.texi:28209
#, no-wrap
msgid ">does-code"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28212
#, no-wrap
msgid "@code{>does-code} ( @i{xt1 -- xt2  }) gforth-0.2 ``>does-code''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28219
msgid ""
"If @i{xt1} is the execution token of a child of a @code{set-does>}-defined "
"word, @i{xt2} is the xt passed to @code{set-does>}, i.e, the xt of the word "
"that is executed when executing @i{xt1} (but first the body address of "
"@i{xt1} is pushed).  If @i{xt1} does not belong to a @code{set-does>}-"
"defined word, @i{xt2} is 0."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28224
msgid ""
"You can use the resulting @i{xt2} with @code{set-does>} (preferred) to "
"change the latest word or with"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28225
#, no-wrap
msgid "does-code! ( @var{ xt2 xt1 --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28226 ../doc/gforth.texi:28227
#, no-wrap
msgid "does-code!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28230
#, no-wrap
msgid "@code{does-code!} ( @i{xt2 xt1 --  }) gforth-0.2 ``does-code!''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28232
msgid "Change @i{xt1} to be a @code{@i{xt2} set-does>}-defined word."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28236
msgid "to change an arbitrary word."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28237
#, no-wrap
msgid "definer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28240
msgid ""
"The following two words generalize @code{>code-address}, @code{>does-code}, "
"@code{code-address!}, and @code{does-code!}:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28241
#, no-wrap
msgid ">definer ( @var{ xt -- definer   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28242 ../doc/gforth.texi:28243
#, no-wrap
msgid ">definer"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28246
#, no-wrap
msgid "@code{>definer} ( @i{xt -- definer  }) gforth-0.2 ``>definer''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28251
msgid ""
"@var{Definer} is a unique identifier for the way the @var{xt} was defined.  "
"Words defined with different @code{does>}-codes have different definers.  "
"The definer can be used for comparison and in @code{definer!}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28253
#, no-wrap
msgid "definer! ( @var{ definer xt --   } ) gforth-obsolete"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28254 ../doc/gforth.texi:28255
#, no-wrap
msgid "definer!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28258
#, no-wrap
msgid "@code{definer!} ( @i{definer xt --  }) gforth-obsolete ``definer!''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28261
msgid ""
"The word represented by @var{xt} changes its behaviour to the behaviour "
"associated with @var{definer}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28269
msgid ""
"@code{Code-address!}, @code{does-code!}, and @code{definer!} update the "
"@code{opt-compile,} method to a somewhat generic compiler for that word type "
"(in particular, primitives get the slow @code{general-compile,} method "
"rather than the primitive-specific @code{peephole-compile,})."
msgstr ""

#. type: node
#: ../doc/gforth.texi:28271 ../doc/gforth.texi:28338 ../doc/gforth.texi:28339
#: ../doc/gforth.texi:28406
#, no-wrap
msgid "Keeping track of Time"
msgstr ""

#. type: section
#: ../doc/gforth.texi:28272
#, no-wrap
msgid "Passing Commands to the Operating System"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28273
#, no-wrap
msgid "operating system - passing commands"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28274
#, no-wrap
msgid "shell commands"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28278
msgid ""
"Gforth allows you to pass an arbitrary string to the host operating system "
"shell (if such a thing exists) for execution."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28279
#, no-wrap
msgid "sh ( @var{ \"...\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28280 ../doc/gforth.texi:28281
#, no-wrap
msgid "sh"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28284
#, no-wrap
msgid "@code{sh} ( @i{\"...\" --  }) gforth-0.2 ``sh''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28287
msgid ""
"Execute the rest of the command line as shell command(s).  Afterwards, "
"@code{$?} produces the exit status of the command."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28289
#, no-wrap
msgid "system ( @var{ c-addr u --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28290 ../doc/gforth.texi:28291
#, no-wrap
msgid "system"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28294
#, no-wrap
msgid "@code{system} ( @i{c-addr u --  }) gforth-0.2 ``system''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28302
msgid ""
"Pass the string specified by @var{c-addr u} to the host operating system for "
"execution in a sub-shell.  Afterwards, @code{$?} produces the exit status of "
"the command. The value of the environment variable @code{GFORTHSYSTEMPREFIX} "
"(or its default value) is prepended to the string (mainly to support using "
"@code{command.com} as shell in Windows instead of whatever shell Cygwin uses "
"by default; @pxref{Environment variables})."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28304
#, no-wrap
msgid "sh-get ( @var{ c-addr u -- c-addr2 u2   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28305 ../doc/gforth.texi:28306
#, no-wrap
msgid "sh-get"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28309
#, no-wrap
msgid "@code{sh-get} ( @i{c-addr u -- c-addr2 u2  }) gforth-1.0 ``sh-get''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28313
msgid ""
"Run the shell command @i{addr u}; @i{c-addr2 u2} is the output of the "
"command.  The exit code is in @code{$?}, the output also in @code{sh$ 2@@}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28315
#, no-wrap
msgid "$? ( @var{ -- n   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28316 ../doc/gforth.texi:28317
#, no-wrap
msgid "$?"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28320
#, no-wrap
msgid "@code{$?} ( @i{-- n  }) gforth-0.2 ``dollar-question''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28323
msgid ""
"@code{Value} -- the exit status returned by the most recently executed "
"@code{system} command."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28325
#, no-wrap
msgid "getenv ( @var{ c-addr1 u1 -- c-addr2 u2  } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28326 ../doc/gforth.texi:28327
#, no-wrap
msgid "getenv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28330
#, no-wrap
msgid "@code{getenv} ( @i{c-addr1 u1 -- c-addr2 u2 }) gforth-0.2 ``getenv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28335
msgid ""
"The string @i{c-addr1 u1} specifies an environment variable. The string @i{c-"
"addr2 u2} is the host operating system's expansion of that environment "
"variable. If the environment variable does not exist, @i{c-addr2 u2} "
"specifies a string 0 characters in length."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28340
#, no-wrap
msgid "time-related words"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28342
#, no-wrap
msgid "ms ( @var{ n --   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28343 ../doc/gforth.texi:28344
#, no-wrap
msgid "ms"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28347
#, no-wrap
msgid "@code{ms} ( @i{n --  }) facility-ext ``ms''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28349
#, no-wrap
msgid "ns ( @var{ d --   } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28350 ../doc/gforth.texi:28351
#, no-wrap
msgid "ns"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28354
#, no-wrap
msgid "@code{ns} ( @i{d --  }) gforth-1.0 ``ns''\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28356
#, no-wrap
msgid "time&date ( @var{ -- nsec nmin nhour nday nmonth nyear   } ) facility-ext"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28357 ../doc/gforth.texi:28358
#, no-wrap
msgid "time&date"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28361
#, no-wrap
msgid "@code{time&date} ( @i{-- nsec nmin nhour nday nmonth nyear  }) facility-ext ``time-and-date''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28364
msgid ""
"Report the current time of day. Seconds, minutes and hours are numbered from "
"0. Months are numbered from 1."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28366
#, no-wrap
msgid ">time&date&tz ( @var{ udtime -- nsec nmin nhour nday nmonth nyear fdst ndstoff c-addrtz utz  } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28367 ../doc/gforth.texi:28368
#, no-wrap
msgid ">time&date&tz"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28371
#, no-wrap
msgid "@code{>time&date&tz} ( @i{udtime -- nsec nmin nhour nday nmonth nyear fdst ndstoff c-addrtz utz }) gforth-1.0 ``to-time-and-date''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28374
msgid ""
"Convert time in seconds since 1.1.1970 0:00Z to the current time of day. "
"Seconds, minutes and hours are numbered from 0.  Months are numbered from 1."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28375
#, no-wrap
msgid "utime ( @var{ -- dtime  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28376 ../doc/gforth.texi:28377
#, no-wrap
msgid "utime"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28380
#, no-wrap
msgid "@code{utime} ( @i{-- dtime }) gforth-0.5 ``utime''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28382
msgid ""
"Report the current time in microseconds since some epoch.  Use "
"@code{#1000000 um/mod nip} to convert to seconds"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28383
#, no-wrap
msgid "ntime ( @var{ -- dtime  } ) gforth-1.0"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28384 ../doc/gforth.texi:28385
#, no-wrap
msgid "ntime"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28388
#, no-wrap
msgid "@code{ntime} ( @i{-- dtime }) gforth-1.0 ``ntime''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28390
msgid "Report the current time in nanoseconds since some epoch."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28391
#, no-wrap
msgid "cputime ( @var{ -- duser dsystem  } ) gforth-0.5"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28392 ../doc/gforth.texi:28393
#, no-wrap
msgid "cputime"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28396
#, no-wrap
msgid "@code{cputime} ( @i{-- duser dsystem }) gforth-0.5 ``cputime''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28402
msgid ""
"duser and dsystem are the respective user- and system-level CPU times used "
"since the start of the Forth system (excluding child processes), in "
"microseconds (the granularity may be much larger, however).  On platforms "
"without the getrusage call, it reports elapsed time (since some epoch) for "
"duser and 0 for dsystem."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28408
#, no-wrap
msgid "miscellaneous words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28414
msgid ""
"This section lists the Standard Forth words that are not documented "
"elsewhere in this manual. Ultimately, they all need proper homes."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:28415
#, no-wrap
msgid "quit ( @var{ ?? -- ??   } ) core"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:28416 ../doc/gforth.texi:28417
#, no-wrap
msgid "quit"
msgstr ""

#. type: format
#: ../doc/gforth.texi:28420
#, no-wrap
msgid "@code{quit} ( @i{?? -- ??  }) core ``quit''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28424
msgid ""
"Empty the return stack, make the user input device the input source, enter "
"interpret state and start the text interpreter."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28429
msgid ""
"The following Standard Forth words are not currently supported by Gforth "
"(@pxref{Standard conformance}):"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28433
msgid "@code{EDITOR} @code{EMIT?} @code{FORGET}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28437
#, no-wrap
msgid "error messages"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28438
#, no-wrap
msgid "backtrace"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28441
msgid "A typical Gforth error message looks like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:28450
#, no-wrap
msgid ""
"in file included from \\evaluated string/:-1\n"
"in file included from ./yyy.fs:1\n"
"./xxx.fs:4: Invalid memory address\n"
">>>bar<<<\n"
"Backtrace:\n"
"$400E664C @@\n"
"$400E6664 foo\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28457
msgid ""
"The message identifying the error is @code{Invalid memory address}.  The "
"error happened when text-interpreting line 4 of the file @file{./xxx.fs}. "
"This line is given (it contains @code{bar}), and the word on the line where "
"the error happened, is pointed out (with @code{>>>} and @code{<<<})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28461
msgid ""
"The file containing the error was included in line 1 of @file{./yyy.fs}, and "
"@file{yyy.fs} was included from a non-file (in this case, by giving "
"@file{yyy.fs} as command-line parameter to Gforth)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28467
msgid ""
"At the end of the error message you find a return stack dump that can be "
"interpreted as a backtrace (possibly empty). On top you find the top of the "
"return stack when the @code{throw} happened, and at the bottom you find the "
"return stack entry just above the return stack of the topmost text "
"interpreter."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28473
msgid ""
"To the right of most return stack entries you see a guess for the word that "
"pushed that return stack entry as its return address. This gives a "
"backtrace. In our case we see that @code{bar} called @code{foo}, and "
"@code{foo} called @code{@@} (and @code{@@} had an @emph{Invalid memory "
"address} exception)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28479
msgid ""
"Note that the backtrace is not perfect: We don't know which return stack "
"entries are return addresses (so we may get false positives); and in some "
"cases (e.g., for @code{abort\"}) we cannot determine from the return address "
"the word that pushed the return address, so for some return addresses you "
"see no names in the return stack dump."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28480
#, no-wrap
msgid "@code{catch} and backtraces"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28492
msgid ""
"The return stack dump represents the return stack at the time when a "
"specific @code{throw} was executed.  In programs that make use of "
"@code{catch}, it is not necessarily clear which @code{throw} should be used "
"for the return stack dump (e.g., consider one @code{throw} that indicates an "
"error, which is caught, and during recovery another error happens; which "
"@code{throw} should be used for the stack dump?).  Gforth presents the "
"return stack dump for the first @code{throw} after the last executed (not "
"returned-to) @code{catch} or @code{nothrow}; this works well in the usual "
"case. To get the right backtrace, you usually want to insert @code{nothrow} "
"or @code{['] false catch 2drop} after a @code{catch} if the error is not "
"rethrown."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28493
#, no-wrap
msgid "@code{gforth-fast} and backtraces"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28494
#, no-wrap
msgid "@code{gforth-fast}, difference from @code{gforth}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28495
#, no-wrap
msgid "backtraces with @code{gforth-fast}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28496
#, no-wrap
msgid "return stack dump with @code{gforth-fast}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28506
msgid ""
"@code{Gforth} is able to do a return stack dump for throws generated from "
"primitives (e.g., invalid memory address, stack empty etc.); @code{gforth-"
"fast} is only able to do a return stack dump from a directly called "
"@code{throw} (including @code{abort} etc.).  Given an exception caused by a "
"primitive in @code{gforth-fast}, you will typically see no return stack dump "
"at all; however, if the exception is caught by @code{catch} (e.g., for "
"restoring some state), and then @code{throw}n again, the return stack dump "
"will be for the first such @code{throw}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28510
msgid ""
"@code{gforth-fast} also does not attempt to differentiate between division "
"by zero and division overflow, because that costs time in every division."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28521
msgid "See also @ref{Emacs and Gforth}."
msgstr ""

#. type: section
#: ../doc/gforth.texi:28523
#, no-wrap
msgid "@file{ans-report.fs}: Report the words used, sorted by wordset"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:28524
#, no-wrap
msgid "ans-report.fs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28525
#, no-wrap
msgid "report the words used in your program"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28526
#, no-wrap
msgid "words used in your program"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28530
msgid ""
"If you want to label a Forth program as Standard Program, you must document "
"which wordsets the program uses."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28537
msgid ""
"The @file{ans-report.fs} tool makes it easy for you to determine which words "
"from which wordset and which non-standard words your application uses. You "
"simply have to include @file{ans-report.fs} before loading the program you "
"want to check. After loading your program, you can get the report with "
"@code{print-ans-report}. A typical use is to run this as batch job like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:28539
#, no-wrap
msgid "gforth ans-report.fs myprog.fs -e \"print-ans-report bye\"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28542
msgid "The output looks like this (for @file{compat/control.fs}):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:28550
#, no-wrap
msgid ""
"The program uses the following words\n"
"from CORE :\n"
": POSTPONE THEN ; immediate ?dup IF 0= \n"
"from BLOCK-EXT :\n"
"\\ \n"
"from FILE :\n"
"( \n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28558
msgid ""
"@file{ans-report.fs} reports both Forth-94 and Forth-2012 wordsets.  For "
"words that are in both standards, it reports the wordset without suffix (e."
"g., @code{CORE-EXT}).  For Forth-2012-only words, it reports the wordset "
"with a @code{-2012} suffix (e.g., @code{CORE-EXT-2012}); and likewise for "
"the words that are Forth-94-only (i.e., that have been removed in "
"Forth-2012)."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:28559
#, no-wrap
msgid "Caveats"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28563
msgid ""
"Note that @file{ans-report.fs} just checks which words are used, not whether "
"they are used in a standard-conforming way!"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28570
msgid ""
"Some words are defined in several wordsets in the standard. @file{ans-report."
"fs} reports them for only one of the wordsets, and not necessarily the one "
"you expect. It depends on usage which wordset is the right one to specify. E."
"g., if you only use the compilation semantics of @code{S\"}, it is a Core "
"word; if you also use its interpretation semantics, it is a File word."
msgstr ""

#. type: section
#: ../doc/gforth.texi:28573
#, no-wrap
msgid "Stack depth changes during interpretation"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:28574
#, no-wrap
msgid "depth-changes.fs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28575
#, no-wrap
msgid "depth changes during interpretation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28576
#, no-wrap
msgid "stack depth changes during interpretation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28577
#, no-wrap
msgid "items on the stack after interpretation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28582
msgid ""
"Sometimes you notice that, after loading a file, there are items left on the "
"stack.  The tool @file{depth-changes.fs} helps you find out quickly where in "
"the file these stack items are coming from."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28585
msgid ""
"The simplest way of using @file{depth-changes.fs} is to include it before "
"the file(s) you want to check, e.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:28588
#, no-wrap
msgid "gforth depth-changes.fs my-file.fs\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28598
msgid ""
"This will compare the stack depths of the data and FP stack at every empty "
"line (in interpretation state) against these depths at the last empty line "
"(in interpretation state).  If the depths are not equal, the position in the "
"file and the stack contents are printed with @code{~~} (@pxref{Debugging}).  "
"This indicates that a stack depth change has occured in the paragraph of non-"
"empty lines before the indicated line.  It is a good idea to leave an empty "
"line at the end of the file, so the last paragraph is checked, too."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28603
msgid ""
"Checking only at empty lines usually works well, but sometimes you have big "
"blocks of non-empty lines (e.g., when building a big table), and you want to "
"know where in this block the stack depth changed.  You can check all "
"interpreted lines with"
msgstr ""

#. type: example
#: ../doc/gforth.texi:28606
#, no-wrap
msgid "gforth depth-changes.fs -e \"' all-lines is depth-changes-filter\" my-file.fs\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28611
msgid ""
"This checks the stack depth at every end-of-line.  So the depth change "
"occured in the line reported by the @code{~~} (not in the line before)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28618
msgid ""
"Note that, while this offers better accuracy in indicating where the stack "
"depth changes, it will often report many intentional stack depth changes (e."
"g., when an interpreted computation stretches across several lines).  You "
"can suppress the checking of some lines by putting backslashes at the end of "
"these lines (not followed by white space), and using"
msgstr ""

#. type: example
#: ../doc/gforth.texi:28621
#, no-wrap
msgid "gforth depth-changes.fs -e \"' most-lines is depth-changes-filter\" my-file.fs\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28626
#, no-wrap
msgid "Standard conformance of Gforth"
msgstr "Standard conformance of Gforth"

#. type: table
#: ../doc/gforth.texi:28629
msgid "To the best of our knowledge, Gforth is a"
msgstr "(標準適合度)私達の知る限り、 Gforth は…"

#. type: table
#: ../doc/gforth.texi:28631
msgid "ANS Forth System and a Forth-2012 System"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28632
#, no-wrap
msgid "providing the Core Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28633
#, no-wrap
msgid "providing the Block word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28634
#, no-wrap
msgid "providing the Block Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28635
#, no-wrap
msgid "providing the Double-Number word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28636
#, no-wrap
msgid "providing the Double-Number Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28637
#, no-wrap
msgid "providing the Exception word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28638
#, no-wrap
msgid "providing the Exception Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28639
#, no-wrap
msgid "providing the Facility word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28640
#, no-wrap
msgid "providing the Facility Extensions word set, except @code{EMIT?}"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28641
#, no-wrap
msgid "providing the File Access word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28642
#, no-wrap
msgid "providing the File Access Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28643
#, no-wrap
msgid "providing the Floating-Point word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28644
#, no-wrap
msgid "providing the Floating-Point Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28645
#, no-wrap
msgid "providing the Locals word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28646
#, no-wrap
msgid "providing the Locals Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28647
#, no-wrap
msgid "providing the Memory-Allocation word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28648
#, no-wrap
msgid "providing the Memory-Allocation Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28649
#, no-wrap
msgid "providing the Programming-Tools word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28650
#, no-wrap
msgid "providing the Programming-Tools Extensions word set, except @code{EDITOR} and @code{FORGET}"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28651
#, no-wrap
msgid "providing the Search-Order word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28652
#, no-wrap
msgid "providing the Search-Order Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28653
#, no-wrap
msgid "providing the String word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28654
#, no-wrap
msgid "providing the String Extensions word set"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28655
#, no-wrap
msgid "providing the Extended-Character wordset"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28659
msgid "Gforth has the following environmental restrictions:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28660
#, no-wrap
msgid "environmental restrictions"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:28665
msgid ""
"While processing the OS command line, if an exception is not caught, Gforth "
"exits with a non-zero exit code instead of performing QUIT."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:28670
msgid ""
"When an @code{throw} is performed after a @code{query}, Gforth does not "
"always restore the input source specification in effect at the corresponding "
"catch."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28674
#, no-wrap
msgid "system documentation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28680
msgid ""
"In addition, Standard Forth systems are required to document certain "
"implementation choices. This chapter tries to meet these requirements for "
"the Forth-94 standard.  For the Forth-2012 standard, we decided to produce "
"the additional documentation only if there is demand.  So if you are really "
"missing this documentation, please let us know."
msgstr ""

#. type: table
#: ../doc/gforth.texi:28686
msgid ""
"In many cases, the following documentation gives a way to ask the system for "
"the information instead of providing the information directly, in "
"particular, if the information depends on the processor, the operating "
"system or the installation options chosen, or if they are likely to change "
"during the maintenance of Gforth."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28709
#, no-wrap
msgid "core words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28710
#, no-wrap
msgid "system documentation, core words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28722
#, no-wrap
msgid "core words, implementation-defined options"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28723
#, no-wrap
msgid "implementation-defined options, core words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28727
#, no-wrap
msgid "(Cell) aligned addresses:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28728
#, no-wrap
msgid "cell-aligned addresses"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28729
#, no-wrap
msgid "aligned addresses"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28733
msgid ""
"processor-dependent. Gforth's alignment words perform natural alignment (e."
"g., an address aligned for a datum of size 8 is divisible by 8). Unaligned "
"accesses usually result in a @code{-23 THROW}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28734
#, no-wrap
msgid "@code{EMIT} and non-graphic characters:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28735
#, no-wrap
msgid "@code{EMIT} and non-graphic characters"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28736
#, no-wrap
msgid "non-graphic characters and @code{EMIT}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28739
msgid ""
"The character is output using the C library function (actually, macro)  "
"@code{putc}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28740
#, no-wrap
msgid "character editing of @code{ACCEPT} and @code{EXPECT}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28741
#, no-wrap
msgid "character editing of @code{ACCEPT} and @code{EXPECT}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28742
#, no-wrap
msgid "editing in @code{ACCEPT} and @code{EXPECT}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28743
#, no-wrap
msgid "@code{ACCEPT}, editing"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28744
#, no-wrap
msgid "@code{EXPECT}, editing"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28750
msgid ""
"This is modeled on the GNU readline library (@pxref{Readline Interaction, , "
"Command Line Editing, readline, The GNU Readline Library}) with Emacs-like "
"key bindings. @kbd{Tab} deviates a little by producing a full word "
"completion every time you type it (instead of producing the common prefix of "
"all completions). @xref{Command-line editing}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28751
#, no-wrap
msgid "character set:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28752
#, no-wrap
msgid "character set"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28755
msgid ""
"The character set of your computer and display device. Gforth is 8-bit-clean "
"(but some other component in your system may make trouble)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28756
#, no-wrap
msgid "Character-aligned address requirements:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28757
#, no-wrap
msgid "character-aligned address requirements"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28761
msgid ""
"installation-dependent. Currently a character is represented by a C "
"@code{unsigned char}; in the future we might switch to @code{wchar_t} "
"(Comments on that requested)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28762
#, no-wrap
msgid "character-set extensions and matching of names:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28763
#, no-wrap
msgid "character-set extensions and matching of names"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28764
#, no-wrap
msgid "case-sensitivity for name lookup"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28765
#, no-wrap
msgid "name lookup, case-sensitivity"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28766
#, no-wrap
msgid "locale and case-sensitivity"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28780
msgid ""
"Any character except the ASCII NUL character can be used in a name. Matching "
"is case-insensitive (except in @code{TABLE}s). The matching is performed "
"using the C library function @code{strncasecmp}, whose function is probably "
"influenced by the locale. E.g., the @code{C} locale does not know about "
"accents and umlauts, so they are matched case-sensitively in that locale. "
"For portability reasons it is best to write programs such that they work in "
"the @code{C} locale. Then one can use libraries written by a Polish "
"programmer (who might use words containing ISO Latin-2 encoded characters) "
"and by a French programmer (ISO Latin-1) in the same program (of course, "
"@code{WORDS} will produce funny results for some of the words (which ones, "
"depends on the font you are using)). Also, the locale you prefer may not be "
"available in other operating systems. Hopefully, Unicode will solve these "
"problems one day."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28781
#, no-wrap
msgid "conditions under which control characters match a space delimiter:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28782
#, no-wrap
msgid "space delimiters"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28783
#, no-wrap
msgid "control characters as delimiters"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28790
msgid ""
"If @code{word} is called with the space character as a delimiter, all white-"
"space characters (as identified by the C macro @code{isspace()})  are "
"delimiters. @code{Parse}, on the other hand, treats space like other "
"delimiters.  @code{Parse-name}, which is used by the outer interpreter (aka "
"text interpreter) by default, treats all white-space characters as "
"delimiters."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28791
#, no-wrap
msgid "format of the control-flow stack:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28792
#, no-wrap
msgid "control-flow stack, format"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28800
msgid ""
"The data stack is used as control-flow stack. The size of a control-flow "
"stack item in cells is given by the constant @code{cs-item-size}. At the "
"time of this writing, an item consists of a (pointer to a) locals list "
"(third), an address in the code (second), and a tag for identifying the item "
"(TOS). The following tags are used: @code{defstart}, @code{live-orig}, "
"@code{dead-orig}, @code{dest}, @code{do-dest}, @code{scopestart}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28801
#, no-wrap
msgid "conversion of digits > 35"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28802
#, no-wrap
msgid "digits > 35"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28805
msgid ""
"The characters @code{[\\]^_'} are the digits with the decimal value "
"36@minus{}41. There is no way to input many of the larger digits."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28806
#, no-wrap
msgid "display after input terminates in @code{ACCEPT} and @code{EXPECT}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28807
#, no-wrap
msgid "@code{EXPECT}, display after end of input"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28808
#, no-wrap
msgid "@code{ACCEPT}, display after end of input"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28811
msgid ""
"The cursor is moved to the end of the entered string. If the input is "
"terminated using the @kbd{Return} key, a space is typed."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28812
#, no-wrap
msgid "exception abort sequence of @code{ABORT\"}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28813
#, no-wrap
msgid "exception abort sequence of @code{ABORT\"}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28814
#, no-wrap
msgid "@code{ABORT\"}, exception abort sequence"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28817
msgid ""
"The error string is stored into the variable @code{\"error} and a @code{-2 "
"throw} is performed."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28818
#, no-wrap
msgid "input line terminator:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28819
#, no-wrap
msgid "input line terminator"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28820
#, no-wrap
msgid "line terminator on input"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28821
#, no-wrap
msgid "newline character on input"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28825
msgid ""
"For interactive input, @kbd{C-m} (CR) and @kbd{C-j} (LF) terminate lines. "
"One of these characters is typically produced when you type the @kbd{Enter} "
"or @kbd{Return} key."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28826
#, no-wrap
msgid "maximum size of a counted string:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28827
#, no-wrap
msgid "maximum size of a counted string"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28828
#, no-wrap
msgid "counted string, maximum size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28831
msgid ""
"@code{s\" /counted-string\" environment? drop .}. Currently 255 characters "
"on all platforms, but this may change."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28832
#, no-wrap
msgid "maximum size of a parsed string:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28833
#, no-wrap
msgid "maximum size of a parsed string"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28834
#, no-wrap
msgid "parsed string, maximum size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28836
msgid "Given by the constant @code{/line}. Currently 255 characters."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28837
#, no-wrap
msgid "maximum size of a definition name, in characters:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28838
#, no-wrap
msgid "maximum size of a definition name, in characters"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28839
#, no-wrap
msgid "name, maximum length"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28841 ../doc/gforth.texi:28846
msgid "MAXU/8"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28842
#, no-wrap
msgid "maximum string length for @code{ENVIRONMENT?}, in characters:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28843
#, no-wrap
msgid "maximum string length for @code{ENVIRONMENT?}, in characters"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28844
#, no-wrap
msgid "@code{ENVIRONMENT?} string length, maximum"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28847
#, no-wrap
msgid "method of selecting the user input device:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28848
#, no-wrap
msgid "user input device, method of selecting"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28852
msgid ""
"The user input device is the standard input. There is currently no way to "
"change it from within Gforth. However, the input can typically be redirected "
"in the command line that starts Gforth."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28853
#, no-wrap
msgid "method of selecting the user output device:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28854
#, no-wrap
msgid "user output device, method of selecting"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28859
msgid ""
"@code{EMIT} and @code{TYPE} output to the file-id stored in the value "
"@code{outfile-id} (@code{stdout} by default). Gforth uses unbuffered output "
"when the user output device is a terminal, otherwise the output is buffered."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28860
#, no-wrap
msgid "methods of dictionary compilation:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28862
msgid "What are we expected to document here?"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28863
#, no-wrap
msgid "number of bits in one address unit:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28864
#, no-wrap
msgid "number of bits in one address unit"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28865
#, no-wrap
msgid "address unit, size in bits"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28868
msgid ""
"@code{s\" address-units-bits\" environment? drop .}. 8 in all current "
"platforms."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28869
#, no-wrap
msgid "number representation and arithmetic:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28870
#, no-wrap
msgid "number representation and arithmetic"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28872
msgid "Processor-dependent. Binary two's complement on all current platforms."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28873
#, no-wrap
msgid "ranges for integer types:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28874
#, no-wrap
msgid "ranges for integer types"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28875
#, no-wrap
msgid "integer types, ranges"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28881
msgid ""
"Installation-dependent. Make environmental queries for @code{MAX-N}, "
"@code{MAX-U}, @code{MAX-D} and @code{MAX-UD}. The lower bounds for unsigned "
"(and positive) types is 0. The lower bound for signed types on two's "
"complement and one's complement machines machines can be computed by adding "
"1 to the upper bound."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28882
#, no-wrap
msgid "read-only data space regions:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28883
#, no-wrap
msgid "read-only data space regions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28884
#, no-wrap
msgid "data-space, read-only regions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28886
msgid "The whole Forth data space is writable."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28887
#, no-wrap
msgid "size of buffer at @code{WORD}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28888
#, no-wrap
msgid "size of buffer at @code{WORD}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28889
#, no-wrap
msgid "@code{WORD} buffer size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28895
msgid ""
"@code{PAD HERE - .}. 104 characters on 32-bit machines. The buffer is shared "
"with the pictured numeric output string. If overwriting @code{PAD} is "
"acceptable, it is as large as the remaining dictionary space, although only "
"as much can be sensibly used as fits in a counted string."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28896
#, no-wrap
msgid "size of one cell in address units:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28897
#, no-wrap
msgid "cell size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28899
msgid "@code{1 cells .}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28900
#, no-wrap
msgid "size of one character in address units:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28901
#, no-wrap
msgid "char size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28903
msgid "@code{1 chars .}. 1 on all current platforms."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28904
#, no-wrap
msgid "size of the keyboard terminal buffer:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28905
#, no-wrap
msgid "size of the keyboard terminal buffer"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28906
#, no-wrap
msgid "terminal buffer, size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28912
msgid ""
"Varies. You can determine the size at a specific time using @code{lp@@ tib "
"- .}. It is shared with the locals stack and TIBs of files that include the "
"current file. You can change the amount of space for TIBs and locals stack "
"at Gforth startup with the command line option @code{-l}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28913
#, no-wrap
msgid "size of the pictured numeric output buffer:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28914
#, no-wrap
msgid "size of the pictured numeric output buffer"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28915
#, no-wrap
msgid "pictured numeric output buffer, size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28918
msgid ""
"@code{PAD HERE - .}. 104 characters on 32-bit machines. The buffer is shared "
"with @code{WORD}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28919
#, no-wrap
msgid "size of the scratch area returned by @code{PAD}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28920
#, no-wrap
msgid "size of the scratch area returned by @code{PAD}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28921
#, no-wrap
msgid "@code{PAD} size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28923
msgid "The remainder of dictionary space. @code{unused pad here - - .}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28924
#, no-wrap
msgid "system case-sensitivity characteristics:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28925
#, no-wrap
msgid "case-sensitivity characteristics"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28931
msgid ""
"Dictionary searches are case-insensitive (except in @code{TABLE}s). However, "
"as explained above under @i{character-set extensions}, the matching for non-"
"ASCII characters is determined by the locale you are using. In the default "
"@code{C} locale all non-ASCII characters are matched case-sensitively."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28932
#, no-wrap
msgid "system prompt:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28933
#, no-wrap
msgid "system prompt"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28934
#, no-wrap
msgid "prompt"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28936
msgid "@code{ ok} in interpret state, @code{ compiled} in compile state."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28937
#, no-wrap
msgid "division rounding:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28938
#, no-wrap
msgid "division rounding"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28944
msgid ""
"The ordinary division words @code{/ mod /mod */ */mod} perform floored "
"division (with the default installation of Gforth).  You can check this with "
"@code{s\" floored\" environment? drop .}.  If you write programs that need a "
"specific division rounding, best use @code{fm/mod} or @code{sm/rem} for "
"portability."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28945
#, no-wrap
msgid "values of @code{STATE} when true:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28946
#, no-wrap
msgid "@code{STATE} values"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28948
msgid "-1."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28949
#, no-wrap
msgid "values returned after arithmetic overflow:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28958
msgid ""
"On two's complement machines, arithmetic is performed modulo 2**bits-per-"
"cell for single arithmetic and 4**bits-per-cell for double arithmetic (with "
"appropriate mapping for signed types). Division by zero typically results in "
"a @code{-55 throw} (Floating-point unidentified fault) or @code{-10 throw} "
"(divide by zero).  Integer division overflow can result in these throws, or "
"in @code{-11 throw}; in @code{gforth-fast} division overflow and divide by "
"zero may also result in returning bogus results without producing an "
"exception."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28959
#, no-wrap
msgid "whether the current definition can be found after @t{DOES>}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28960
#, no-wrap
msgid "@t{DOES>}, visibility of current definition"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28962
msgid "No."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:28967 ../doc/gforth.texi:29294 ../doc/gforth.texi:29360
#: ../doc/gforth.texi:29456 ../doc/gforth.texi:29565 ../doc/gforth.texi:29664
#: ../doc/gforth.texi:29806 ../doc/gforth.texi:29905 ../doc/gforth.texi:29988
#, no-wrap
msgid "Ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28969
#, no-wrap
msgid "core words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28970
#, no-wrap
msgid "ambiguous conditions, core words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28974
#, no-wrap
msgid "a name is neither a word nor a number:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28975
#, no-wrap
msgid "name not found"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28976
#, no-wrap
msgid "undefined word"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28978
msgid "@code{-13 throw} (Undefined word)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28979
#, no-wrap
msgid "a definition name exceeds the maximum length allowed:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28980
#, no-wrap
msgid "word name too long"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28982
msgid "@code{-19 throw} (Word name too long)"
msgstr ""

#. type: item
#: ../doc/gforth.texi:28983
#, no-wrap
msgid "addressing a region not inside the various data spaces of the forth system:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28984
#, no-wrap
msgid "Invalid memory address"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28989
msgid ""
"The stacks, code space and header space are accessible. Machine code space "
"is typically readable. Accessing other addresses gives results dependent on "
"the operating system. On decent systems: @code{-9 throw} (Invalid memory "
"address)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28990
#, no-wrap
msgid "argument type incompatible with parameter:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28991
#, no-wrap
msgid "argument type mismatch"
msgstr ""

#. type: table
#: ../doc/gforth.texi:28995
msgid ""
"This is usually not caught. Some words perform checks, e.g., the control "
"flow words, and issue a @code{ABORT\"} or @code{-12 THROW} (Argument type "
"mismatch)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:28996
#, no-wrap
msgid "attempting to obtain the execution token of a word with undefined execution semantics:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28997
#, no-wrap
msgid "compile-only warning, for @code{'} etc."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:28998
#, no-wrap
msgid "execution token of words with undefined execution semantics"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29008
msgid ""
"The execution token represents the interpretation semantics of the word.  "
"Gforth defines interpretation semantics for all words; for words where the "
"standard does not define interpretation semantics, but defines the execution "
"semantics (except @code{LEAVE}), the interpretation semantics are to perform "
"the execution semantics.  For words where the standard defines no "
"interprtation semantics, but defined compilation semantics (plus "
"@code{LEAVE}), the interpretation semantics are to perform the compilation "
"semantics.  Some words are marked as compile-only, and @code{'} gives a "
"warning for these words."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29009 ../doc/gforth.texi:29713
#, no-wrap
msgid "dividing by zero:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29010
#, no-wrap
msgid "dividing by zero"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29011
#, no-wrap
msgid "floating point unidentified fault, integer division"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29015
msgid ""
"On some platforms, this produces a @code{-10 throw} (Division by zero); on "
"other systems, this typically results in a @code{-55 throw} (Floating-point "
"unidentified fault)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29016
#, no-wrap
msgid "insufficient data stack or return stack space:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29017
#, no-wrap
msgid "insufficient data stack or return stack space"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29018
#, no-wrap
msgid "stack overflow"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29019
#, no-wrap
msgid "address alignment exception, stack overflow"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29020
#, no-wrap
msgid "Invalid memory address, stack overflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29032
msgid ""
"Depending on the operating system, the installation, and the invocation of "
"Gforth, this is either checked by the memory management hardware, or it is "
"not checked. If it is checked, you typically get a @code{-3 throw} (Stack "
"overflow), @code{-5 throw} (Return stack overflow), or @code{-9 throw} "
"(Invalid memory address) (depending on the platform and how you achieved the "
"overflow) as soon as the overflow happens. If it is not checked, overflows "
"typically result in mysterious illegal memory accesses, producing @code{-9 "
"throw} (Invalid memory address) or @code{-23 throw} (Address alignment "
"exception); they might also destroy the internal data structure of "
"@code{ALLOCATE} and friends, resulting in various errors in these words."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29033
#, no-wrap
msgid "insufficient space for loop control parameters:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29034
#, no-wrap
msgid "insufficient space for loop control parameters"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29036
msgid "Like other return stack overflows."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29037
#, no-wrap
msgid "insufficient space in the dictionary:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29038
#, no-wrap
msgid "insufficient space in the dictionary"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29039
#, no-wrap
msgid "dictionary overflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29045
msgid ""
"If you try to allot (either directly with @code{allot}, or indirectly with "
"@code{,}, @code{create} etc.) more memory than available in the dictionary, "
"you get a @code{-8 throw} (Dictionary overflow). If you try to access memory "
"beyond the end of the dictionary, the results are similar to stack overflows."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29046
#, no-wrap
msgid "interpreting a word with undefined interpretation semantics:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29047
#, no-wrap
msgid "interpreting a word with undefined interpretation semantics"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29048
#, no-wrap
msgid "Interpreting a compile-only word"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29056
msgid ""
"Gforth defines interpretation semantics for all words; for words where the "
"standard defines execution semantics (except @code{LEAVE}), the "
"interpretation semantics are to perform the execution semantics.  For words "
"where the standard defines no interprtation semantics, but defined "
"compilation semantics (plus @code{LEAVE}), the interpretation semantics are "
"to perform the compilation semantics.  Some words are marked as compile-"
"only, and text-interpreting them gives a warning."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29057
#, no-wrap
msgid "modifying the contents of the input buffer or a string literal:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29058
#, no-wrap
msgid "modifying the contents of the input buffer or a string literal"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29060
msgid "These are located in writable memory and can be modified."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29061
#, no-wrap
msgid "overflow of the pictured numeric output string:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29062
#, no-wrap
msgid "overflow of the pictured numeric output string"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29063
#, no-wrap
msgid "pictured numeric output string, overflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29065
msgid "@code{-17 throw} (Pictured numeric ouput string overflow)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29066
#, no-wrap
msgid "parsed string overflow:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29067
#, no-wrap
msgid "parsed string overflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29069
msgid "@code{PARSE} cannot overflow. @code{WORD} does not check for overflow."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29070
#, no-wrap
msgid "producing a result out of range:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29071
#, no-wrap
msgid "result out of range"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29081
msgid ""
"On two's complement machines, arithmetic is performed modulo 2**bits-per-"
"cell for single arithmetic and 4**bits-per-cell for double arithmetic (with "
"appropriate mapping for signed types). Division by zero typically results in "
"a @code{-10 throw} (divide by zero) or @code{-55 throw} (floating point "
"unidentified fault). Overflow on division may result in these errors or in "
"@code{-11 throw} (result out of range).  @code{Gforth-fast} may silently "
"produce bogus results on division overflow or division by zero.  "
"@code{Convert} and @code{>number} currently overflow silently."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29082
#, no-wrap
msgid "reading from an empty data or return stack:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29083
#, no-wrap
msgid "stack empty"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29084
#, no-wrap
msgid "stack underflow"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29085
#, no-wrap
msgid "return stack underflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29102
msgid ""
"The data stack is checked by the outer (aka text) interpreter after every "
"word executed. If it has underflowed, a @code{-4 throw} (Stack underflow) is "
"performed. Apart from that, stacks may be checked or not, depending on "
"operating system, installation, and invocation. If they are caught by a "
"check, they typically result in @code{-4 throw} (Stack underflow), @code{-6 "
"throw} (Return stack underflow) or @code{-9 throw} (Invalid memory address), "
"depending on the platform and which stack underflows and by how much. Note "
"that even if the system uses checking (through the MMU), your program may "
"have to underflow by a significant number of stack items to trigger the "
"reaction (the reason for this is that the MMU, and therefore the checking, "
"works with a page-size granularity).  If there is no checking, the symptoms "
"resulting from an underflow are similar to those from an overflow.  "
"Unbalanced return stack errors can result in a variety of symptoms, "
"including @code{-9 throw} (Invalid memory address) and Illegal Instruction "
"(typically @code{-260 throw})."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29103
#, no-wrap
msgid "unexpected end of the input buffer, resulting in an attempt to use a zero-length string as a name:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29104
#, no-wrap
msgid "unexpected end of the input buffer"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29105
#, no-wrap
msgid "zero-length string as a name"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29106
#, no-wrap
msgid "Attempt to use zero-length string as a name"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29111
msgid ""
"@code{Create} and its descendants perform a @code{-16 throw} (Attempt to use "
"zero-length string as a name). Words like @code{'} probably will not find "
"what they search. Note that it is possible to create zero-length names with "
"@code{nextname} (should it not?)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29112
#, no-wrap
msgid "@code{>IN} greater than input buffer:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29113
#, no-wrap
msgid "@code{>IN} greater than input buffer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29115
msgid "The next invocation of a parsing word returns a string with length 0."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29116
#, no-wrap
msgid "@code{RECURSE} appears after @code{DOES>}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29117
#, no-wrap
msgid "@code{RECURSE} appears after @code{DOES>}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29119
msgid "Compiles a recursive call to the code after @code{DOES>}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29120
#, no-wrap
msgid "argument input source different than current input source for @code{RESTORE-INPUT}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29121
#, no-wrap
msgid "argument input source different than current input source for @code{RESTORE-INPUT}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29122
#, no-wrap
msgid "argument type mismatch, @code{RESTORE-INPUT}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29123
#, no-wrap
msgid "@code{RESTORE-INPUT}, Argument type mismatch"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29129
msgid ""
"@code{-12 THROW}. Note that, once an input file is closed (e.g., because the "
"end of the file was reached), its source-id may be reused. Therefore, "
"restoring an input source specification referencing a closed file may lead "
"to unpredictable results instead of a @code{-12 THROW}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:29132
msgid ""
"In the future, Gforth may be able to restore input source specifications "
"from other than the current input source."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29133
#, no-wrap
msgid "data space containing definitions gets de-allocated:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29134
#, no-wrap
msgid "data space containing definitions gets de-allocated"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29137
msgid ""
"Deallocation with @code{allot} is not checked. This typically results in "
"memory access faults or execution of illegal instructions."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29138
#, no-wrap
msgid "data space read/write with incorrect alignment:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29139
#, no-wrap
msgid "data space read/write with incorrect alignment"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29140
#, no-wrap
msgid "alignment faults"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29141
#, no-wrap
msgid "address alignment exception"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29147
msgid ""
"Processor-dependent. Typically results in a @code{-23 throw} (Address "
"alignment exception). Under Linux-Intel on a 486 or later processor with "
"alignment turned on, incorrect alignment results in a @code{-9 throw} "
"(Invalid memory address). There are reportedly some processors with "
"alignment restrictions that do not report violations."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29148
#, no-wrap
msgid "data space pointer not properly aligned, @code{,}, @code{C,}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29149
#, no-wrap
msgid "data space pointer not properly aligned, @code{,}, @code{C,}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29151
msgid "Like other alignment errors."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29152
#, no-wrap
msgid "less than u+2 stack items (@code{PICK} and @code{ROLL}):"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29154
msgid "Like other stack underflows."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29155
#, no-wrap
msgid "loop control parameters not available:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29156
#, no-wrap
msgid "loop control parameters not available"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29159
msgid ""
"Not checked. The counted loop words simply assume that the top of return "
"stack items are loop control parameters and behave accordingly."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29160
#, no-wrap
msgid "most recent definition does not have a name (@code{IMMEDIATE}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29161
#, no-wrap
msgid "most recent definition does not have a name (@code{IMMEDIATE})"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29162
#, no-wrap
msgid "last word was headerless"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29164
msgid "@code{abort\" last word was headerless\"}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29165
#, no-wrap
msgid "name not defined by @code{VALUE} used by @code{TO}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29166
#, no-wrap
msgid "name not defined by @code{VALUE} used by @code{TO}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29167
#, no-wrap
msgid "@code{TO} on non-@code{VALUE}s"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29168 ../doc/gforth.texi:29822
#, no-wrap
msgid "Invalid name argument, @code{TO}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29171
msgid ""
"@code{-32 throw} (Invalid name argument) (unless name is a local or was "
"defined by @code{CONSTANT}; in the latter case it just changes the constant)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29172
#, no-wrap
msgid "name not found (@code{'}, @code{POSTPONE}, @code{[']}, @code{[COMPILE]}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29173
#, no-wrap
msgid "name not found (@code{'}, @code{POSTPONE}, @code{[']}, @code{[COMPILE]})"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29174
#, no-wrap
msgid "undefined word, @code{'}, @code{POSTPONE}, @code{[']}, @code{[COMPILE]}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29176
msgid "@code{-13 throw} (Undefined word)"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29177
#, no-wrap
msgid "parameters are not of the same type (@code{DO}, @code{?DO}, @code{WITHIN}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29178
#, no-wrap
msgid "parameters are not of the same type (@code{DO}, @code{?DO}, @code{WITHIN})"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29181
msgid ""
"Gforth behaves as if they were of the same type. I.e., you can predict the "
"behaviour by interpreting all parameters as, e.g., signed."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29182
#, no-wrap
msgid "@code{POSTPONE} or @code{[COMPILE]} applied to @code{TO}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29183
#, no-wrap
msgid "@code{POSTPONE} or @code{[COMPILE]} applied to @code{TO}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29186
msgid ""
"Assume @code{: X POSTPONE TO ; IMMEDIATE}. @code{X} performs the compilation "
"semantics of @code{TO}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29187
#, no-wrap
msgid "String longer than a counted string returned by @code{WORD}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29188
#, no-wrap
msgid "string longer than a counted string returned by @code{WORD}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29189
#, no-wrap
msgid "@code{WORD}, string overflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29192
msgid ""
"Not checked. The string will be ok, but the count will, of course, contain "
"only the least significant bits of the length."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29193
#, no-wrap
msgid "u greater than or equal to the number of bits in a cell (@code{LSHIFT}, @code{RSHIFT}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29194
#, no-wrap
msgid "@code{LSHIFT}, large shift counts"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29195
#, no-wrap
msgid "@code{RSHIFT}, large shift counts"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29198
msgid ""
"Processor-dependent. Typical behaviours are returning 0 and using only the "
"low bits of the shift count."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29199
#, no-wrap
msgid "word not defined via @code{CREATE}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29200
#, no-wrap
msgid "@code{>BODY} of non-@code{CREATE}d words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29202
msgid "@code{>BODY} produces the PFA of the word no matter how it was defined."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29203
#, no-wrap
msgid "@code{DOES>} of non-@code{CREATE}d words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29207
msgid ""
"@code{DOES>} changes the execution semantics of the last defined word no "
"matter how it was defined. E.g., @code{CONSTANT DOES>} is equivalent to "
"@code{CREATE , DOES>}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29208
#, no-wrap
msgid "words improperly used outside @code{<#} and @code{#>}:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29210
msgid "Not checked. As usual, you can expect memory faults."
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:29216 ../doc/gforth.texi:29331
#, no-wrap
msgid "Other system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29218
#, no-wrap
msgid "other system documentation, core words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29219
#, no-wrap
msgid "core words, other system documentation"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29222
#, no-wrap
msgid "nonstandard words using @code{PAD}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29223
#, no-wrap
msgid "@code{PAD} use by nonstandard words"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29225
msgid "None."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29226
#, no-wrap
msgid "operator's terminal facilities available:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29227
#, no-wrap
msgid "operator's terminal facilities available"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29231
msgid ""
"After processing the OS's command line, Gforth goes into interactive mode, "
"and you can give commands to Gforth interactively. The actual facilities "
"available depend on how you invoke Gforth."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29232
#, no-wrap
msgid "program data space available:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29233
#, no-wrap
msgid "program data space available"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29234
#, no-wrap
msgid "data space available"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29238
msgid ""
"@code{UNUSED .} gives the remaining dictionary space. The total dictionary "
"space can be specified with the @code{-m} switch (@pxref{Invoking Gforth}) "
"when Gforth starts up."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29239
#, no-wrap
msgid "return stack space available:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29240
#, no-wrap
msgid "return stack space available"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29244
msgid ""
"You can compute the total return stack space in cells with @code{s\" RETURN-"
"STACK-CELLS\" environment? drop .}. You can specify it at startup time with "
"the @code{-r} switch (@pxref{Invoking Gforth})."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29245
#, no-wrap
msgid "stack space available:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29246
#, no-wrap
msgid "stack space available"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29250
msgid ""
"You can compute the total data stack space in cells with @code{s\" STACK-"
"CELLS\" environment? drop .}. You can specify it at startup time with the "
"@code{-d} switch (@pxref{Invoking Gforth})."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29251
#, no-wrap
msgid "system dictionary space required, in address units:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29252
#, no-wrap
msgid "system dictionary space required, in address units"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29255
msgid ""
"Type @code{here forthstart - .} after startup. At the time of this writing, "
"this gives 80080 (bytes) on a 32-bit system."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29262
#, no-wrap
msgid "system documentation, block words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29263
#, no-wrap
msgid "block words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29276
#, no-wrap
msgid "implementation-defined options, block words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29277
#, no-wrap
msgid "block words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29280
#, no-wrap
msgid "the format for display by @code{LIST}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29281
#, no-wrap
msgid "@code{LIST} display format"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29284
msgid ""
"First the screen number is displayed, then 16 lines of 64 characters, each "
"line preceded by the line number."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29285
#, no-wrap
msgid "the length of a line affected by @code{\\}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29286
#, no-wrap
msgid "length of a line affected by @code{\\}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29287
#, no-wrap
msgid "@code{\\}, line length in blocks"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29289
msgid "64 characters."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29296
#, no-wrap
msgid "block words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29297
#, no-wrap
msgid "ambiguous conditions, block words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29300
#, no-wrap
msgid "correct block read was not possible:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29301
#, no-wrap
msgid "block read not possible"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29305
msgid ""
"Typically results in a @code{throw} of some OS-derived value (between -512 "
"and -2048). If the blocks file was just not long enough, blanks are supplied "
"for the missing portion."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29306
#, no-wrap
msgid "I/O exception in block transfer:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29307
#, no-wrap
msgid "I/O exception in block transfer"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29308
#, no-wrap
msgid "block transfer, I/O exception"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29311
msgid ""
"Typically results in a @code{throw} of some OS-derived value (between -512 "
"and -2048)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29312
#, no-wrap
msgid "invalid block number:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29313
#, no-wrap
msgid "invalid block number"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29314
#, no-wrap
msgid "block number invalid"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29316
msgid "@code{-35 throw} (Invalid block number)"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29317
#, no-wrap
msgid "a program directly alters the contents of @code{BLK}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29318
#, no-wrap
msgid "@code{BLK}, altering @code{BLK}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29322
msgid ""
"The input stream is switched to that other block, at the same position. If "
"the storing to @code{BLK} happens when interpreting non-block input, the "
"system will get quite confused when the block ends."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29323
#, no-wrap
msgid "no current block buffer for @code{UPDATE}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29324
#, no-wrap
msgid "@code{UPDATE}, no current block buffer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29326
msgid "@code{UPDATE} has no effect."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29333
#, no-wrap
msgid "other system documentation, block words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29334
#, no-wrap
msgid "block words, other system documentation"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29337
#, no-wrap
msgid "any restrictions a multiprogramming system places on the use of buffer addresses:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29339
msgid "No restrictions (yet)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29340
#, no-wrap
msgid "the number of blocks available for source and data:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29342
msgid "depends on your disk space."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29350
#, no-wrap
msgid "system documentation, double words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29351
#, no-wrap
msgid "double words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29362
#, no-wrap
msgid "double words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29363
#, no-wrap
msgid "ambiguous conditions, double words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29366
#, no-wrap
msgid "@i{d} outside of range of @i{n} in @code{D>S}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29367
#, no-wrap
msgid "@code{D>S}, @i{d} out of range of @i{n}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29369
msgid "The least significant cell of @i{d} is produced."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29377
#, no-wrap
msgid "system documentation, exception words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29378
#, no-wrap
msgid "exception words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29389
#, no-wrap
msgid "implementation-defined options, exception words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29390
#, no-wrap
msgid "exception words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29393
#, no-wrap
msgid "@code{THROW}-codes used in the system:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29394
#, no-wrap
msgid "@code{THROW}-codes used in the system"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29402
msgid ""
"The codes -256@minus{}-511 are used for reporting signals. The mapping from "
"OS signal numbers to throw codes is -256@minus{}@i{signal}. The codes "
"-512@minus{}-2047 are used for OS errors (for file and memory allocation "
"operations). The mapping from OS error numbers to throw codes is -512@minus{}"
"@code{errno}. One side effect of this mapping is that undefined OS errors "
"produce a message with a strange number; e.g., @code{-1000 THROW} results in "
"@code{Unknown error 488} on my system."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29408
#, no-wrap
msgid "system documentation, facility words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29409
#, no-wrap
msgid "facility words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29421
#, no-wrap
msgid "implementation-defined options, facility words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29422
#, no-wrap
msgid "facility words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29425
#, no-wrap
msgid "encoding of keyboard events (@code{EKEY}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29426
#, no-wrap
msgid "keyboard events, encoding in @code{EKEY}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29427
#, no-wrap
msgid "@code{EKEY}, encoding of keyboard events"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29434
msgid ""
"Keys corresponding to ASCII characters are encoded as ASCII characters.  "
"Other keys are encoded with the constants @code{k-left}, @code{k-right}, "
"@code{k-up}, @code{k-down}, @code{k-home}, @code{k-end}, @code{k1}, "
"@code{k2}, @code{k3}, @code{k4}, @code{k5}, @code{k6}, @code{k7}, @code{k8}, "
"@code{k9}, @code{k10}, @code{k11}, @code{k12}, @code{k-winch}, @code{k-eof}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29436
#, no-wrap
msgid "duration of a system clock tick:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29437
#, no-wrap
msgid "duration of a system clock tick"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29438
#, no-wrap
msgid "clock tick duration"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29442
msgid ""
"System dependent. With respect to @code{MS}, the time is specified in "
"microseconds. How well the OS and the hardware implement this, is another "
"question."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29443
#, no-wrap
msgid "repeatability to be expected from the execution of @code{MS}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29444
#, no-wrap
msgid "repeatability to be expected from the execution of @code{MS}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29445
#, no-wrap
msgid "@code{MS}, repeatability to be expected"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29450
msgid ""
"System dependent. On Unix, a lot depends on load. If the system is lightly "
"loaded, and the delay is short enough that Gforth does not get swapped out, "
"the performance should be acceptable. Under MS-DOS and other single-tasking "
"systems, it should be good."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29458
#, no-wrap
msgid "facility words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29459
#, no-wrap
msgid "ambiguous conditions, facility words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29462
#, no-wrap
msgid "@code{AT-XY} can't be performed on user output device:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29463
#, no-wrap
msgid "@code{AT-XY} can't be performed on user output device"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29467
msgid ""
"Largely terminal dependent. No range checks are done on the arguments.  No "
"errors are reported. You may see some garbage appearing, you may see simply "
"nothing happen."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29475
#, no-wrap
msgid "system documentation, file words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29476
#, no-wrap
msgid "file words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29487
#, no-wrap
msgid "implementation-defined options, file words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29488
#, no-wrap
msgid "file words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29491
#, no-wrap
msgid "file access methods used:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29492
#, no-wrap
msgid "file access methods used"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29499
msgid ""
"@code{R/O}, @code{R/W} and @code{BIN} work as you would expect. @code{W/O} "
"translates into the C file opening mode @code{w} (or @code{wb}): The file is "
"cleared, if it exists, and created, if it does not (with both @code{open-"
"file} and @code{create-file}).  Under Unix @code{create-file} creates a file "
"with 666 permissions modified by your umask."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29500
#, no-wrap
msgid "file exceptions:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29501
#, no-wrap
msgid "file exceptions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29504
msgid ""
"The file words do not raise exceptions (except, perhaps, memory access "
"faults when you pass illegal addresses or file-ids)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29505
#, no-wrap
msgid "file line terminator:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29506
#, no-wrap
msgid "file line terminator"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29510
msgid ""
"System-dependent. Gforth uses C's newline character as line terminator. What "
"the actual character code(s) of this are is system-dependent."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29511
#, no-wrap
msgid "file name format:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29512
#, no-wrap
msgid "file name format"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29514
msgid "System dependent. Gforth just uses the file name format of your OS."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29515
#, no-wrap
msgid "information returned by @code{FILE-STATUS}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29516
#, no-wrap
msgid "@code{FILE-STATUS}, returned information"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29521
msgid ""
"@code{FILE-STATUS} returns the most powerful file access mode allowed for "
"the file: Either @code{R/O}, @code{W/O} or @code{R/W}. If the file cannot be "
"accessed, @code{R/O BIN} is returned. @code{BIN} is applicable along with "
"the returned mode."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29522
#, no-wrap
msgid "input file state after an exception when including source:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29523
#, no-wrap
msgid "exception when including source"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29525
msgid "All files that are left via the exception are closed."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29526
#, no-wrap
msgid "@i{ior} values and meaning:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29527 ../doc/gforth.texi:29849
#, no-wrap
msgid "@i{ior} values and meaning"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29528
#, no-wrap
msgid "@i{wior} values and meaning"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29533 ../doc/gforth.texi:29854
msgid ""
"The @i{ior}s returned by the file and memory allocation words are intended "
"as throw codes. They typically are in the range -512@minus{}-2047 of OS "
"errors.  The mapping from OS error numbers to @i{ior}s is -512@minus{}"
"@i{errno}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29534
#, no-wrap
msgid "maximum depth of file input nesting:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29535
#, no-wrap
msgid "maximum depth of file input nesting"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29536
#, no-wrap
msgid "file input nesting, maximum depth"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29539
msgid ""
"limited by the amount of return stack, locals/TIB stack, and the number of "
"open files available. This should not give you troubles."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29540
#, no-wrap
msgid "maximum size of input line:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29541
#, no-wrap
msgid "maximum size of input line"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29542
#, no-wrap
msgid "input line size, maximum"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29544
msgid "@code{/line}. Currently 255."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29545
#, no-wrap
msgid "methods of mapping block ranges to files:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29546
#, no-wrap
msgid "mapping block ranges to files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29547
#, no-wrap
msgid "files containing blocks"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29548
#, no-wrap
msgid "blocks in files"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29551
msgid ""
"By default, blocks are accessed in the file @file{blocks.fb} in the current "
"working directory. The file can be switched with @code{USE}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29552
#, no-wrap
msgid "number of string buffers provided by @code{S\"}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29553
#, no-wrap
msgid "@code{S\"}, number of string buffers"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29556
msgid ""
"As many as memory available; the strings are stored in memory blocks "
"allocated with ALLOCATE indefinitely."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29557
#, no-wrap
msgid "size of string buffer used by @code{S\"}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29558
#, no-wrap
msgid "@code{S\"}, size of string buffer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29560
msgid "@code{/line}. currently 255."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29567
#, no-wrap
msgid "file words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29568
#, no-wrap
msgid "ambiguous conditions, file words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29571
#, no-wrap
msgid "attempting to position a file outside its boundaries:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29572
#, no-wrap
msgid "@code{REPOSITION-FILE}, outside the file's boundaries"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29575
msgid ""
"@code{REPOSITION-FILE} is performed as usual: Afterwards, @code{FILE-"
"POSITION} returns the value given to @code{REPOSITION-FILE}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29576
#, no-wrap
msgid "attempting to read from file positions not yet written:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29577
#, no-wrap
msgid "reading from file positions not yet written"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29579
msgid "End-of-file, i.e., zero characters are read and no error is reported."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29580
#, no-wrap
msgid "@i{file-id} is invalid (@code{INCLUDE-FILE}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29581
#, no-wrap
msgid "@code{INCLUDE-FILE}, @i{file-id} is invalid"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29584
msgid ""
"An appropriate exception may be thrown, but a memory fault or other problem "
"is more probable."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29585
#, no-wrap
msgid "I/O exception reading or closing @i{file-id} (@code{INCLUDE-FILE}, @code{INCLUDED}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29586
#, no-wrap
msgid "@code{INCLUDE-FILE}, I/O exception reading or closing @i{file-id}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29587
#, no-wrap
msgid "@code{INCLUDED}, I/O exception reading or closing @i{file-id}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29590
msgid ""
"The @i{ior} produced by the operation, that discovered the problem, is "
"thrown."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29591
#, no-wrap
msgid "named file cannot be opened (@code{INCLUDED}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29592
#, no-wrap
msgid "@code{INCLUDED}, named file cannot be opened"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29594
msgid "The @i{ior} produced by @code{open-file} is thrown."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29595
#, no-wrap
msgid "requesting an unmapped block number:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29596
#, no-wrap
msgid "unmapped block numbers"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29600
msgid ""
"There are no unmapped legal block numbers. On some operating systems, "
"writing a block with a large number may overflow the file system and have an "
"error message as consequence."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29601
#, no-wrap
msgid "using @code{source-id} when @code{blk} is non-zero:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29602
#, no-wrap
msgid "@code{SOURCE-ID}, behaviour when @code{BLK} is non-zero"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29605
msgid ""
"@code{source-id} performs its function. Typically it will give the id of the "
"source which loaded the block. (Better ideas?)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29613
#, no-wrap
msgid "system documentation, floating-point words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29614
#, no-wrap
msgid "floating-point words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29626
#, no-wrap
msgid "implementation-defined options, floating-point words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29627
#, no-wrap
msgid "floating-point words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29630
#, no-wrap
msgid "format and range of floating point numbers:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29631
#, no-wrap
msgid "format and range of floating point numbers"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29632
#, no-wrap
msgid "floating point numbers, format and range"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29634
msgid "System-dependent; the @code{double} type of C."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29635
#, no-wrap
msgid "results of @code{REPRESENT} when @i{float} is out of range:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29636
#, no-wrap
msgid "@code{REPRESENT}, results when @i{float} is out of range"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29639
msgid ""
"System dependent; @code{REPRESENT} is implemented using the C library "
"function @code{ecvt()} and inherits its behaviour in this respect."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29640
#, no-wrap
msgid "rounding or truncation of floating-point numbers:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29641
#, no-wrap
msgid "rounding of floating-point numbers"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29642
#, no-wrap
msgid "truncation of floating-point numbers"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29643
#, no-wrap
msgid "floating-point numbers, rounding or truncation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29648
msgid ""
"System dependent; the rounding behaviour is inherited from the hosting C "
"compiler. IEEE-FP-based (i.e., most) systems by default round to nearest, "
"and break ties by rounding to even (i.e., such that the last bit of the "
"mantissa is 0)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29649
#, no-wrap
msgid "size of floating-point stack:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29650
#, no-wrap
msgid "floating-point stack size"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29654
msgid ""
"@code{s\" FLOATING-STACK\" environment? drop .} gives the total size of the "
"floating-point stack (in floats). You can specify this on startup with the "
"command-line option @code{-f} (@pxref{Invoking Gforth})."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29655
#, no-wrap
msgid "width of floating-point stack:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29656
#, no-wrap
msgid "floating-point stack width"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29658
msgid "@code{1 floats}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29666
#, no-wrap
msgid "floating-point words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29667
#, no-wrap
msgid "ambiguous conditions, floating-point words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29670
#, no-wrap
msgid "@code{df@@} or @code{df!} used with an address that is not double-float  aligned:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29671
#, no-wrap
msgid "@code{df@@} or @code{df!} used with an address that is not double-float  aligned"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29674 ../doc/gforth.texi:29680
msgid ""
"System-dependent. Typically results in a @code{-23 THROW} like other "
"alignment violations."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29675
#, no-wrap
msgid "@code{f@@} or @code{f!} used with an address that is not float  aligned:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29676
#, no-wrap
msgid "@code{f@@} used with an address that is not float aligned"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29677
#, no-wrap
msgid "@code{f!} used with an address that is not float aligned"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29681
#, no-wrap
msgid "floating-point result out of range:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29682
#, no-wrap
msgid "floating-point result out of range"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29688
msgid ""
"System-dependent. Can result in a @code{-43 throw} (floating point "
"overflow), @code{-54 throw} (floating point underflow), @code{-41 throw} "
"(floating point inexact result), @code{-55 THROW} (Floating-point "
"unidentified fault), or can produce a special value representing, e.g., "
"Infinity."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29689
#, no-wrap
msgid "@code{sf@@} or @code{sf!} used with an address that is not single-float  aligned:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29690
#, no-wrap
msgid "@code{sf@@} or @code{sf!} used with an address that is not single-float  aligned"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29693
msgid ""
"System-dependent. Typically results in an alignment fault like other "
"alignment violations."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29694
#, no-wrap
msgid "@code{base} is not decimal (@code{REPRESENT}, @code{F.}, @code{FE.}, @code{FS.}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29695
#, no-wrap
msgid "@code{base} is not decimal (@code{REPRESENT}, @code{F.}, @code{FE.}, @code{FS.})"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29697
msgid "The floating-point number is converted into decimal nonetheless."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29698
#, no-wrap
msgid "Both arguments are equal to zero (@code{FATAN2}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29699
#, no-wrap
msgid "@code{FATAN2}, both arguments are equal to zero"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29702
msgid ""
"System-dependent. @code{FATAN2} is implemented using the C library function "
"@code{atan2()}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29703
#, no-wrap
msgid "Using @code{FTAN} on an argument @i{r1} where cos(@i{r1}) is zero:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29704
#, no-wrap
msgid "@code{FTAN} on an argument @i{r1} where cos(@i{r1}) is zero"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29708
msgid ""
"System-dependent. Anyway, typically the cos of @i{r1} will not be zero "
"because of small errors and the tan will be a very large (or very small)  "
"but finite number."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29709
#, no-wrap
msgid "@i{d} cannot be presented precisely as a float in @code{D>F}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29710
#, no-wrap
msgid "@code{D>F}, @i{d} cannot be presented precisely as a float"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29712
msgid "The result is rounded to the nearest float."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29714
#, no-wrap
msgid "dividing by zero, floating-point"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29715
#, no-wrap
msgid "floating-point dividing by zero"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29716
#, no-wrap
msgid "floating-point unidentified fault, FP divide-by-zero"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29720
msgid ""
"Platform-dependent; can produce an Infinity, NaN, @code{-42 throw} (floating "
"point divide by zero) or @code{-55 throw} (Floating-point unidentified "
"fault)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29721
#, no-wrap
msgid "exponent too big for conversion (@code{DF!}, @code{DF@@}, @code{SF!}, @code{SF@@}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29722
#, no-wrap
msgid "exponent too big for conversion (@code{DF!}, @code{DF@@}, @code{SF!}, @code{SF@@})"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29725
msgid ""
"System dependent. On IEEE-FP based systems the number is converted into an "
"infinity."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29726
#, no-wrap
msgid "@i{float}<1 (@code{FACOSH}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29727
#, no-wrap
msgid "@code{FACOSH}, @i{float}<1"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29728
#, no-wrap
msgid "floating-point unidentified fault, @code{FACOSH}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29730
msgid "Platform-dependent; on IEEE-FP systems typically produces a NaN."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29731
#, no-wrap
msgid "@i{float}<=-1 (@code{FLNP1}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29732
#, no-wrap
msgid "@code{FLNP1}, @i{float}<=-1"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29733
#, no-wrap
msgid "floating-point unidentified fault, @code{FLNP1}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29736
msgid ""
"Platform-dependent; on IEEE-FP systems typically produces a NaN (or a "
"negative infinity for @i{float}=-1)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29737
#, no-wrap
msgid "@i{float}<=0 (@code{FLN}, @code{FLOG}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29738
#, no-wrap
msgid "@code{FLN}, @i{float}<=0"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29739
#, no-wrap
msgid "@code{FLOG}, @i{float}<=0"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29740
#, no-wrap
msgid "floating-point unidentified fault, @code{FLN} or @code{FLOG}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29743
msgid ""
"Platform-dependent; on IEEE-FP systems typically produces a NaN (or a "
"negative infinity for @i{float}=0)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29744
#, no-wrap
msgid "@i{float}<0 (@code{FASINH}, @code{FSQRT}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29745
#, no-wrap
msgid "@code{FASINH}, @i{float}<0"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29746
#, no-wrap
msgid "@code{FSQRT}, @i{float}<0"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29747
#, no-wrap
msgid "floating-point unidentified fault, @code{FASINH} or @code{FSQRT}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29751
msgid ""
"Platform-dependent; for @code{fsqrt} this typically gives a NaN, for "
"@code{fasinh} some platforms produce a NaN, others a number (bug in the C "
"library?)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29752
#, no-wrap
msgid "|@i{float}|>1 (@code{FACOS}, @code{FASIN}, @code{FATANH}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29753
#, no-wrap
msgid "@code{FACOS}, |@i{float}|>1"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29754
#, no-wrap
msgid "@code{FASIN}, |@i{float}|>1"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29755
#, no-wrap
msgid "@code{FATANH}, |@i{float}|>1"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29756
#, no-wrap
msgid "floating-point unidentified fault, @code{FACOS}, @code{FASIN} or @code{FATANH}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29758
msgid "Platform-dependent; IEEE-FP systems typically produce a NaN."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29759
#, no-wrap
msgid "integer part of float cannot be represented by @i{d} in @code{F>D}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29760
#, no-wrap
msgid "@code{F>D}, integer part of float cannot be represented by @i{d}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29761
#, no-wrap
msgid "floating-point unidentified fault, @code{F>D}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29764
msgid ""
"Platform-dependent; typically, some double number is produced and no error "
"is reported."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29765
#, no-wrap
msgid "string larger than pictured numeric output area (@code{f.}, @code{fe.}, @code{fs.}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29766
#, no-wrap
msgid "string larger than pictured numeric output area (@code{f.}, @code{fe.}, @code{fs.})"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29770
msgid ""
"@code{Precision} characters of the numeric output area are used.  If "
"@code{precision} is too high, these words will smash the data or code close "
"to @code{here}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29776
#, no-wrap
msgid "system documentation, locals words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29777
#, no-wrap
msgid "locals words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29789
#, no-wrap
msgid "implementation-defined options, locals words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29790
#, no-wrap
msgid "locals words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29793
#, no-wrap
msgid "maximum number of locals in a definition:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29794
#, no-wrap
msgid "maximum number of locals in a definition"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29795
#, no-wrap
msgid "locals, maximum number in a definition"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29800
msgid ""
"@code{s\" #locals\" environment? drop .}. Currently 15. This is a lower "
"bound, e.g., on a 32-bit machine there can be 41 locals of up to 8 "
"characters. The number of locals in a definition is bounded by the size of "
"locals-buffer, which contains the names of the locals."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29808
#, no-wrap
msgid "locals words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29809
#, no-wrap
msgid "ambiguous conditions, locals words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29812
#, no-wrap
msgid "executing a named local in interpretation state:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29813
#, no-wrap
msgid "local in interpretation state"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29814
#, no-wrap
msgid "Interpreting a compile-only word, for a local"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29818
msgid ""
"Compiles the local into the current definition (just as in compile state); "
"in addition text-interpreting a local in interpretation state gives an ``is "
"compile-only'' warning."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29819
#, no-wrap
msgid "@i{name} not defined by @code{VALUE} or @code{(LOCAL)} (@code{TO}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29820
#, no-wrap
msgid "name not defined by @code{VALUE} or @code{(LOCAL)} used by @code{TO}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29821
#, no-wrap
msgid "@code{TO} on non-@code{VALUE}s and non-locals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29824
msgid "@code{-32 throw} (Invalid name argument)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29832
#, no-wrap
msgid "system documentation, memory-allocation words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29833
#, no-wrap
msgid "memory-allocation words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29844
#, no-wrap
msgid "implementation-defined options, memory-allocation words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29845
#, no-wrap
msgid "memory-allocation words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29848
#, no-wrap
msgid "values and meaning of @i{ior}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29861
#, no-wrap
msgid "system documentation, programming-tools words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29862
#, no-wrap
msgid "programming-tools words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29874
#, no-wrap
msgid "implementation-defined options, programming-tools words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29875
#, no-wrap
msgid "programming-tools words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29878
#, no-wrap
msgid "ending sequence for input following @code{;CODE} and @code{CODE}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29879
#, no-wrap
msgid "@code{;CODE} ending sequence"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29880
#, no-wrap
msgid "@code{CODE} ending sequence"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:29882
msgid "END-CODE"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29883
#, no-wrap
msgid "manner of processing input following @code{;CODE} and @code{CODE}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29884
#, no-wrap
msgid "@code{;CODE}, processing input"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29885
#, no-wrap
msgid "@code{CODE}, processing input"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29889
msgid ""
"The @code{ASSEMBLER} vocabulary is pushed on the search order stack, and the "
"input is processed by the text interpreter, (starting) in interpret state."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29890
#, no-wrap
msgid "search order capability for @code{EDITOR} and @code{ASSEMBLER}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29891
#, no-wrap
msgid "@code{ASSEMBLER}, search order capability"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29893
msgid "The Search-Order word set."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29894
#, no-wrap
msgid "source and format of display by @code{SEE}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29895
#, no-wrap
msgid "@code{SEE}, source and format of output"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29900
msgid ""
"The source for @code{see} is the executable code used by the inner "
"interpreter.  The current @code{see} tries to output Forth source code (and "
"on some platforms, assembly code for primitives) as well as possible."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29907
#, no-wrap
msgid "programming-tools words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29908
#, no-wrap
msgid "ambiguous conditions, programming-tools words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29912
#, no-wrap
msgid "deleting the compilation word list (@code{FORGET}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29913
#, no-wrap
msgid "@code{FORGET}, deleting the compilation word list"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29915 ../doc/gforth.texi:29928 ../doc/gforth.texi:29949
msgid "Not implemented (yet)."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29916
#, no-wrap
msgid "fewer than @i{u}+1 items on the control-flow stack (@code{CS-PICK}, @code{CS-ROLL}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29917
#, no-wrap
msgid "@code{CS-PICK}, fewer than @i{u}+1 items on the control flow-stack"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29918
#, no-wrap
msgid "@code{CS-ROLL}, fewer than @i{u}+1 items on the control flow-stack"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29919
#, no-wrap
msgid "control-flow stack underflow"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29924
msgid ""
"This typically results in an @code{abort\"} with a descriptive error message "
"(may change into a @code{-22 throw} (Control structure mismatch)  in the "
"future). You may also get a memory access error. If you are unlucky, this "
"ambiguous condition is not caught."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29925
#, no-wrap
msgid "@i{name} can't be found (@code{FORGET}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29926
#, no-wrap
msgid "@code{FORGET}, @i{name} can't be found"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29929
#, no-wrap
msgid "@i{name} not defined via @code{CREATE}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29930
#, no-wrap
msgid "@code{;CODE}, @i{name} not defined via @code{CREATE}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29934
msgid ""
"@code{;CODE} behaves like @code{DOES>} in this respect, i.e., it changes the "
"execution semantics of the last defined word no matter how it was defined."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29935
#, no-wrap
msgid "@code{POSTPONE} applied to @code{[IF]}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29936
#, no-wrap
msgid "@code{POSTPONE} applied to @code{[IF]}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29937
#, no-wrap
msgid "@code{[IF]} and @code{POSTPONE}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29940
msgid ""
"After defining @code{: X POSTPONE [IF] ; IMMEDIATE}. @code{X} is equivalent "
"to @code{[IF]}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29941
#, no-wrap
msgid "reaching the end of the input source before matching @code{[ELSE]} or @code{[THEN]}:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29942
#, no-wrap
msgid "@code{[IF]}, end of the input source before matching @code{[ELSE]} or @code{[THEN]}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29945
msgid ""
"Continue in the same state of conditional compilation in the next outer "
"input source. Currently there is no warning to the user about this."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29946
#, no-wrap
msgid "removing a needed definition (@code{FORGET}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29947
#, no-wrap
msgid "@code{FORGET}, removing a needed definition"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29957
#, no-wrap
msgid "system documentation, search-order words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29958
#, no-wrap
msgid "search-order words, system documentation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29970
#, no-wrap
msgid "implementation-defined options, search-order words"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29971
#, no-wrap
msgid "search-order words, implementation-defined options"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29974
#, no-wrap
msgid "maximum number of word lists in search order:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29975
#, no-wrap
msgid "maximum number of word lists in search order"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29976
#, no-wrap
msgid "search order, maximum depth"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29978
msgid "@code{s\" wordlists\" environment? drop .}. Currently 16."
msgstr ""

#. type: item
#: ../doc/gforth.texi:29979
#, no-wrap
msgid "minimum search order:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29980
#, no-wrap
msgid "minimum search order"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29981
#, no-wrap
msgid "search order, minimum"
msgstr ""

#. type: table
#: ../doc/gforth.texi:29983
msgid "@code{root root}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29990
#, no-wrap
msgid "search-order words, ambiguous conditions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29991
#, no-wrap
msgid "ambiguous conditions, search-order words"
msgstr ""

#. type: item
#: ../doc/gforth.texi:29994
#, no-wrap
msgid "changing the compilation word list (during compilation):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29995
#, no-wrap
msgid "changing the compilation word list (during compilation)"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:29996
#, no-wrap
msgid "compilation word list, change before definition ends"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30002
msgid ""
"The word is entered into the word list that was the compilation word list at "
"the start of the definition. Any changes to the name field (e.g., "
"@code{immediate}) or the code field (e.g., when executing @code{DOES>})  are "
"applied to the latest defined word (as reported by @code{latest} or "
"@code{latestxt}), if possible, irrespective of the compilation word list."
msgstr ""

#. type: item
#: ../doc/gforth.texi:30003
#, no-wrap
msgid "search order empty (@code{previous}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30004
#, no-wrap
msgid "@code{previous}, search order empty"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30005
#, no-wrap
msgid "vocstack empty, @code{previous}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30007
msgid "@code{abort\" Vocstack empty\"}."
msgstr ""

#. type: item
#: ../doc/gforth.texi:30008
#, no-wrap
msgid "too many word lists in search order (@code{also}):"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30009
#, no-wrap
msgid "@code{also}, too many word lists in search order"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30010
#, no-wrap
msgid "vocstack full, @code{also}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30012
msgid "@code{abort\" Vocstack full\"}."
msgstr ""

#. type: chapter
#: ../doc/gforth.texi:30017
#, no-wrap
msgid "Should I use Gforth extensions?"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30018
#, no-wrap
msgid "Gforth extensions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30024
msgid ""
"As you read through the rest of this manual, you will see documentation for "
"@i{Standard} words, and documentation for some appealing Gforth "
"@i{extensions}. You might ask yourself the question: @i{``Should I restrict "
"myself to the standard, or should I use the extensions?''}"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30027
msgid ""
"The answer depends on the goals you have for the program you are working on:"
msgstr ""

#. type: item
#: ../doc/gforth.texi:30030
#, no-wrap
msgid "Is it just for yourself or do you want to share it with others?"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30034
msgid "If you want to share it, do the others all use Gforth?"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30037
msgid "If it is just for yourself, do you want to restrict yourself to Gforth?"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30044
msgid ""
"If restricting the program to Gforth is ok, then there is no reason not to "
"use extensions.  It is still a good idea to keep to the standard where it is "
"easy, in case you want to reuse these parts in another program that you want "
"to be portable."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30047
msgid ""
"If you want to be able to port the program to other Forth systems, there are "
"the following points to consider:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30054
msgid ""
"Most Forth systems that are being maintained support Standard Forth.  So if "
"your program complies with the standard, it will be portable among many "
"systems."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30061
msgid ""
"A number of the Gforth extensions can be implemented in Standard Forth using "
"public-domain files provided in the @file{compat/} directory. These are "
"mentioned in the text in passing.  There is no reason not to use these "
"extensions, your program will still be Standard Forth compliant; just "
"include the appropriate compat files with your program."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30067
msgid ""
"The tool @file{ans-report.fs} (@pxref{Standard Report}) makes it easy to "
"analyse your program and determine what non-Standard words it relies upon.  "
"However, it does not check whether you use standard words in a non-standard "
"way."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30078
msgid ""
"Some techniques are not standardized by Standard Forth, and are hard or "
"impossible to implement in a standard way, but can be implemented in most "
"Forth systems easily, and usually in similar ways (e.g., accessing word "
"headers).  Forth has a rich historical precedent for programmers taking "
"advantage of implementation-dependent features of their tools (for example, "
"relying on a knowledge of the dictionary structure). Sometimes these "
"techniques are necessary to extract every last bit of performance from the "
"hardware, sometimes they are just a programming shorthand."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30082
msgid ""
"Does using a Gforth extension save more work than the porting this part to "
"other Forth systems (if any) will cost?"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30086
msgid ""
"Is the additional functionality worth the reduction in portability and the "
"additional porting problems?"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30095
msgid ""
"In order to perform these considerations, you need to know what's standard "
"and what's not.  This manual generally states if something is non-standard, "
"but the authoritative source is the @uref{https://forth-standard.org/"
"standard/words,standard document}.  Appendix A of the Standard "
"(@var{Rationale}) provides a valuable insight into the thought processes of "
"the technical committee."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30099
msgid ""
"Note also that portability between Forth systems is not the only portability "
"issue; there is also the issue of portability between different platforms "
"(processor/OS combinations)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30106
msgid ""
"This chapter has yet to be written. It will contain information, on which "
"internal structures you can rely."
msgstr ""

#. type: chapter
#: ../doc/gforth.texi:30109
#, no-wrap
msgid "Integrating Gforth into C programs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30113
msgid ""
"Several people like to use Forth as scripting language for applications that "
"are otherwise written in C, C++, or some other language."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30120
msgid ""
"The Forth system ATLAST provides facilities for embedding it into "
"applications; unfortunately it has several disadvantages: most importantly, "
"it is not based on Standard Forth, and it is apparently dead (i.e., not "
"developed further and not supported). The facilities provided by Gforth in "
"this area are inspired by ATLAST's facilities, so making the switch should "
"not be hard."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30125
msgid ""
"We also tried to design the interface such that it can easily be implemented "
"by other Forth systems, so that we may one day arrive at a standardized "
"interface. Such a standard interface would allow you to replace the Forth "
"system without having to rewrite C code."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30134
msgid ""
"You embed the Gforth interpreter by linking with the library @code{libgforth."
"a} or @code{libgforth.so} (give the compiler the option @code{-lgforth}, or "
"for one of the other engines @code{-lgforth-fast}, @code{-lgforth-itc}, or "
"@code{-lgforth-ditc}).  All global symbols in this library that belong to "
"the interface, have the prefix @code{gforth_}; if a common interface "
"emerges, the functions may also be available through @code{#define}s with "
"the prefix @code{forth_}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30137
msgid ""
"You can include the declarations of Forth types, the functions and variables "
"of the interface with @code{#include <gforth.h>}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30140
msgid ""
"You can now run a Gforth session by either calling @code{gforth_main} or "
"using the components:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30145
#, no-wrap
msgid ""
"Cell gforth_main(int argc, char **argv, char **env)\n"
"@{\n"
"  Cell retvalue=gforth_start(argc, argv);\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30154
#, no-wrap
msgid ""
"  if(retvalue == -56) @{ /* throw-code for quit */\n"
"    retvalue = gforth_bootmessage();     // show boot message\n"
"    if(retvalue == -56)\n"
"      retvalue = gforth_quit(); // run quit loop\n"
"  @}\n"
"  gforth_cleanup();\n"
"  gforth_printmetrics();\n"
"  // gforth_free_dict(); // if you want to restart, do this\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30157
#, no-wrap
msgid ""
"  return retvalue;\n"
"@}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30161
msgid ""
"To interact with the Forth interpreter, there's @code{Xt gforth_find(Char * "
"name)} and @code{Cell gforth_execute(Xt xt)}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30163
msgid "More documentation needs to be put here."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30167
msgid "@code{Cell}, @code{UCell}: data stack elements."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30169
msgid "@code{Float}: float stack element."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30172
msgid ""
"@code{Address}, @code{Xt}, @code{Label}: pointer typies to memory, Forth "
"words, and Forth instructions inside the VM."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30176
msgid "Data and FP Stack pointer. Area sizes. Accessing the Stacks"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30178
msgid "@code{gforth_SP}, @code{gforth_FP}."
msgstr ""

#. type: section
#: ../doc/gforth.texi:30179
#, no-wrap
msgid "Functions"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30200
#, no-wrap
msgid ""
"void *gforth_engine(Xt *, stackpointers *);\n"
"Cell gforth_main(int argc, char **argv, char **env);\n"
"int gforth_args(int argc, char **argv, char **path, char **imagename);\n"
"ImageHeader* gforth_loader(char* imagename, char* path);\n"
"user_area* gforth_stacks(Cell dsize, Cell rsize, Cell fsize, Cell lsize);\n"
"void gforth_free_stacks(user_area* t);\n"
"void gforth_setstacks(user_area * t);\n"
"void gforth_free_dict();\n"
"Cell gforth_go(Xt* ip0);\n"
"Cell gforth_boot(int argc, char** argv, char* path);\n"
"void gforth_bootmessage();\n"
"Cell gforth_start(int argc, char ** argv);\n"
"Cell gforth_quit();\n"
"Xt gforth_find(Char * name);\n"
"Cell gforth_execute(Xt xt);\n"
"void gforth_cleanup();\n"
"void gforth_printmetrics();\n"
"void gforth_setwinch();\n"
msgstr ""

#. type: section
#: ../doc/gforth.texi:30202
#, no-wrap
msgid "Signals"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30206
msgid ""
"Gforth sets up signal handlers to catch exceptions and window size changes.  "
"This may interfere with your C program."
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:30212
#, no-wrap
msgid "gforth.el"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:30213
#, no-wrap
msgid "forth.el"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30214
#, no-wrap
msgid "Rydqvist, Goran"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30215
#, no-wrap
msgid "Kuehling, David"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30216
#, no-wrap
msgid "comment editing commands"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30217
#, no-wrap
msgid "@code{\\}, editing with Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30218
#, no-wrap
msgid "debug tracer editing commands"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30219
#, no-wrap
msgid "@code{~~}, removal with Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30220
#, no-wrap
msgid "Forth mode in Emacs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30225
msgid ""
"Gforth comes with @file{gforth.el}, an improved version of @file{forth.el} "
"by Goran Rydqvist (included in the TILE package). The improvements are:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30229
msgid "A better handling of indentation."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30231
msgid "A custom hilighting engine for Forth-code."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30233
msgid "Comment paragraph filling (@kbd{M-q})"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30235
msgid ""
"Commenting (@kbd{C-x \\}) and uncommenting (@kbd{C-u C-x \\}) of regions"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30237
msgid "Removal of debugging tracers (@kbd{C-x ~}, @pxref{Debugging})."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30240
msgid ""
"Support of the @code{info-lookup} feature for looking up the documentation "
"of a word."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30242
msgid "Support for reading and writing blocks files."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30246
msgid ""
"To get a basic description of these features, enter Forth mode and type "
"@kbd{C-h m}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30247
#, no-wrap
msgid "source location of error or debugging output in Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30248
#, no-wrap
msgid "error output, finding the source location in Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30249
#, no-wrap
msgid "debugging output, finding the source location in Emacs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30257
msgid ""
"In addition, Gforth supports Emacs quite well: The source code locations "
"given in error messages, debugging output (from @code{~~}) and failed "
"assertion messages are in the right format for Emacs' compilation mode "
"(@pxref{Compilation, , Running Compilations under Emacs, emacs, Emacs "
"Manual}) so the source location corresponding to an error or other message "
"is only a few keystrokes away (@kbd{C-x `} for the next error, @kbd{C-c C-c} "
"for the error under the cursor)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30258
#, no-wrap
msgid "viewing the documentation of a word in Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30259
#, no-wrap
msgid "context-sensitive help"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30265
msgid ""
"Moreover, for words documented in this manual, you can look up the glossary "
"entry quickly by using @kbd{C-h TAB} (@code{info-lookup-symbol}, "
"@pxref{Documentation, ,Documentation Commands, emacs, Emacs Manual}).  This "
"feature requires Emacs 20.3 or later and does not work for words containing "
"@code{:}."
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:30277
#, no-wrap
msgid ".emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30278
#, no-wrap
msgid "@file{gforth.el}, installation"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30281
msgid ""
"To make the features from @file{gforth.el} available in Emacs, add the "
"following lines to your @file{.emacs} file:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30296
#, no-wrap
msgid ""
"(autoload 'forth-mode \"gforth.el\")\n"
"(setq auto-mode-alist (cons '(\"\\\\.fs\\\\'\" . forth-mode) \n"
"\t\t\t    auto-mode-alist))\n"
"(autoload 'forth-block-mode \"gforth.el\")\n"
"(setq auto-mode-alist (cons '(\"\\\\.fb\\\\'\" . forth-block-mode) \n"
"\t\t\t    auto-mode-alist))\n"
"(add-hook 'forth-mode-hook (function (lambda ()\n"
"   ;; customize variables here:\n"
"   (setq forth-indent-level 4)\n"
"   (setq forth-minor-indent-level 2)\n"
"   (setq forth-hilight-level 3)\n"
"   ;;; ...\n"
")))\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30301
#, no-wrap
msgid "@file{TAGS} file"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:30302
#, no-wrap
msgid "etags.fs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30303
#, no-wrap
msgid "viewing the source of a word in Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30304
#, no-wrap
msgid "@code{require}, placement in files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30305
#, no-wrap
msgid "@code{include}, placement in files"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30318
msgid ""
"If you @code{require} @file{etags.fs}, a new @file{TAGS} file will be "
"produced (@pxref{Tags, , Tags Tables, emacs, Emacs Manual}) that contains "
"the definitions of all words defined afterwards. You can then find the "
"source for a word using @kbd{M-.}. Note that Emacs can use several tags "
"files at the same time (e.g., one for the Gforth sources and one for your "
"program, @pxref{Select Tags Table,,Selecting a Tags Table,emacs, Emacs "
"Manual}). The TAGS file for the preloaded words is @file{$(datadir)/gforth/"
"$(VERSION)/TAGS} (e.g., @file{/usr/local/share/gforth/0.2.0/TAGS}).  To get "
"the best behaviour with @file{etags.fs}, you should avoid putting "
"definitions both before and after @code{require} etc., otherwise you will "
"see the same file visited several times by commands like @code{tags-search}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30322
#, no-wrap
msgid "hilighting Forth code in Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30323
#, no-wrap
msgid "highlighting Forth code in Emacs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30328
msgid ""
"@file{gforth.el} comes with a custom source hilighting engine.  When you "
"open a file in @code{forth-mode}, it will be completely parsed, assigning "
"faces to keywords, comments, strings etc.  While you edit the file, modified "
"regions get parsed and updated on-the-fly."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30338
msgid ""
"Use the variable `forth-hilight-level' to change the level of decoration "
"from 0 (no hilighting at all) to 3 (the default).  Even if you set the "
"hilighting level to 0, the parser will still work in the background, "
"collecting information about whether regions of text are ``compiled'' or "
"``interpreted''.  Those information are required for auto-indentation to "
"work properly.  Set `forth-disable-parser' to non-nil if your computer is "
"too slow to handle parsing.  This will have an impact on the smartness of "
"the auto-indentation engine, though."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30344
msgid ""
"Sometimes Forth sources define new features that should be hilighted, new "
"control structures, defining-words etc.  You can use the variable `forth-"
"custom-words' to make @code{forth-mode} hilight additional words and "
"constructs.  See the docstring of `forth-words' for details (in Emacs, type "
"@kbd{C-h v forth-words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30349
msgid ""
"`forth-custom-words' is meant to be customized in your @file{.emacs} file.  "
"To customize hilighing in a file-specific manner, set `forth-local-words' in "
"a local-variables section at the end of your source file (@pxref{Local "
"Variables in Files,, Variables, emacs, Emacs Manual})."
msgstr ""

#. type: example
#: ../doc/gforth.texi:30360
#, no-wrap
msgid ""
"0 [IF]\n"
"   Local Variables:\n"
"   forth-local-words:\n"
"      (((\"t:\") definition-starter (font-lock-keyword-face . 1)\n"
"        \"[ \\t\\n]\" t name (font-lock-function-name-face . 3))\n"
"       ((\";t\") definition-ender (font-lock-keyword-face . 1)))\n"
"   End:\n"
"[THEN]\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30365
#, no-wrap
msgid "auto-indentation of Forth code in Emacs"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30366
#, no-wrap
msgid "indentation of Forth code in Emacs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30369
msgid ""
"@code{forth-mode} automatically tries to indent lines in a smart way, "
"whenever you type @key{TAB} or break a line with @kbd{C-m}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30375
msgid ""
"Simple customization can be achieved by setting `forth-indent-level' and "
"`forth-minor-indent-level' in your @file{.emacs} file. For historical "
"reasons @file{gforth.el} indents per default by multiples of 4 columns.  To "
"use the more traditional 3-column indentation, add the following lines to "
"your @file{.emacs}:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30382
#, no-wrap
msgid ""
"(add-hook 'forth-mode-hook (function (lambda ()\n"
"   ;; customize variables here:\n"
"   (setq forth-indent-level 3)\n"
"   (setq forth-minor-indent-level 1)\n"
")))\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30388
msgid ""
"If you want indentation to recognize non-default words, customize it by "
"setting `forth-custom-indent-words' in your @file{.emacs}.  See the "
"docstring of `forth-indent-words' for details (in Emacs, type @kbd{C-h v "
"forth-indent-words})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30393
msgid ""
"To customize indentation in a file-specific manner, set `forth-local-indent-"
"words' in a local-variables section at the end of your source file "
"(@pxref{Local Variables in Files, Variables,,emacs, Emacs Manual})."
msgstr ""

#. type: example
#: ../doc/gforth.texi:30403
#, no-wrap
msgid ""
"0 [IF]\n"
"   Local Variables:\n"
"   forth-local-indent-words:\n"
"      (((\"t:\") (0 . 2) (0 . 2))\n"
"       ((\";t\") (-2 . 0) (0 . -2)))\n"
"   End:\n"
"[THEN]\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30408
#, no-wrap
msgid "blocks files, use with Emacs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30413
msgid ""
"@code{forth-mode} Autodetects blocks files by checking whether the length of "
"the first line exceeds 1023 characters.  It then tries to convert the file "
"into normal text format.  When you save the file, it will be written to disk "
"as normal stream-source file."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30416
msgid ""
"If you want to write blocks files, use @code{forth-blocks-mode}.  It "
"inherits all the features from @code{forth-mode}, plus some additions:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30420
msgid "Files are written to disk in blocks file format."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30423
msgid ""
"Screen numbers are displayed in the mode line (enumerated beginning with the "
"value of `forth-block-base')"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30425
msgid "Warnings are displayed when lines exceed 64 characters."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30428
msgid ""
"The beginning of the currently edited block is marked with an overlay-arrow."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30436
msgid ""
"There are some restrictions you should be aware of.  When you open a blocks "
"file that contains tabulator or newline characters, these characters will be "
"translated into spaces when the file is written back to disk.  If tabs or "
"newlines are encountered during blocks file reading, an error is output to "
"the echo area. So have a look at the `*Messages*' buffer, when Emacs' bell "
"rings during reading."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30439
msgid ""
"Please consult the docstring of @code{forth-blocks-mode} for more "
"information by typing @kbd{C-h v forth-blocks-mode})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30443
#, no-wrap
msgid "image file"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30444
#, no-wrap
msgid "@file{.fi} files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30445
#, no-wrap
msgid "precompiled Forth code"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30446
#, no-wrap
msgid "dictionary in persistent form"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30447
#, no-wrap
msgid "persistent form of dictionary"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30452
msgid ""
"An image file is a file containing an image of the Forth dictionary, i.e., "
"compiled Forth code and data residing in the dictionary.  By convention, we "
"use the extension @code{.fi} for image files."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30466
#, no-wrap
msgid "license for images"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30467
#, no-wrap
msgid "image license"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30473
msgid ""
"An image created with @code{gforthmi} (@pxref{gforthmi}) or "
"@code{savesystem} (@pxref{Non-Relocatable Image Files}) includes the "
"original image; i.e., according to copyright law it is a derived work of the "
"original image."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30479
msgid ""
"Since Gforth is distributed under the GNU GPL, the newly created image falls "
"under the GNU GPL, too. In particular, this means that if you distribute the "
"image, you have to make all of the sources for the image available, "
"including those you wrote.  For details see @ref{Copying, , GNU General "
"Public License (Section 3)}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30487
msgid ""
"If you create an image with @code{cross} (@pxref{cross.fs}), the image "
"contains only code compiled from the sources you gave it; if none of these "
"sources is under the GPL, the terms discussed above do not apply to the "
"image. However, if your image needs an engine (a gforth binary)  that is "
"under the GPL, you should make sure that you distribute both in a way that "
"is at most a @emph{mere aggregation}, if you don't want the terms of the GPL "
"to apply to the image."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30490
#, no-wrap
msgid "image file background"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30501
msgid ""
"Gforth consists not only of primitives (in the engine), but also of "
"definitions written in Forth. Since the Forth compiler itself belongs to "
"those definitions, it is not possible to start the system with the engine "
"and the Forth source alone. Therefore we provide the Forth code as an image "
"file in nearly executable form. When Gforth starts up, a C routine loads the "
"image file into memory, optionally relocates the addresses, then sets up the "
"memory (stacks etc.) according to information in the image file, and "
"(finally) starts executing Forth code."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30506
msgid ""
"The default image file is @file{gforth.fi} (in the @code{GFORTHPATH}).  You "
"can use a different image by using the @code{-i}, @code{--image-file} or "
"@code{--appl-image} options (@pxref{Invoking Gforth}), e.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30509
#, no-wrap
msgid "gforth-fast -i myimage.fi\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30514
msgid ""
"There are different variants of image files, and they represent different "
"compromises between the goals of making it easy to generate image files and "
"making them portable."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30515
#, no-wrap
msgid "relocation at run-time"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30521
msgid ""
"Win32Forth 3.4 and Mitch Bradley's @code{cforth} use relocation at run-time. "
"This avoids many of the complications discussed below (image files are data "
"relocatable without further ado), but costs performance (one addition per "
"memory access) and makes it difficult to pass addresses between Forth and "
"library calls or other programs."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30522
#, no-wrap
msgid "relocation at load-time"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30527
msgid ""
"By contrast, the Gforth loader performs relocation at image load time. The "
"loader also has to replace tokens that represent primitive calls with the "
"appropriate code-field addresses (or code addresses in the case of direct "
"threading)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30531
msgid ""
"There are three kinds of image files, with different degrees of "
"relocatability: non-relocatable, data-relocatable, and fully relocatable "
"image files."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30532
#, no-wrap
msgid "image file loader"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30533
#, no-wrap
msgid "relocating loader"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30534
#, no-wrap
msgid "loader for image files"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30537
msgid ""
"These image file variants have several restrictions in common; they are "
"caused by the design of the image file loader:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30543
msgid ""
"There is only one segment; in particular, this means, that an image file "
"cannot represent @code{ALLOCATE}d memory chunks (and pointers to them). The "
"contents of the stacks are not represented, either."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30548
msgid ""
"The only kinds of relocation supported are: adding the same offset to all "
"cells that represent data addresses; and replacing special tokens with code "
"addresses or with pieces of machine code."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30552
msgid ""
"If any complex computations involving addresses are performed, the results "
"cannot be represented in the image file. Several applications that use such "
"computations come to mind:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30560
msgid ""
"Hashing addresses (or data structures which contain addresses) for table "
"lookup. If you use Gforth's @code{table}s or @code{wordlist}s for this "
"purpose, you will have no problem, because the hash tables are recomputed "
"automatically when the system is started. If you use your own hash tables, "
"you will have to do something similar."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30567
msgid ""
"There's a cute implementation of doubly-linked lists that uses @code{XOR}ed "
"addresses. You could represent such lists as singly-linked in the image "
"file, and restore the doubly-linked representation on startup.@footnote{In "
"my opinion, though, you should think thrice before using a doubly-linked "
"list (whatever implementation).}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30575
msgid ""
"The code addresses of run-time routines like @code{docol:} cannot be "
"represented in the image file (because their tokens would be replaced by "
"machine code in direct threaded implementations). As a workaround, compute "
"these addresses at run-time with @code{>code-address} from the executions "
"tokens of appropriate words (see the definitions of @code{docol:} and "
"friends in @file{kernel/getdoers.fs})."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30583
msgid ""
"On many architectures addresses are represented in machine code in some "
"shifted or mangled form. You cannot put @code{CODE} words that contain "
"absolute addresses in this form in a relocatable image file. Workarounds are "
"representing the address in some relative form (e.g., relative to the CFA, "
"which is present in some register), or loading the address from a place "
"where it is stored in a non-mangled form."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30588
#, no-wrap
msgid "non-relocatable image files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30589
#, no-wrap
msgid "image file, non-relocatable"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30600
msgid ""
"These files are simple memory dumps of the dictionary. They are specific to "
"the executable (i.e., @file{gforth} file) they were created with. What's "
"worse, they are specific to the place on which the dictionary resided when "
"the image was created. Now, there is no guarantee that the dictionary will "
"reside at the same place the next time you start Gforth, so there's no "
"guarantee that a non-relocatable image will work the next time (Gforth will "
"complain instead of crashing, though).  Indeed, on OSs with (enabled) "
"address-space randomization non-relocatable images are unlikely to work."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30602
msgid ""
"You can create a non-relocatable image file with @code{savesystem}, e.g.:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30605
#, no-wrap
msgid "gforth app.fs -e \"savesystem app.fi bye\"\n"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:30607
#, no-wrap
msgid "savesystem ( @var{ \"image\" --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:30608 ../doc/gforth.texi:30609
#, no-wrap
msgid "savesystem"
msgstr ""

#. type: format
#: ../doc/gforth.texi:30612
#, no-wrap
msgid "@code{savesystem} ( @i{\"image\" --  }) gforth-0.2 ``savesystem''\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30618
#, no-wrap
msgid "data-relocatable image files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30619
#, no-wrap
msgid "image file, data-relocatable"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30628
msgid ""
"These files contain relocatable data addresses, but fixed code addresses "
"(instead of tokens). They are specific to the executable (i.e., "
"@file{gforth} file) they were created with.  Also, they disable dynamic "
"native code generation (typically a factor of 2 in speed).  You get a data-"
"relocatable image, if you pass the engine you want to use through the "
"@code{GFORTHD} environment variable to @file{gforthmi} (@pxref{gforthmi}), e."
"g."
msgstr ""

#. type: example
#: ../doc/gforth.texi:30631
#, no-wrap
msgid "GFORTHD=\"/usr/bin/gforth-fast --no-dynamic\" gforthmi myimage.fi source.fs\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30636
msgid ""
"Note that the @code{--no-dynamic} is required here for the image to work "
"(otherwise it will contain references to dynamically generated code that is "
"not saved in the image)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30640
#, no-wrap
msgid "fully relocatable image files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30641
#, no-wrap
msgid "image file, fully relocatable"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30643
#, no-wrap
msgid "@file{kern*.fi}, relocatability"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30644
#, no-wrap
msgid "@file{gforth.fi}, relocatability"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30652
msgid ""
"These image files have relocatable data addresses, and tokens for code "
"addresses. They can be used with different binaries (e.g., with and without "
"debugging) on the same machine, and even across machines with the same data "
"formats (byte order, cell size, floating point format), and they work with "
"dynamic native code generation.  However, they are usually specific to the "
"version of Gforth they were created with. The files @file{gforth.fi} and "
"@file{kernl*.fi} are fully relocatable."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30654
msgid "There are two ways to create a fully relocatable image file:"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:30662
#, no-wrap
msgid "comp-i.fs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30668
msgid ""
"You will usually use @file{gforthmi}. If you want to create an image "
"@i{file} that contains everything you would load by invoking Gforth with "
"@code{gforth @i{options}}, you simply say:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30670
#, no-wrap
msgid "gforthmi @i{file} @i{options}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30675
msgid ""
"E.g., if you want to create an image @file{asm.fi} that has the file "
"@file{asm.fs} loaded in addition to the usual stuff, you could do it like "
"this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30678
#, no-wrap
msgid "gforthmi asm.fi asm.fs\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30688
msgid ""
"@file{gforthmi} is implemented as a sh script and works like this: It "
"produces two non-relocatable images for different addresses and then "
"compares them. Its output reflects this: first you see the output (if any) "
"of the two Gforth invocations that produce the non-relocatable image files, "
"then you see the output of the comparing program: It displays the offset "
"used for data addresses and the offset used for code addresses; moreover, "
"for each cell that cannot be represented correctly in the image files, it "
"displays a line like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30691
#, no-wrap
msgid "     78DC         BFFFFA50         BFFFFA40\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30698
msgid ""
"This means that at offset $78dc from @code{forthstart}, one input image "
"contains $bffffa50, and the other contains $bffffa40. Since these cells "
"cannot be represented correctly in the output image, you should examine "
"these places in the dictionary and verify that these cells are dead (i.e., "
"not read before they are written)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30699
#, no-wrap
msgid "--application, @code{gforthmi} option"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30706
msgid ""
"If you insert the option @code{--application} in front of the image file "
"name, you will get an image that uses the @code{--appl-image} option instead "
"of the @code{--image-file} option (@pxref{Invoking Gforth}). When you "
"execute such an image on Unix (by typing the image name as command), the "
"Gforth engine will pass all options to the image instead of trying to "
"interpret them as engine options."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30709
msgid ""
"If you type @file{gforthmi} with no arguments, it prints some usage "
"instructions."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30710
#, no-wrap
msgid "@code{savesystem} during @file{gforthmi}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30711
#, no-wrap
msgid "@code{bye} during @file{gforthmi}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30712
#, no-wrap
msgid "doubly indirect threaded code"
msgstr ""

#. type: code{#1}
#: ../doc/gforth.texi:30716
#, no-wrap
msgid "gforth-ditc"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30729
msgid ""
"There are a few wrinkles: After processing the passed @i{options}, the words "
"@code{savesystem} and @code{bye} must be visible. A special doubly indirect "
"threaded version of the @file{gforth} executable is used for creating the "
"non-relocatable images; you can pass the exact filename of this executable "
"through the environment variable @code{GFORTHD} (default: @file{gforth-"
"ditc}); if you pass a version that is not doubly indirect threaded, you will "
"not get a fully relocatable image, but a data-relocatable image (@pxref{Data-"
"Relocatable Image Files}), because there is no code address offset). The "
"normal @file{gforth} executable is used for creating the relocatable image; "
"you can pass the exact filename of this executable through the environment "
"variable @code{GFORTH}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30733 ../doc/gforth.texi:31642
#, no-wrap
msgid "cross-compiler"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30734 ../doc/gforth.texi:31643
#, no-wrap
msgid "metacompiler"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30735 ../doc/gforth.texi:31644
#, no-wrap
msgid "target compiler"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30739
msgid ""
"You can also use @code{cross}, a batch compiler that accepts a Forth-like "
"programming language (@pxref{Cross Compiler})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30747
msgid ""
"@code{cross} allows you to create image files for machines with different "
"data sizes and data formats than the one used for generating the image file. "
"You can also use it to create an application image that does not contain a "
"Forth compiler. These features are bought with restrictions and "
"inconveniences in programming. E.g., addresses have to be stored in memory "
"with special words (@code{A!}, @code{A,}, etc.) in order to make the code "
"relocatable."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30751
#, no-wrap
msgid "image file, stack and dictionary sizes"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30752
#, no-wrap
msgid "dictionary size default"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30753
#, no-wrap
msgid "stack size default"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30761
msgid ""
"If you invoke Gforth with a command line flag for the size (@pxref{Invoking "
"Gforth}), the size you specify is stored in the dictionary. If you save the "
"dictionary with @code{savesystem} or create an image with @file{gforthmi}, "
"this size will become the default for the resulting image file. E.g., the "
"following will create a fully relocatable version of @file{gforth.fi} with a "
"1MB dictionary:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30764
#, no-wrap
msgid "gforthmi gforth.fi -m 1M\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30769
msgid ""
"In other words, if you want to set the default size for the dictionary and "
"the stacks of an image, just invoke @file{gforthmi} with the appropriate "
"options when creating the image."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30770
#, no-wrap
msgid "stack size, cache-friendly"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30775
msgid ""
"Note: For cache-friendly behaviour (i.e., good performance), you should make "
"the sizes of the stacks modulo, say, 2K, somewhat different. E.g., the "
"default stack sizes are: data: 16k (mod 2k=0); fp: 15.5k (mod 2k=1.5k); "
"return: 15k(mod 2k=1k); locals: 14.5k (mod 2k=0.5k)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30778
#, no-wrap
msgid "running image files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30779
#, no-wrap
msgid "invoking image files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30780
#, no-wrap
msgid "image file invocation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30782
#, no-wrap
msgid "-i, invoke image file"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30783
#, no-wrap
msgid "--image file, invoke image file"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30786
msgid ""
"You can invoke Gforth with an image file @i{image} instead of the default "
"@file{gforth.fi} with the @code{-i} flag (@pxref{Invoking Gforth}):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30788
#, no-wrap
msgid "gforth -i @i{image}\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30790
#, no-wrap
msgid "executable image file"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30791
#, no-wrap
msgid "image file, executable"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30799
msgid ""
"If your operating system supports starting scripts with a line of the form "
"@code{#! ...}, you just have to type the image file name to start Gforth "
"with this image file (note that the file extension @code{.fi} is just a "
"convention). I.e., to run Gforth with the image file @i{image}, you can just "
"type @i{image} instead of @code{gforth -i @i{image}}.  This works because "
"every @code{.fi} file starts with a line of this format:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30802
#, no-wrap
msgid "#! /usr/local/bin/gforth-0.4.0 -i\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30808
msgid ""
"The file and pathname for the Gforth engine specified on this line is the "
"specific Gforth executable that it was built against; i.e. the value of the "
"environment variable @code{GFORTH} at the time that @file{gforthmi} was "
"executed."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30811
msgid ""
"You can make use of the same shell capability to make a Forth source file "
"into an executable. For example, if you place this text in a file:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30814
#, no-wrap
msgid ""
"#! /usr/local/bin/gforth\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30817
#, no-wrap
msgid ""
".\" Hello, world\" CR\n"
"bye\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30832
msgid ""
"and then make the file executable (chmod +x in Unix), you can run it "
"directly from the command line. The sequence @code{#!} is used in two ways; "
"firstly, it is recognised as a ``magic sequence'' by the operating "
"system@footnote{The Unix kernel actually recognises two types of files: "
"executable files and files of data, where the data is processed by an "
"interpreter that is specified on the ``interpreter line'' -- the first line "
"of the file, starting with the sequence #!. There may be a small limit (e."
"g., 32) on the number of characters that may be specified on the interpreter "
"line.} secondly it is treated as a comment character by Gforth. Because of "
"the second usage, a space is required between @code{#!} and the path to the "
"executable (moreover, some Unixes require the sequence @code{#! /})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30836
msgid ""
"Most Unix systems (including Linux) support exactly one option after the "
"binary name.  If that is not enough, you can use the following trick:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30844
#, no-wrap
msgid ""
"#! /bin/sh\n"
": ## ; 0 [if]\n"
"exec gforth -m 10M -d 1M $0 \"$@@\"\n"
"[then]\n"
".\" Hello, world\" cr\n"
"bye \\ caution: this prevents (further) processing of \"$@@\"\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30853
msgid ""
"First this script is interpreted as shell script, which treats the first two "
"lines as (mostly) comments, then performs the third line, which invokes "
"gforth with this script (@code{$0}) as parameter and its parameters as "
"additional parameters (@code{\"$@@\"}).  Then this script is interpreted as "
"Forth script, which first defines a colon definition @code{##}, then ignores "
"everything up to @code{[then]} and finally processes the following Forth "
"code.  You can also use"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30856
#, no-wrap
msgid "#0 [if]\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30859
msgid "in the second line, but this works only in Gforth-0.7.0 and later."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30864
msgid ""
"The @file{gforthmi} approach is the fastest one, the shell-based one is "
"slowest (needs to start an additional shell).  An additional advantage of "
"the shell approach is that it is unnecessary to know where the Gforth binary "
"resides, as long as it is in the @code{$PATH}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:30865
#, no-wrap
msgid "#! ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:30866 ../doc/gforth.texi:30867
#, no-wrap
msgid "#!"
msgstr ""

#. type: format
#: ../doc/gforth.texi:30870
#, no-wrap
msgid "@code{#!} ( @i{--  }) gforth-0.2 ``hash-bang''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30872
msgid "An alias for @code{\\}"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30878
#, no-wrap
msgid "startup sequence for image file"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30879
#, no-wrap
msgid "image file initialization sequence"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30880
#, no-wrap
msgid "initialization sequence of image file"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30886
msgid ""
"You can add your own initialization to the startup sequence of an image "
"through the deferred word @code{'cold}. @code{'cold} is invoked just before "
"the image-specific command line processing (i.e., loading files and "
"evaluating (@code{-e}) strings) starts."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30888
msgid "A sequence for adding your initialization usually looks like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:30894
#, no-wrap
msgid ""
":noname\n"
"    Defers 'cold \\ do other initialization stuff (e.g., rehashing wordlists)\n"
"    ... \\ your stuff\n"
"; IS 'cold\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30900
msgid ""
"After @code{'cold}, Gforth processes the image options (@pxref{Invoking "
"Gforth}), and then it performs @code{bootmessage}, another deferred word.  "
"This normally prints Gforth's startup message and does nothing else."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30901
#, no-wrap
msgid "turnkey image files"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30902
#, no-wrap
msgid "image file, turnkey applications"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30906
msgid ""
"So, if you want to make a turnkey image (i.e., an image for an application "
"instead of an extended Forth system), you can do this in several ways:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30916
msgid ""
"If you want to do your interpretation of the OS command-line arguments, hook "
"into @code{'cold}.  In that case you probably also want to build the image "
"with @code{gforthmi --application} (@pxref{gforthmi}) to keep the engine "
"from processing OS command line options.  You can then do your own command-"
"line processing with @code{next-arg}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30921
msgid ""
"If you want to have the normal Gforth processing of OS command-line "
"arguments, but specify your own command-line options, hook into "
"@code{process-option}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30925
msgid ""
"If you want to have more options in addition to the ones that come with "
"Gforth, define words into the @code{options} vocabulary."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:30929
msgid ""
"If you want to display your own boot message, hook into @code{bootmessage}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30936
msgid ""
"In either case, you probably do not want the word that you execute in these "
"hooks to exit normally, but use @code{bye} or @code{throw}.  Otherwise the "
"Gforth startup process would continue and eventually present the Forth "
"command line to the user."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:30937
#, no-wrap
msgid "'cold ( @var{ --   } ) gforth-0.2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:30938 ../doc/gforth.texi:30939
#, no-wrap
msgid "'cold"
msgstr ""

#. type: format
#: ../doc/gforth.texi:30942
#, no-wrap
msgid "@code{'cold} ( @i{--  }) gforth-0.2 ``tick-cold''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30946
msgid ""
"Hook (deferred word) for things to do right before interpreting the OS "
"command-line arguments.  Normally does some initializations that you also "
"want to perform."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:30948
#, no-wrap
msgid "bootmessage ( @var{ --   } ) gforth-0.4"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:30949 ../doc/gforth.texi:30950
#, no-wrap
msgid "bootmessage"
msgstr ""

#. type: format
#: ../doc/gforth.texi:30953
#, no-wrap
msgid "@code{bootmessage} ( @i{--  }) gforth-0.4 ``bootmessage''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30957
msgid ""
"Hook (deferred word) executed right after interpreting the OS command-line "
"arguments.  Normally prints the Gforth startup message."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30960
msgid "doc-'quit"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:30960
#, no-wrap
msgid "process-option ( @var{ addr u -- true / addr u false   } ) gforth-0.7"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:30961 ../doc/gforth.texi:30962
#, no-wrap
msgid "process-option"
msgstr ""

#. type: format
#: ../doc/gforth.texi:30965
#, no-wrap
msgid "@code{process-option} ( @i{addr u -- true / addr u false  }) gforth-0.7 ``process-option''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30968
msgid ""
"Process an option @var{addr u}, return true, if the option is processed; "
"unprocessed options are loaded as files throu @code{required}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30974
#, no-wrap
msgid "engine"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30975
#, no-wrap
msgid "virtual machine"
msgstr ""

#. type: table
#: ../doc/gforth.texi:30979
msgid ""
"Reading this chapter is not necessary for programming with Gforth. It may be "
"helpful for finding your way in the Gforth sources."
msgstr ""

#. type: table
#: ../doc/gforth.texi:30988
msgid ""
"The ideas in this section have also been published in the following papers: "
"Bernd Paysan, @cite{ANS fig/GNU/??? Forth} (in German), Forth-Tagung '93; M. "
"Anton Ertl, @cite{@uref{https://www.complang.tuwien.ac.at/papers/ertl93.ps."
"Z, A Portable Forth Engine}}, EuroForth '93; M. Anton Ertl, "
"@cite{@uref{https://www.complang.tuwien.ac.at/papers/ertl02.ps.gz, Threaded "
"code variations and optimizations (extended version)}}, Forth-Tagung '02."
msgstr ""

#. type: node
#: ../doc/gforth.texi:30996 ../doc/gforth.texi:30997 ../doc/gforth.texi:31051
#, no-wrap
msgid "Portability"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:30998
#, no-wrap
msgid "engine portability"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31006
msgid ""
"An important goal of the Gforth Project is availability across a wide range "
"of personal machines. fig-Forth, and, to a lesser extent, F83, achieved this "
"goal by manually coding the engine in assembly language for several then-"
"popular processors. This approach is very labor-intensive and the results "
"are short-lived due to progress in computer architecture."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31007
#, no-wrap
msgid "C, using C for the engine"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31017
msgid ""
"Others have avoided this problem by coding in C, e.g., Mitch Bradley "
"(cforth), Mikael Patel (TILE) and Dirk Zoller (pfe). This approach is "
"particularly popular for UNIX-based Forths due to the large variety of "
"architectures of UNIX machines. Unfortunately an implementation in C does "
"not mix well with the goals of efficiency and with using traditional "
"techniques: Indirect or direct threading cannot be expressed in C, and "
"switch threading, the fastest technique available in C, is significantly "
"slower. Another problem with C is that it is very cumbersome to express "
"double integer arithmetic."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31018
#, no-wrap
msgid "GNU C for the engine"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31019
#, no-wrap
msgid "long long"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31031
msgid ""
"Fortunately, there is a portable language that does not have these "
"limitations: GNU C, the version of C processed by the GNU C compiler "
"(@pxref{C Extensions, , Extensions to the C Language Family, gcc, GNU C "
"Manual}). Its labels as values feature (@pxref{Labels as Values, , Labels as "
"Values, gcc, GNU C Manual}) makes direct and indirect threading possible, "
"its @code{long long} type (@pxref{Long Long, , Double-Word Integers, gcc, "
"GNU C Manual}) corresponds to Forth's double numbers on many systems.  GNU C "
"is freely available on all important (and many unimportant) UNIX machines, "
"VMS, 80386s running MS-DOS, the Amiga, and the Atari ST, so a Forth written "
"in GNU C can run on all these machines."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31036
msgid ""
"Writing in a portable language has the reputation of producing code that is "
"slower than assembly. For our Forth engine we repeatedly looked at the code "
"produced by the compiler and eliminated most compiler-induced inefficiencies "
"by appropriate changes in the source code."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31037
#, no-wrap
msgid "explicit register declarations"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31038
#, no-wrap
msgid "--enable-force-reg, configuration flag"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31039
#, no-wrap
msgid "-DFORCE_REG"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31050
msgid ""
"However, register allocation cannot be portably influenced by the "
"programmer, leading to some inefficiencies on register-starved machines. We "
"use explicit register declarations (@pxref{Explicit Reg Vars, , Variables in "
"Specified Registers, gcc, GNU C Manual}) to improve the speed on some "
"machines. They are turned on by using the configuration flag @code{--enable-"
"force-reg} (@code{gcc} switch @code{-DFORCE_REG}). Unfortunately, this "
"feature not only depends on the machine, but also on the compiler version: "
"On some machines some compiler versions produce incorrect code when certain "
"explicit register declarations are used. So by default @code{-DFORCE_REG} is "
"not used."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31053
#, no-wrap
msgid "inner interpreter implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31054
#, no-wrap
msgid "threaded code implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31056
#, no-wrap
msgid "labels as values"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31063
msgid ""
"GNU C's labels as values extension (available since @code{gcc-2.0}, "
"@pxref{Labels as Values, , Labels as Values, gcc, GNU C Manual})  makes it "
"possible to take the address of @i{label} by writing @code{&&@i{label}}.  "
"This address can then be used in a statement like @code{goto *@i{address}}. "
"I.e., @code{goto *&&x} is the same as @code{goto x}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31064
#, no-wrap
msgid "@code{NEXT}, indirect threaded"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31065
#, no-wrap
msgid "indirect threaded inner interpreter"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31066
#, no-wrap
msgid "inner interpreter, indirect threaded"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31068
msgid "With this feature an indirect threaded @code{NEXT} looks like:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31072
#, no-wrap
msgid ""
"cfa = *ip++;\n"
"ca = *cfa;\n"
"goto *ca;\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31073
#, no-wrap
msgid "instruction pointer"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31080
msgid ""
"For those unfamiliar with the names: @code{ip} is the Forth instruction "
"pointer; the @code{cfa} (code-field address) corresponds to Standard Forth's "
"execution token and points to the code field of the next word to be "
"executed; The @code{ca} (code address) fetched from there points to some "
"executable code, e.g., a primitive or the colon definition handler "
"@code{docol}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31081
#, no-wrap
msgid "@code{NEXT}, direct threaded"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31082
#, no-wrap
msgid "direct threaded inner interpreter"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31083
#, no-wrap
msgid "inner interpreter, direct threaded"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31085
msgid "Direct threading is even simpler:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31088
#, no-wrap
msgid ""
"ca = *ip++;\n"
"goto *ca;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31092
msgid ""
"Of course we have packaged the whole thing neatly in macros called "
"@code{NEXT} and @code{NEXT1} (the part of @code{NEXT} after fetching the "
"cfa)."
msgstr ""

#. type: node
#: ../doc/gforth.texi:31100 ../doc/gforth.texi:31101 ../doc/gforth.texi:31145
#, no-wrap
msgid "Scheduling"
msgstr ""

#. type: node
#: ../doc/gforth.texi:31100 ../doc/gforth.texi:31145 ../doc/gforth.texi:31146
#: ../doc/gforth.texi:31204
#, no-wrap
msgid "Direct or Indirect Threaded?"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31102
#, no-wrap
msgid "inner interpreter optimization"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31111
msgid ""
"There is a little complication: Pipelined and superscalar processors, i.e., "
"RISC and some modern CISC machines can process independent instructions "
"while waiting for the results of an instruction. The compiler usually "
"reorders (schedules) the instructions in a way that achieves good usage of "
"these delay slots. However, on our first tries the compiler did not do well "
"on scheduling primitives. E.g., for @code{+} implemented as"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31116
#, no-wrap
msgid ""
"n=sp[0]+sp[1];\n"
"sp++;\n"
"sp[0]=n;\n"
"NEXT;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31128
msgid ""
"the @code{NEXT} comes strictly after the other code, i.e., there is nearly "
"no scheduling. After a little thought the problem becomes clear: The "
"compiler cannot know that @code{sp} and @code{ip} point to different "
"addresses (and the version of @code{gcc} we used would not know it even if "
"it was possible), so it could not move the load of the cfa above the store "
"to the TOS. Indeed the pointers could be the same, if code on or very near "
"the top of stack were executed. In the interest of speed we chose to forbid "
"this probably unused ``feature'' and helped the compiler in scheduling: "
"@code{NEXT} is divided into several parts: @code{NEXT_P0}, @code{NEXT_P1} "
"and @code{NEXT_P2}). @code{+} now looks like:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31135
#, no-wrap
msgid ""
"NEXT_P0;\n"
"n=sp[0]+sp[1];\n"
"sp++;\n"
"NEXT_P1;\n"
"sp[0]=n;\n"
"NEXT_P2;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31143
msgid ""
"There are various schemes that distribute the different operations of NEXT "
"between these parts in several ways; in general, different schemes perform "
"best on different processors.  We use a scheme for most architectures that "
"performs well for most processors of this architecture; in the future we may "
"switch to benchmarking and chosing the scheme on installation time."
msgstr ""

#. type: node
#: ../doc/gforth.texi:31145 ../doc/gforth.texi:31204 ../doc/gforth.texi:31205
#: ../doc/gforth.texi:31336
#, no-wrap
msgid "Dynamic Superinstructions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31147
#, no-wrap
msgid "threading, direct or indirect?"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31154
msgid ""
"Threaded forth code consists of references to primitives (simple machine "
"code routines like @code{+}) and to non-primitives (e.g., colon definitions, "
"variables, constants); for a specific class of non-primitives (e.g., "
"variables) there is one code routine (e.g., @code{dovar}), but each variable "
"needs a separate reference to its data."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31158
msgid ""
"Traditionally Forth has been implemented as indirect threaded code, because "
"this allows to use only one cell to reference a non-primitive (basically you "
"point to the data, and find the code address there)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31159
#, no-wrap
msgid "primitive-centric threaded code"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31167
msgid ""
"However, threaded code in Gforth (since 0.6.0) uses two cells for non-"
"primitives, one for the code address, and one for the data address; the data "
"pointer is an immediate argument for the virtual machine instruction "
"represented by the code address.  We call this @emph{primitive-centric} "
"threaded code, because all code addresses point to simple primitives.  E.g., "
"for a variable, the code address is for @code{lit} (also used for integer "
"literals like @code{99})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31174
msgid ""
"Primitive-centric threaded code allows us to use (faster) direct threading "
"as dispatch method, completely portably (direct threaded code in Gforth "
"before 0.6.0 required architecture-specific code).  It also eliminates the "
"performance problems related to I-cache consistency that 386 implementations "
"have with direct threaded code, and allows additional optimizations."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31175
#, no-wrap
msgid "hybrid direct/indirect threaded code"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31184
msgid ""
"There is a catch, however: the @var{xt} parameter of @code{execute} can "
"occupy only one cell, so how do we pass non-primitives with their code "
"@emph{and} data addresses to them? Our answer is to use indirect threaded "
"dispatch for @code{execute} and other words that use a single-cell xt.  So, "
"normal threaded code in colon definitions uses direct threading, and "
"@code{execute} and similar words, which dispatch to xts on the data stack, "
"use indirect threaded code.  We call this @emph{hybrid direct/indirect} "
"threaded code."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31185
#, no-wrap
msgid "engines, gforth vs.@: gforth-fast vs.@: gforth-itc"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31186
#, no-wrap
msgid "gforth engine"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31187
#, no-wrap
msgid "gforth-fast engine"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31192
msgid ""
"The engines @command{gforth} and @command{gforth-fast} use hybrid direct/"
"indirect threaded code.  This means that with these engines you cannot use "
"@code{,} to compile an xt.  Instead, you have to use @code{compile,}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31193
#, no-wrap
msgid "gforth-itc engine"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31202
msgid ""
"If you want to compile xts with @code{,}, use @command{gforth-itc}.  This "
"engine uses plain old indirect threaded code.  It still compiles in a "
"primitive-centric style, so you cannot use @code{compile,} instead of "
"@code{,} (e.g., for producing tables of xts with @code{] word1 word2 ... "
"[}).  If you want to do that, you have to use @command{gforth-itc} and "
"execute @code{' , is compile,}.  Your program can check if it is running on "
"a hybrid direct/indirect threaded engine or a pure indirect threaded engine "
"with @code{threading-method} (@pxref{Threading Words})."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31206
#, no-wrap
msgid "Dynamic superinstructions with replication"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31207
#, no-wrap
msgid "Superinstructions"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31208
#, no-wrap
msgid "Replication"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31213
msgid ""
"The engines @command{gforth} and @command{gforth-fast} use another "
"optimization: Dynamic superinstructions with replication.  As an example, "
"consider the following colon definition:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31217
#, no-wrap
msgid ""
": squared ( n1 -- n2 )\n"
"  dup * ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31220
msgid "Gforth compiles this into the threaded code sequence"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31225
#, no-wrap
msgid ""
"dup\n"
"*\n"
";s\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31229
msgid ""
"Use @code{simple-see} (@pxref{Examining compiled code}) to see the threaded "
"code of a colon definition."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31235
msgid ""
"In normal direct threaded code there is a code address occupying one cell "
"for each of these primitives.  Each code address points to a machine code "
"routine, and the interpreter jumps to this machine code in order to execute "
"the primitive.  The routines for these three primitives are (in "
"@command{gforth-fast} on the 386):"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31256
#, no-wrap
msgid ""
"Code dup  \n"
"( $804B950 )  add     esi , # -4  \\ $83 $C6 $FC \n"
"( $804B953 )  add     ebx , # 4  \\ $83 $C3 $4 \n"
"( $804B956 )  mov     dword ptr 4 [esi] , ecx  \\ $89 $4E $4 \n"
"( $804B959 )  jmp     dword ptr FC [ebx]  \\ $FF $63 $FC \n"
"end-code\n"
"Code *  \n"
"( $804ACC4 )  mov     eax , dword ptr 4 [esi]  \\ $8B $46 $4 \n"
"( $804ACC7 )  add     esi , # 4  \\ $83 $C6 $4 \n"
"( $804ACCA )  add     ebx , # 4  \\ $83 $C3 $4 \n"
"( $804ACCD )  imul    ecx , eax  \\ $F $AF $C8 \n"
"( $804ACD0 )  jmp     dword ptr FC [ebx]  \\ $FF $63 $FC \n"
"end-code\n"
"Code ;s  \n"
"( $804A693 )  mov     eax , dword ptr [edi]  \\ $8B $7 \n"
"( $804A695 )  add     edi , # 4  \\ $83 $C7 $4 \n"
"( $804A698 )  lea     ebx , dword ptr 4 [eax]  \\ $8D $58 $4 \n"
"( $804A69B )  jmp     dword ptr FC [ebx]  \\ $FF $63 $FC \n"
"end-code\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31261
msgid ""
"With dynamic superinstructions and replication the compiler does not just "
"lay down the threaded code, but also copies the machine code fragments, "
"usually without the jump at the end."
msgstr ""

#. type: example
#: ../doc/gforth.texi:31274
#, no-wrap
msgid ""
"( $4057D27D )  add     esi , # -4  \\ $83 $C6 $FC \n"
"( $4057D280 )  add     ebx , # 4  \\ $83 $C3 $4 \n"
"( $4057D283 )  mov     dword ptr 4 [esi] , ecx  \\ $89 $4E $4 \n"
"( $4057D286 )  mov     eax , dword ptr 4 [esi]  \\ $8B $46 $4 \n"
"( $4057D289 )  add     esi , # 4  \\ $83 $C6 $4 \n"
"( $4057D28C )  add     ebx , # 4  \\ $83 $C3 $4 \n"
"( $4057D28F )  imul    ecx , eax  \\ $F $AF $C8 \n"
"( $4057D292 )  mov     eax , dword ptr [edi]  \\ $8B $7 \n"
"( $4057D294 )  add     edi , # 4  \\ $83 $C7 $4 \n"
"( $4057D297 )  lea     ebx , dword ptr 4 [eax]  \\ $8D $58 $4 \n"
"( $4057D29A )  jmp     dword ptr FC [ebx]  \\ $FF $63 $FC \n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31281
msgid ""
"Only when a threaded-code control-flow change happens (e.g., in @code{;s}), "
"the jump is appended.  This optimization eliminates many of these jumps and "
"makes the rest much more predictable.  The speedup depends on the processor "
"and the application; on the Athlon and Pentium III this optimization "
"typically produces a speedup by a factor of 2."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31285
msgid ""
"The code addresses in the direct-threaded code are set to point to the "
"appropriate points in the copied machine code, in this example like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31291
#, no-wrap
msgid ""
"primitive  code address\n"
"   dup       $4057D27D\n"
"   *         $4057D286\n"
"   ;s        $4057D292\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31295
msgid ""
"Thus there can be threaded-code jumps to any place in this piece of code.  "
"This also simplifies decompilation quite a bit."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31302
msgid ""
"@code{See-code} (@pxref{Examining compiled code}) shows the threaded code "
"intermingled with the native code of dynamic superinstructions.  These days "
"some additional optimizations are applied for the dynamically-generated "
"native code, so the output of @code{see-code squared} on @code{gforth-fast} "
"on one particular AMD64 installation looks like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31313
#, no-wrap
msgid ""
"$7FB689C678C8 dup    1->2 \n"
"7FB68990C1B2:   mov     r15,r8\n"
"$7FB689C678D0 *    2->1 \n"
"7FB68990C1B5:   imul    r8,r15\n"
"$7FB689C678D8 ;s    1->1 \n"
"7FB68990C1B9:   mov     rbx,[r14]\n"
"7FB68990C1BC:   add     r14,$08\n"
"7FB68990C1C0:   mov     rax,[rbx]\n"
"7FB68990C1C3:   jmp     eax\n"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31315
#, no-wrap
msgid "--no-dynamic command-line option"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31316
#, no-wrap
msgid "--no-super command-line option"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31324
msgid ""
"You can disable this optimization with @option{--no-dynamic}.  You can use "
"the copying without eliminating the jumps (i.e., dynamic replication, but "
"without superinstructions) with @option{--no-super}; this gives the branch "
"prediction benefit alone; the effect on performance depends on the CPU; on "
"the Athlon and Pentium III the speedup is a little less than for dynamic "
"superinstructions with replication."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31325
#, no-wrap
msgid "patching threaded code"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31330
msgid ""
"One use of these options is if you want to patch the threaded code.  With "
"superinstructions, many of the dispatch jumps are eliminated, so patching "
"often has no effect.  These options preserve all the dispatch jumps."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31331
#, no-wrap
msgid "--dynamic command-line option"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31335
msgid ""
"On some machines dynamic superinstructions are disabled by default, because "
"it is unsafe on these machines.  However, if you feel adventurous, you can "
"enable it with @option{--dynamic}."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31338
#, no-wrap
msgid "@code{DOES>} implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31340
#, no-wrap
msgid "@code{dodoes} routine"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31341
#, no-wrap
msgid "@code{DOES>}-code"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31349
msgid ""
"One of the most complex parts of a Forth engine is @code{dodoes}, i.e., the "
"chunk of code executed by every word defined by a @code{CREATE}..."
"@code{DOES>} pair; actually with primitive-centric code, this is only needed "
"if the xt of the word is @code{execute}d. The main problem here is: How to "
"find the Forth code to be executed, i.e. the code after the @code{DOES>} "
"(the @code{DOES>}-code)? There are two solutions:"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31359
msgid ""
"In fig-Forth the code field points directly to the @code{dodoes} and the "
"@code{DOES>}-code address is stored in the cell after the code address (i.e. "
"at @code{@i{CFA} cell+}). It may seem that this solution is illegal in the "
"Forth-79 and all later standards, because in fig-Forth this address lies in "
"the body (which is illegal in these standards). However, by making the code "
"field larger for all words this solution becomes legal again.  We use this "
"approach.  Leaving a cell unused in most words is a bit wasteful, but on the "
"machines we are targeting this is hardly a problem."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31363
#, no-wrap
msgid "primitives, implementation"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31364
#, no-wrap
msgid "virtual machine instructions, implementation"
msgstr ""

#. type: node
#: ../doc/gforth.texi:31372 ../doc/gforth.texi:31373 ../doc/gforth.texi:31459
#, no-wrap
msgid "Automatic Generation"
msgstr ""

#. type: node
#: ../doc/gforth.texi:31372 ../doc/gforth.texi:31459 ../doc/gforth.texi:31460
#: ../doc/gforth.texi:31517
#, no-wrap
msgid "TOS Optimization"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31374
#, no-wrap
msgid "primitives, automatic generation"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:31376
#, no-wrap
msgid "prims2x.fs"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31387
msgid ""
"Since the primitives are implemented in a portable language, there is no "
"longer any need to minimize the number of primitives. On the contrary, "
"having many primitives has an advantage: speed. In order to reduce the "
"number of errors in primitives and to make programming them easier, we "
"provide a tool, the primitive generator (@file{prims2x.fs} aka Vmgen, "
"@pxref{Top, Vmgen, Introduction, vmgen, Vmgen}), that automatically "
"generates most (and sometimes all) of the C code for a primitive from the "
"stack effect notation.  The source for a primitive has the following form:"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31388
#, no-wrap
msgid "primitive source format"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31395
#, no-wrap
msgid ""
"@i{Forth-name}  ( @i{stack-effect} )        @i{category}    [@i{pronounc.}]\n"
"[@code{\"\"}@i{glossary entry}@code{\"\"}]\n"
"@i{C code}\n"
"[@code{:}\n"
"@i{Forth code}]\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31401
msgid ""
"The items in brackets are optional. The category and glossary fields are "
"there for generating the documentation, the Forth code is there for manual "
"implementations on machines without GNU C. E.g., the source for the "
"primitive @code{+} is:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31404
#, no-wrap
msgid ""
"+    ( n1 n2 -- n )   core    plus\n"
"n = n1+n2;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31415
msgid ""
"This looks like a specification, but in fact @code{n = n1+n2} is C code. Our "
"primitive generation tool extracts a lot of information from the stack "
"effect notations@footnote{We use a one-stack notation, even though we have "
"separate data and floating-point stacks; The separate notation can be "
"generated easily from the unified notation.}: The number of items popped "
"from and pushed on the stack, their type, and by what name they are referred "
"to in the C code. It then generates a C code prelude and postlude for each "
"primitive. The final C code for @code{+} looks like this:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31436
#, no-wrap
msgid ""
"I_plus: /* + ( n1 n2 -- n ) */  /* label, stack effect */\n"
"/*  */                          /* documentation */\n"
"NAME(\"+\")                       /* debugging output (with -DDEBUG) */\n"
"@{\n"
"DEF_CA                          /* definition of variable ca (indirect threading) */\n"
"Cell n1;                        /* definitions of variables */\n"
"Cell n2;\n"
"Cell n;\n"
"NEXT_P0;                        /* NEXT part 0 */\n"
"n1 = (Cell) sp[1];              /* input */\n"
"n2 = (Cell) TOS;\n"
"sp += 1;                        /* stack adjustment */\n"
"@{\n"
"n = n1+n2;                      /* C code taken from the source */\n"
"@}\n"
"NEXT_P1;                        /* NEXT part 1 */\n"
"TOS = (Cell)n;                  /* output */\n"
"NEXT_P2;                        /* NEXT part 2 */\n"
"@}\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31442
msgid ""
"This looks long and inefficient, but the GNU C compiler optimizes quite well "
"and produces optimal code for @code{+} on, e.g., the R3000 and the HP RISC "
"machines: Defining the @code{n}s does not produce any code, and using them "
"as intermediate storage also adds no cost."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31451
msgid ""
"There are also other optimizations that are not illustrated by this example: "
"assignments between simple variables are usually for free (copy "
"propagation). If one of the stack items is not used by the primitive (e.g.  "
"in @code{drop}), the compiler eliminates the load from the stack (dead code "
"elimination). On the other hand, there are some things that the compiler "
"does not do, therefore they are performed by @file{prims2x.fs}: The compiler "
"does not optimize code away that stores a stack item to the place where it "
"just came from (e.g., @code{over})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31456
msgid ""
"While programming a primitive is usually easy, there are a few cases where "
"the programmer has to take the actions of the generator into account, most "
"notably @code{?dup}, but also words that do not (always)  fall through to "
"@code{NEXT}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31458
msgid "For more information"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31461
#, no-wrap
msgid "TOS optimization for primitives"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31462
#, no-wrap
msgid "primitives, keeping the TOS in a register"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31468
msgid ""
"An important optimization for stack machine emulators, e.g., Forth engines, "
"is keeping one or more of the top stack items in registers.  If a word has "
"the stack effect @i{in1}...@i{inx} @code{--} @i{out1}...@i{outy}, keeping "
"the top @i{n} items in registers"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:31472
msgid ""
"is better than keeping @i{n-1} items, if @i{x>=n} and @i{y>=n}, due to fewer "
"loads from and stores to the stack."
msgstr ""

#. type: item
#: ../doc/gforth.texi:31472
#, no-wrap
msgid "is slower than keeping @i{n-1} items, if @i{x<>y} and @i{x<n} and"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:31474
msgid "@i{y<n}, due to additional moves between registers."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31476
#, no-wrap
msgid "-DUSE_TOS"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31477
#, no-wrap
msgid "-DUSE_NO_TOS"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31489
msgid ""
"In particular, keeping one item in a register is never a disadvantage, if "
"there are enough registers. Keeping two items in registers is a disadvantage "
"for frequent words like @code{?branch}, constants, variables, literals and "
"@code{i}. Therefore our generator only produces code that keeps zero or one "
"items in registers. The generated C code covers both cases; the selection "
"between these alternatives is made at C-compile time using the switch @code{-"
"DUSE_TOS}. @code{TOS} in the C code for @code{+} is just a simple variable "
"name in the one-item case, otherwise it is a macro that expands into "
"@code{sp[0]}. Note that the GNU C compiler tries to keep simple variables "
"like @code{TOS} in registers, and it usually succeeds, if there are enough "
"registers."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31490
#, no-wrap
msgid "-DUSE_FTOS"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31491
#, no-wrap
msgid "-DUSE_NO_FTOS"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31501
msgid ""
"The primitive generator performs the TOS optimization for the floating-point "
"stack, too (@code{-DUSE_FTOS}). For floating-point operations the benefit of "
"this optimization is even larger: floating-point operations take quite long "
"on most processors, but can be performed in parallel with other operations "
"as long as their results are not used. If the FP-TOS is kept in a register, "
"this works. If it is kept on the stack, i.e., in memory, the store into "
"memory has to wait for the result of the floating-point operation, "
"lengthening the execution time of the primitive considerably."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31506
msgid ""
"The TOS optimization makes the automatic generation of primitives a bit more "
"complicated. Just replacing all occurrences of @code{sp[0]} by @code{TOS} is "
"not sufficient. There are some special cases to consider:"
msgstr ""

#. type: item
#: ../doc/gforth.texi:31507
#, no-wrap
msgid "In the case of @code{dup ( w -- w w )} the generator must not"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:31510
msgid ""
"eliminate the store to the original location of the item on the stack, if "
"the TOS optimization is turned on."
msgstr ""

#. type: item
#: ../doc/gforth.texi:31510
#, no-wrap
msgid "Primitives with stack effects of the form @code{--}"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:31515
msgid ""
"@i{out1}...@i{outy} must store the TOS to the stack at the start.  Likewise, "
"primitives with the stack effect @i{in1}...@i{inx} @code{--} must load the "
"TOS from the stack at the end. But for the null stack effect @code{--} no "
"stores or loads should be generated."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31519
#, no-wrap
msgid "primitives, assembly code listing"
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:31521
#, no-wrap
msgid "engine.s"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31526
msgid ""
"To see what assembly code is produced for the primitives on your machine "
"with your compiler and your flag settings, type @code{make engine.s} and "
"look at the resulting file @file{engine.s}.  Alternatively, you can also "
"disassemble the code of primitives with @code{see} on some architectures."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31529
#, no-wrap
msgid "performance of some Forth interpreters"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31530
#, no-wrap
msgid "engine performance"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31531
#, no-wrap
msgid "benchmarking Forth systems"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31532
#, no-wrap
msgid "Gforth performance"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31536
msgid ""
"On RISCs the Gforth engine is very close to optimal; i.e., it is usually "
"impossible to write a significantly faster threaded-code engine."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31549
msgid ""
"On register-starved machines like the 386 architecture processors "
"improvements are possible, because @code{gcc} does not utilize the registers "
"as well as a human, even with explicit register declarations; e.g., Bernd "
"Beuster wrote a Forth system fragment in assembly language and hand-tuned it "
"for the 486; this system is 1.19 times faster on the Sieve benchmark on a "
"486DX2/66 than Gforth compiled with @code{gcc-2.6.3} with @code{-"
"DFORCE_REG}.  The situation has improved with gcc-2.95 and gforth-0.4.9; now "
"the most important virtual machine registers fit in real registers (and we "
"can even afford to use the TOS optimization), resulting in a speedup of 1.14 "
"on the sieve over the earlier results.  And dynamic superinstructions "
"provide another speedup (but only around a factor 1.2 on the 486)."
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31550
#, no-wrap
msgid "Win32Forth performance"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31551
#, no-wrap
msgid "NT Forth performance"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31552
#, no-wrap
msgid "eforth performance"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31553
#, no-wrap
msgid "ThisForth performance"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31554
#, no-wrap
msgid "PFE performance"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:31555
#, no-wrap
msgid "TILE performance"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31574
msgid ""
"The potential advantage of assembly language implementations is not "
"necessarily realized in complete Forth systems: We compared Gforth-0.5.9 "
"(direct threaded, compiled with @code{gcc-2.95.1} and @code{-DFORCE_REG}) "
"with Win32Forth 1.2093 (newer versions are reportedly much faster), LMI's NT "
"Forth (Beta, May 1994) and Eforth (with and without peephole (aka pinhole) "
"optimization of the threaded code); all these systems were written in "
"assembly language. We also compared Gforth with three systems written in C: "
"PFE-0.9.14 (compiled with @code{gcc-2.6.3} with the default configuration "
"for Linux: @code{-O2 -fomit-frame-pointer -DUSE_REGS -DUNROLL_NEXT}), "
"ThisForth Beta (compiled with @code{gcc-2.6.3 -O3 -fomit-frame-pointer}; "
"ThisForth employs peephole optimization of the threaded code) and TILE "
"(compiled with @code{make opt}). We benchmarked Gforth, PFE, ThisForth and "
"TILE on a 486DX2/66 under Linux. Kenneth O'Heskin kindly provided the "
"results for Win32Forth and NT Forth on a 486DX2/66 with similar memory "
"performance under Windows NT. Marcel Hendrix ported Eforth to Linux, then "
"extended it to run the benchmarks, added the peephole optimizer, ran the "
"benchmarks and reported the results."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31583
msgid ""
"We used four small benchmarks: the ubiquitous Sieve; bubble-sorting and "
"matrix multiplication come from the Stanford integer benchmarks and have "
"been translated into Forth by Martin Fraeman; we used the versions included "
"in the TILE Forth package, but with bigger data set sizes; and a recursive "
"Fibonacci number computation for benchmarking calling performance. The "
"following table shows the time taken for the benchmarks scaled by the time "
"taken by Gforth (in other words, it shows the speedup factor that Gforth "
"achieved over the other systems)."
msgstr ""

#. type: example
#: ../doc/gforth.texi:31591
#, no-wrap
msgid ""
"relative       Win32-    NT       eforth       This-      \n"
"time     Gforth Forth Forth eforth  +opt   PFE Forth  TILE\n"
"sieve      1.00  2.16  1.78   2.16  1.32  2.46  4.96 13.37\n"
"bubble     1.00  1.93  2.07   2.18  1.29  2.21        5.70\n"
"matmul     1.00  1.92  1.76   1.90  0.96  2.06        5.32\n"
"fib        1.00  2.32  2.03   1.86  1.31  2.64  4.55  6.54\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31601
msgid ""
"You may be quite surprised by the good performance of Gforth when compared "
"with systems written in assembly language. One important reason for the "
"disappointing performance of these other systems is probably that they are "
"not written optimally for the 486 (e.g., they use the @code{lods} "
"instruction). In addition, Win32Forth uses a comfortable, but costly method "
"for relocating the Forth image: like @code{cforth}, it computes the actual "
"addresses at run time, resulting in two address computations per @code{NEXT} "
"(@pxref{Image File Background})."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31609
msgid ""
"The speedup of Gforth over PFE, ThisForth and TILE can be easily explained "
"with the self-imposed restriction of the latter systems to standard C, which "
"makes efficient threading impossible (however, the measured implementation "
"of PFE uses a GNU C extension: @pxref{Global Reg Vars, , Defining Global "
"Register Variables, gcc, GNU C Manual}).  Moreover, current C compilers have "
"a hard time optimizing other aspects of the ThisForth and the TILE source."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31616
msgid ""
"The performance of Gforth on 386 architecture processors varies widely with "
"the version of @code{gcc} used. E.g., @code{gcc-2.5.8} failed to allocate "
"any of the virtual machine registers into real machine registers by itself "
"and would not work correctly with explicit register declarations, giving a "
"significantly slower engine (on a 486DX2/66 running the Sieve) than the one "
"measured above."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31621
msgid ""
"Note that there have been several releases of Win32Forth since the release "
"presented here, so the results presented above may have little predictive "
"value for the performance of Win32Forth today (results for the current "
"release on an i486DX2/66 are welcome)."
msgstr ""

#. type: file{#1}
#: ../doc/gforth.texi:31622
#, no-wrap
msgid "Benchres"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31633
msgid ""
"In @cite{@uref{https://www.complang.tuwien.ac.at/papers/ertl&maierhofer95.ps."
"gz, Translating Forth to Efficient C}} by M. Anton Ertl and Martin "
"Maierhofer (presented at EuroForth '95), an indirect threaded version of "
"Gforth is compared with Win32Forth, NT Forth, PFE, ThisForth, and several "
"native code systems; that version of Gforth is slower on a 486 than the "
"version used here. You can find a newer version of these measurements at "
"@uref{https://www.complang.tuwien.ac.at/forth/performance.html}. You can "
"find numbers for Gforth on various machines in @file{Benchres}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31651
msgid ""
"The cross compiler is used to bootstrap a Forth kernel. Since Gforth is "
"mostly written in Forth, including crucial parts like the outer interpreter "
"and compiler, it needs compiled Forth code to get started. The cross "
"compiler allows to create new images for other architectures, even running "
"under another Forth system."
msgstr ""

#. type: node
#: ../doc/gforth.texi:31657 ../doc/gforth.texi:31658 ../doc/gforth.texi:31778
#, no-wrap
msgid "Using the Cross Compiler"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31665
msgid ""
"The cross compiler uses a language that resembles Forth, but isn't. The main "
"difference is that you can execute Forth code after definition, while you "
"usually can't execute the code compiled by cross, because the code you are "
"compiling is typically for a different computer than the one you are "
"compiling on."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31676
msgid ""
"The Makefile is already set up to allow you to create kernels for new "
"architectures with a simple make command. The generic kernels using the GCC "
"compiled virtual machine are created in the normal build process with "
"@code{make}. To create a embedded Gforth executable for e.g. the 8086 "
"processor (running on a DOS machine), type"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31679
#, no-wrap
msgid "make kernl-8086.fi\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31683
msgid ""
"This will use the machine description from the @file{arch/8086} directory to "
"create a new kernel. A machine file may look like that:"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31686
#, no-wrap
msgid ""
"\\ Parameter for target systems                         06oct92py\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31696
#, no-wrap
msgid ""
"    4 Constant cell             \\ cell size in bytes\n"
"    2 Constant cell<<           \\ cell shift to bytes\n"
"    5 Constant cell>bit         \\ cell shift to bits\n"
"    8 Constant bits/char        \\ bits per character\n"
"    8 Constant bits/byte        \\ bits per byte [default: 8]\n"
"    8 Constant float            \\ bytes per float\n"
"    8 Constant /maxalign        \\ maximum alignment in bytes\n"
"false Constant bigendian        \\ byte order\n"
"( true=big, false=little )\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31698
#, no-wrap
msgid "include machpc.fs               \\ feature list\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31703
msgid ""
"This part is obligatory for the cross compiler itself, the feature list is "
"used by the kernel to conditionally compile some features in and out, "
"depending on whether the target supports these features."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31709
msgid ""
"There are some optional features, if you define your own primitives, have an "
"assembler, or need special, nonstandard preparation to make the boot process "
"work. @code{asm-include} includes an assembler, @code{prims-include} "
"includes primitives, and @code{>boot} prepares for booting."
msgstr ""

#. type: example
#: ../doc/gforth.texi:31713
#, no-wrap
msgid ""
": asm-include    .\" Include assembler\" cr\n"
"  s\" arch/8086/asm.fs\" included ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31716
#, no-wrap
msgid ""
": prims-include  .\" Include primitives\" cr\n"
"  s\" arch/8086/prim.fs\" included ;\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31719
#, no-wrap
msgid ""
": >boot          .\" Prepare booting\" cr\n"
"  s\" ' boot >body into-forth 1+ !\" evaluate ;\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31725
msgid ""
"These words are used as sort of macro during the cross compilation in the "
"file @file{kernel/main.fs}. Instead of using these macros, it would be "
"possible --- but more complicated --- to write a new kernel project file, "
"too."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31731
msgid ""
"@file{kernel/main.fs} expects the machine description file name on the "
"stack; the cross compiler itself (@file{cross.fs}) assumes that either "
"@code{mach-file} leaves a counted string on the stack, or @code{machine-"
"file} leaves an address, count pair of the filename on the stack."
msgstr ""

#. type: table
#: ../doc/gforth.texi:31738
msgid ""
"The feature list is typically controlled using @code{SetValue}, generic "
"files that are used by several projects can use @code{DefaultValue} instead. "
"Both functions work like @code{Value}, when the value isn't defined, but "
"@code{SetValue} works like @code{to} if the value is defined, and "
"@code{DefaultValue} doesn't set anything, if the value is defined."
msgstr ""

#. type: example
#: ../doc/gforth.texi:31741
#, no-wrap
msgid ""
"\\ generic mach file for pc gforth                       03sep97jaw\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31743
#, no-wrap
msgid ""
"true DefaultValue NIL  \\ relocating\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31745
#, no-wrap
msgid ""
">ENVIRON\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31749
#, no-wrap
msgid ""
"true DefaultValue file          \\ controls the presence of the\n"
"                                \\ file access wordset\n"
"true DefaultValue OS            \\ flag to indicate a operating system\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31751
#, no-wrap
msgid ""
"true DefaultValue prims         \\ true: primitives are c-code\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31753
#, no-wrap
msgid ""
"true DefaultValue floating      \\ floating point wordset is present\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31757
#, no-wrap
msgid ""
"true DefaultValue glocals       \\ gforth locals are present\n"
"                                \\ will be loaded\n"
"true DefaultValue dcomps        \\ double number comparisons\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31759
#, no-wrap
msgid ""
"true DefaultValue hash          \\ hashing primitives are loaded/present\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31764
#, no-wrap
msgid ""
"true DefaultValue xconds        \\ used together with glocals,\n"
"                                \\ special conditionals supporting gforths'\n"
"                                \\ local variables\n"
"true DefaultValue header        \\ save a header information\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31766
#, no-wrap
msgid ""
"true DefaultValue backtrace     \\ enables backtrace code\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31769
#, no-wrap
msgid ""
"false DefaultValue ec\n"
"false DefaultValue crlf\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31771
#, no-wrap
msgid ""
"cell 2 = [IF] &32 [ELSE] &256 [THEN] KB DefaultValue kernel-size\n"
"\n"
msgstr ""

#. type: example
#: ../doc/gforth.texi:31776
#, no-wrap
msgid ""
"&16 KB          DefaultValue stack-size\n"
"&15 KB &512 +   DefaultValue fstack-size\n"
"&15 KB          DefaultValue rstack-size\n"
"&14 KB &512 +   DefaultValue lstack-size\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31799
msgid ""
"MINOS2 is a GUI library, written in @file{mini-oof2.fs}'s object model.  It "
"has two main class hierarchies:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31800
#, no-wrap
msgid "actor ( @var{ -- class   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31801 ../doc/gforth.texi:31802
#, no-wrap
msgid "actor"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31805
#, no-wrap
msgid "@code{actor} ( @i{-- class  }) minos2 ``actor''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31807
msgid "class for the actions bound to a component."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31809
#, no-wrap
msgid "widget ( @var{ -- class   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31810 ../doc/gforth.texi:31811
#, no-wrap
msgid "widget"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31814
#, no-wrap
msgid "@code{widget} ( @i{-- class  }) minos2 ``widget''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31816
msgid "class for visual components"
msgstr ""

#. type: node
#: ../doc/gforth.texi:31819 ../doc/gforth.texi:31994
#, no-wrap
msgid "actor methods"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:31820
#, no-wrap
msgid "@code{actor} methods:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31822
#, no-wrap
msgid "caller-w ( @var{ -- optr   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31823 ../doc/gforth.texi:31824
#, no-wrap
msgid "caller-w"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31827
#, no-wrap
msgid "@code{caller-w} ( @i{-- optr  }) minos2 ``caller-w''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31829
msgid "pointer back to the widget embedding the actor"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31831
#, no-wrap
msgid "active-w ( @var{ -- optr   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31832 ../doc/gforth.texi:31833
#, no-wrap
msgid "active-w"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31836
#, no-wrap
msgid "@code{active-w} ( @i{-- optr  }) minos2 ``active-w''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31838
msgid "pointer to the active subwidget embedding the actor"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31840
#, no-wrap
msgid "act-name$ ( @var{ -- addr u   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31841 ../doc/gforth.texi:31842
#, no-wrap
msgid "act-name$"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31845
#, no-wrap
msgid "@code{act-name$} ( @i{-- addr u  }) minos2 ``act-name-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31847
msgid "Debugging aid: name of the actor"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31849
#, no-wrap
msgid "clicked ( @var{ rx ry bmask n --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31850 ../doc/gforth.texi:31851
#, no-wrap
msgid "clicked"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31854
#, no-wrap
msgid "@code{clicked} ( @i{rx ry bmask n --  }) minos2 ``clicked''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31856
msgid "processed clicks"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31858
#, no-wrap
msgid "scrolled ( @var{ axis dir --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31859 ../doc/gforth.texi:31860
#, no-wrap
msgid "scrolled"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31863
#, no-wrap
msgid "@code{scrolled} ( @i{axis dir --  }) minos2 ``scrolled''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31865
msgid "process scrolling"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31867
#, no-wrap
msgid "touchdown ( @var{ $rxy*n bmask --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31868 ../doc/gforth.texi:31869
#, no-wrap
msgid "touchdown"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31872
#, no-wrap
msgid "@code{touchdown} ( @i{$rxy*n bmask --  }) minos2 ``touchdown''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31874
msgid "raw click down"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31876
#, no-wrap
msgid "touchup ( @var{ $rxy*n bmask --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31877 ../doc/gforth.texi:31878
#, no-wrap
msgid "touchup"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31881
#, no-wrap
msgid "@code{touchup} ( @i{$rxy*n bmask --  }) minos2 ``touchup''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31883
msgid "raw click up"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31885
#, no-wrap
msgid "ukeyed ( @var{ addr u --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31886 ../doc/gforth.texi:31887
#, no-wrap
msgid "ukeyed"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31890
#, no-wrap
msgid "@code{ukeyed} ( @i{addr u --  }) minos2 ``ukeyed''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31892
msgid "key event, string of printable unicode characters"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31894
#, no-wrap
msgid "ekeyed ( @var{ ekey --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31895 ../doc/gforth.texi:31896
#, no-wrap
msgid "ekeyed"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31899
#, no-wrap
msgid "@code{ekeyed} ( @i{ekey --  }) minos2 ``ekeyed''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31901
msgid "key event, non-printable key"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31903
#, no-wrap
msgid "?inside ( @var{ rx ry -- act / 0   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31904 ../doc/gforth.texi:31905
#, no-wrap
msgid "?inside"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31908
#, no-wrap
msgid "@code{?inside} ( @i{rx ry -- act / 0  }) minos2 ``query-inside''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31910
msgid "check if coordinates are inside the widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31912
#, no-wrap
msgid "focus ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31913 ../doc/gforth.texi:31914
#, no-wrap
msgid "focus"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31917
#, no-wrap
msgid "@code{focus} ( @i{--  }) minos2 ``focus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31919
msgid "put widget into focus"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31921
#, no-wrap
msgid "defocus ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31922 ../doc/gforth.texi:31923
#, no-wrap
msgid "defocus"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31926
#, no-wrap
msgid "@code{defocus} ( @i{--  }) minos2 ``defocus''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31928
msgid "put widget out of focus"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31930
#, no-wrap
msgid "entered ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31931 ../doc/gforth.texi:31932
#, no-wrap
msgid "entered"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31935
#, no-wrap
msgid "@code{entered} ( @i{--  }) minos2 ``entered''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31937
msgid "react on cursor entering the widget area"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31939
#, no-wrap
msgid "left ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31940 ../doc/gforth.texi:31941
#, no-wrap
msgid "left"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31944
#, no-wrap
msgid "@code{left} ( @i{--  }) minos2 ``left''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31946
msgid "react on cursor leaving the widget area"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31948
#, no-wrap
msgid "show ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31949 ../doc/gforth.texi:31950
#, no-wrap
msgid "show"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31953
#, no-wrap
msgid "@code{show} ( @i{--  }) minos2 ``show''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31955
msgid "widget is shown"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31957
#, no-wrap
msgid "hide ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31958 ../doc/gforth.texi:31959
#, no-wrap
msgid "hide"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31962
#, no-wrap
msgid "@code{hide} ( @i{--  }) minos2 ``hide''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31964
msgid "widget is hidden"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31966
#, no-wrap
msgid "get ( @var{ -- something   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31967 ../doc/gforth.texi:31968
#, no-wrap
msgid "get"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31971
#, no-wrap
msgid "@code{get} ( @i{-- something  }) minos2 ``get''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31973
msgid "getter for the value behind the widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31975
#, no-wrap
msgid "set ( @var{ something --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31976 ../doc/gforth.texi:31977
#, no-wrap
msgid "set"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31980
#, no-wrap
msgid "@code{set} ( @i{something --  }) minos2 ``set''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31982
msgid "setter for the value behind the widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31984
#, no-wrap
msgid "show-you ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31985 ../doc/gforth.texi:31986
#, no-wrap
msgid "show-you"
msgstr ""

#. type: format
#: ../doc/gforth.texi:31989
#, no-wrap
msgid "@code{show-you} ( @i{--  }) minos2 ``show-you''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:31991
msgid "make widget visible"
msgstr ""

#. type: subsection
#: ../doc/gforth.texi:31995
#, no-wrap
msgid "@code{widget} methods:"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:31997
#, no-wrap
msgid "parent-w ( @var{ -- optr   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:31998 ../doc/gforth.texi:31999
#, no-wrap
msgid "parent-w"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32002
#, no-wrap
msgid "@code{parent-w} ( @i{-- optr  }) minos2 ``parent-w''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32004
msgid "pointer to parent widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32006
#, no-wrap
msgid "act ( @var{ -- optr   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32007 ../doc/gforth.texi:32008
#, no-wrap
msgid "act"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32011
#, no-wrap
msgid "@code{act} ( @i{-- optr  }) minos2 ``act''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32013
msgid "pointer to actor"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32015
#, no-wrap
msgid "name$ ( @var{ -- addr u   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32016 ../doc/gforth.texi:32017
#, no-wrap
msgid "name$"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32020
#, no-wrap
msgid "@code{name$} ( @i{-- addr u  }) minos2 ``name-string''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32022
msgid "Widget name for debugging and searching"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32024
#, no-wrap
msgid "x ( @var{ -- r   } ) minos2"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32029
#, no-wrap
msgid "@code{x} ( @i{-- r  }) minos2 ``x''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32031
msgid "widget x coordinate"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32033
#, no-wrap
msgid "y ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32034 ../doc/gforth.texi:32035
#, no-wrap
msgid "y"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32038
#, no-wrap
msgid "@code{y} ( @i{-- r  }) minos2 ``y''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32040
msgid "widget y coordinate"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32042
#, no-wrap
msgid "w ( @var{ -- r   } ) minos2"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32047
#, no-wrap
msgid "@code{w} ( @i{-- r  }) minos2 ``w''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32049
msgid "widget width"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32051
#, no-wrap
msgid "h ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32052 ../doc/gforth.texi:32053
#, no-wrap
msgid "h"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32056
#, no-wrap
msgid "@code{h} ( @i{-- r  }) minos2 ``h''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32058
msgid "widget height above baseline"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32060
#, no-wrap
msgid "d ( @var{ -- r   } ) minos2"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32065
#, no-wrap
msgid "@code{d} ( @i{-- r  }) minos2 ``d''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32067
msgid "widget depth below baseline"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32069
#, no-wrap
msgid "gap ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32070 ../doc/gforth.texi:32071
#, no-wrap
msgid "gap"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32074
#, no-wrap
msgid "@code{gap} ( @i{-- r  }) minos2 ``gap''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32076
msgid "gap between lines"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32078
#, no-wrap
msgid "baseline ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32079 ../doc/gforth.texi:32080
#, no-wrap
msgid "baseline"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32083
#, no-wrap
msgid "@code{baseline} ( @i{-- r  }) minos2 ``baseline''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32085
msgid "minimun skip per line"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32087
#, no-wrap
msgid "kerning ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32088 ../doc/gforth.texi:32089
#, no-wrap
msgid "kerning"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32092
#, no-wrap
msgid "@code{kerning} ( @i{-- r  }) minos2 ``kerning''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32094
msgid "add kerning"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32096
#, no-wrap
msgid "raise ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32097 ../doc/gforth.texi:32098
#, no-wrap
msgid "raise"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32101
#, no-wrap
msgid "@code{raise} ( @i{-- r  }) minos2 ``raise''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32103
msgid "raise/lower box"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32105
#, no-wrap
msgid "border ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32106 ../doc/gforth.texi:32107
#, no-wrap
msgid "border"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32110
#, no-wrap
msgid "@code{border} ( @i{-- r  }) minos2 ``border''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32112
msgid "surrounding border, all directions"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32114
#, no-wrap
msgid "borderv ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32115 ../doc/gforth.texi:32116
#, no-wrap
msgid "borderv"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32119
#, no-wrap
msgid "@code{borderv} ( @i{-- r  }) minos2 ``borderv''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32121
msgid "vertical border offset"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32123
#, no-wrap
msgid "bordert ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32124 ../doc/gforth.texi:32125
#, no-wrap
msgid "bordert"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32128
#, no-wrap
msgid "@code{bordert} ( @i{-- r  }) minos2 ``bordert''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32130
msgid "top border offset"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32132
#, no-wrap
msgid "borderl ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32133 ../doc/gforth.texi:32134
#, no-wrap
msgid "borderl"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32137
#, no-wrap
msgid "@code{borderl} ( @i{-- r  }) minos2 ``borderl''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32139
msgid "left border offset"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32141
#, no-wrap
msgid "w-color ( @var{ -- r   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32142 ../doc/gforth.texi:32143
#, no-wrap
msgid "w-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32146
#, no-wrap
msgid "@code{w-color} ( @i{-- r  }) minos2 ``w-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32148
msgid "widget color index (into color map), if any"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32150
#, no-wrap
msgid "draw-init ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32151 ../doc/gforth.texi:32152
#, no-wrap
msgid "draw-init"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32155
#, no-wrap
msgid "@code{draw-init} ( @i{--  }) minos2 ``draw-init''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32157
msgid "init draw"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32159
#, no-wrap
msgid "draw ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32160 ../doc/gforth.texi:32161
#, no-wrap
msgid "draw"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32164
#, no-wrap
msgid "@code{draw} ( @i{--  }) minos2 ``draw''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32166
msgid "draw widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32168
#, no-wrap
msgid "split ( @var{ firstflag rstart1 rx -- o rstart2   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32169 ../doc/gforth.texi:32170
#, no-wrap
msgid "split"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32173
#, no-wrap
msgid "@code{split} ( @i{firstflag rstart1 rx -- o rstart2  }) minos2 ``split''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32175
msgid "split a widget into parts for typesetting paragraphs"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32177
#, no-wrap
msgid "lastfit ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32178 ../doc/gforth.texi:32179
#, no-wrap
msgid "lastfit"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32182
#, no-wrap
msgid "@code{lastfit} ( @i{--  }) minos2 ``lastfit''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32184
msgid "fit last widget element in a box"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32186
#, no-wrap
msgid "hglue ( @var{ -- rtyp rsub radd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32187 ../doc/gforth.texi:32188
#, no-wrap
msgid "hglue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32191
#, no-wrap
msgid "@code{hglue} ( @i{-- rtyp rsub radd  }) minos2 ``hglue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32193
msgid "calculate horizontal glue"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32195
#, no-wrap
msgid "dglue ( @var{ -- rtyp rsub radd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32196 ../doc/gforth.texi:32197
#, no-wrap
msgid "dglue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32200
#, no-wrap
msgid "@code{dglue} ( @i{-- rtyp rsub radd  }) minos2 ``dglue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32202
msgid "calculate vertical glue below baseline"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32204
#, no-wrap
msgid "vglue ( @var{ -- rtyp rsub radd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32205 ../doc/gforth.texi:32206
#, no-wrap
msgid "vglue"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32209
#, no-wrap
msgid "@code{vglue} ( @i{-- rtyp rsub radd  }) minos2 ``vglue''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32211
msgid "calculate vertical glue above baseline"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32213
#, no-wrap
msgid "hglue@@ ( @var{ -- rtyp rsub radd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32214 ../doc/gforth.texi:32215
#, no-wrap
msgid "hglue@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32218
#, no-wrap
msgid "@code{hglue@@} ( @i{-- rtyp rsub radd  }) minos2 ``hglue-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32220
msgid "cached variant of @code{hglue}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32222
#, no-wrap
msgid "dglue@@ ( @var{ -- rtyp rsub radd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32223 ../doc/gforth.texi:32224
#, no-wrap
msgid "dglue@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32227
#, no-wrap
msgid "@code{dglue@@} ( @i{-- rtyp rsub radd  }) minos2 ``dglue-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32229
msgid "cached variant of @code{dglue}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32231
#, no-wrap
msgid "vglue@@ ( @var{ -- rtyp rsub radd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32232 ../doc/gforth.texi:32233
#, no-wrap
msgid "vglue@@"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32236
#, no-wrap
msgid "@code{vglue@@} ( @i{-- rtyp rsub radd  }) minos2 ``vglue-fetch''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32238
msgid "cached variant of @code{vglue}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32240
#, no-wrap
msgid "xywh ( @var{ -- rx0 ry0 rw rh   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32241 ../doc/gforth.texi:32242
#, no-wrap
msgid "xywh"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32245
#, no-wrap
msgid "@code{xywh} ( @i{-- rx0 ry0 rw rh  }) minos2 ``xywh''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32247
msgid "widget bounding box, starting at the top left corner"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32249
#, no-wrap
msgid "xywhd ( @var{ -- rx ry rw rh rd   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32250 ../doc/gforth.texi:32251
#, no-wrap
msgid "xywhd"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32254
#, no-wrap
msgid "@code{xywhd} ( @i{-- rx ry rw rh rd  }) minos2 ``xywhd''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32256
msgid "widget bounding box, starting at the left baseline point"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32258
#, no-wrap
msgid "!resize ( @var{ rx ry rw rh rd --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32259 ../doc/gforth.texi:32260
#, no-wrap
msgid "!resize"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32263
#, no-wrap
msgid "@code{!resize} ( @i{rx ry rw rh rd --  }) minos2 ``store-resize''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32265
msgid "resize a widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32267
#, no-wrap
msgid "!size ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32268 ../doc/gforth.texi:32269
#, no-wrap
msgid "!size"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32272
#, no-wrap
msgid "@code{!size} ( @i{--  }) minos2 ``store-size''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32274
msgid "let the widget self-determine its size"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32276
#, no-wrap
msgid "dispose-widget ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32277 ../doc/gforth.texi:32278
#, no-wrap
msgid "dispose-widget"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32281
#, no-wrap
msgid "@code{dispose-widget} ( @i{--  }) minos2 ``dispose-widget''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32283
msgid "get rid of a widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32285
#, no-wrap
msgid ".widget ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32286 ../doc/gforth.texi:32287
#, no-wrap
msgid ".widget"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32290
#, no-wrap
msgid "@code{.widget} ( @i{--  }) minos2 ``print-widget''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32292
msgid "debugging: Print informations about the widget"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32294
#, no-wrap
msgid "par-split ( @var{ rw --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32295 ../doc/gforth.texi:32296
#, no-wrap
msgid "par-split"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32299
#, no-wrap
msgid "@code{par-split} ( @i{rw --  }) minos2 ``par-split''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32301
msgid "split a paragraph by width @var{rw}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32303
#, no-wrap
msgid "resized ( @var{ --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32304 ../doc/gforth.texi:32305
#, no-wrap
msgid "resized"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32308
#, no-wrap
msgid "@code{resized} ( @i{--  }) minos2 ``resized''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32310
msgid "widget is resized"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32317
msgid ""
"Components are composed using a boxes&glue model similar to @LaTeX{}, "
"including paragraph breaking.  For the sake of simplicity and portability, "
"MINOS2 only supports a single window, and uses OpenGL for rendering."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32321
msgid ""
"MINOS2 furthermore supports animations with the @code{animation} class.  A "
"color index texture is used for different color schemes, and transition "
"between neighboring schemes can also be animated."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32322
#, no-wrap
msgid ">animate ( @var{ rdelta addr xt --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32323 ../doc/gforth.texi:32324
#, no-wrap
msgid ">animate"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32327
#, no-wrap
msgid "@code{>animate} ( @i{rdelta addr xt --  }) minos2 ``to-animate''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32331
msgid ""
"create a new animation, calling @var{xt} with stack effect @code{( addr "
"r0..1 -- )} repeatedly, until the @var{rdelta} timeout expired; last call is "
"always with argument @var{1e} for the time."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32336
msgid ""
"You can create named color indexes and assign them color values for the "
"currently active color scheme."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32337
#, no-wrap
msgid "color: ( @var{ rgba \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32338 ../doc/gforth.texi:32339
#, no-wrap
msgid "color:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32342
#, no-wrap
msgid "@code{color:} ( @i{rgba \"name\" --  }) minos2 ``color:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32344
msgid "Create a (possibly shared) color index initialized with @var{rgba}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32346
#, no-wrap
msgid "new-color: ( @var{ rgba \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32347 ../doc/gforth.texi:32348
#, no-wrap
msgid "new-color:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32351
#, no-wrap
msgid "@code{new-color:} ( @i{rgba \"name\" --  }) minos2 ``new-color:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32353
msgid "Create a unique color index initialized with @var{rgba}"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32355
#, no-wrap
msgid "text-color: ( @var{ rgba \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32356 ../doc/gforth.texi:32357
#, no-wrap
msgid "text-color:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32360
#, no-wrap
msgid "@code{text-color:} ( @i{rgba \"name\" --  }) minos2 ``text-color:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32363
msgid ""
"Create a unique text color index initialized with @var{rgba}, the "
"corresponding emoji color is set to white."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32365
#, no-wrap
msgid "text-emoji-color: ( @var{ rgbatext rgbaemoji \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32366 ../doc/gforth.texi:32367
#, no-wrap
msgid "text-emoji-color:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32370
#, no-wrap
msgid "@code{text-emoji-color:} ( @i{rgbatext rgbaemoji \"name\" --  }) minos2 ``text-emoji-color:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32373
msgid ""
"Create a unique text color index initialized with @var{rgbatext}, the "
"corresponding emoji color is set to @var{rgbaemoji}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32375
#, no-wrap
msgid "fade-color: ( @var{ rgba1 rgba2 \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32376 ../doc/gforth.texi:32377
#, no-wrap
msgid "fade-color:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32380
#, no-wrap
msgid "@code{fade-color:} ( @i{rgba1 rgba2 \"name\" --  }) minos2 ``fade-color:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32385
msgid ""
"Create a unique pair of text color index initialized with @var{rgba1} and "
"@var{rgba2}, the corresponding emoji color is set to white. By slowly "
"shifting the index from one to the next index, the object will shift its "
"color using a linear interpolation when redrawn."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32387
#, no-wrap
msgid "text-emoji-fade-color: ( @var{ rgbatext1 ~2 rgbaemoji1 ~2 \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32388 ../doc/gforth.texi:32389
#, no-wrap
msgid "text-emoji-fade-color:"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32392
#, no-wrap
msgid "@code{text-emoji-fade-color:} ( @i{rgbatext1 ~2 rgbaemoji1 ~2 \"name\" --  }) minos2 ``text-emoji-fade-color:''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32398
msgid ""
"Create a unique pair of text color index initialized with @var{rgbatext1} "
"and @var{~2}, the corresponding emoji color pair is set to @var{rgbaemoji1} "
"to @var{~2}. By slowly shifting the index from one to the next index, the "
"object will shift its color using a linear interpolation when redrawn."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32400
#, no-wrap
msgid "re-color ( @var{ rgba \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32401 ../doc/gforth.texi:32402
#, no-wrap
msgid "re-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32405
#, no-wrap
msgid "@code{re-color} ( @i{rgba \"name\" --  }) minos2 ``re-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32408
msgid ""
"assign the named color index @var{\"name\"} in the current color scheme with "
"the value @var{rgba}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32410
#, no-wrap
msgid "re-text-color ( @var{ rgba \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32411 ../doc/gforth.texi:32412
#, no-wrap
msgid "re-text-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32415
#, no-wrap
msgid "@code{re-text-color} ( @i{rgba \"name\" --  }) minos2 ``re-text-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32418
msgid ""
"assign the named text color index @var{\"name\"} in the current color scheme "
"with the value @var{rgba}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32420
#, no-wrap
msgid "re-emoji-color ( @var{ rgbatext rgbaemoji \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32421 ../doc/gforth.texi:32422
#, no-wrap
msgid "re-emoji-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32425
#, no-wrap
msgid "@code{re-emoji-color} ( @i{rgbatext rgbaemoji \"name\" --  }) minos2 ``re-emoji-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32428
msgid ""
"assign the named text and emoji color index @var{\"name\"} in the current "
"color scheme with the value @var{rgbatext} and @var{rgbaemoji}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32430
#, no-wrap
msgid "re-fade-color ( @var{ rgba1 rgba2 \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32431 ../doc/gforth.texi:32432
#, no-wrap
msgid "re-fade-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32435
#, no-wrap
msgid "@code{re-fade-color} ( @i{rgba1 rgba2 \"name\" --  }) minos2 ``re-fade-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32438
msgid ""
"assign the named color index pair @var{\"name\"} in the current color scheme "
"with the value @var{rgba1} and @var{rgba2}."
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32440
#, no-wrap
msgid "re-text-emoji-fade-color ( @var{ rgbatext1 ~2 rgbaemoji1 ~2 \"name\" --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32441 ../doc/gforth.texi:32442
#, no-wrap
msgid "re-text-emoji-fade-color"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32445
#, no-wrap
msgid "@code{re-text-emoji-fade-color} ( @i{rgbatext1 ~2 rgbaemoji1 ~2 \"name\" --  }) minos2 ``re-text-emoji-fade-color''\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32449
msgid ""
"assign the named color index pair @var{\"name\"} in the current color scheme "
"with the value @var{rgbatext1} and @var{~2} resp. @var{rgbaemoji1} and "
"@var{~2}."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32454
msgid ""
"For a number of specific objects, there are early bound methods, that only "
"work on these objects"
msgstr ""

#. type: item
#: ../doc/gforth.texi:32456
#, no-wrap
msgid "Viewport"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32458
#, no-wrap
msgid "vp-top ( @var{ o:vp --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32459 ../doc/gforth.texi:32460
#, no-wrap
msgid "vp-top"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32463
#, no-wrap
msgid "@code{vp-top} ( @i{o:vp --  }) minos2 ``vp-top''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32465
msgid "scroll viewport to top"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32467
#, no-wrap
msgid "vp-bottom ( @var{ o:vp --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32468 ../doc/gforth.texi:32469
#, no-wrap
msgid "vp-bottom"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32472
#, no-wrap
msgid "@code{vp-bottom} ( @i{o:vp --  }) minos2 ``vp-bottom''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32474
msgid "scroll viewport to bottom"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32476
#, no-wrap
msgid "vp-left ( @var{ o:vp --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32477 ../doc/gforth.texi:32478
#, no-wrap
msgid "vp-left"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32481
#, no-wrap
msgid "@code{vp-left} ( @i{o:vp --  }) minos2 ``vp-left''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32483
msgid "scroll viewport to left"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32485
#, no-wrap
msgid "vp-right ( @var{ o:vp --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32486 ../doc/gforth.texi:32487
#, no-wrap
msgid "vp-right"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32490
#, no-wrap
msgid "@code{vp-right} ( @i{o:vp --  }) minos2 ``vp-right''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32492
msgid "scroll viewport to right"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32494
#, no-wrap
msgid "vp-reslide ( @var{ o:vp --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32495 ../doc/gforth.texi:32496
#, no-wrap
msgid "vp-reslide"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32499
#, no-wrap
msgid "@code{vp-reslide} ( @i{o:vp --  }) minos2 ``vp-reslide''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32501
msgid "Adjust the sliders of a viewport after scrolling"
msgstr ""

#. type: findex
#: ../doc/gforth.texi:32503
#, no-wrap
msgid "vp-needed ( @var{ xt --   } ) minos2"
msgstr ""

#. type: kindex
#: ../doc/gforth.texi:32504 ../doc/gforth.texi:32505
#, no-wrap
msgid "vp-needed"
msgstr ""

#. type: format
#: ../doc/gforth.texi:32508
#, no-wrap
msgid "@code{vp-needed} ( @i{xt --  }) minos2 ``vp-needed''\n"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32510
msgid "collect needs in viewport's vp-need"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32524
msgid ""
"Tutorials are small files, each showing a bit of MINOS2.  For the common "
"framework, the file @file{minos2/tutorial/tutorial.fs} needs to be loaded "
"first; all other tutorials in the command line argument are included from "
"within that file.  Scroll wheel or previous/next mouse buttons as well as "
"clicking on the left or right edge of the window allow navigation between "
"the different tutorials loaded."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32526
msgid "I.e. to load the buttons tutorial, you start Gforth with"
msgstr ""

#. type: example
#: ../doc/gforth.texi:32529
#, no-wrap
msgid "gforth minos2/tutorial/tutorial.fs buttons.fs\n"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32532
msgid "Available tutorials:"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32536
msgid "@file{buttons.fs}: Clickable buttons"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32539
msgid "@file{plots.fs}: Plot functions"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32542
msgid "@file{markdown.fs}: Markdown document viewer"
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32545
msgid "@file{screenshot.fs}: Screenshot function"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:32549
#, no-wrap
msgid "bug reporting"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32552
msgid ""
"Known bugs are described in the file @file{BUGS} in the Gforth distribution."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32555
msgid ""
"If you find a bug, please submit a bug report through @uref{https://savannah."
"gnu.org/bugs/?func=addbug&group=gforth}."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32559
msgid "A program (or a sequence of keyboard commands) that reproduces the bug."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32561
msgid "A description of what you think constitutes the buggy behaviour."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32564
msgid ""
"The Gforth version used (it is announced at the start of an interactive "
"Gforth session)."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32567
msgid ""
"The machine and operating system (on Unix systems @code{uname -a} will "
"report this information)."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32571
msgid ""
"The installation options (you can find the configure options at the start of "
"@file{config.status}) and configuration (@code{configure} output or "
"@file{config.cache})."
msgstr ""

#. type: itemize
#: ../doc/gforth.texi:32574
msgid ""
"A complete list of changes (if any) you (or your installer) have made to the "
"Gforth sources."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32578
msgid ""
"For a thorough guide on reporting bugs read @ref{Bug Reporting, , How to "
"Report Bugs, gcc, GNU C Manual}."
msgstr ""

#. type: appendix
#: ../doc/gforth.texi:32581
#, no-wrap
msgid "Authors and Ancestors of Gforth"
msgstr ""

#. type: section
#: ../doc/gforth.texi:32583
#, no-wrap
msgid "Authors and Contributors"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:32584
#, no-wrap
msgid "authors of Gforth"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:32585
#, no-wrap
msgid "contributors to Gforth"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32602
msgid ""
"The Gforth project was started in mid-1992 by Bernd Paysan and Anton Ertl. "
"The third major author was Jens Wilke.  Neal Crook contributed a lot to the "
"manual.  Assemblers and disassemblers were contributed by Andrew McKewan, "
"Christian Pirker, Bernd Thallner, and Michal Revucky.  Lennart Benschop (who "
"was one of Gforth's first users, in mid-1993)  and Stuart Ramsden inspired "
"us with their continuous feedback. Lennart Benshop contributed @file{glosgen."
"fs}, while Stuart Ramsden has been working on automatic support for calling "
"C libraries. Helpful comments also came from Paul Kleinrubatscher, Christian "
"Pirker, Dirk Zoller, Marcel Hendrix, John Wavrik, Barrie Stott, Marc de "
"Groot, Jorge Acerada, Bruce Hoyt, Robert Epprecht, Dennis Ruffer and David "
"N. Williams. Since the release of Gforth-0.2.1 there were also helpful "
"comments from many others; thank you all, sorry for not listing you here "
"(but digging through my mailbox to extract your names is on my to-do list)."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32607
msgid ""
"Gforth also owes a lot to the authors of the tools we used (GCC, CVS, and "
"autoconf, among others), and to the creators of the Internet: Gforth was "
"developed across the Internet, and its authors did not meet physically for "
"the first 4 years of development."
msgstr ""

#. type: section
#: ../doc/gforth.texi:32608
#, no-wrap
msgid "Pedigree"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:32609
#, no-wrap
msgid "pedigree of Gforth"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32613
msgid ""
"Gforth descends from bigFORTH (1993) and fig-Forth.  Of course, a "
"significant part of the design of Gforth was prescribed by Standard Forth."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32617
msgid ""
"Bernd Paysan wrote bigFORTH, a descendent from TurboForth, an unreleased 32 "
"bit native code version of VolksForth for the Atari ST, written mostly by "
"Dietrich Weineck."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32621
msgid ""
"VolksForth was written by Klaus Schleisiek, Bernd Pennemann, Georg Rehfeld "
"and Dietrich Weineck for the C64 (called UltraForth there) in the mid-80s "
"and ported to the Atari ST in 1986.  It descends from fig-Forth."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32628
msgid ""
"A team led by Bill Ragsdale implemented fig-Forth on many processors in "
"1979. Robert Selzer and Bill Ragsdale developed the original implementation "
"of fig-Forth for the 6502 based on microForth."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32633
msgid ""
"The principal architect of microForth was Dean Sanderson. microForth was "
"FORTH, Inc.'s first off-the-shelf product. It was developed in 1976 for the "
"1802, and subsequently implemented on the 8080, the 6800 and the Z80."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32637
msgid ""
"All earlier Forth systems were custom-made, usually by Charles Moore, who "
"discovered (as he puts it) Forth during the late 60s. The first full Forth "
"existed in 1971."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32647
msgid ""
"A part of the information in this section comes from @cite{@uref{https://www."
"forth.com/resources/evolution/index.html,The Evolution of Forth}} by "
"Elizabeth D. Rather, Donald R. Colburn and Charles H. Moore, presented at "
"the HOPL-II conference and preprinted in SIGPLAN Notices 28(3), 1993.  You "
"can find more historical and genealogical information about Forth there.  "
"For a more general (and graphical) Forth family tree look see "
"@cite{@uref{https://www.complang.tuwien.ac.at/forth/family-tree/}, Forth "
"Family Tree and Timeline}."
msgstr ""

#. type: appendix
#: ../doc/gforth.texi:32650
#, no-wrap
msgid "Other Forth-related information"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:32656
#, no-wrap
msgid "comp.lang.forth"
msgstr ""

#. type: cindex
#: ../doc/gforth.texi:32657
#, no-wrap
msgid "frequently asked questions"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32664
msgid ""
"There is an active news group (comp.lang.forth) discussing Forth (including "
"Gforth) and Forth-related issues. Its @uref{https://www.complang.tuwien.ac."
"at/forth/faq/faq-general-2.html,FAQs} (frequently asked questions and their "
"answers) contains a lot of information on Forth.  You should read it before "
"posting to comp.lang.forth."
msgstr ""

#. type: table
#: ../doc/gforth.texi:32667
msgid ""
"The Forth standard is most usable in its @uref{https://forth-standard.org/, "
"HTML form}."
msgstr ""

#. type: include
#: ../doc/gforth.texi:32679
#, no-wrap
msgid "fdl.texi"
msgstr ""

#. type: appendixsec
#: ../doc/gforth.texi:32682
#, no-wrap
msgid "GNU GENERAL PUBLIC LICENSE"
msgstr ""

#. type: include
#: ../doc/gforth.texi:32683
#, no-wrap
msgid "gpl.texi"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32694
msgid ""
"This index is a list of Forth words that have ``glossary'' entries within "
"this manual. Each word is listed with its stack effect and wordset."
msgstr ""

#. type: unnumbered
#: ../doc/gforth.texi:32709
#, no-wrap
msgid "Concept and Word Index"
msgstr ""

#. type: table
#: ../doc/gforth.texi:32714
msgid ""
"Not all entries listed in this index are present verbatim in the text. This "
"index also duplicates, in abbreviated form, all of the words listed in the "
"Word Index (only the names are listed for the words here)."
msgstr ""
