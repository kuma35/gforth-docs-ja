This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306274
gforth.info-3: 603090
gforth.info-4: 908362
gforth.info-5: 1230989

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17670
Ref: Goals-Footnote-119871
Node: Stability Goals20072
Node: Gforth Environment22032
Node: Invoking Gforth22928
Node: Leaving Gforth38638
Node: Help on Gforth39307
Node: Command-line editing40603
Ref: Command-line editing-Footnote-144045
Node: Environment variables44136
Node: Gforth Files46469
Node: Gforth in pipes47445
Node: Startup speed50025
Node: Tutorial54934
Node: Starting Gforth Tutorial57839
Node: Syntax Tutorial58395
Node: Crash Course Tutorial59668
Node: Stack Tutorial60905
Node: Arithmetics Tutorial61795
Ref: Arithmetics Tutorial-Footnote-163132
Node: Stack Manipulation Tutorial63257
Node: Using files for Forth code Tutorial65053
Node: Comments Tutorial67241
Ref: Comments Tutorial-Footnote-168801
Node: Colon Definitions Tutorial68904
Node: Decompilation Tutorial71008
Node: Stack-Effect Comments Tutorial71659
Node: Types Tutorial76320
Node: Factoring Tutorial78879
Node: Designing the stack effect Tutorial80747
Node: Local Variables Tutorial84159
Node: Conditional execution Tutorial86165
Node: Flags and Comparisons Tutorial87926
Node: General Loops Tutorial91619
Node: Counted loops Tutorial94223
Node: Recursion Tutorial95959
Node: Leaving definitions or loops Tutorial97375
Node: Return Stack Tutorial98426
Node: Memory Tutorial101148
Node: Characters and Strings Tutorial105208
Node: Alignment Tutorial107248
Node: Floating Point Tutorial109025
Node: Files Tutorial113902
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118205
Node: Execution Tokens Tutorial121658
Node: Exceptions Tutorial125837
Node: Defining Words Tutorial128206
Node: Arrays and Records Tutorial131807
Node: POSTPONE Tutorial133735
Node: Literal Tutorial136411
Node: Advanced macros Tutorial137497
Node: Compilation Tokens Tutorial140141
Node: Wordlists and Search Order Tutorial141656
Node: Introduction145594
Node: Introducing the Text Interpreter148362
Ref: Introducing the Text Interpreter-Footnote-1155577
Node: Stacks and Postfix notation155840
Node: Your first definition168822
Ref: Your first definition-Footnote-1173654
Node: How does that work?173856
Node: Forth is written in Forth186193
Ref: Forth is written in Forth-Footnote-1188657
Ref: Forth is written in Forth-Footnote-2188757
Node: Review - elements of a Forth system188811
Node: Where to go next191269
Node: Exercises193703
Node: Literals in source code194114
Node: Words202610
Node: Notation203429
Node: Case insensitivity209741
Node: Comments212177
Node: Boolean Flags213750
Node: Arithmetic214919
Node: Single precision216165
Node: Double precision217500
Node: Mixed precision219355
Node: Integer division219650
Node: Two-stage integer division227199
Node: Bitwise operations233683
Node: Numeric comparison238454
Node: Floating Point241470
Ref: Floating Point-Footnote-1248977
Node: Stack Manipulation249216
Node: Data stack250081
Node: Floating point stack251648
Node: Return stack252533
Node: Locals stack253872
Node: Stack pointer manipulation254212
Node: Memory255435
Node: Memory model255919
Ref: Memory model-Footnote-1257662
Node: Dictionary allocation257944
Node: Heap Allocation263964
Node: Memory Access268753
Node: Special Memory Accesses270574
Node: Address arithmetic277010
Node: Memory Blocks284396
Node: Strings and Characters288144
Node: Characters288450
Node: String representations290501
Node: String and character literals292310
Node: String words298347
Node: $tring words306274
Node: Counted string words316350
Node: Control Structures318251
Ref: Control Structures-Footnote-1319067
Node: Selection319216
Node: Simple Loops322957
Node: Counted Loops323895
Ref: Counted Loops-Footnote-1337997
Node: BEGIN loops with multiple exits338083
Node: General control structures with CASE340493
Ref: General control structures with CASE-Footnote-1344233
Node: Arbitrary control structures344484
Node: Calls and returns352576
Node: Exception Handling355489
Node: Defining Words370868
Node: CREATE371702
Node: Variables374640
Node: Constants377314
Ref: Constants-Footnote-1381519
Node: Values381898
Node: Varues383754
Node: Colon Definitions385442
Node: Anonymous Definitions389561
Node: Quotations391735
Node: Supplying names393164
Node: User-defined Defining Words394058
Node: User-defined defining words with colon definitions394849
Ref: User-defined defining words with colon definitions-Footnote-1398109
Node: User-defined defining words using CREATE398461
Ref: User-defined defining words using CREATE-Footnote-1404740
Ref: User-defined defining words using CREATE-Footnote-2404833
Node: CREATE..DOES> applications405100
Node: CREATE..DOES> details406910
Node: Advanced does> usage example410011
Node: User-defined TO and DEFER@415931
Node: User-defined compile-comma419375
Node: Creating from a prototype425602
Node: Making a word current428641
Node: Const-does>429779
Node: Deferred Words431318
Node: Forward438021
Node: Aliases439010
Node: Interpretation and Compilation Semantics441150
Ref: Interpretation and Compilation Semantics-Footnote-1445438
Ref: Interpretation and Compilation Semantics-Footnote-2445523
Node: Combined words445753
Ref: state-smartness448023
Ref: Combined words-Footnote-1449333
Node: Tokens for Words449572
Node: Execution token450130
Ref: Execution token-Footnote-1455681
Node: Name token456214
Node: Compilation token463154
Ref: Compilation token-Footnote-1465643
Node: Compiling words465986
Node: Literals466901
Node: Macros471141
Ref: Macros-Footnote-1482715
Node: The Text Interpreter483031
Ref: The Text Interpreter-Footnote-1491980
Ref: The Text Interpreter-Footnote-2492086
Ref: The Text Interpreter-Footnote-3492432
Ref: The Text Interpreter-Footnote-4492666
Ref: The Text Interpreter-Footnote-5492723
Node: Input Sources492817
Node: Number Conversion496085
Node: Interpret/Compile states499420
Node: Interpreter Directives500562
Node: Recognizers506303
Node: Default Recognizers507426
Node: Dealing with existing Recognizers512631
Node: Defining Recognizers521929
Node: Text Interpreter Hooks522172
Node: The Input Stream523031
Node: Word Lists528892
Node: Vocabularies540298
Node: Why use word lists?541728
Node: Word list example545224
Node: Environmental Queries545981
Node: Files557087
Node: Forth source files557805
Node: General files562279
Node: Redirection568084
Node: Directories570731
Node: Search Paths575517
Node: Source Search Paths578587
Node: General Search Paths579715
Node: Blocks582680
Ref: Blocks-Footnote-1597925
Node: Other I/O598510
Node: Simple numeric output599296
Node: Formatted numeric output603090
Node: Floating-point output609808
Node: Miscellaneous output614569
Node: Displaying characters and strings617665
Node: Terminal output618370
Node: Single-key input620956
Node: Line input and conversion627748
Node: Pipes631381
Node: Xchars and Unicode632367
Node: i18n and l10n638414
Node: Substitute641714
Node: CSV Reader643830
Node: OS command line arguments644332
Node: Locals646597
Node: Gforth locals647547
Node: Locals definition words652807
Node: Where are locals visible by name?656704
Ref: Where are locals visible by name?-Footnote-1663943
Node: How long do locals live?664042
Node: Locals programming style664904
Node: Locals implementation667616
Node: Closures674875
Node: Standard Forth locals679362
Node: Structures680913
Node: Why explicit structure support?681763
Node: Structure Usage684337
Ref: Structure Usage-Footnote-1687317
Node: Structure Naming Convention687601
Node: Structure Implementation688804
Node: Structure Glossary690133
Node: Forth200x Structures692159
Node: Object-oriented Forth694774
Node: Why object-oriented programming?695521
Node: Object-Oriented Terminology696884
Node: Objects698743
Node: Properties of the Objects model699888
Node: Basic Objects Usage701679
Node: The Objects base class704088
Node: Creating objects704578
Node: Object-Oriented Programming Style705380
Node: Class Binding706376
Node: Method conveniences708630
Ref: Method conveniences-Footnote-1710786
Node: Classes and Scoping710984
Node: Dividing classes712464
Node: Object Interfaces713718
Node: Objects Implementation715734
Ref: Objects Implementation-Footnote-1720601
Node: Objects Glossary720679
Node: OOF727526
Node: Properties of the OOF model728238
Node: Basic OOF Usage729294
Node: The OOF base class731604
Node: Class Declaration735127
Node: Class Implementation736224
Node: Mini-OOF736371
Node: Basic Mini-OOF Usage736862
Node: Mini-OOF Example738130
Node: Mini-OOF Implementation739677
Node: Mini-OOF2743741
Node: Comparison with other object models745009
Ref: Comparison with other object models-Footnote-1748687
Node: Regular Expressions748845
Node: Programming Tools755360
Node: Locating source code definitions756235
Node: Locating uses of a word759364
Node: Locating exception source761922
Node: Examining compiled code762252
Node: Examining data767929
Node: Forgetting words770297
Node: Debugging771644
Node: Assertions774884
Node: Singlestep Debugger778327
Node: Code Coverage781477
Node: Multitasker784304
Node: Pthreads785182
Node: Basic multi-tasking785982
Node: Task-local data790135
Node: Semaphores791953
Node: Hardware operations for multi-tasking793321
Node: Message queues794851
Node: Cilk796175
Node: C Interface798249
Node: Calling C Functions799843
Ref: Calling C Functions-Footnote-1802913
Node: Declaring C Functions803125
Node: Calling C function pointers806756
Node: Defining library interfaces808322
Node: Declaring OS-level libraries811092
Node: Callbacks813306
Node: C interface internals815015
Node: Low-Level C Interface Words816359
Node: Automated interface generation using SWIG817096
Node: Migrating the C interface from earlier Gforth819465
Node: Assembler and Code Words820155
Node: Assembler Definitions820883
Node: Common Assembler829172
Node: Common Disassembler831870
Node: 386 Assembler833565
Node: AMD64 Assembler838016
Node: Alpha Assembler845968
Node: MIPS assembler846933
Node: PowerPC assembler850358
Node: ARM Assembler851370
Node: Other assemblers856309
Node: Carnal words857611
Node: Header fields858005
Node: Header methods861037
Node: Threading Words868626
Node: Passing Commands to the OS874509
Node: Keeping track of Time876167
Node: Miscellaneous Words877578
Node: Error messages878176
Node: Tools881411
Node: Standard Report881764
Node: Stack depth changes883663
Node: Standard conformance885641
Node: The Core Words888559
Node: core-idef888930
Node: core-ambcond897315
Node: core-other908362
Node: The optional Block word set909689
Node: block-idef910101
Node: block-ambcond910529
Node: block-other911477
Node: The optional Double Number word set911838
Node: double-ambcond912148
Node: The optional Exception word set912422
Node: exception-idef912736
Node: The optional Facility word set913470
Node: facility-idef913831
Node: facility-ambcond915010
Node: The optional File-Access word set915411
Node: file-idef915783
Node: file-ambcond918170
Node: The optional Floating-Point word set919481
Node: floating-idef919857
Node: floating-ambcond921001
Node: The optional Locals word set924172
Node: locals-idef924538
Node: locals-ambcond925081
Node: The optional Memory-Allocation word set925584
Node: memory-idef925924
Node: The optional Programming-Tools word set926389
Node: programming-idef926788
Node: programming-ambcond927720
Node: The optional Search-Order word set929055
Node: search-idef929396
Node: search-ambcond929774
Node: Standard vs Extensions930540
Node: Model933887
Node: Integrating Gforth934119
Node: Emacs and Gforth937752
Node: Installing gforth.el939676
Node: Emacs Tags940463
Node: Hilighting941372
Node: Auto-Indentation943244
Node: Blocks Files944661
Node: Image Files946053
Node: Image Licensing Issues947004
Node: Image File Background948194
Ref: Image File Background-Footnote-1952486
Node: Non-Relocatable Image Files952602
Node: Data-Relocatable Image Files953593
Node: Fully Relocatable Image Files954502
Node: gforthmi955374
Node: cross.fs958104
Node: Stack and Dictionary Sizes958814
Node: Running Image Files959904
Ref: Running Image Files-Footnote-1962845
Node: Modifying the Startup Sequence963216
Node: Engine965883
Node: Portability966628
Node: Threading969307
Node: Scheduling970546
Node: Direct or Indirect Threaded?972348
Node: Dynamic Superinstructions975205
Node: DOES>979988
Node: Primitives981094
Node: Automatic Generation981292
Ref: Automatic Generation-Footnote-1984799
Node: TOS Optimization984970
Node: Produced code987671
Node: Performance988090
Node: Cross Compiler993492
Node: Using the Cross Compiler994007
Node: How the Cross Compiler Works998652
Node: MINOS2998833
Node: MINOS2 object framework999024
Node: actor methods999519
Node: widget methods1001284
Node: MINOS2 tutorial1007943
Node: Bugs1008800
Node: Origin1009847
Node: Forth-related information1013003
Node: Licenses1013601
Node: GNU Free Documentation License1013919
Node: Copying1036500
Node: Word Index1074255
Node: Concept Index1230989

End Tag Table


Local Variables:
coding: utf-8
End:
