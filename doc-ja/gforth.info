This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306220
gforth.info-3: 602200
gforth.info-4: 902081
gforth.info-5: 1223381

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17670
Ref: Goals-Footnote-119871
Node: Stability Goals20072
Node: Gforth Environment22032
Node: Invoking Gforth22928
Node: Leaving Gforth38638
Node: Help on Gforth39307
Node: Command-line editing40603
Ref: Command-line editing-Footnote-144045
Node: Environment variables44136
Node: Gforth Files46469
Node: Gforth in pipes47445
Node: Startup speed50025
Node: Tutorial54934
Node: Starting Gforth Tutorial57839
Node: Syntax Tutorial58395
Node: Crash Course Tutorial59668
Node: Stack Tutorial60905
Node: Arithmetics Tutorial61795
Ref: Arithmetics Tutorial-Footnote-163132
Node: Stack Manipulation Tutorial63257
Node: Using files for Forth code Tutorial65053
Node: Comments Tutorial67241
Ref: Comments Tutorial-Footnote-168801
Node: Colon Definitions Tutorial68904
Node: Decompilation Tutorial71008
Node: Stack-Effect Comments Tutorial71659
Node: Types Tutorial76320
Node: Factoring Tutorial78879
Node: Designing the stack effect Tutorial80747
Node: Local Variables Tutorial84159
Node: Conditional execution Tutorial86165
Node: Flags and Comparisons Tutorial87926
Node: General Loops Tutorial91619
Node: Counted loops Tutorial94223
Node: Recursion Tutorial95959
Node: Leaving definitions or loops Tutorial97375
Node: Return Stack Tutorial98426
Node: Memory Tutorial101148
Node: Characters and Strings Tutorial105208
Node: Alignment Tutorial107248
Node: Floating Point Tutorial109025
Node: Files Tutorial113902
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118202
Node: Execution Tokens Tutorial121655
Node: Exceptions Tutorial125834
Node: Defining Words Tutorial128203
Node: Arrays and Records Tutorial131804
Node: POSTPONE Tutorial133732
Node: Literal Tutorial136408
Node: Advanced macros Tutorial137494
Node: Compilation Tokens Tutorial140138
Node: Wordlists and Search Order Tutorial141653
Node: Introduction145591
Node: Introducing the Text Interpreter148359
Ref: Introducing the Text Interpreter-Footnote-1155574
Node: Stacks and Postfix notation155837
Node: Your first definition168819
Ref: Your first definition-Footnote-1173651
Node: How does that work?173853
Node: Forth is written in Forth186190
Ref: Forth is written in Forth-Footnote-1188654
Ref: Forth is written in Forth-Footnote-2188754
Node: Review - elements of a Forth system188808
Node: Where to go next191266
Node: Exercises193700
Node: Literals in source code194111
Node: Words202607
Node: Notation203426
Node: Case insensitivity209738
Node: Comments212174
Node: Boolean Flags213747
Node: Arithmetic214916
Node: Single precision216162
Node: Double precision217497
Node: Mixed precision219352
Node: Integer division219647
Node: Two-stage integer division227196
Node: Bitwise operations233653
Node: Numeric comparison238424
Node: Floating Point241440
Ref: Floating Point-Footnote-1248947
Node: Stack Manipulation249186
Node: Data stack250051
Node: Floating point stack251618
Node: Return stack252503
Node: Locals stack253842
Node: Stack pointer manipulation254182
Node: Memory255405
Node: Memory model255889
Ref: Memory model-Footnote-1257632
Node: Dictionary allocation257914
Node: Heap Allocation263934
Node: Memory Access268708
Node: Special Memory Accesses270529
Node: Address arithmetic276965
Node: Memory Blocks284351
Node: Strings and Characters288093
Node: Characters288399
Node: String representations290450
Node: String and character literals292259
Node: String words298293
Node: $tring words306220
Node: Counted string words316289
Node: Control Structures318190
Ref: Control Structures-Footnote-1319006
Node: Selection319155
Node: Simple Loops322896
Node: Counted Loops323834
Ref: Counted Loops-Footnote-1337936
Node: BEGIN loops with multiple exits338022
Node: General control structures with CASE340432
Ref: General control structures with CASE-Footnote-1344172
Node: Arbitrary control structures344423
Node: Calls and returns352515
Node: Exception Handling355428
Node: Defining Words370807
Node: CREATE371641
Node: Variables374576
Node: Constants377247
Ref: Constants-Footnote-1381452
Node: Values381831
Node: Varues383687
Node: Colon Definitions385375
Node: Anonymous Definitions389494
Node: Quotations391668
Node: Supplying names393097
Node: User-defined Defining Words393991
Node: User-defined defining words with colon definitions394782
Ref: User-defined defining words with colon definitions-Footnote-1398042
Node: User-defined defining words using CREATE398394
Ref: User-defined defining words using CREATE-Footnote-1404673
Ref: User-defined defining words using CREATE-Footnote-2404766
Node: CREATE..DOES> applications405033
Node: CREATE..DOES> details406843
Node: Advanced does> usage example409944
Node: User-defined TO and DEFER@415864
Node: User-defined compile-comma419308
Node: Creating from a prototype425535
Node: Making a word current428574
Node: Const-does>429712
Node: Deferred Words431251
Node: Forward437954
Node: Aliases438943
Node: Interpretation and Compilation Semantics441083
Ref: Interpretation and Compilation Semantics-Footnote-1445371
Ref: Interpretation and Compilation Semantics-Footnote-2445456
Node: Combined words445686
Ref: state-smartness447956
Ref: Combined words-Footnote-1449266
Node: Tokens for Words449505
Node: Execution token450063
Ref: Execution token-Footnote-1455614
Node: Name token456147
Node: Compilation token463087
Ref: Compilation token-Footnote-1465576
Node: Compiling words465919
Node: Literals466834
Node: Macros471074
Ref: Macros-Footnote-1482648
Node: The Text Interpreter482964
Ref: The Text Interpreter-Footnote-1491855
Ref: The Text Interpreter-Footnote-2491961
Ref: The Text Interpreter-Footnote-3492304
Ref: The Text Interpreter-Footnote-4492535
Ref: The Text Interpreter-Footnote-5492592
Node: Input Sources492686
Node: Number Conversion495947
Node: Interpret/Compile states499282
Node: Interpreter Directives500424
Node: Recognizers506159
Node: Default Recognizers507282
Node: Dealing with existing Recognizers512487
Node: Defining Recognizers521785
Node: Text Interpreter Hooks522028
Node: The Input Stream522887
Node: Word Lists528735
Node: Vocabularies540141
Node: Why use word lists?541571
Node: Word list example545067
Node: Environmental Queries545824
Node: Files556927
Node: Forth source files557645
Node: General files562119
Node: Redirection567918
Node: Directories570565
Node: Search Paths575330
Node: Source Search Paths577374
Node: General Search Paths578312
Node: Blocks580421
Ref: Blocks-Footnote-1590503
Node: Other I/O590902
Node: Simple numeric output591688
Node: Formatted numeric output594025
Node: Floating-point output602200
Node: Miscellaneous output606961
Node: Displaying characters and strings610057
Node: Terminal output610762
Node: Single-key input613348
Node: Line input and conversion620140
Node: Pipes623773
Node: Xchars and Unicode624759
Node: i18n and l10n630806
Node: Substitute634106
Node: CSV Reader636222
Node: OS command line arguments636724
Node: Locals638989
Node: Gforth locals639939
Node: Locals definition words645199
Node: Where are locals visible by name?649096
Ref: Where are locals visible by name?-Footnote-1656335
Node: How long do locals live?656434
Node: Locals programming style657296
Node: Locals implementation660008
Node: Closures667267
Node: Standard Forth locals671754
Node: Structures673305
Node: Why explicit structure support?674155
Node: Structure Usage676729
Ref: Structure Usage-Footnote-1679709
Node: Structure Naming Convention679993
Node: Structure Implementation681196
Node: Structure Glossary682525
Node: Forth200x Structures684551
Node: Object-oriented Forth687166
Node: Why object-oriented programming?687913
Node: Object-Oriented Terminology689276
Node: Objects691135
Node: Properties of the Objects model692280
Node: Basic Objects Usage694071
Node: The Objects base class696480
Node: Creating objects696970
Node: Object-Oriented Programming Style697772
Node: Class Binding698768
Node: Method conveniences701022
Ref: Method conveniences-Footnote-1703178
Node: Classes and Scoping703376
Node: Dividing classes704856
Node: Object Interfaces706110
Node: Objects Implementation708126
Ref: Objects Implementation-Footnote-1712993
Node: Objects Glossary713071
Node: OOF719918
Node: Properties of the OOF model720630
Node: Basic OOF Usage721686
Node: The OOF base class723996
Node: Class Declaration727519
Node: Class Implementation728616
Node: Mini-OOF728763
Node: Basic Mini-OOF Usage729254
Node: Mini-OOF Example730522
Node: Mini-OOF Implementation732069
Node: Mini-OOF2736133
Node: Comparison with other object models737401
Ref: Comparison with other object models-Footnote-1741079
Node: Regular Expressions741237
Node: Programming Tools747752
Node: Locating source code definitions748627
Node: Locating uses of a word751756
Node: Locating exception source754314
Node: Examining compiled code754644
Node: Examining data760321
Node: Forgetting words762689
Node: Debugging764036
Node: Assertions767276
Node: Singlestep Debugger770719
Node: Code Coverage773869
Node: Multitasker776696
Node: Pthreads777574
Node: Basic multi-tasking778374
Node: Task-local data782527
Node: Semaphores784345
Node: Hardware operations for multi-tasking785713
Node: Message queues787243
Node: Cilk788567
Node: C Interface790641
Node: Calling C Functions792235
Ref: Calling C Functions-Footnote-1795305
Node: Declaring C Functions795517
Node: Calling C function pointers799148
Node: Defining library interfaces800714
Node: Declaring OS-level libraries803484
Node: Callbacks805698
Node: C interface internals807407
Node: Low-Level C Interface Words808751
Node: Automated interface generation using SWIG809488
Node: Migrating the C interface from earlier Gforth811857
Node: Assembler and Code Words812547
Node: Assembler Definitions813275
Node: Common Assembler821564
Node: Common Disassembler824262
Node: 386 Assembler825957
Node: AMD64 Assembler830408
Node: Alpha Assembler838360
Node: MIPS assembler839325
Node: PowerPC assembler842750
Node: ARM Assembler843762
Node: Other assemblers848701
Node: Carnal words850003
Node: Header fields850397
Node: Header methods853429
Node: Threading Words861018
Node: Passing Commands to the OS866901
Node: Keeping track of Time868559
Node: Miscellaneous Words869970
Node: Error messages870568
Node: Tools873803
Node: Standard Report874156
Node: Stack depth changes876055
Node: Standard conformance878033
Node: The Core Words880951
Node: core-idef881322
Node: core-ambcond889707
Node: core-other899297
Node: The optional Block word set902081
Node: block-idef902493
Node: block-ambcond902921
Node: block-other903869
Node: The optional Double Number word set904230
Node: double-ambcond904540
Node: The optional Exception word set904814
Node: exception-idef905128
Node: The optional Facility word set905862
Node: facility-idef906223
Node: facility-ambcond907402
Node: The optional File-Access word set907803
Node: file-idef908175
Node: file-ambcond910562
Node: The optional Floating-Point word set911873
Node: floating-idef912249
Node: floating-ambcond913393
Node: The optional Locals word set916564
Node: locals-idef916930
Node: locals-ambcond917473
Node: The optional Memory-Allocation word set917976
Node: memory-idef918316
Node: The optional Programming-Tools word set918781
Node: programming-idef919180
Node: programming-ambcond920112
Node: The optional Search-Order word set921447
Node: search-idef921788
Node: search-ambcond922166
Node: Standard vs Extensions922932
Node: Model926279
Node: Integrating Gforth926511
Node: Emacs and Gforth930144
Node: Installing gforth.el932068
Node: Emacs Tags932855
Node: Hilighting933764
Node: Auto-Indentation935636
Node: Blocks Files937053
Node: Image Files938445
Node: Image Licensing Issues939396
Node: Image File Background940586
Ref: Image File Background-Footnote-1944878
Node: Non-Relocatable Image Files944994
Node: Data-Relocatable Image Files945985
Node: Fully Relocatable Image Files946894
Node: gforthmi947766
Node: cross.fs950496
Node: Stack and Dictionary Sizes951206
Node: Running Image Files952296
Ref: Running Image Files-Footnote-1955237
Node: Modifying the Startup Sequence955608
Node: Engine958275
Node: Portability959020
Node: Threading961699
Node: Scheduling962938
Node: Direct or Indirect Threaded?964740
Node: Dynamic Superinstructions967597
Node: DOES>972380
Node: Primitives973486
Node: Automatic Generation973684
Ref: Automatic Generation-Footnote-1977191
Node: TOS Optimization977362
Node: Produced code980063
Node: Performance980482
Node: Cross Compiler985884
Node: Using the Cross Compiler986399
Node: How the Cross Compiler Works991044
Node: MINOS2991225
Node: MINOS2 object framework991416
Node: actor methods991911
Node: widget methods993676
Node: MINOS2 tutorial1000335
Node: Bugs1001192
Node: Origin1002239
Node: Forth-related information1005395
Node: Licenses1005993
Node: GNU Free Documentation License1006311
Node: Copying1028892
Node: Word Index1066647
Node: Concept Index1223381

End Tag Table


Local Variables:
coding: utf-8
End:
