This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306866
gforth.info-3: 602050
gforth.info-4: 902039
gforth.info-5: 1342668

Tag Table:
(Indirect)
Node: Top1457
Node: Goals18292
Ref: Goals-Footnote-120493
Node: Stability Goals20694
Node: Gforth Environment22654
Node: Invoking Gforth23550
Node: Leaving Gforth39260
Node: Help on Gforth39929
Node: Command-line editing41225
Ref: Command-line editing-Footnote-144667
Node: Environment variables44758
Node: Gforth Files47091
Node: Gforth in pipes48067
Node: Startup speed50647
Node: Tutorial55556
Node: Starting Gforth Tutorial58461
Node: Syntax Tutorial59017
Node: Crash Course Tutorial60290
Node: Stack Tutorial61527
Node: Arithmetics Tutorial62417
Ref: Arithmetics Tutorial-Footnote-163754
Node: Stack Manipulation Tutorial63879
Node: Using files for Forth code Tutorial65675
Node: Comments Tutorial67863
Ref: Comments Tutorial-Footnote-169423
Node: Colon Definitions Tutorial69526
Node: Decompilation Tutorial71630
Node: Stack-Effect Comments Tutorial72281
Node: Types Tutorial76942
Node: Factoring Tutorial79501
Node: Designing the stack effect Tutorial81369
Node: Local Variables Tutorial84781
Node: Conditional execution Tutorial86787
Node: Flags and Comparisons Tutorial88548
Node: General Loops Tutorial92241
Node: Counted loops Tutorial94845
Node: Recursion Tutorial96581
Node: Leaving definitions or loops Tutorial97997
Node: Return Stack Tutorial99048
Node: Memory Tutorial101770
Node: Characters and Strings Tutorial105830
Node: Alignment Tutorial107870
Node: Floating Point Tutorial109647
Node: Files Tutorial114520
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118823
Node: Execution Tokens Tutorial122276
Node: Exceptions Tutorial126455
Node: Defining Words Tutorial128824
Node: Arrays and Records Tutorial132425
Node: POSTPONE Tutorial134356
Node: Literal Tutorial137032
Node: Advanced macros Tutorial138118
Node: Compilation Tokens Tutorial140762
Node: Wordlists and Search Order Tutorial142277
Node: Introduction146218
Node: Introducing the Text Interpreter148986
Ref: Introducing the Text Interpreter-Footnote-1156238
Node: Stacks and Postfix notation156501
Node: Your first definition169483
Ref: Your first definition-Footnote-1174315
Node: How does that work?174517
Node: Forth is written in Forth186854
Ref: Forth is written in Forth-Footnote-1189318
Ref: Forth is written in Forth-Footnote-2189418
Node: Review - elements of a Forth system189472
Node: Where to go next191930
Node: Exercises194364
Node: Literals in source code194775
Node: Words203246
Node: Notation204065
Node: Case insensitivity210377
Node: Comments212813
Node: Boolean Flags214386
Node: Arithmetic215555
Node: Single precision216801
Node: Double precision218132
Node: Mixed precision219974
Node: Integer division220269
Node: Two-stage integer division227783
Node: Bitwise operations234267
Node: Numeric comparison239038
Node: Floating Point242054
Ref: Floating Point-Footnote-1249561
Node: Stack Manipulation249800
Node: Data stack250665
Node: Floating point stack252232
Node: Return stack253117
Node: Locals stack254456
Node: Stack pointer manipulation254796
Node: Memory256019
Node: Memory model256503
Ref: Memory model-Footnote-1258246
Node: Dictionary allocation258528
Node: Heap Allocation264548
Node: Memory Access269339
Node: Special Memory Accesses271160
Node: Address arithmetic277596
Node: Memory Blocks284982
Node: Strings and Characters288730
Node: Characters289038
Node: String representations291089
Node: String and character literals292900
Node: String words298937
Node: ＄tring words306866
Node: Counted string words317017
Node: Control Structures318920
Ref: Control Structures-Footnote-1319736
Node: Selection319885
Node: Simple Loops323626
Node: Counted Loops324564
Ref: Counted Loops-Footnote-1338913
Node: BEGIN loops with multiple exits338999
Node: General control structures with CASE341409
Ref: General control structures with CASE-Footnote-1345149
Node: Arbitrary control structures345400
Node: Calls and returns353811
Node: Exception Handling356726
Node: Defining Words372105
Node: CREATE372939
Node: Variables375877
Node: Constants378549
Ref: Constants-Footnote-1382754
Node: Values383133
Node: Varues384989
Node: Colon Definitions386677
Node: Anonymous Definitions390796
Node: Quotations392970
Node: Supplying names394409
Node: User-defined Defining Words395303
Node: User-defined defining words with colon definitions396094
Ref: User-defined defining words with colon definitions-Footnote-1399354
Node: User-defined defining words using CREATE399706
Ref: User-defined defining words using CREATE-Footnote-1405979
Ref: User-defined defining words using CREATE-Footnote-2406072
Node: CREATE..DOES> applications406339
Node: CREATE..DOES> details408149
Node: Advanced does> usage example411250
Node: User-defined TO and DEFER@417176
Node: User-defined compile-comma420620
Node: Creating from a prototype426847
Node: Making a word current429886
Node: Const-does>431024
Node: Deferred Words432563
Node: Forward439266
Node: Aliases440255
Node: Interpretation and Compilation Semantics442395
Ref: Interpretation and Compilation Semantics-Footnote-1446683
Ref: Interpretation and Compilation Semantics-Footnote-2446768
Node: Combined words446998
Ref: state-smartness449268
Ref: Combined words-Footnote-1450578
Node: Tokens for Words450817
Node: Execution token451375
Ref: Execution token-Footnote-1456926
Node: Name token457459
Node: Compilation token464399
Ref: Compilation token-Footnote-1466888
Node: Compiling words467231
Node: Literals468146
Node: Macros472386
Ref: Macros-Footnote-1483960
Node: The Text Interpreter484276
Ref: The Text Interpreter-Footnote-1493236
Ref: The Text Interpreter-Footnote-2493342
Ref: The Text Interpreter-Footnote-3493688
Ref: The Text Interpreter-Footnote-4493922
Ref: The Text Interpreter-Footnote-5493979
Node: Input Sources494073
Node: Number Conversion497335
Node: Interpret/Compile states500670
Node: Interpreter Directives501812
Node: Recognizers507556
Node: Default Recognizers508679
Node: Dealing with existing Recognizers513884
Node: Defining Recognizers523182
Node: Text Interpreter Hooks523425
Node: The Input Stream524284
Node: Word Lists530146
Node: Vocabularies541559
Node: Why use word lists?542989
Node: Word list example546485
Node: Environmental Queries547242
Node: Files558354
Node: Forth source files559072
Node: General files563546
Node: Redirection569376
Node: Directories572023
Node: Search Paths576809
Node: Source Search Paths579879
Node: General Search Paths581007
Node: Blocks583972
Ref: Blocks-Footnote-1599222
Node: Other I/O599807
Node: Simple numeric output602050
Node: Formatted numeric output605074
Node: Floating-point output613247
Node: Miscellaneous output618997
Node: Displaying characters and strings623071
Node: Terminal output623983
Node: Single-key input627300
Node: Line input and conversion635994
Node: Pipes641694
Node: Xchars and Unicode642989
Node: i18n and l10n651599
Node: Substitute656167
Node: CSV Reader658784
Node: OS command line arguments659540
Node: Locals662338
Node: Gforth locals663288
Node: Locals definition words670113
Node: Where are locals visible by name?675140
Ref: Where are locals visible by name?-Footnote-1684879
Node: How long do locals live?685012
Node: Locals programming style686364
Node: Locals implementation689813
Node: Closures699421
Node: Standard Forth locals705469
Node: Structures707717
Node: Why explicit structure support?708743
Node: Structure Usage712269
Ref: Structure Usage-Footnote-1716571
Node: Structure Naming Convention717023
Node: Structure Implementation718464
Node: Structure Glossary720189
Node: Forth200x Structures723201
Node: Object-oriented Forth726350
Node: Why object-oriented programming?727285
Node: Object-Oriented Terminology729397
Node: Objects732055
Node: Properties of the Objects model733452
Node: Basic Objects Usage736118
Node: The Objects base class739344
Node: Creating objects740092
Node: Object-Oriented Programming Style741733
Node: Class Binding743112
Node: Method conveniences746464
Ref: Method conveniences-Footnote-1749598
Node: Classes and Scoping749888
Node: Dividing classes751924
Node: Object Interfaces753502
Node: Objects Implementation756602
Ref: Objects Implementation-Footnote-1763870
Node: Objects Glossary764016
Node: OOF773761
Node: Properties of the OOF model774675
Node: Basic OOF Usage776217
Node: The OOF base class779423
Node: Class Declaration784012
Node: Class Implementation785410
Node: Mini-OOF785557
Node: Basic Mini-OOF Usage786124
Node: Mini-OOF Example787786
Node: Mini-OOF Implementation789719
Node: Mini-OOF2794964
Node: Comparison with other object models796814
Ref: Comparison with other object models-Footnote-1802062
Node: Regular Expressions802232
Node: Programming Tools812768
Node: Locating source code definitions813643
Node: Locating uses of a word817818
Node: Locating exception source821766
Node: Examining compiled code822377
Node: Examining data830566
Node: Forgetting words833691
Node: Debugging835692
Node: Assertions840650
Node: Singlestep Debugger845223
Node: Code Coverage848463
Node: Multitasker852689
Node: Pthreads853567
Node: Basic multi-tasking854706
Node: Task-local data861010
Node: Semaphores863510
Node: Hardware operations for multi-tasking865391
Node: Message queues867440
Node: Cilk869357
Node: C Interface872262
Node: Calling C Functions873856
Ref: Calling C Functions-Footnote-1877164
Node: Declaring C Functions877527
Node: Calling C function pointers882269
Node: Defining library interfaces884359
Node: Declaring OS-level libraries888321
Node: Callbacks891174
Node: C interface internals893506
Node: Low-Level C Interface Words895269
Node: Automated interface generation using SWIG896651
Node: Migrating the C interface from earlier Gforth899700
Node: Assembler and Code Words902039
Node: Assembler Definitions902767
Node: Common Assembler912320
Node: Common Disassembler915943
Node: 386 Assembler918112
Node: AMD64 Assembler923972
Node: Alpha Assembler931923
Node: MIPS assembler933106
Node: PowerPC assembler937540
Node: ARM Assembler938795
Node: Other assemblers944525
Node: Carnal words946280
Node: Header fields946798
Node: Header methods951013
Node: Threading Words960633
Node: Passing Commands to the OS968547
Node: Keeping track of Time970796
Node: Miscellaneous Words973041
Node: Error messages974232
Node: Tools979165
Node: Standard Report979539
Node: Stack depth changes982287
Node: Standard conformance984966
Node: The Core Words988702
Node: core-idef989135
Node: core-ambcond1000972
Node: core-other1014923
Node: The optional Block word set1016738
Node: block-idef1017212
Node: block-ambcond1017749
Node: block-other1018862
Node: The optional Double Number word set1019308
Node: double-ambcond1019618
Node: The optional Exception word set1019917
Node: exception-idef1020293
Node: The optional Facility word set1021242
Node: facility-idef1021665
Node: facility-ambcond1023137
Node: The optional File-Access word set1023614
Node: file-idef1024048
Node: file-ambcond1027528
Node: The optional Floating-Point word set1029516
Node: floating-idef1029954
Node: floating-ambcond1031475
Node: The optional Locals word set1034814
Node: locals-idef1035242
Node: locals-ambcond1035839
Node: The optional Memory-Allocation word set1036342
Node: memory-idef1036744
Node: The optional Programming-Tools word set1037355
Node: programming-idef1037816
Node: programming-ambcond1038802
Node: The optional Search-Order word set1040137
Node: search-idef1040540
Node: search-ambcond1040972
Node: Standard vs Extensions1041738
Node: Model1045085
Node: Integrating Gforth1045317
Node: Emacs and Gforth1048950
Node: Installing gforth.el1050874
Node: Emacs Tags1051975
Node: Hilighting1052884
Node: Auto-Indentation1054756
Node: Blocks Files1056173
Node: Image Files1057565
Node: Image Licensing Issues1058516
Node: Image File Background1059706
Ref: Image File Background-Footnote-11063998
Node: Non-Relocatable Image Files1064114
Node: Data-Relocatable Image Files1065105
Node: Fully Relocatable Image Files1066014
Node: gforthmi1066886
Node: cross.fs1069616
Node: Stack and Dictionary Sizes1070326
Node: Running Image Files1071416
Ref: Running Image Files-Footnote-11074357
Node: Modifying the Startup Sequence1074728
Node: Engine1077395
Node: Portability1078140
Node: Threading1080819
Node: Scheduling1082058
Node: Direct or Indirect Threaded?1083860
Node: Dynamic Superinstructions1086717
Node: DOES>1091500
Node: Primitives1092606
Node: Automatic Generation1092804
Ref: Automatic Generation-Footnote-11096311
Node: TOS Optimization1096482
Node: Produced code1099183
Node: Performance1099602
Node: Cross Compiler1105004
Node: Using the Cross Compiler1105519
Node: How the Cross Compiler Works1110164
Node: MINOS21110345
Node: MINOS2 object framework1110536
Node: actor methods1111031
Node: widget methods1112796
Node: MINOS2 tutorial1119455
Node: Bugs1120312
Node: Origin1121359
Node: Forth-related information1124515
Node: Licenses1125113
Node: GNU Free Documentation License1125431
Node: Copying1148012
Node: Word Index1185767
Node: Concept Index1342668

End Tag Table


Local Variables:
coding: utf-8
End:
