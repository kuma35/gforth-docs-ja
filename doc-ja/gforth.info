This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306220
gforth.info-3: 604272
gforth.info-4: 902826
gforth.info-5: 1225453

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17670
Ref: Goals-Footnote-119871
Node: Stability Goals20072
Node: Gforth Environment22032
Node: Invoking Gforth22928
Node: Leaving Gforth38638
Node: Help on Gforth39307
Node: Command-line editing40603
Ref: Command-line editing-Footnote-144045
Node: Environment variables44136
Node: Gforth Files46469
Node: Gforth in pipes47445
Node: Startup speed50025
Node: Tutorial54934
Node: Starting Gforth Tutorial57839
Node: Syntax Tutorial58395
Node: Crash Course Tutorial59668
Node: Stack Tutorial60905
Node: Arithmetics Tutorial61795
Ref: Arithmetics Tutorial-Footnote-163132
Node: Stack Manipulation Tutorial63257
Node: Using files for Forth code Tutorial65053
Node: Comments Tutorial67241
Ref: Comments Tutorial-Footnote-168801
Node: Colon Definitions Tutorial68904
Node: Decompilation Tutorial71008
Node: Stack-Effect Comments Tutorial71659
Node: Types Tutorial76320
Node: Factoring Tutorial78879
Node: Designing the stack effect Tutorial80747
Node: Local Variables Tutorial84159
Node: Conditional execution Tutorial86165
Node: Flags and Comparisons Tutorial87926
Node: General Loops Tutorial91619
Node: Counted loops Tutorial94223
Node: Recursion Tutorial95959
Node: Leaving definitions or loops Tutorial97375
Node: Return Stack Tutorial98426
Node: Memory Tutorial101148
Node: Characters and Strings Tutorial105208
Node: Alignment Tutorial107248
Node: Floating Point Tutorial109025
Node: Files Tutorial113902
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118202
Node: Execution Tokens Tutorial121655
Node: Exceptions Tutorial125834
Node: Defining Words Tutorial128203
Node: Arrays and Records Tutorial131804
Node: POSTPONE Tutorial133732
Node: Literal Tutorial136408
Node: Advanced macros Tutorial137494
Node: Compilation Tokens Tutorial140138
Node: Wordlists and Search Order Tutorial141653
Node: Introduction145591
Node: Introducing the Text Interpreter148359
Ref: Introducing the Text Interpreter-Footnote-1155574
Node: Stacks and Postfix notation155837
Node: Your first definition168819
Ref: Your first definition-Footnote-1173651
Node: How does that work?173853
Node: Forth is written in Forth186190
Ref: Forth is written in Forth-Footnote-1188654
Ref: Forth is written in Forth-Footnote-2188754
Node: Review - elements of a Forth system188808
Node: Where to go next191266
Node: Exercises193700
Node: Literals in source code194111
Node: Words202607
Node: Notation203426
Node: Case insensitivity209738
Node: Comments212174
Node: Boolean Flags213747
Node: Arithmetic214916
Node: Single precision216162
Node: Double precision217497
Node: Mixed precision219352
Node: Integer division219647
Node: Two-stage integer division227196
Node: Bitwise operations233653
Node: Numeric comparison238424
Node: Floating Point241440
Ref: Floating Point-Footnote-1248947
Node: Stack Manipulation249186
Node: Data stack250051
Node: Floating point stack251618
Node: Return stack252503
Node: Locals stack253842
Node: Stack pointer manipulation254182
Node: Memory255405
Node: Memory model255889
Ref: Memory model-Footnote-1257632
Node: Dictionary allocation257914
Node: Heap Allocation263934
Node: Memory Access268708
Node: Special Memory Accesses270529
Node: Address arithmetic276965
Node: Memory Blocks284351
Node: Strings and Characters288093
Node: Characters288399
Node: String representations290450
Node: String and character literals292259
Node: String words298293
Node: $tring words306220
Node: Counted string words316289
Node: Control Structures318190
Ref: Control Structures-Footnote-1319006
Node: Selection319155
Node: Simple Loops322896
Node: Counted Loops323834
Ref: Counted Loops-Footnote-1337936
Node: BEGIN loops with multiple exits338022
Node: General control structures with CASE340432
Ref: General control structures with CASE-Footnote-1344172
Node: Arbitrary control structures344423
Node: Calls and returns352515
Node: Exception Handling355428
Node: Defining Words370807
Node: CREATE371641
Node: Variables374576
Node: Constants377247
Ref: Constants-Footnote-1381452
Node: Values381831
Node: Varues383687
Node: Colon Definitions385375
Node: Anonymous Definitions389494
Node: Quotations391668
Node: Supplying names393097
Node: User-defined Defining Words393991
Node: User-defined defining words with colon definitions394782
Ref: User-defined defining words with colon definitions-Footnote-1398042
Node: User-defined defining words using CREATE398394
Ref: User-defined defining words using CREATE-Footnote-1404673
Ref: User-defined defining words using CREATE-Footnote-2404766
Node: CREATE..DOES> applications405033
Node: CREATE..DOES> details406843
Node: Advanced does> usage example409944
Node: User-defined TO and DEFER@415864
Node: User-defined compile-comma419308
Node: Creating from a prototype425535
Node: Making a word current428574
Node: Const-does>429712
Node: Deferred Words431251
Node: Forward437954
Node: Aliases438943
Node: Interpretation and Compilation Semantics441083
Ref: Interpretation and Compilation Semantics-Footnote-1445371
Ref: Interpretation and Compilation Semantics-Footnote-2445456
Node: Combined words445686
Ref: state-smartness447956
Ref: Combined words-Footnote-1449266
Node: Tokens for Words449505
Node: Execution token450063
Ref: Execution token-Footnote-1455614
Node: Name token456147
Node: Compilation token463087
Ref: Compilation token-Footnote-1465576
Node: Compiling words465919
Node: Literals466834
Node: Macros471074
Ref: Macros-Footnote-1482648
Node: The Text Interpreter482964
Ref: The Text Interpreter-Footnote-1491855
Ref: The Text Interpreter-Footnote-2491961
Ref: The Text Interpreter-Footnote-3492304
Ref: The Text Interpreter-Footnote-4492535
Ref: The Text Interpreter-Footnote-5492592
Node: Input Sources492686
Node: Number Conversion495947
Node: Interpret/Compile states499282
Node: Interpreter Directives500424
Node: Recognizers506159
Node: Default Recognizers507282
Node: Dealing with existing Recognizers512487
Node: Defining Recognizers521785
Node: Text Interpreter Hooks522028
Node: The Input Stream522887
Node: Word Lists528735
Node: Vocabularies540141
Node: Why use word lists?541571
Node: Word list example545067
Node: Environmental Queries545824
Node: Files556927
Node: Forth source files557645
Node: General files562119
Node: Redirection567918
Node: Directories570565
Node: Search Paths575330
Node: Source Search Paths578400
Node: General Search Paths579528
Node: Blocks582493
Ref: Blocks-Footnote-1592575
Node: Other I/O592974
Node: Simple numeric output593760
Node: Formatted numeric output596097
Node: Floating-point output604272
Node: Miscellaneous output609033
Node: Displaying characters and strings612129
Node: Terminal output612834
Node: Single-key input615420
Node: Line input and conversion622212
Node: Pipes625845
Node: Xchars and Unicode626831
Node: i18n and l10n632878
Node: Substitute636178
Node: CSV Reader638294
Node: OS command line arguments638796
Node: Locals641061
Node: Gforth locals642011
Node: Locals definition words647271
Node: Where are locals visible by name?651168
Ref: Where are locals visible by name?-Footnote-1658407
Node: How long do locals live?658506
Node: Locals programming style659368
Node: Locals implementation662080
Node: Closures669339
Node: Standard Forth locals673826
Node: Structures675377
Node: Why explicit structure support?676227
Node: Structure Usage678801
Ref: Structure Usage-Footnote-1681781
Node: Structure Naming Convention682065
Node: Structure Implementation683268
Node: Structure Glossary684597
Node: Forth200x Structures686623
Node: Object-oriented Forth689238
Node: Why object-oriented programming?689985
Node: Object-Oriented Terminology691348
Node: Objects693207
Node: Properties of the Objects model694352
Node: Basic Objects Usage696143
Node: The Objects base class698552
Node: Creating objects699042
Node: Object-Oriented Programming Style699844
Node: Class Binding700840
Node: Method conveniences703094
Ref: Method conveniences-Footnote-1705250
Node: Classes and Scoping705448
Node: Dividing classes706928
Node: Object Interfaces708182
Node: Objects Implementation710198
Ref: Objects Implementation-Footnote-1715065
Node: Objects Glossary715143
Node: OOF721990
Node: Properties of the OOF model722702
Node: Basic OOF Usage723758
Node: The OOF base class726068
Node: Class Declaration729591
Node: Class Implementation730688
Node: Mini-OOF730835
Node: Basic Mini-OOF Usage731326
Node: Mini-OOF Example732594
Node: Mini-OOF Implementation734141
Node: Mini-OOF2738205
Node: Comparison with other object models739473
Ref: Comparison with other object models-Footnote-1743151
Node: Regular Expressions743309
Node: Programming Tools749824
Node: Locating source code definitions750699
Node: Locating uses of a word753828
Node: Locating exception source756386
Node: Examining compiled code756716
Node: Examining data762393
Node: Forgetting words764761
Node: Debugging766108
Node: Assertions769348
Node: Singlestep Debugger772791
Node: Code Coverage775941
Node: Multitasker778768
Node: Pthreads779646
Node: Basic multi-tasking780446
Node: Task-local data784599
Node: Semaphores786417
Node: Hardware operations for multi-tasking787785
Node: Message queues789315
Node: Cilk790639
Node: C Interface792713
Node: Calling C Functions794307
Ref: Calling C Functions-Footnote-1797377
Node: Declaring C Functions797589
Node: Calling C function pointers801220
Node: Defining library interfaces802786
Node: Declaring OS-level libraries805556
Node: Callbacks807770
Node: C interface internals809479
Node: Low-Level C Interface Words810823
Node: Automated interface generation using SWIG811560
Node: Migrating the C interface from earlier Gforth813929
Node: Assembler and Code Words814619
Node: Assembler Definitions815347
Node: Common Assembler823636
Node: Common Disassembler826334
Node: 386 Assembler828029
Node: AMD64 Assembler832480
Node: Alpha Assembler840432
Node: MIPS assembler841397
Node: PowerPC assembler844822
Node: ARM Assembler845834
Node: Other assemblers850773
Node: Carnal words852075
Node: Header fields852469
Node: Header methods855501
Node: Threading Words863090
Node: Passing Commands to the OS868973
Node: Keeping track of Time870631
Node: Miscellaneous Words872042
Node: Error messages872640
Node: Tools875875
Node: Standard Report876228
Node: Stack depth changes878127
Node: Standard conformance880105
Node: The Core Words883023
Node: core-idef883394
Node: core-ambcond891779
Node: core-other902826
Node: The optional Block word set904153
Node: block-idef904565
Node: block-ambcond904993
Node: block-other905941
Node: The optional Double Number word set906302
Node: double-ambcond906612
Node: The optional Exception word set906886
Node: exception-idef907200
Node: The optional Facility word set907934
Node: facility-idef908295
Node: facility-ambcond909474
Node: The optional File-Access word set909875
Node: file-idef910247
Node: file-ambcond912634
Node: The optional Floating-Point word set913945
Node: floating-idef914321
Node: floating-ambcond915465
Node: The optional Locals word set918636
Node: locals-idef919002
Node: locals-ambcond919545
Node: The optional Memory-Allocation word set920048
Node: memory-idef920388
Node: The optional Programming-Tools word set920853
Node: programming-idef921252
Node: programming-ambcond922184
Node: The optional Search-Order word set923519
Node: search-idef923860
Node: search-ambcond924238
Node: Standard vs Extensions925004
Node: Model928351
Node: Integrating Gforth928583
Node: Emacs and Gforth932216
Node: Installing gforth.el934140
Node: Emacs Tags934927
Node: Hilighting935836
Node: Auto-Indentation937708
Node: Blocks Files939125
Node: Image Files940517
Node: Image Licensing Issues941468
Node: Image File Background942658
Ref: Image File Background-Footnote-1946950
Node: Non-Relocatable Image Files947066
Node: Data-Relocatable Image Files948057
Node: Fully Relocatable Image Files948966
Node: gforthmi949838
Node: cross.fs952568
Node: Stack and Dictionary Sizes953278
Node: Running Image Files954368
Ref: Running Image Files-Footnote-1957309
Node: Modifying the Startup Sequence957680
Node: Engine960347
Node: Portability961092
Node: Threading963771
Node: Scheduling965010
Node: Direct or Indirect Threaded?966812
Node: Dynamic Superinstructions969669
Node: DOES>974452
Node: Primitives975558
Node: Automatic Generation975756
Ref: Automatic Generation-Footnote-1979263
Node: TOS Optimization979434
Node: Produced code982135
Node: Performance982554
Node: Cross Compiler987956
Node: Using the Cross Compiler988471
Node: How the Cross Compiler Works993116
Node: MINOS2993297
Node: MINOS2 object framework993488
Node: actor methods993983
Node: widget methods995748
Node: MINOS2 tutorial1002407
Node: Bugs1003264
Node: Origin1004311
Node: Forth-related information1007467
Node: Licenses1008065
Node: GNU Free Documentation License1008383
Node: Copying1030964
Node: Word Index1068719
Node: Concept Index1225453

End Tag Table


Local Variables:
coding: utf-8
End:
