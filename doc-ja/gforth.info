This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306193
gforth.info-3: 603747
gforth.info-4: 908198
gforth.info-5: 1240415

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17670
Ref: Goals-Footnote-119871
Node: Stability Goals20072
Node: Gforth Environment22032
Node: Invoking Gforth22928
Node: Leaving Gforth38638
Node: Help on Gforth39307
Node: Command-line editing40603
Ref: Command-line editing-Footnote-144045
Node: Environment variables44136
Node: Gforth Files46469
Node: Gforth in pipes47445
Node: Startup speed50025
Node: Tutorial54934
Node: Starting Gforth Tutorial57839
Node: Syntax Tutorial58395
Node: Crash Course Tutorial59668
Node: Stack Tutorial60905
Node: Arithmetics Tutorial61795
Ref: Arithmetics Tutorial-Footnote-163132
Node: Stack Manipulation Tutorial63257
Node: Using files for Forth code Tutorial65053
Node: Comments Tutorial67241
Ref: Comments Tutorial-Footnote-168801
Node: Colon Definitions Tutorial68904
Node: Decompilation Tutorial71008
Node: Stack-Effect Comments Tutorial71659
Node: Types Tutorial76320
Node: Factoring Tutorial78879
Node: Designing the stack effect Tutorial80747
Node: Local Variables Tutorial84159
Node: Conditional execution Tutorial86165
Node: Flags and Comparisons Tutorial87926
Node: General Loops Tutorial91619
Node: Counted loops Tutorial94223
Node: Recursion Tutorial95959
Node: Leaving definitions or loops Tutorial97375
Node: Return Stack Tutorial98426
Node: Memory Tutorial101148
Node: Characters and Strings Tutorial105208
Node: Alignment Tutorial107248
Node: Floating Point Tutorial109025
Node: Files Tutorial113898
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118201
Node: Execution Tokens Tutorial121654
Node: Exceptions Tutorial125833
Node: Defining Words Tutorial128202
Node: Arrays and Records Tutorial131803
Node: POSTPONE Tutorial133731
Node: Literal Tutorial136407
Node: Advanced macros Tutorial137493
Node: Compilation Tokens Tutorial140137
Node: Wordlists and Search Order Tutorial141652
Node: Introduction145590
Node: Introducing the Text Interpreter148358
Ref: Introducing the Text Interpreter-Footnote-1155573
Node: Stacks and Postfix notation155836
Node: Your first definition168818
Ref: Your first definition-Footnote-1173650
Node: How does that work?173852
Node: Forth is written in Forth186189
Ref: Forth is written in Forth-Footnote-1188653
Ref: Forth is written in Forth-Footnote-2188753
Node: Review - elements of a Forth system188807
Node: Where to go next191265
Node: Exercises193699
Node: Literals in source code194110
Node: Words202581
Node: Notation203400
Node: Case insensitivity209712
Node: Comments212148
Node: Boolean Flags213721
Node: Arithmetic214890
Node: Single precision216136
Node: Double precision217467
Node: Mixed precision219309
Node: Integer division219604
Node: Two-stage integer division227118
Node: Bitwise operations233602
Node: Numeric comparison238373
Node: Floating Point241389
Ref: Floating Point-Footnote-1248896
Node: Stack Manipulation249135
Node: Data stack250000
Node: Floating point stack251567
Node: Return stack252452
Node: Locals stack253791
Node: Stack pointer manipulation254131
Node: Memory255354
Node: Memory model255838
Ref: Memory model-Footnote-1257581
Node: Dictionary allocation257863
Node: Heap Allocation263883
Node: Memory Access268672
Node: Special Memory Accesses270493
Node: Address arithmetic276929
Node: Memory Blocks284315
Node: Strings and Characters288063
Node: Characters288369
Node: String representations290420
Node: String and character literals292229
Node: String words298266
Node: $tring words306193
Node: Counted string words316270
Node: Control Structures318171
Ref: Control Structures-Footnote-1318987
Node: Selection319136
Node: Simple Loops322877
Node: Counted Loops323815
Ref: Counted Loops-Footnote-1337917
Node: BEGIN loops with multiple exits338003
Node: General control structures with CASE340413
Ref: General control structures with CASE-Footnote-1344153
Node: Arbitrary control structures344404
Node: Calls and returns352496
Node: Exception Handling355409
Node: Defining Words370788
Node: CREATE371622
Node: Variables374560
Node: Constants377232
Ref: Constants-Footnote-1381437
Node: Values381816
Node: Varues383672
Node: Colon Definitions385360
Node: Anonymous Definitions389479
Node: Quotations391653
Node: Supplying names393082
Node: User-defined Defining Words393976
Node: User-defined defining words with colon definitions394767
Ref: User-defined defining words with colon definitions-Footnote-1398027
Node: User-defined defining words using CREATE398379
Ref: User-defined defining words using CREATE-Footnote-1404658
Ref: User-defined defining words using CREATE-Footnote-2404751
Node: CREATE..DOES> applications405018
Node: CREATE..DOES> details406828
Node: Advanced does> usage example409929
Node: User-defined TO and DEFER@415849
Node: User-defined compile-comma419293
Node: Creating from a prototype425520
Node: Making a word current428559
Node: Const-does>429697
Node: Deferred Words431236
Node: Forward437939
Node: Aliases438928
Node: Interpretation and Compilation Semantics441068
Ref: Interpretation and Compilation Semantics-Footnote-1445356
Ref: Interpretation and Compilation Semantics-Footnote-2445441
Node: Combined words445671
Ref: state-smartness447941
Ref: Combined words-Footnote-1449251
Node: Tokens for Words449490
Node: Execution token450048
Ref: Execution token-Footnote-1455599
Node: Name token456132
Node: Compilation token463072
Ref: Compilation token-Footnote-1465561
Node: Compiling words465904
Node: Literals466819
Node: Macros471059
Ref: Macros-Footnote-1482633
Node: The Text Interpreter482949
Ref: The Text Interpreter-Footnote-1491909
Ref: The Text Interpreter-Footnote-2492015
Ref: The Text Interpreter-Footnote-3492361
Ref: The Text Interpreter-Footnote-4492595
Ref: The Text Interpreter-Footnote-5492652
Node: Input Sources492746
Node: Number Conversion496008
Node: Interpret/Compile states499343
Node: Interpreter Directives500485
Node: Recognizers506229
Node: Default Recognizers507352
Node: Dealing with existing Recognizers512557
Node: Defining Recognizers521855
Node: Text Interpreter Hooks522098
Node: The Input Stream522957
Node: Word Lists528819
Node: Vocabularies540232
Node: Why use word lists?541662
Node: Word list example545158
Node: Environmental Queries545915
Node: Files557027
Node: Forth source files557745
Node: General files562219
Node: Redirection568049
Node: Directories570696
Node: Search Paths575482
Node: Source Search Paths578552
Node: General Search Paths579680
Node: Blocks582645
Ref: Blocks-Footnote-1597895
Node: Other I/O598480
Node: Simple numeric output599266
Node: Formatted numeric output603747
Node: Floating-point output611920
Node: Miscellaneous output617670
Node: Displaying characters and strings621744
Node: Terminal output622656
Node: Single-key input625973
Node: Line input and conversion634662
Node: Pipes640498
Node: Xchars and Unicode641793
Node: i18n and l10n647840
Node: Substitute651140
Node: CSV Reader653256
Node: OS command line arguments653758
Node: Locals656023
Node: Gforth locals656973
Node: Locals definition words662233
Node: Where are locals visible by name?666130
Ref: Where are locals visible by name?-Footnote-1673369
Node: How long do locals live?673468
Node: Locals programming style674330
Node: Locals implementation677042
Node: Closures684301
Node: Standard Forth locals688788
Node: Structures690339
Node: Why explicit structure support?691189
Node: Structure Usage693763
Ref: Structure Usage-Footnote-1696743
Node: Structure Naming Convention697027
Node: Structure Implementation698230
Node: Structure Glossary699559
Node: Forth200x Structures701585
Node: Object-oriented Forth704200
Node: Why object-oriented programming?704947
Node: Object-Oriented Terminology706310
Node: Objects708169
Node: Properties of the Objects model709314
Node: Basic Objects Usage711105
Node: The Objects base class713514
Node: Creating objects714004
Node: Object-Oriented Programming Style714806
Node: Class Binding715802
Node: Method conveniences718056
Ref: Method conveniences-Footnote-1720212
Node: Classes and Scoping720410
Node: Dividing classes721890
Node: Object Interfaces723144
Node: Objects Implementation725160
Ref: Objects Implementation-Footnote-1730027
Node: Objects Glossary730105
Node: OOF736952
Node: Properties of the OOF model737664
Node: Basic OOF Usage738720
Node: The OOF base class741030
Node: Class Declaration744553
Node: Class Implementation745650
Node: Mini-OOF745797
Node: Basic Mini-OOF Usage746288
Node: Mini-OOF Example747556
Node: Mini-OOF Implementation749103
Node: Mini-OOF2753167
Node: Comparison with other object models754435
Ref: Comparison with other object models-Footnote-1758113
Node: Regular Expressions758271
Node: Programming Tools764786
Node: Locating source code definitions765661
Node: Locating uses of a word768790
Node: Locating exception source771348
Node: Examining compiled code771678
Node: Examining data777355
Node: Forgetting words779723
Node: Debugging781070
Node: Assertions784310
Node: Singlestep Debugger787753
Node: Code Coverage790903
Node: Multitasker793730
Node: Pthreads794608
Node: Basic multi-tasking795408
Node: Task-local data799561
Node: Semaphores801379
Node: Hardware operations for multi-tasking802747
Node: Message queues804277
Node: Cilk805601
Node: C Interface807675
Node: Calling C Functions809269
Ref: Calling C Functions-Footnote-1812339
Node: Declaring C Functions812551
Node: Calling C function pointers816182
Node: Defining library interfaces817748
Node: Declaring OS-level libraries820518
Node: Callbacks822732
Node: C interface internals824441
Node: Low-Level C Interface Words825785
Node: Automated interface generation using SWIG826522
Node: Migrating the C interface from earlier Gforth828891
Node: Assembler and Code Words829581
Node: Assembler Definitions830309
Node: Common Assembler838598
Node: Common Disassembler841296
Node: 386 Assembler842991
Node: AMD64 Assembler847442
Node: Alpha Assembler855394
Node: MIPS assembler856359
Node: PowerPC assembler859784
Node: ARM Assembler860796
Node: Other assemblers865735
Node: Carnal words867037
Node: Header fields867431
Node: Header methods870463
Node: Threading Words878052
Node: Passing Commands to the OS883935
Node: Keeping track of Time885593
Node: Miscellaneous Words887004
Node: Error messages887602
Node: Tools890837
Node: Standard Report891190
Node: Stack depth changes893089
Node: Standard conformance895067
Node: The Core Words897985
Node: core-idef898356
Node: core-ambcond908198
Node: core-other917788
Node: The optional Block word set919115
Node: block-idef919527
Node: block-ambcond919955
Node: block-other920903
Node: The optional Double Number word set921264
Node: double-ambcond921574
Node: The optional Exception word set921848
Node: exception-idef922162
Node: The optional Facility word set922896
Node: facility-idef923257
Node: facility-ambcond924436
Node: The optional File-Access word set924837
Node: file-idef925209
Node: file-ambcond927596
Node: The optional Floating-Point word set928907
Node: floating-idef929283
Node: floating-ambcond930427
Node: The optional Locals word set933598
Node: locals-idef933964
Node: locals-ambcond934507
Node: The optional Memory-Allocation word set935010
Node: memory-idef935350
Node: The optional Programming-Tools word set935815
Node: programming-idef936214
Node: programming-ambcond937146
Node: The optional Search-Order word set938481
Node: search-idef938822
Node: search-ambcond939200
Node: Standard vs Extensions939966
Node: Model943313
Node: Integrating Gforth943545
Node: Emacs and Gforth947178
Node: Installing gforth.el949102
Node: Emacs Tags949889
Node: Hilighting950798
Node: Auto-Indentation952670
Node: Blocks Files954087
Node: Image Files955479
Node: Image Licensing Issues956430
Node: Image File Background957620
Ref: Image File Background-Footnote-1961912
Node: Non-Relocatable Image Files962028
Node: Data-Relocatable Image Files963019
Node: Fully Relocatable Image Files963928
Node: gforthmi964800
Node: cross.fs967530
Node: Stack and Dictionary Sizes968240
Node: Running Image Files969330
Ref: Running Image Files-Footnote-1972271
Node: Modifying the Startup Sequence972642
Node: Engine975309
Node: Portability976054
Node: Threading978733
Node: Scheduling979972
Node: Direct or Indirect Threaded?981774
Node: Dynamic Superinstructions984631
Node: DOES>989414
Node: Primitives990520
Node: Automatic Generation990718
Ref: Automatic Generation-Footnote-1994225
Node: TOS Optimization994396
Node: Produced code997097
Node: Performance997516
Node: Cross Compiler1002918
Node: Using the Cross Compiler1003433
Node: How the Cross Compiler Works1008078
Node: MINOS21008259
Node: MINOS2 object framework1008450
Node: actor methods1008945
Node: widget methods1010710
Node: MINOS2 tutorial1017369
Node: Bugs1018226
Node: Origin1019273
Node: Forth-related information1022429
Node: Licenses1023027
Node: GNU Free Documentation License1023345
Node: Copying1045926
Node: Word Index1083681
Node: Concept Index1240415

End Tag Table


Local Variables:
coding: utf-8
End:
