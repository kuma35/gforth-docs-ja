This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 306246
gforth.info-3: 603888
gforth.info-4: 906289
gforth.info-5: 1267362

Tag Table:
(Indirect)
Node: Top1457
Node: Goals17672
Ref: Goals-Footnote-119873
Node: Stability Goals20074
Node: Gforth Environment22034
Node: Invoking Gforth22930
Node: Leaving Gforth38640
Node: Help on Gforth39309
Node: Command-line editing40605
Ref: Command-line editing-Footnote-144047
Node: Environment variables44138
Node: Gforth Files46471
Node: Gforth in pipes47447
Node: Startup speed50027
Node: Tutorial54936
Node: Starting Gforth Tutorial57841
Node: Syntax Tutorial58397
Node: Crash Course Tutorial59670
Node: Stack Tutorial60907
Node: Arithmetics Tutorial61797
Ref: Arithmetics Tutorial-Footnote-163134
Node: Stack Manipulation Tutorial63259
Node: Using files for Forth code Tutorial65055
Node: Comments Tutorial67243
Ref: Comments Tutorial-Footnote-168803
Node: Colon Definitions Tutorial68906
Node: Decompilation Tutorial71010
Node: Stack-Effect Comments Tutorial71661
Node: Types Tutorial76322
Node: Factoring Tutorial78881
Node: Designing the stack effect Tutorial80749
Node: Local Variables Tutorial84161
Node: Conditional execution Tutorial86167
Node: Flags and Comparisons Tutorial87928
Node: General Loops Tutorial91621
Node: Counted loops Tutorial94225
Node: Recursion Tutorial95961
Node: Leaving definitions or loops Tutorial97377
Node: Return Stack Tutorial98428
Node: Memory Tutorial101150
Node: Characters and Strings Tutorial105210
Node: Alignment Tutorial107250
Node: Floating Point Tutorial109027
Node: Files Tutorial113900
Node: Interpretation and Compilation Semantics and Immediacy Tutorial118203
Node: Execution Tokens Tutorial121656
Node: Exceptions Tutorial125835
Node: Defining Words Tutorial128204
Node: Arrays and Records Tutorial131805
Node: POSTPONE Tutorial133736
Node: Literal Tutorial136412
Node: Advanced macros Tutorial137498
Node: Compilation Tokens Tutorial140142
Node: Wordlists and Search Order Tutorial141657
Node: Introduction145598
Node: Introducing the Text Interpreter148366
Ref: Introducing the Text Interpreter-Footnote-1155618
Node: Stacks and Postfix notation155881
Node: Your first definition168863
Ref: Your first definition-Footnote-1173695
Node: How does that work?173897
Node: Forth is written in Forth186234
Ref: Forth is written in Forth-Footnote-1188698
Ref: Forth is written in Forth-Footnote-2188798
Node: Review - elements of a Forth system188852
Node: Where to go next191310
Node: Exercises193744
Node: Literals in source code194155
Node: Words202626
Node: Notation203445
Node: Case insensitivity209757
Node: Comments212193
Node: Boolean Flags213766
Node: Arithmetic214935
Node: Single precision216181
Node: Double precision217512
Node: Mixed precision219354
Node: Integer division219649
Node: Two-stage integer division227163
Node: Bitwise operations233647
Node: Numeric comparison238418
Node: Floating Point241434
Ref: Floating Point-Footnote-1248941
Node: Stack Manipulation249180
Node: Data stack250045
Node: Floating point stack251612
Node: Return stack252497
Node: Locals stack253836
Node: Stack pointer manipulation254176
Node: Memory255399
Node: Memory model255883
Ref: Memory model-Footnote-1257626
Node: Dictionary allocation257908
Node: Heap Allocation263928
Node: Memory Access268719
Node: Special Memory Accesses270540
Node: Address arithmetic276976
Node: Memory Blocks284362
Node: Strings and Characters288110
Node: Characters288418
Node: String representations290469
Node: String and character literals292280
Node: String words298317
Node: ＄tring words306246
Node: Counted string words316397
Node: Control Structures318300
Ref: Control Structures-Footnote-1319116
Node: Selection319265
Node: Simple Loops323006
Node: Counted Loops323944
Ref: Counted Loops-Footnote-1338046
Node: BEGIN loops with multiple exits338132
Node: General control structures with CASE340542
Ref: General control structures with CASE-Footnote-1344282
Node: Arbitrary control structures344533
Node: Calls and returns352625
Node: Exception Handling355540
Node: Defining Words370919
Node: CREATE371753
Node: Variables374691
Node: Constants377363
Ref: Constants-Footnote-1381568
Node: Values381947
Node: Varues383803
Node: Colon Definitions385491
Node: Anonymous Definitions389610
Node: Quotations391784
Node: Supplying names393223
Node: User-defined Defining Words394117
Node: User-defined defining words with colon definitions394908
Ref: User-defined defining words with colon definitions-Footnote-1398168
Node: User-defined defining words using CREATE398520
Ref: User-defined defining words using CREATE-Footnote-1404793
Ref: User-defined defining words using CREATE-Footnote-2404886
Node: CREATE..DOES> applications405153
Node: CREATE..DOES> details406963
Node: Advanced does> usage example410064
Node: User-defined TO and DEFER@415990
Node: User-defined compile-comma419434
Node: Creating from a prototype425661
Node: Making a word current428700
Node: Const-does>429838
Node: Deferred Words431377
Node: Forward438080
Node: Aliases439069
Node: Interpretation and Compilation Semantics441209
Ref: Interpretation and Compilation Semantics-Footnote-1445497
Ref: Interpretation and Compilation Semantics-Footnote-2445582
Node: Combined words445812
Ref: state-smartness448082
Ref: Combined words-Footnote-1449392
Node: Tokens for Words449631
Node: Execution token450189
Ref: Execution token-Footnote-1455740
Node: Name token456273
Node: Compilation token463213
Ref: Compilation token-Footnote-1465702
Node: Compiling words466045
Node: Literals466960
Node: Macros471200
Ref: Macros-Footnote-1482774
Node: The Text Interpreter483090
Ref: The Text Interpreter-Footnote-1492050
Ref: The Text Interpreter-Footnote-2492156
Ref: The Text Interpreter-Footnote-3492502
Ref: The Text Interpreter-Footnote-4492736
Ref: The Text Interpreter-Footnote-5492793
Node: Input Sources492887
Node: Number Conversion496149
Node: Interpret/Compile states499484
Node: Interpreter Directives500626
Node: Recognizers506370
Node: Default Recognizers507493
Node: Dealing with existing Recognizers512698
Node: Defining Recognizers521996
Node: Text Interpreter Hooks522239
Node: The Input Stream523098
Node: Word Lists528960
Node: Vocabularies540373
Node: Why use word lists?541803
Node: Word list example545299
Node: Environmental Queries546056
Node: Files557168
Node: Forth source files557886
Node: General files562360
Node: Redirection568190
Node: Directories570837
Node: Search Paths575623
Node: Source Search Paths578693
Node: General Search Paths579821
Node: Blocks582786
Ref: Blocks-Footnote-1598036
Node: Other I/O598621
Node: Simple numeric output599407
Node: Formatted numeric output603888
Node: Floating-point output612061
Node: Miscellaneous output617811
Node: Displaying characters and strings621885
Node: Terminal output622797
Node: Single-key input626114
Node: Line input and conversion634808
Node: Pipes640508
Node: Xchars and Unicode641803
Node: i18n and l10n650413
Node: Substitute654981
Node: CSV Reader657598
Node: OS command line arguments658354
Node: Locals661152
Node: Gforth locals662102
Node: Locals definition words668927
Node: Where are locals visible by name?673954
Ref: Where are locals visible by name?-Footnote-1683693
Node: How long do locals live?683826
Node: Locals programming style685178
Node: Locals implementation688627
Node: Closures698232
Node: Standard Forth locals704278
Node: Structures706526
Node: Why explicit structure support?707552
Node: Structure Usage711015
Ref: Structure Usage-Footnote-1715317
Node: Structure Naming Convention715769
Node: Structure Implementation717210
Node: Structure Glossary718935
Node: Forth200x Structures721947
Node: Object-oriented Forth725092
Node: Why object-oriented programming?726024
Node: Object-Oriented Terminology728093
Node: Objects730697
Node: Properties of the Objects model732094
Node: Basic Objects Usage734633
Node: The Objects base class737859
Node: Creating objects738517
Node: Object-Oriented Programming Style739657
Node: Class Binding741036
Node: Method conveniences744388
Ref: Method conveniences-Footnote-1746544
Node: Classes and Scoping746742
Node: Dividing classes748222
Node: Object Interfaces749476
Node: Objects Implementation751492
Ref: Objects Implementation-Footnote-1756359
Node: Objects Glossary756437
Node: OOF763284
Node: Properties of the OOF model763996
Node: Basic OOF Usage765081
Node: The OOF base class767726
Node: Class Declaration771249
Node: Class Implementation772346
Node: Mini-OOF772493
Node: Basic Mini-OOF Usage772984
Node: Mini-OOF Example774252
Node: Mini-OOF Implementation775883
Node: Mini-OOF2779947
Node: Comparison with other object models781215
Ref: Comparison with other object models-Footnote-1784893
Node: Regular Expressions785051
Node: Programming Tools791566
Node: Locating source code definitions792441
Node: Locating uses of a word795570
Node: Locating exception source798128
Node: Examining compiled code798458
Node: Examining data804135
Node: Forgetting words806503
Node: Debugging807850
Node: Assertions811090
Node: Singlestep Debugger814533
Node: Code Coverage817683
Node: Multitasker820510
Node: Pthreads821388
Node: Basic multi-tasking822188
Node: Task-local data826341
Node: Semaphores828159
Node: Hardware operations for multi-tasking829527
Node: Message queues831057
Node: Cilk832381
Node: C Interface834455
Node: Calling C Functions836049
Ref: Calling C Functions-Footnote-1839119
Node: Declaring C Functions839331
Node: Calling C function pointers842962
Node: Defining library interfaces844528
Node: Declaring OS-level libraries847298
Node: Callbacks849512
Node: C interface internals851221
Node: Low-Level C Interface Words852565
Node: Automated interface generation using SWIG853302
Node: Migrating the C interface from earlier Gforth855671
Node: Assembler and Code Words856361
Node: Assembler Definitions857089
Node: Common Assembler865378
Node: Common Disassembler868076
Node: 386 Assembler869771
Node: AMD64 Assembler874222
Node: Alpha Assembler882174
Node: MIPS assembler883139
Node: PowerPC assembler886564
Node: ARM Assembler887576
Node: Other assemblers892515
Node: Carnal words893817
Node: Header fields894211
Node: Header methods897243
Node: Threading Words906289
Node: Passing Commands to the OS912172
Node: Keeping track of Time913830
Node: Miscellaneous Words915241
Node: Error messages915839
Node: Tools919074
Node: Standard Report919427
Node: Stack depth changes921326
Node: Standard conformance923304
Node: The Core Words926222
Node: core-idef926593
Node: core-ambcond934978
Node: core-other944568
Node: The optional Block word set945895
Node: block-idef946307
Node: block-ambcond946735
Node: block-other947683
Node: The optional Double Number word set948044
Node: double-ambcond948354
Node: The optional Exception word set948628
Node: exception-idef948942
Node: The optional Facility word set949676
Node: facility-idef950037
Node: facility-ambcond951216
Node: The optional File-Access word set951617
Node: file-idef951989
Node: file-ambcond954376
Node: The optional Floating-Point word set955687
Node: floating-idef956063
Node: floating-ambcond957207
Node: The optional Locals word set960378
Node: locals-idef960744
Node: locals-ambcond961287
Node: The optional Memory-Allocation word set961790
Node: memory-idef962130
Node: The optional Programming-Tools word set962595
Node: programming-idef962994
Node: programming-ambcond963926
Node: The optional Search-Order word set965261
Node: search-idef965602
Node: search-ambcond965980
Node: Standard vs Extensions966746
Node: Model970093
Node: Integrating Gforth970325
Node: Emacs and Gforth973958
Node: Installing gforth.el975882
Node: Emacs Tags976669
Node: Hilighting977578
Node: Auto-Indentation979450
Node: Blocks Files980867
Node: Image Files982259
Node: Image Licensing Issues983210
Node: Image File Background984400
Ref: Image File Background-Footnote-1988692
Node: Non-Relocatable Image Files988808
Node: Data-Relocatable Image Files989799
Node: Fully Relocatable Image Files990708
Node: gforthmi991580
Node: cross.fs994310
Node: Stack and Dictionary Sizes995020
Node: Running Image Files996110
Ref: Running Image Files-Footnote-1999051
Node: Modifying the Startup Sequence999422
Node: Engine1002089
Node: Portability1002834
Node: Threading1005513
Node: Scheduling1006752
Node: Direct or Indirect Threaded?1008554
Node: Dynamic Superinstructions1011411
Node: DOES>1016194
Node: Primitives1017300
Node: Automatic Generation1017498
Ref: Automatic Generation-Footnote-11021005
Node: TOS Optimization1021176
Node: Produced code1023877
Node: Performance1024296
Node: Cross Compiler1029698
Node: Using the Cross Compiler1030213
Node: How the Cross Compiler Works1034858
Node: MINOS21035039
Node: MINOS2 object framework1035230
Node: actor methods1035725
Node: widget methods1037490
Node: MINOS2 tutorial1044149
Node: Bugs1045006
Node: Origin1046053
Node: Forth-related information1049209
Node: Licenses1049807
Node: GNU Free Documentation License1050125
Node: Copying1072706
Node: Word Index1110461
Node: Concept Index1267362

End Tag Table


Local Variables:
coding: utf-8
End:
