This is gforth.info, produced by makeinfo version 6.8 from gforth.texi.

このマニュアルは、 標準 Forth 言語の高速で移植可能な実装である Gforth (バ
ージョン 0.7.9_20240418, April 18, 2024)用です。 これはリファレンス・マ
ニュアルとして機能しますが、 Forth の概要と Forth チュートリアルも含まれ
ています。

   Authors: Bernd Paysan, Anton Ertl, Gerald Wodni Copyright © 1995,
1996, 1997, 1998, 2000, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
2011, 2012, 2013, 2014,2015,2016,2017,2018,2019,2020,2021,2022,2023 Free
Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being “A GNU Manual,” and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     “GNU Free Documentation License.”

     (a) The FSF’s Back-Cover Text is: “You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by the
     Free Software Foundation raise funds for GNU development.”
INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Gforth: (gforth).          forth言語のための高速インタプリタ
END-INFO-DIR-ENTRY


Indirect:
gforth.info-1: 1457
gforth.info-2: 302954
gforth.info-3: 602559
gforth.info-4: 916974

Tag Table:
(Indirect)
Node: Top1457
Node: Goals16928
Ref: Goals-Footnote-119129
Node: Stability Goals19330
Node: Gforth Environment21290
Node: Invoking Gforth22186
Node: Leaving Gforth32597
Node: Help on Gforth33089
Node: Command-line editing34014
Ref: Command-line editing-Footnote-136616
Node: Environment variables36675
Node: Gforth Files38518
Node: Gforth in pipes39365
Node: Startup speed41222
Node: Tutorial44658
Node: Starting Gforth Tutorial46976
Node: Syntax Tutorial47384
Node: Crash Course Tutorial48282
Node: Stack Tutorial49136
Node: Arithmetics Tutorial49814
Ref: Arithmetics Tutorial-Footnote-150856
Node: Stack Manipulation Tutorial50937
Node: Using files for Forth code Tutorial52389
Node: Comments Tutorial53931
Ref: Comments Tutorial-Footnote-155057
Node: Colon Definitions Tutorial55126
Node: Decompilation Tutorial56264
Node: Stack-Effect Comments Tutorial56804
Node: Types Tutorial60010
Node: Factoring Tutorial61830
Node: Designing the stack effect Tutorial63002
Node: Local Variables Tutorial65590
Node: Conditional execution Tutorial67008
Node: Flags and Comparisons Tutorial68381
Node: General Loops Tutorial71088
Node: Counted loops Tutorial73138
Node: Recursion Tutorial74530
Node: Leaving definitions or loops Tutorial75547
Node: Return Stack Tutorial76272
Node: Memory Tutorial78140
Node: Characters and Strings Tutorial81029
Node: Alignment Tutorial82596
Node: Floating Point Tutorial83817
Node: Files Tutorial87396
Node: Interpretation and Compilation Semantics and Immediacy Tutorial90663
Node: Execution Tokens Tutorial93261
Node: Exceptions Tutorial96384
Node: Defining Words Tutorial98254
Node: Arrays and Records Tutorial101170
Node: POSTPONE Tutorial102554
Node: Literal Tutorial104507
Node: Advanced macros Tutorial105398
Node: Compilation Tokens Tutorial107788
Node: Wordlists and Search Order Tutorial108987
Node: Introduction111788
Node: Introducing the Text Interpreter113916
Ref: Introducing the Text Interpreter-Footnote-1119136
Node: Stacks and Postfix notation119220
Node: Your first definition128440
Ref: Your first definition-Footnote-1131994
Node: How does that work?132158
Node: Forth is written in Forth141523
Ref: Forth is written in Forth-Footnote-1143270
Ref: Forth is written in Forth-Footnote-2143360
Node: Review - elements of a Forth system143414
Node: Where to go next145310
Node: Exercises147062
Node: Literals in source code147370
Node: Words153668
Node: Notation154487
Node: Case insensitivity158770
Node: Comments160102
Node: Boolean Flags161324
Node: Arithmetic162214
Node: Single precision163199
Node: Double precision164346
Node: Mixed precision165666
Node: Integer division165961
Node: Two-stage integer division172100
Node: Bitwise operations177429
Node: Numeric comparison181130
Node: Floating Point183754
Ref: Floating Point-Footnote-1189977
Node: Stack Manipulation190169
Node: Data stack190839
Node: Floating point stack192339
Node: Return stack193223
Node: Locals stack194333
Node: Stack pointer manipulation194625
Node: Memory195777
Node: Memory model196226
Ref: Memory model-Footnote-1197449
Node: Dictionary allocation197665
Node: Heap Allocation201714
Node: Memory Access205141
Node: Special Memory Accesses206693
Node: Address arithmetic211223
Node: Memory Blocks216927
Node: Strings and Characters219492
Node: Characters219798
Node: String representations221319
Node: String and character literals222634
Node: String words226963
Node: $tring words231770
Node: Counted string words238630
Node: Control Structures239869
Ref: Control Structures-Footnote-1240569
Node: Selection240682
Node: Simple Loops243633
Node: Counted Loops244360
Ref: Counted Loops-Footnote-1255341
Node: BEGIN loops with multiple exits255386
Node: General control structures with CASE257416
Ref: General control structures with CASE-Footnote-1260370
Node: Arbitrary control structures260508
Node: Calls and returns267044
Node: Exception Handling269193
Node: Defining Words280201
Node: CREATE280949
Node: Variables283172
Node: Constants285333
Ref: Constants-Footnote-1288653
Node: Values288769
Node: Varues290181
Node: Colon Definitions291278
Node: Anonymous Definitions294400
Node: Quotations295978
Node: Supplying names297193
Node: User-defined Defining Words297864
Node: User-defined defining words with colon definitions298627
Ref: User-defined defining words with colon definitions-Footnote-1301213
Node: User-defined defining words using CREATE302954
Ref: User-defined defining words using CREATE-Footnote-1307873
Ref: User-defined defining words using CREATE-Footnote-2307940
Node: CREATE..DOES> applications308125
Node: CREATE..DOES> details309530
Node: Advanced does> usage example312106
Node: User-defined TO and DEFER@316638
Node: User-defined compile-comma319281
Node: Creating from a prototype324131
Node: Making a word current326422
Node: Const-does>327255
Node: Deferred Words328502
Node: Forward332884
Node: Aliases333663
Node: Interpretation and Compilation Semantics335357
Ref: Interpretation and Compilation Semantics-Footnote-1338436
Ref: Interpretation and Compilation Semantics-Footnote-2338510
Node: Combined words338735
Ref: state-smartness340344
Ref: Combined words-Footnote-1341334
Node: Tokens for Words341549
Node: Execution token342001
Ref: Execution token-Footnote-1345833
Node: Name token346162
Node: Compilation token350785
Ref: Compilation token-Footnote-1352585
Node: Compiling words352810
Node: Literals353522
Node: Macros356769
Ref: Macros-Footnote-1365010
Node: The Text Interpreter365216
Ref: The Text Interpreter-Footnote-1371411
Ref: The Text Interpreter-Footnote-2371508
Ref: The Text Interpreter-Footnote-3371719
Ref: The Text Interpreter-Footnote-4371877
Ref: The Text Interpreter-Footnote-5371917
Node: Input Sources372011
Node: Number Conversion374423
Node: Interpret/Compile states377091
Node: Interpreter Directives377976
Node: Recognizers382397
Node: Default Recognizers383246
Node: Dealing with existing Recognizers387001
Node: Defining Recognizers392939
Node: Text Interpreter Hooks393110
Node: The Input Stream393657
Node: Word Lists397841
Node: Vocabularies405529
Node: Why use word lists?406776
Node: Word list example409332
Node: Environmental Queries410033
Node: Files418770
Node: Forth source files419334
Node: General files422727
Node: Redirection426987
Node: Directories429029
Node: Search Paths431673
Node: Source Search Paths433587
Node: General Search Paths434525
Node: Blocks436634
Ref: Blocks-Footnote-1446716
Node: Other I/O447115
Node: Simple numeric output447846
Node: Formatted numeric output450183
Node: Floating-point output456901
Node: Miscellaneous output461662
Node: Displaying characters and strings464758
Node: Terminal output465463
Node: Single-key input468049
Node: Line input and conversion474841
Node: Pipes478474
Node: Xchars and Unicode479460
Node: i18n and l10n485507
Node: Substitute488819
Node: CSV Reader490935
Node: OS command line arguments491437
Node: Locals493702
Node: Gforth locals494434
Node: Locals definition words499411
Node: Where are locals visible by name?503308
Ref: Where are locals visible by name?-Footnote-1510509
Node: How long do locals live?510608
Node: Locals programming style511470
Node: Locals implementation514182
Node: Closures520617
Node: Standard Forth locals525104
Node: Structures526655
Node: Why explicit structure support?527505
Node: Structure Usage530079
Ref: Structure Usage-Footnote-1533059
Node: Structure Naming Convention533343
Node: Structure Implementation534546
Node: Structure Glossary535875
Node: Forth200x Structures537901
Node: Object-oriented Forth540516
Node: Why object-oriented programming?541263
Node: Object-Oriented Terminology542626
Node: Objects544485
Node: Properties of the Objects model545630
Node: Basic Objects Usage547421
Node: The Objects base class549830
Node: Creating objects550320
Node: Object-Oriented Programming Style551122
Node: Class Binding552118
Node: Method conveniences554372
Ref: Method conveniences-Footnote-1556528
Node: Classes and Scoping556726
Node: Dividing classes558206
Node: Object Interfaces559460
Node: Objects Implementation561476
Ref: Objects Implementation-Footnote-1566343
Node: Objects Glossary566421
Node: OOF573268
Node: Properties of the OOF model573980
Node: Basic OOF Usage575036
Node: The OOF base class577346
Node: Class Declaration580869
Node: Class Implementation581966
Node: Mini-OOF582113
Node: Basic Mini-OOF Usage582604
Node: Mini-OOF Example583872
Node: Mini-OOF Implementation585419
Node: Mini-OOF2589483
Node: Comparison with other object models590751
Ref: Comparison with other object models-Footnote-1594429
Node: Regular Expressions594587
Node: Programming Tools602559
Node: Locating source code definitions603272
Node: Locating uses of a word606401
Node: Locating exception source608959
Node: Examining compiled code609289
Node: Examining data614966
Node: Forgetting words617334
Node: Debugging618681
Node: Assertions621921
Node: Singlestep Debugger625364
Node: Code Coverage627735
Node: Multitasker630562
Node: Pthreads631181
Node: Basic multi-tasking631981
Node: Task-local data636134
Node: Semaphores637952
Node: Hardware operations for multi-tasking639320
Node: Message queues640850
Node: Cilk642174
Node: C Interface644248
Node: Calling C Functions645412
Ref: Calling C Functions-Footnote-1647928
Node: Declaring C Functions648140
Node: Calling C function pointers651771
Node: Defining library interfaces653337
Node: Declaring OS-level libraries656107
Node: Callbacks658321
Node: C interface internals660030
Node: Low-Level C Interface Words661374
Node: Automated interface generation using SWIG662111
Node: Migrating the C interface from earlier Gforth664480
Node: Assembler and Code Words665170
Node: Assembler Definitions665837
Node: Common Assembler673079
Node: Common Disassembler675777
Node: 386 Assembler677472
Node: AMD64 Assembler681923
Node: Alpha Assembler689078
Node: MIPS assembler690043
Node: PowerPC assembler693468
Node: ARM Assembler694480
Node: Other assemblers699419
Node: Carnal words700721
Node: Header fields701115
Node: Header methods704147
Node: Threading Words711714
Node: Passing Commands to the OS717597
Node: Keeping track of Time719255
Node: Miscellaneous Words720666
Node: Error messages721264
Node: Tools724499
Node: Standard Report724797
Node: Stack depth changes726696
Node: Standard conformance728674
Node: The Core Words731578
Node: core-idef731929
Node: core-ambcond740314
Node: core-other749904
Node: The optional Block word set751231
Node: block-idef751623
Node: block-ambcond752051
Node: block-other752999
Node: The optional Double Number word set753360
Node: double-ambcond753669
Node: The optional Exception word set753943
Node: exception-idef754257
Node: The optional Facility word set754991
Node: facility-idef755351
Node: facility-ambcond756530
Node: The optional File-Access word set756931
Node: file-idef757302
Node: file-ambcond759689
Node: The optional Floating-Point word set761000
Node: floating-idef761375
Node: floating-ambcond762519
Node: The optional Locals word set765690
Node: locals-idef766055
Node: locals-ambcond766598
Node: The optional Memory-Allocation word set767101
Node: memory-idef767441
Node: The optional Programming-Tools word set767906
Node: programming-idef768304
Node: programming-ambcond769236
Node: The optional Search-Order word set770571
Node: search-idef770911
Node: search-ambcond771289
Node: Standard vs Extensions772055
Node: Model775402
Node: Integrating Gforth775634
Node: Emacs and Gforth779267
Node: Installing gforth.el781148
Node: Emacs Tags781935
Node: Hilighting782844
Node: Auto-Indentation784716
Node: Blocks Files786133
Node: Image Files787525
Node: Image Licensing Issues788305
Node: Image File Background789495
Ref: Image File Background-Footnote-1793787
Node: Non-Relocatable Image Files793903
Node: Data-Relocatable Image Files794894
Node: Fully Relocatable Image Files795803
Node: gforthmi796671
Node: cross.fs799401
Node: Stack and Dictionary Sizes800111
Node: Running Image Files801201
Ref: Running Image Files-Footnote-1804142
Node: Modifying the Startup Sequence804513
Node: Engine807180
Node: Portability807925
Node: Threading810604
Node: Scheduling811843
Node: Direct or Indirect Threaded?813645
Node: Dynamic Superinstructions816502
Node: DOES>821285
Node: Primitives822391
Node: Automatic Generation822589
Ref: Automatic Generation-Footnote-1826096
Node: TOS Optimization826267
Node: Produced code828968
Node: Performance829387
Node: Cross Compiler834789
Node: Using the Cross Compiler835304
Node: How the Cross Compiler Works839949
Node: MINOS2840130
Node: MINOS2 object framework840321
Node: actor methods840816
Node: widget methods842581
Node: MINOS2 tutorial849240
Node: Bugs850097
Node: Origin851144
Node: Forth-related information854300
Node: Licenses854898
Node: GNU Free Documentation License855181
Node: Copying877762
Node: Word Index916974
Node: Concept Index1072251

End Tag Table


Local Variables:
coding: utf-8
End:
